From 2813d4ae2397f57900b1e79cbddeb3af3fcb9501 Mon Sep 17 00:00:00 2001
From: mrwigleg <ota3300@mail.ru>
Date: Fri, 16 Sep 2016 22:12:58 +0300
Subject: [PATCH] Patch

---
 Android.mk                                         |    3 -
 api/current.txt                                    |   57 -
 api/system-current.txt                             |   57 -
 core/java/android/app/Activity.java                |  880 +-----
 core/java/android/app/ActivityManager.java         |   21 +-
 core/java/android/app/ActivityManagerNative.java   |   64 +-
 core/java/android/app/ActivityThread.java          |   20 +-
 .../android/app/ApplicationPackageManager.java     |   15 +-
 core/java/android/app/IActivityManager.java        |   18 +-
 core/java/android/app/INotificationManager.aidl    |    4 -
 core/java/android/app/Instrumentation.java         |    8 -
 core/java/android/app/Notification.java            |    1 -
 core/java/android/app/StatusBarManager.java        |    1 -
 core/java/android/app/TaskStackBuilder.java        |   18 +-
 core/java/android/content/Intent.java              |   51 +-
 core/java/android/content/pm/ActivityInfo.java     |    8 +-
 core/java/android/content/pm/PackageManager.java   |    2 -
 core/java/android/gesture/GestureOverlayView.java  |   21 +-
 .../camera2/legacy/RequestThreadManager.java       |    2 -
 .../inputmethodservice/IInputMethodWrapper.java    |    7 -
 .../inputmethodservice/InputMethodService.java     |  260 +-
 core/java/android/os/IPowerManager.aidl            |    7 +-
 core/java/android/os/PowerManager.java             |   11 -
 core/java/android/provider/CallLog.java            |    2 +-
 core/java/android/provider/Settings.java           | 3164 +-------------------
 .../notification/StatusBarNotification.java        |    6 +-
 core/java/android/text/Layout.java                 |    7 +-
 core/java/android/view/IWindowManager.aidl         |   20 -
 core/java/android/view/View.java                   |    4 +-
 core/java/android/view/ViewConfiguration.java      |  100 +-
 core/java/android/view/Window.java                 |    2 -
 core/java/android/view/WindowManager.java          |   10 +-
 core/java/android/view/WindowManagerPolicy.java    |   21 +-
 core/java/android/view/inputmethod/EditorInfo.java |   10 -
 .../view/inputmethod/InputMethodManager.java       |   11 -
 core/java/android/widget/AbsListView.java          |  184 +-
 core/java/android/widget/ArrayAdapter.java         |   10 +-
 core/java/android/widget/ListPopupWindow.java      |   14 -
 core/java/android/widget/OverScroller.java         |    7 -
 core/java/android/widget/PopupMenu.java            |   20 -
 core/java/android/widget/PopupWindow.java          |   16 +-
 core/java/android/widget/RemoteViews.java          |    8 +-
 core/java/android/widget/Scroller.java             |    6 +-
 core/java/android/widget/Toast.java                |   85 +-
 .../com/android/internal/app/IBatteryStats.aidl    |    6 +-
 .../com/android/internal/app/PlatLogoActivity.java |    9 +-
 .../android/internal/logging/MetricsConstants.java |   16 +-
 .../android/internal/logging/MetricsLogger.java    |    1 -
 .../android/internal/policy/IKeyguardService.aidl  |    5 -
 .../internal/policy/PhoneFallbackEventHandler.java |    8 +-
 .../com/android/internal/policy/PhoneWindow.java   |   72 +-
 .../com/android/internal/statusbar/IStatusBar.aidl |   23 +-
 .../internal/statusbar/IStatusBarService.aidl      |    9 -
 .../internal/util/NotificationColorUtil.java       |   59 +-
 .../com/android/internal/util/cm/ActionUtils.java  |   18 +-
 .../internal/util/cm/PowerMenuConstants.java       |    4 -
 .../android/internal/view/IInputMethodManager.aidl |    1 -
 .../internal/view/menu/MenuPopupHelper.java        |    7 -
 .../android/internal/widget/LockPatternUtils.java  |    8 -
 core/java/com/android/server/BootReceiver.java     |    1 +
 core/res/AndroidManifest.xml                       |    4 +-
 core/res/res/anim/popup_enter_material.xml         |   44 +-
 core/res/res/drawable-nodpi/platlogo_cm.xml        |   55 +
 core/res/res/drawable-nodpi/stat_sys_adb.xml       |   41 +-
 core/res/res/layout/global_actions_silent_mode.xml |    9 +-
 core/res/res/values-csb-rPL/cm_strings.xml         |   70 +
 core/res/res/values-csb-rPL/strings.xml            | 1627 ++++++++++
 core/res/res/values-et-rEE/cm_strings.xml          |   23 -
 core/res/res/values-eu-rES/cm_strings.xml          |    2 +-
 core/res/res/values-in/cm_strings.xml              |   42 +-
 core/res/res/values-pt-rBR/cm_strings.xml          |    2 +-
 core/res/res/values-ru/cm_strings.xml              |    3 +
 core/res/res/values/attrs.xml                      |    5 -
 core/res/res/values/cm_arrays.xml                  |    2 -
 core/res/res/values/cm_strings.xml                 |    5 +-
 core/res/res/values/cm_symbols.xml                 |    9 +-
 core/res/res/values/colors.xml                     |   12 +-
 core/res/res/values/colors_material.xml            |   10 +
 core/res/res/values/config.xml                     |   35 +-
 core/res/res/values/dimens.xml                     |   10 -
 core/res/res/values/ids.xml                        |    2 -
 core/res/res/values/integers.xml                   |    8 -
 core/res/res/values/public.xml                     |   19 +-
 core/res/res/values/strings.xml                    |    4 +-
 core/res/res/values/styles.xml                     |   70 -
 core/res/res/values/symbols.xml                    |   10 -
 core/res/res/values/themes_device_defaults.xml     |   24 -
 core/res/res/values/themes_material.xml            |   20 +-
 data/sounds/AllAudio.mk                            |    1 -
 libs/hwui/Caches.cpp                               |   13 +-
 location/java/android/location/GpsStatus.java      |   35 +
 .../java/android/location/IGpsStatusListener.aidl  |    5 +
 .../java/android/location/LocationManager.java     |   25 +
 media/java/android/media/AudioManager.java         |   46 -
 media/java/android/media/CamcorderProfile.java     |   12 -
 media/java/android/media/ExifInterface.java        | 2437 ++-------------
 media/java/android/media/IAudioService.aidl        |   12 -
 media/java/android/media/MediaActionSound.java     |   23 +-
 media/java/android/media/audiofx/Visualizer.java   |   30 -
 media/jni/Android.mk                               |    4 +
 .../res/values-csb-rPL/strings.xml                 |   38 +
 .../res/values-csb-rPL/strings.xml                 |   23 +
 .../res/drawable/item_doc_list_background.xml      |    2 +-
 packages/DocumentsUI/res/layout/activity.xml       |    2 +-
 packages/DocumentsUI/res/layout/item_doc_list.xml  |    7 -
 .../DocumentsUI/res/values-csb-rPL/strings.xml     |   67 +
 packages/DocumentsUI/res/values-sw720dp/styles.xml |    2 +-
 packages/DocumentsUI/res/values/styles.xml         |    5 +-
 .../com/android/documentsui/LocalPreferences.java  |    6 +-
 .../res/values-csb-rPL/strings.xml                 |   21 +
 .../externalstorage/ExternalStorageProvider.java   |    2 +-
 .../FusedLocation/res/values-csb-rPL/strings.xml   |    5 +
 .../InputDevices/res/values-csb-rPL/strings.xml    |   43 +
 packages/Keyguard/AndroidManifest.xml              |    2 -
 .../Keyguard/res/layout/keyguard_status_view.xml   |   20 +-
 .../Keyguard/res/values-csb-rPL/cm_strings.xml     |   23 +
 packages/Keyguard/res/values-csb-rPL/strings.xml   |  142 +
 packages/Keyguard/res/values-et-rEE/cm_strings.xml |    2 -
 packages/Keyguard/res/values-in/cm_strings.xml     |    8 +-
 .../Keyguard/res/values-sw600dp-land/dimens.xml    |    4 +-
 packages/Keyguard/res/values-sw600dp/dimens.xml    |    6 +-
 packages/Keyguard/res/values-sw720dp/dimens.xml    |    2 +-
 packages/Keyguard/res/values/dimens.xml            |   17 +-
 .../src/com/android/keyguard/CarrierText.java      |    7 +-
 .../src/com/android/keyguard/KeyguardPINView.java  |   39 +-
 .../com/android/keyguard/KeyguardPasswordView.java |   23 -
 .../com/android/keyguard/KeyguardSimPinView.java   |    1 -
 .../com/android/keyguard/KeyguardSimPukView.java   |    1 -
 .../com/android/keyguard/KeyguardStatusView.java   |  480 +--
 .../android/keyguard/KeyguardUpdateMonitor.java    |    8 +-
 .../src/com/android/keyguard/PasswordTextView.java |   18 -
 .../PrintSpooler/res/values-csb-rPL/strings.xml    |   93 +
 packages/PrintSpooler/res/values/themes.xml        |    3 +
 packages/SettingsLib/res/values-csb-rPL/arrays.xml |   27 +
 .../SettingsLib/res/values-csb-rPL/strings.xml     |  122 +
 packages/SettingsLib/res/values-in/cm_strings.xml  |   27 +
 .../SettingsLib/res/values-pt-rBR/cm_strings.xml   |    2 +-
 .../bluetooth/BluetoothEventManager.java           |    6 -
 .../bluetooth/LocalBluetoothProfileManager.java    |    2 +-
 packages/SettingsProvider/AndroidManifest.xml      |    5 +-
 .../res/values-csb-rPL/strings.xml                 |   22 +
 packages/SettingsProvider/res/values/defaults.xml  |    7 +-
 .../android/providers/settings/DatabaseHelper.java |    5 +-
 packages/Shell/AndroidManifest.xml                 |    2 +-
 packages/Shell/res/values-csb-rPL/strings.xml      |   24 +
 packages/SystemUI/Android.mk                       |   14 +-
 packages/SystemUI/AndroidManifest.xml              |  447 +--
 packages/SystemUI/AndroidManifest_cm.xml           |    2 -
 packages/SystemUI/proguard.flags                   |   14 -
 .../res/drawable-hdpi/ic_mini_settings.png         |  Bin 0 -> 192 bytes
 .../ic_qs_brightness_auto_off_alpha.png            |  Bin 0 -> 2215 bytes
 .../ic_qs_brightness_auto_on_alpha.png             |  Bin 0 -> 2082 bytes
 .../SystemUI/res/drawable-hdpi/ic_sysbar_back.png  |  Bin 0 -> 1412 bytes
 .../res/drawable-hdpi/ic_sysbar_back_ime.png       |  Bin 0 -> 1468 bytes
 .../res/drawable-hdpi/ic_sysbar_back_side.png      |  Bin 0 -> 1300 bytes
 .../SystemUI/res/drawable-hdpi/ic_sysbar_home.png  |  Bin 0 -> 1777 bytes
 .../res/drawable-hdpi/ic_sysbar_ime_left.png       |  Bin
 .../res/drawable-hdpi/ic_sysbar_ime_right.png      |  Bin
 .../SystemUI/res/drawable-hdpi/ic_sysbar_menu.png  |  Bin 0 -> 857 bytes
 .../res/drawable-hdpi/ic_sysbar_recent.png         |  Bin 0 -> 803 bytes
 .../res/drawable-hdpi/ic_sysbar_recent_side.png    |  Bin 0 -> 1226 bytes
 .../res/drawable-hdpi/ic_sysbar_search.png         |  Bin 0 -> 1042 bytes
 .../res/drawable-ldrtl-hdpi/ic_sysbar_back.png     |  Bin 0 -> 1535 bytes
 .../res/drawable-ldrtl-mdpi/ic_sysbar_back.png     |  Bin 0 -> 965 bytes
 .../res/drawable-ldrtl-xhdpi/ic_sysbar_back.png    |  Bin 0 -> 2084 bytes
 .../res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png   |  Bin 0 -> 1358 bytes
 .../res/drawable-mdpi/ic_mini_settings.png         |  Bin 0 -> 133 bytes
 .../ic_qs_brightness_auto_off_alpha.png            |  Bin 0 -> 1374 bytes
 .../ic_qs_brightness_auto_on_alpha.png             |  Bin 0 -> 1334 bytes
 .../SystemUI/res/drawable-mdpi/ic_sysbar_back.png  |  Bin 0 -> 1077 bytes
 .../res/drawable-mdpi/ic_sysbar_back_ime.png       |  Bin 0 -> 1037 bytes
 .../res/drawable-mdpi/ic_sysbar_back_side.png      |  Bin 0 -> 1177 bytes
 .../SystemUI/res/drawable-mdpi/ic_sysbar_home.png  |  Bin 0 -> 1169 bytes
 .../res/drawable-mdpi/ic_sysbar_ime_left.png       |  Bin
 .../res/drawable-mdpi/ic_sysbar_ime_right.png      |  Bin
 .../SystemUI/res/drawable-mdpi/ic_sysbar_menu.png  |  Bin 0 -> 588 bytes
 .../res/drawable-mdpi/ic_sysbar_recent.png         |  Bin 0 -> 703 bytes
 .../res/drawable-mdpi/ic_sysbar_recent_side.png    |  Bin 0 -> 1151 bytes
 .../res/drawable-xhdpi/ic_mini_settings.png        |  Bin 0 -> 218 bytes
 .../ic_qs_brightness_auto_off_alpha.png            |  Bin 0 -> 3134 bytes
 .../ic_qs_brightness_auto_on_alpha.png             |  Bin 0 -> 2928 bytes
 .../SystemUI/res/drawable-xhdpi/ic_sysbar_back.png |  Bin 0 -> 1933 bytes
 .../res/drawable-xhdpi/ic_sysbar_back_ime.png      |  Bin 0 -> 1864 bytes
 .../res/drawable-xhdpi/ic_sysbar_back_side.png     |  Bin 0 -> 3434 bytes
 .../SystemUI/res/drawable-xhdpi/ic_sysbar_home.png |  Bin 0 -> 2470 bytes
 .../res/drawable-xhdpi/ic_sysbar_ime_left.png      |  Bin
 .../res/drawable-xhdpi/ic_sysbar_ime_right.png     |  Bin
 .../SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png |  Bin 0 -> 1243 bytes
 .../res/drawable-xhdpi/ic_sysbar_recent.png        |  Bin 0 -> 840 bytes
 .../res/drawable-xhdpi/ic_sysbar_recent_side.png   |  Bin 0 -> 3209 bytes
 .../res/drawable-xhdpi/ic_sysbar_search.png        |  Bin 0 -> 1457 bytes
 .../res/drawable-xxhdpi/ic_mini_settings.png       |  Bin 0 -> 324 bytes
 .../ic_qs_brightness_auto_off_alpha.png            |  Bin 0 -> 3494 bytes
 .../ic_qs_brightness_auto_on_alpha.png             |  Bin 0 -> 3182 bytes
 .../res/drawable-xxhdpi/ic_sysbar_back.png         |  Bin 0 -> 2934 bytes
 .../res/drawable-xxhdpi/ic_sysbar_back_ime.png     |  Bin 0 -> 2999 bytes
 .../res/drawable-xxhdpi/ic_sysbar_home.png         |  Bin 0 -> 3748 bytes
 .../res/drawable-xxhdpi/ic_sysbar_menu.png         |  Bin 0 -> 847 bytes
 .../res/drawable-xxhdpi/ic_sysbar_recent.png       |  Bin 0 -> 1063 bytes
 .../res/drawable-xxhdpi/ic_sysbar_search.png       |  Bin 0 -> 2566 bytes
 .../res/drawable-xxxhdpi/ic_mini_settings.png      |  Bin 0 -> 401 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_back.png        |  Bin 0 -> 3313 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_back_ime.png    |  Bin 0 -> 3419 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_home.png        |  Bin 0 -> 4428 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_recent.png      |  Bin 0 -> 1675 bytes
 packages/SystemUI/res/drawable/cid.xml             |   33 +
 .../res/drawable/ic_dynamic_qs_live_display.xml    |   29 +
 .../SystemUI/res/drawable/ic_dynamic_qs_themes.xml |   28 +
 .../res/drawable/ic_qs_brightness_auto_off.xml     |   29 +-
 .../res/drawable/ic_qs_brightness_auto_on.xml      |   29 +-
 .../SystemUI/res/drawable/ic_qs_edit_tiles.xml     |   30 +
 .../SystemUI/res/drawable/ic_qs_heads_up_off.xml   |    2 +-
 .../SystemUI/res/drawable/ic_qs_heads_up_on.xml    |   31 +-
 .../res/drawable/ic_qs_network_adb_off.xml         |   58 +-
 .../SystemUI/res/drawable/ic_qs_network_adb_on.xml |   61 +-
 .../SystemUI/res/drawable/ic_qs_profiles_off.xml   |   34 +-
 .../SystemUI/res/drawable/ic_qs_profiles_on.xml    |   34 +-
 .../SystemUI/res/drawable/ic_qs_ringer_silent.xml  |    2 +-
 .../res/drawable/ic_qs_tile_category_other.xml     |   23 +
 .../res/drawable/ic_qs_tile_category_system.xml    |   25 +
 .../SystemUI/res/drawable/ic_qs_tile_contract.xml  |   24 +
 .../SystemUI/res/drawable/ic_qs_tile_expand.xml    |   24 +
 .../SystemUI/res/drawable/ic_volume_media_mute.xml |    2 +-
 .../keyguard_overflow_number_background.xml        |    4 +-
 .../lockscreen_shortcuts_phone_background.xml      |    4 +-
 .../res/drawable/qs_tile_background_drag.xml       |   22 +
 .../res/drawable/vector_drawable_place_bottom.xml  |    2 +-
 .../drawable/vector_drawable_place_bottom_left.xml |    2 +-
 .../vector_drawable_place_bottom_right.xml         |    2 +-
 .../drawable/vector_drawable_place_fullscreen.xml  |    8 +-
 .../res/drawable/vector_drawable_place_left.xml    |    2 +-
 .../res/drawable/vector_drawable_place_right.xml   |    2 +-
 .../res/drawable/vector_drawable_place_top.xml     |    2 +-
 .../drawable/vector_drawable_place_top_left.xml    |    2 +-
 .../drawable/vector_drawable_place_top_right.xml   |    2 +-
 .../res/layout-land/recents_task_resize_dialog.xml |    8 +-
 .../res/layout-port/recents_task_resize_dialog.xml |    8 +-
 .../recents_task_resize_dialog.xml                 |   12 +-
 .../recents_task_resize_dialog.xml                 |   12 +-
 .../res/layout-sw600dp/mid_navigation_bar_land.xml |  115 +
 .../res/layout-sw600dp/mid_navigation_bar_port.xml |  132 +
 .../SystemUI/res/layout-sw600dp/navigation_bar.xml |  365 +--
 packages/SystemUI/res/layout/cmland.xml            |  104 +
 .../SystemUI/res/layout/keyguard_status_bar.xml    |    5 +-
 .../res/layout/mid_navigation_bar_land.xml         |    6 +-
 .../res/layout/mid_navigation_bar_port.xml         |  126 +
 packages/SystemUI/res/layout/navigation_bar.xml    |  245 +-
 packages/SystemUI/res/layout/notification_guts.xml |   11 -
 packages/SystemUI/res/layout/qs_detail.xml         |   14 +-
 packages/SystemUI/res/layout/qs_detail_header.xml  |   13 +-
 packages/SystemUI/res/layout/qs_detail_items.xml   |    6 +-
 .../SystemUI/res/layout/qs_detail_items_list.xml   |    9 +-
 packages/SystemUI/res/layout/qs_panel.xml          |   97 +-
 packages/SystemUI/res/layout/qs_settings.xml       |   97 +
 packages/SystemUI/res/layout/qs_settings_row.xml   |   34 +
 .../SystemUI/res/layout/qs_tile_category_row.xml   |   55 +
 packages/SystemUI/res/layout/qs_tile_child_row.xml |   42 +
 packages/SystemUI/res/layout/qs_tile_top.xml       |   87 +
 .../layout/quick_settings_brightness_dialog.xml    |   12 +-
 packages/SystemUI/res/layout/recents.xml           |   12 +-
 packages/SystemUI/res/layout/recents_empty.xml     |   34 +-
 packages/SystemUI/res/layout/recents_task_view.xml |   16 +
 .../res/layout/recents_task_view_header.xml        |   30 +-
 packages/SystemUI/res/layout/status_bar.xml        |  132 +-
 .../res/layout/status_bar_expanded_header.xml      |   87 +-
 .../layout/status_bar_notification_speed_bump.xml  |    2 +-
 packages/SystemUI/res/layout/system_icons.xml      |   12 +-
 packages/SystemUI/res/menu/recent_popup_menu.xml   |    1 -
 packages/SystemUI/res/values-af/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-af/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-am/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-am/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-ar/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ar/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-as-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-as-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-ast-rES/cm_arrays.xml |    3 -
 packages/SystemUI/res/values-az-rAZ/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-az-rAZ/cm_strings.xml |   11 -
 packages/SystemUI/res/values-be/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-be/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-bg/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-bg/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-bn-rBD/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-bn-rBD/cm_strings.xml |    1 -
 packages/SystemUI/res/values-br-rFR/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-br-rFR/cm_strings.xml |    1 -
 packages/SystemUI/res/values-ca/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ca/cm_strings.xml     |   17 +-
 packages/SystemUI/res/values-cs/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-cs/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-csb-rPL/cm_arrays.xml |   23 +
 packages/SystemUI/res/values-csb-rPL/strings.xml   |  459 +++
 packages/SystemUI/res/values-cy/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-cy/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-da/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-da/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-de/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-de/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-el/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-el/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-en-rAU/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-en-rAU/cm_strings.xml |    1 -
 packages/SystemUI/res/values-en-rGB/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-en-rGB/cm_strings.xml |    1 -
 packages/SystemUI/res/values-en-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-en-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-en-rPT/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-en-rPT/cm_strings.xml |    1 -
 packages/SystemUI/res/values-eo/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-eo/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-es-rMX/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-es-rMX/cm_strings.xml |    1 -
 packages/SystemUI/res/values-es-rUS/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-es-rUS/cm_strings.xml |   11 -
 packages/SystemUI/res/values-es/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-es/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-et-rEE/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-et-rEE/cm_strings.xml |   47 -
 packages/SystemUI/res/values-eu-rES/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-eu-rES/cm_strings.xml |   11 -
 packages/SystemUI/res/values-fa/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-fa/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-fi/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-fi/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-fil-rPH/cm_arrays.xml |    3 -
 .../SystemUI/res/values-fil-rPH/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-fr-rCA/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-fr-rCA/cm_strings.xml |    1 -
 packages/SystemUI/res/values-fr/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-fr/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-frp-rIT/cm_arrays.xml |    3 -
 .../SystemUI/res/values-frp-rIT/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-fy-rNL/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-fy-rNL/cm_strings.xml |    1 -
 packages/SystemUI/res/values-gd-rGB/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-gd-rGB/cm_strings.xml |    1 -
 packages/SystemUI/res/values-gl-rES/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-gl-rES/cm_strings.xml |   11 -
 packages/SystemUI/res/values-gu-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-gu-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-hi/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-hi/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-hr/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-hr/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-hu/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-hu/cm_strings.xml     |    5 -
 packages/SystemUI/res/values-hy-rAM/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-hy-rAM/cm_strings.xml |    1 -
 packages/SystemUI/res/values-in/cm_arrays.xml      |   21 +-
 packages/SystemUI/res/values-in/cm_strings.xml     |  128 +-
 packages/SystemUI/res/values-is-rIS/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-is-rIS/cm_strings.xml |    1 -
 packages/SystemUI/res/values-it/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-it/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-iw/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-iw/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-ja/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ja/cm_strings.xml     |   12 +-
 packages/SystemUI/res/values-ka-rGE/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ka-rGE/cm_strings.xml |    1 -
 packages/SystemUI/res/values-kk-rKZ/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-kk-rKZ/cm_strings.xml |    1 -
 packages/SystemUI/res/values-km-rKH/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-km-rKH/cm_strings.xml |    1 -
 packages/SystemUI/res/values-kn-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-kn-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-ko/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ko/cm_strings.xml     |   14 +-
 packages/SystemUI/res/values-ko/strings.xml        |    7 -
 packages/SystemUI/res/values-ku/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ku/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-ky-rKG/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ky-rKG/cm_strings.xml |    1 -
 packages/SystemUI/res/values-land/config.xml       |    3 -
 packages/SystemUI/res/values-lb/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-lb/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-lo-rLA/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-lo-rLA/cm_strings.xml |    1 -
 packages/SystemUI/res/values-lt/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-lt/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-lv/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-lv/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-mk-rMK/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-mk-rMK/cm_strings.xml |    1 -
 packages/SystemUI/res/values-ml-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ml-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-mn-rMN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-mn-rMN/cm_strings.xml |    1 -
 packages/SystemUI/res/values-mr-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-mr-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-ms-rMY/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ms-rMY/cm_strings.xml |    1 -
 packages/SystemUI/res/values-my-rMM/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-my-rMM/cm_strings.xml |    1 -
 packages/SystemUI/res/values-nb/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-nb/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-ne-rNP/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ne-rNP/cm_strings.xml |    1 -
 packages/SystemUI/res/values-nl/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-nl/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-oc-rFR/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-oc-rFR/cm_strings.xml |    1 -
 packages/SystemUI/res/values-or-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-or-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-pa-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-pa-rIN/cm_strings.xml |    1 -
 packages/SystemUI/res/values-pl/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-pl/cm_strings.xml     |   13 -
 packages/SystemUI/res/values-pt-rBR/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-pt-rBR/cm_strings.xml |   17 +-
 packages/SystemUI/res/values-pt-rPT/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-pt-rPT/cm_strings.xml |   49 +-
 packages/SystemUI/res/values-rm/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-rm/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-ro/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ro/cm_strings.xml     |    1 -
 packages/SystemUI/res/values-ru/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ru/cm_strings.xml     |   14 -
 packages/SystemUI/res/values-si-rLK/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-si-rLK/cm_strings.xml |    1 -
 packages/SystemUI/res/values-sk/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-sk/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-sl/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-sl/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-sq-rAL/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-sq-rAL/cm_strings.xml |    1 -
 packages/SystemUI/res/values-sr/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-sr/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-sv/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-sv/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-sw/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-sw/cm_strings.xml     |    1 -
 .../SystemUI/res/values-sw600dp-land/config.xml    |    3 -
 packages/SystemUI/res/values-sw600dp/config.xml    |    9 -
 packages/SystemUI/res/values-ta-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ta-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-te-rIN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-te-rIN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-th/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-th/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-tr/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-tr/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-ug/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-ug/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-uk/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-uk/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-ur-rPK/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-ur-rPK/cm_strings.xml |    1 -
 packages/SystemUI/res/values-uz-rUZ/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-uz-rUZ/cm_strings.xml |    1 -
 packages/SystemUI/res/values-vi/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-vi/cm_strings.xml     |   11 -
 packages/SystemUI/res/values-zh-rCN/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-zh-rCN/cm_strings.xml |   11 -
 packages/SystemUI/res/values-zh-rCN/strings.xml    |    5 -
 packages/SystemUI/res/values-zh-rHK/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-zh-rHK/cm_strings.xml |   11 -
 packages/SystemUI/res/values-zh-rTW/cm_arrays.xml  |    3 -
 packages/SystemUI/res/values-zh-rTW/cm_strings.xml |    1 -
 packages/SystemUI/res/values-zu/cm_arrays.xml      |    3 -
 packages/SystemUI/res/values-zu/cm_strings.xml     |    1 -
 packages/SystemUI/res/values/cm_arrays.xml         |   33 +-
 packages/SystemUI/res/values/cm_attrs.xml          |   16 +
 packages/SystemUI/res/values/cm_colors.xml         |   25 +
 packages/SystemUI/res/values/cm_dimens.xml         |    5 +-
 packages/SystemUI/res/values/cm_strings.xml        |  111 +-
 packages/SystemUI/res/values/cm_styles.xml         |   17 +-
 packages/SystemUI/res/values/colors.xml            |   25 +-
 packages/SystemUI/res/values/config.xml            |   23 +-
 packages/SystemUI/res/values/dimens.xml            |    3 -
 packages/SystemUI/res/values/strings.xml           |    7 -
 packages/SystemUI/res/values/styles.xml            |   69 +-
 packages/SystemUI/res/values/vpi__attrs.xml        |   44 +
 packages/SystemUI/res/values/vpi__defaults.xml     |   26 +
 packages/SystemUI/res/xml/tuner_prefs.xml          |    7 +-
 .../SystemUI/res/xml/tuner_statusbar_icons.xml     |    8 +-
 .../src/com/android/systemui/BatteryMeterView.java |   37 +-
 .../src/com/android/systemui/BootReceiver.java     |    6 -
 .../src/com/android/systemui/RecentsComponent.java |    1 -
 .../src/com/android/systemui/SwipeHelper.java      |   44 +-
 .../src/com/android/systemui/ViewInvertHelper.java |   11 +-
 .../src/com/android/systemui/doze/DozeService.java |   99 +-
 .../src/com/android/systemui/egg/CMLand.java       |   43 +
 .../src/com/android/systemui/egg/MLand.java        |   13 +-
 .../com/android/systemui/egg/MLandActivity.java    |   10 +-
 .../android/systemui/keyguard/KeyguardService.java |    6 -
 .../systemui/keyguard/KeyguardViewMediator.java    |   16 +-
 .../systemui/power/PowerNotificationWarnings.java  |    6 +-
 .../android/systemui/qs/QSBooleanSettingRow.java   |  178 ++
 .../src/com/android/systemui/qs/QSContainer.java   |    2 +-
 .../com/android/systemui/qs/QSDetailClipper.java   |    4 +
 .../src/com/android/systemui/qs/QSDetailItems.java |   40 -
 .../com/android/systemui/qs/QSDetailItemsList.java |   75 +-
 .../src/com/android/systemui/qs/QSDragPanel.java   | 2331 ++++++++++++++
 .../src/com/android/systemui/qs/QSPage.java        |  161 +
 .../src/com/android/systemui/qs/QSPanel.java       |  446 +--
 .../com/android/systemui/qs/QSPanelTopView.java    |  377 +++
 .../src/com/android/systemui/qs/QSSettings.java    |  141 +
 .../src/com/android/systemui/qs/QSTile.java        |   95 +-
 .../src/com/android/systemui/qs/QSTileView.java    |  240 +-
 .../src/com/android/systemui/qs/QSViewPager.java   |  105 +
 .../com/android/systemui/qs/SignalTileView.java    |   49 +-
 .../systemui/qs/tiles/AdbOverNetworkTile.java      |    8 +-
 .../systemui/qs/tiles/AirplaneModeTile.java        |   24 +-
 .../systemui/qs/tiles/AmbientDisplayTile.java      |   30 +-
 .../systemui/qs/tiles/BatterySaverTile.java        |   10 +-
 .../android/systemui/qs/tiles/BluetoothTile.java   |   12 +-
 .../com/android/systemui/qs/tiles/CastTile.java    |   15 +
 .../android/systemui/qs/tiles/CellularTile.java    |   33 +-
 .../systemui/qs/tiles/ColorInversionTile.java      |   21 +-
 .../com/android/systemui/qs/tiles/CompassTile.java |    2 +-
 .../android/systemui/qs/tiles/CustomQSTile.java    |  349 +++
 .../systemui/qs/tiles/DataUsageDetailView.java     |   22 +-
 .../src/com/android/systemui/qs/tiles/DndTile.java |   15 +
 .../com/android/systemui/qs/tiles/EditTile.java    |   98 +
 .../android/systemui/qs/tiles/FlashlightTile.java  |   18 +-
 .../com/android/systemui/qs/tiles/HeadsUpTile.java |   20 +-
 .../com/android/systemui/qs/tiles/HotspotTile.java |   15 +-
 .../android/systemui/qs/tiles/LocationTile.java    |   51 +-
 .../systemui/qs/tiles/LockscreenToggleTile.java    |   75 +-
 .../src/com/android/systemui/qs/tiles/NfcTile.java |    2 +-
 .../android/systemui/qs/tiles/PerfProfileTile.java |    5 +
 .../android/systemui/qs/tiles/ProfilesTile.java    |   27 +-
 .../systemui/qs/tiles/RotationLockTile.java        |   26 +-
 .../systemui/qs/tiles/ScreenTimeoutTile.java       |    7 +-
 .../systemui/qs/tiles/UserDetailItemView.java      |   15 -
 .../android/systemui/qs/tiles/UserDetailView.java  |    4 -
 .../com/android/systemui/qs/tiles/WifiTile.java    |   14 +-
 .../com/android/systemui/recents/Constants.java    |    9 +-
 .../src/com/android/systemui/recents/Recents.java  |   10 -
 .../android/systemui/recents/RecentsActivity.java  |  408 +--
 .../systemui/recents/RecentsConfiguration.java     |    6 +-
 .../systemui/recents/RecentsResizeTaskDialog.java  |    3 +-
 .../systemui/recents/misc/SystemServicesProxy.java |    2 +-
 .../recents/model/RecentsTaskLoadPlan.java         |   19 -
 .../systemui/recents/views/RecentsView.java        |  680 +----
 .../systemui/recents/views/TaskStackView.java      |   93 +-
 .../android/systemui/recents/views/TaskView.java   |   49 +-
 .../systemui/recents/views/TaskViewHeader.java     |  209 +-
 .../systemui/screenshot/GlobalScreenshot.java      |   99 +-
 .../systemui/screenshot/TakeScreenshotService.java |   26 +-
 .../systemui/settings/BrightnessController.java    |   27 +-
 .../android/systemui/settings/ToggleSlider.java    |   38 -
 .../statusbar/ActivatableNotificationView.java     |   58 +-
 .../android/systemui/statusbar/BaseStatusBar.java  | 1052 +------
 .../android/systemui/statusbar/CommandQueue.java   |   81 +-
 .../android/systemui/statusbar/CustomTileData.java |    2 +-
 .../android/systemui/statusbar/DismissView.java    |    4 -
 .../systemui/statusbar/DismissViewButton.java      |    6 -
 .../statusbar/ExpandableNotificationRow.java       |    8 +-
 .../statusbar/KeyguardIndicationController.java    |   24 +-
 .../statusbar/NotificationBackgroundView.java      |   99 +-
 .../systemui/statusbar/NotificationData.java       |   20 -
 .../systemui/statusbar/NotificationGuts.java       |   18 -
 .../statusbar/NotificationOverflowIconsView.java   |   50 +-
 .../statusbar/NotificationViewWrapper.java         |   14 +-
 .../systemui/statusbar/SignalClusterView.java      |  121 +-
 .../android/systemui/statusbar/SpeedBumpView.java  |   57 -
 .../systemui/statusbar/StatusBarIconView.java      |    3 +-
 .../systemui/statusbar/phone/ActivityStarter.java  |    1 -
 .../systemui/statusbar/phone/BarTransitions.java   |  289 ++
 .../systemui/statusbar/phone/ClockController.java  |   15 +-
 .../systemui/statusbar/phone/DozeParameters.java   |    8 -
 .../statusbar/phone/DozeScrimController.java       |   45 +-
 .../systemui/statusbar/phone/IconMerger.java       |    2 +-
 .../statusbar/phone/KeyguardBottomAreaView.java    |  258 +-
 .../systemui/statusbar/phone/KeyguardBouncer.java  |   13 +-
 .../statusbar/phone/KeyguardStatusBarView.java     |  250 +-
 .../systemui/statusbar/phone/MultiUserSwitch.java  |   20 +-
 .../systemui/statusbar/phone/NavbarEditor.java     |    8 +-
 .../statusbar/phone/NavigationBarTransitions.java  |    4 +-
 .../statusbar/phone/NavigationBarView.java         |  686 +++--
 .../phone/NavigationBarViewTaskSwitchHelper.java   |    5 +-
 .../statusbar/phone/NotificationPanelView.java     |  778 +----
 .../systemui/statusbar/phone/PanelView.java        |   10 +-
 .../systemui/statusbar/phone/PhoneStatusBar.java   | 2022 +++----------
 .../statusbar/phone/PhoneStatusBarPolicy.java      |   88 +-
 .../statusbar/phone/PhoneStatusBarTransitions.java |   27 +-
 .../statusbar/phone/PhoneStatusBarView.java        |  195 --
 .../systemui/statusbar/phone/QSTileHost.java       |  340 ++-
 .../systemui/statusbar/phone/SettingsButton.java   |  161 +
 .../statusbar/phone/StatusBarHeaderView.java       | 1657 +---------
 .../statusbar/phone/StatusBarIconController.java   |  522 +---
 .../phone/StatusBarKeyguardViewManager.java        |    9 +-
 .../statusbar/phone/StatusBarWindowManager.java    |  101 +-
 .../statusbar/phone/StatusBarWindowView.java       |   22 +-
 .../systemui/statusbar/phone/SystemUIDialog.java   |   16 +-
 .../statusbar/policy/BatteryController.java        |    1 -
 .../policy/BrightnessMirrorController.java         |   27 +-
 .../android/systemui/statusbar/policy/Clock.java   |  286 +-
 .../systemui/statusbar/policy/HeadsUpManager.java  |   50 +-
 .../statusbar/policy/MobileSignalController.java   |   41 +-
 .../statusbar/policy/NetworkController.java        |    1 -
 .../statusbar/policy/NetworkControllerImpl.java    |   18 +-
 .../statusbar/policy/UserSwitcherController.java   |    5 +
 .../statusbar/policy/WeatherController.java        |    3 +-
 .../statusbar/policy/WeatherControllerImpl.java    |   71 +-
 .../stack/NotificationStackScrollLayout.java       |    3 -
 .../android/systemui/statusbar/tv/TvStatusBar.java |   11 +-
 .../src/com/android/systemui/tuner/QsTuner.java    |  347 +--
 .../com/android/systemui/tuner/TunerFragment.java  |   11 -
 .../com/android/systemui/tuner/TunerService.java   |   72 +-
 .../com/android/systemui/volume/VolumeDialog.java  |  152 +-
 .../systemui/volume/VolumeDialogComponent.java     |   55 -
 .../systemui/volume/VolumeDialogController.java    |    3 -
 .../src/com/android/systemui/volume/ZenFooter.java |   20 +-
 .../viewpagerindicator/CirclePageIndicator.java    |  527 ++++
 .../src/com/viewpagerindicator/PageIndicator.java  |   63 +
 packages/VpnDialogs/AndroidManifest.xml            |    4 +-
 packages/VpnDialogs/res/values-csb-rPL/strings.xml |   28 +
 packages/WallpaperCropper/AndroidManifest.xml      |    8 +-
 .../res/layout/actionbar_set_wallpaper.xml         |    1 -
 .../res/values-csb-rPL/strings.xml                 |   23 +
 packages/WallpaperCropper/res/values/styles.xml    |    8 +-
 .../wallpapercropper/WallpaperCropActivity.java    |   47 +-
 preloaded-classes                                  |    3 -
 services/core/Android.mk                           |    2 +-
 .../java/com/android/server/BatteryService.java    |   25 +-
 .../com/android/server/ConnectivityService.java    |   20 +-
 .../com/android/server/DeviceIdleController.java   |    4 +-
 .../android/server/InputMethodManagerService.java  |  106 +-
 .../com/android/server/LockSettingsService.java    |    4 +-
 .../java/com/android/server/VibratorService.java   |   34 +-
 .../android/server/am/ActivityManagerService.java  |   64 +-
 .../java/com/android/server/am/ActivityRecord.java |   78 +-
 .../java/com/android/server/am/ActivityStack.java  |   49 +-
 .../android/server/am/ActivityStackSupervisor.java |    5 +-
 .../com/android/server/am/BatteryStatsService.java |    1 -
 .../java/com/android/server/am/LockTaskNotify.java |    4 +-
 .../java/com/android/server/am/ProcessList.java    |   10 +-
 .../com/android/server/audio/AudioService.java     |  172 +-
 .../server/display/DisplayPowerController.java     |  118 +-
 .../server/fingerprint/FingerprintUtils.java       |    6 +-
 .../server/location/GpsLocationProvider.java       |   88 +-
 .../server/location/GpsStatusListenerHelper.java   |   26 +
 .../server/net/NetworkPolicyManagerService.java    |   14 +-
 .../notification/NotificationManagerService.java   |   55 +-
 .../android/server/notification/RankingConfig.java |    3 -
 .../android/server/notification/RankingHelper.java |   36 +-
 .../server/pm/DefaultPermissionGrantPolicy.java    |    6 -
 .../android/server/pm/PackageManagerService.java   |   78 +-
 .../com/android/server/pm/UserManagerService.java  |    2 +-
 .../com/android/server/policy/GlobalActions.java   |  264 +-
 .../server/policy/ImmersiveModeConfirmation.java   |    5 -
 .../android/server/policy/PhoneWindowManager.java  |  770 +----
 .../policy/keyguard/KeyguardServiceDelegate.java   |    2 +-
 .../policy/keyguard/KeyguardServiceWrapper.java    |   11 +-
 .../android/server/power/PowerManagerService.java  |  151 +-
 .../com/android/server/power/ShutdownThread.java   |  224 +-
 .../server/statusbar/StatusBarManagerService.java  |   75 -
 .../java/com/android/server/wm/AppTransition.java  |  220 +-
 .../java/com/android/server/wm/WindowAnimator.java |   58 +-
 .../android/server/wm/WindowManagerService.java    |  158 +-
 ...android_server_location_GpsLocationProvider.cpp |   55 +
 ...om_android_server_power_PowerManagerService.cpp |    9 -
 services/java/com/android/server/SystemServer.java |   23 +-
 services/net/java/android/net/dhcp/DhcpPacket.java |    7 +-
 .../android/server/usage/UsageStatsService.java    |    4 +-
 .../com/android/server/usb/UsbDeviceManager.java   |    9 -
 .../VoiceInteractionManagerServiceImpl.java        |    2 +-
 .../java/android/telephony/TelephonyManager.java   |   12 -
 .../com/android/internal/telephony/ITelephony.aidl |    6 -
 .../src/android/test/mock/MockPackageManager.java  |    6 -
 tools/aapt/Android.mk                              |    2 +-
 tools/aapt2/Util.cpp                               |    4 +-
 .../src/android/view/IWindowManagerImpl.java       |   12 -
 tools/split-select/Android.mk                      |    2 +-
 .../android/net/wifi/WifiEnterpriseConfig.java     |    4 +-
 669 files changed, 13748 insertions(+), 24257 deletions(-)
 create mode 100644 core/res/res/drawable-nodpi/platlogo_cm.xml
 create mode 100644 core/res/res/values-csb-rPL/cm_strings.xml
 create mode 100644 core/res/res/values-csb-rPL/strings.xml
 create mode 100644 packages/BackupRestoreConfirmation/res/values-csb-rPL/strings.xml
 create mode 100644 packages/DefaultContainerService/res/values-csb-rPL/strings.xml
 create mode 100644 packages/DocumentsUI/res/values-csb-rPL/strings.xml
 create mode 100644 packages/ExternalStorageProvider/res/values-csb-rPL/strings.xml
 create mode 100644 packages/FusedLocation/res/values-csb-rPL/strings.xml
 create mode 100644 packages/InputDevices/res/values-csb-rPL/strings.xml
 create mode 100644 packages/Keyguard/res/values-csb-rPL/cm_strings.xml
 create mode 100644 packages/Keyguard/res/values-csb-rPL/strings.xml
 create mode 100644 packages/PrintSpooler/res/values-csb-rPL/strings.xml
 create mode 100644 packages/SettingsLib/res/values-csb-rPL/arrays.xml
 create mode 100644 packages/SettingsLib/res/values-csb-rPL/strings.xml
 create mode 100644 packages/SettingsLib/res/values-in/cm_strings.xml
 create mode 100644 packages/SettingsProvider/res/values-csb-rPL/strings.xml
 create mode 100644 packages/Shell/res/values-csb-rPL/strings.xml
 create mode 100755 packages/SystemUI/res/drawable-hdpi/ic_mini_settings.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_qs_brightness_auto_off_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_qs_brightness_auto_on_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_back_ime.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_back_side.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_home.png
 mode change 100644 => 100755 packages/SystemUI/res/drawable-hdpi/ic_sysbar_ime_left.png
 mode change 100644 => 100755 packages/SystemUI/res/drawable-hdpi/ic_sysbar_ime_right.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_menu.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_recent.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_recent_side.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/ic_sysbar_search.png
 create mode 100644 packages/SystemUI/res/drawable-ldrtl-hdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-ldrtl-mdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-ldrtl-xhdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png
 create mode 100755 packages/SystemUI/res/drawable-mdpi/ic_mini_settings.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_qs_brightness_auto_off_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_qs_brightness_auto_on_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_ime.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_side.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_home.png
 mode change 100644 => 100755 packages/SystemUI/res/drawable-mdpi/ic_sysbar_ime_left.png
 mode change 100644 => 100755 packages/SystemUI/res/drawable-mdpi/ic_sysbar_ime_right.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_menu.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent.png
 create mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent_side.png
 create mode 100755 packages/SystemUI/res/drawable-xhdpi/ic_mini_settings.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_qs_brightness_auto_off_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_qs_brightness_auto_on_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_ime.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_side.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_home.png
 mode change 100644 => 100755 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_ime_left.png
 mode change 100644 => 100755 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_ime_right.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent_side.png
 create mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_search.png
 create mode 100755 packages/SystemUI/res/drawable-xxhdpi/ic_mini_settings.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_qs_brightness_auto_off_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_qs_brightness_auto_on_alpha.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back_ime.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_home.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_menu.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_recent.png
 create mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_search.png
 create mode 100755 packages/SystemUI/res/drawable-xxxhdpi/ic_mini_settings.png
 create mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back.png
 create mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back_ime.png
 create mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_home.png
 create mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_recent.png
 create mode 100644 packages/SystemUI/res/drawable/cid.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_dynamic_qs_live_display.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_dynamic_qs_themes.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_edit_tiles.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_tile_category_other.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_tile_category_system.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_tile_contract.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_tile_expand.xml
 create mode 100644 packages/SystemUI/res/drawable/qs_tile_background_drag.xml
 create mode 100644 packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_land.xml
 create mode 100644 packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_port.xml
 create mode 100644 packages/SystemUI/res/layout/cmland.xml
 create mode 100644 packages/SystemUI/res/layout/mid_navigation_bar_port.xml
 create mode 100644 packages/SystemUI/res/layout/qs_settings.xml
 create mode 100644 packages/SystemUI/res/layout/qs_settings_row.xml
 create mode 100644 packages/SystemUI/res/layout/qs_tile_category_row.xml
 create mode 100644 packages/SystemUI/res/layout/qs_tile_child_row.xml
 create mode 100644 packages/SystemUI/res/layout/qs_tile_top.xml
 create mode 100644 packages/SystemUI/res/values-csb-rPL/cm_arrays.xml
 create mode 100644 packages/SystemUI/res/values-csb-rPL/strings.xml
 create mode 100644 packages/SystemUI/res/values/vpi__attrs.xml
 create mode 100644 packages/SystemUI/res/values/vpi__defaults.xml
 create mode 100644 packages/SystemUI/src/com/android/systemui/egg/CMLand.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/QSBooleanSettingRow.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/QSDragPanel.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/QSPage.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/QSPanelTopView.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/QSSettings.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/QSViewPager.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/CustomQSTile.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/EditTile.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/phone/SettingsButton.java
 create mode 100644 packages/SystemUI/src/com/viewpagerindicator/CirclePageIndicator.java
 create mode 100644 packages/SystemUI/src/com/viewpagerindicator/PageIndicator.java
 create mode 100644 packages/VpnDialogs/res/values-csb-rPL/strings.xml
 create mode 100644 packages/WallpaperCropper/res/values-csb-rPL/strings.xml

diff --git a/Android.mk b/Android.mk
index 5f035c5..03651fa 100644
--- a/Android.mk
+++ b/Android.mk
@@ -250,9 +250,6 @@ LOCAL_SRC_FILES += \
 	core/java/android/service/voice/IVoiceInteractionService.aidl \
 	core/java/android/service/voice/IVoiceInteractionSession.aidl \
 	core/java/android/service/voice/IVoiceInteractionSessionService.aidl \
-	core/java/android/service/gesture/IEdgeGestureService.aidl \
-	core/java/android/service/gesture/IEdgeGestureActivationListener.aidl \
-	core/java/android/service/gesture/IEdgeGestureHostCallback.aidl \
 	core/java/android/service/gesture/IGestureService.aidl \
 	core/java/android/service/wallpaper/IWallpaperConnection.aidl \
 	core/java/android/service/wallpaper/IWallpaperEngine.aidl \
diff --git a/api/current.txt b/api/current.txt
index be52914..c45cc3d 100644
--- a/api/current.txt
+++ b/api/current.txt
@@ -2081,21 +2081,6 @@ package android {
     field public static final int Theme_Light_Panel = 16973914; // 0x103005a
     field public static final int Theme_Light_WallpaperSettings = 16973922; // 0x1030062
     field public static final int Theme_Material = 16974372; // 0x1030224
-    field public static final int Theme_Material_DayNight = 16974552; // 0x10302d8
-    field public static final int Theme_Material_DayNight_DarkActionBar = 16974553; // 0x10302d9
-    field public static final int Theme_Material_DayNight_Dialog = 16974554; // 0x10302da
-    field public static final int Theme_Material_DayNight_DialogWhenLarge = 16974560; // 0x10302e0
-    field public static final int Theme_Material_DayNight_DialogWhenLarge_NoActionBar = 16974561; // 0x10302e1
-    field public static final int Theme_Material_DayNight_Dialog_Alert = 16974555; // 0x10302db
-    field public static final int Theme_Material_DayNight_Dialog_MinWidth = 16974556; // 0x10302dc
-    field public static final int Theme_Material_DayNight_Dialog_NoActionBar = 16974557; // 0x10302dd
-    field public static final int Theme_Material_DayNight_Dialog_NoActionBar_MinWidth = 16974558; // 0x10302de
-    field public static final int Theme_Material_DayNight_Dialog_Presentation = 16974559; // 0x10302df
-    field public static final int Theme_Material_DayNight_NoActionBar = 16974562; // 0x10302e2
-    field public static final int Theme_Material_DayNight_NoActionBar_Fullscreen = 16974563; // 0x10302e3
-    field public static final int Theme_Material_DayNight_NoActionBar_Overscan = 16974564; // 0x10302e4
-    field public static final int Theme_Material_DayNight_NoActionBar_TranslucentDecor = 16974565; // 0x10302e5
-    field public static final int Theme_Material_DayNight_Panel = 16974566; // 0x10302e6
     field public static final int Theme_Material_Dialog = 16974373; // 0x1030225
     field public static final int Theme_Material_DialogWhenLarge = 16974379; // 0x103022b
     field public static final int Theme_Material_DialogWhenLarge_NoActionBar = 16974380; // 0x103022c
@@ -3319,7 +3304,6 @@ package android.app {
     method public void finishAndRemoveTask();
     method public void finishFromChild(android.app.Activity);
     method public android.app.ActionBar getActionBar();
-    method public void finishFloating();
     method public final android.app.Application getApplication();
     method public android.content.ComponentName getCallingActivity();
     method public java.lang.String getCallingPackage();
@@ -3525,7 +3509,6 @@ package android.app {
     field public static final int RESULT_CANCELED = 0; // 0x0
     field public static final int RESULT_FIRST_USER = 1; // 0x1
     field public static final int RESULT_OK = -1; // 0xffffffff
-    field public boolean mIsFullscreenApp;
   }
 
   public deprecated class ActivityGroup extends android.app.Activity {
@@ -5354,7 +5337,6 @@ package android.app {
     method public android.app.PendingIntent getPendingIntent(int, int);
     method public android.app.PendingIntent getPendingIntent(int, int, android.os.Bundle);
     method public void startActivities();
-    method public void setTaskOnHome(boolean);
     method public void startActivities(android.os.Bundle);
   }
 
@@ -10886,7 +10868,6 @@ package android.gesture {
     field public static final int GESTURE_STROKE_TYPE_SINGLE = 0; // 0x0
     field public static final int ORIENTATION_HORIZONTAL = 0; // 0x0
     field public static final int ORIENTATION_VERTICAL = 1; // 0x1
-    field protected boolean mClearPerformedGesture;
   }
 
   public static abstract interface GestureOverlayView.OnGestureListener {
@@ -11297,14 +11278,6 @@ package android.graphics {
     ctor public ColorFilter();
   }
 
-  public class ColorFilterMaker {
-    ctor public ColorFilterMaker();
-    method public static android.graphics.ColorFilter changeBWColor(int, float);
-    method public static android.graphics.ColorFilter changeColor(int, float);
-    method public static android.graphics.ColorFilter changeColorAlpha(int, float, float);
-    method public static android.graphics.ColorFilter changeHue(int, int);
-  }
-
   public class ColorMatrix {
     ctor public ColorMatrix();
     ctor public ColorMatrix(float[]);
@@ -14889,7 +14862,6 @@ package android.media {
     method public void setRingerMode(int);
     method public deprecated void setRouting(int, int, int);
     method public void setSpeakerphoneOn(boolean);
-    method public void setStreamMaxVolume(int, int);
     method public deprecated void setStreamMute(int, boolean);
     method public deprecated void setStreamSolo(int, boolean);
     method public void setStreamVolume(int, int, int);
@@ -23439,7 +23411,6 @@ package android.os {
   }
 
   public final class PowerManager {
-    method public java.lang.String getSeenWakeLocks();
     method public boolean isDeviceIdleMode();
     method public boolean isIgnoringBatteryOptimizations(java.lang.String);
     method public boolean isInteractive();
@@ -24110,23 +24081,6 @@ package android.preference {
     method public void setShowSilent(boolean);
   }
 
-  public class SlimSeekBarPreference extends android.preference.Preference implements android.widget.SeekBar.OnSeekBarChangeListener {
-    ctor public SlimSeekBarPreference(android.content.Context, android.util.AttributeSet);
-    method public void disablePercentageValue(boolean);
-    method public void disableText(boolean);
-    method public void isMilliseconds(boolean);
-    method public void minimumValue(int);
-    method public void multiplyValue(int);
-    method public void onProgressChanged(android.widget.SeekBar, int, boolean);
-    method public void onStartTrackingTouch(android.widget.SeekBar);
-    method public void onStopTrackingTouch(android.widget.SeekBar);
-    method public void setDefault(int);
-    method public void setInitValue(int);
-    method public void setInterval(int);
-    field public int interval;
-    field public static int maximum;
-  }
-
   public class SwitchPreference extends android.preference.TwoStatePreference {
     ctor public SwitchPreference(android.content.Context, android.util.AttributeSet, int, int);
     ctor public SwitchPreference(android.content.Context, android.util.AttributeSet, int);
@@ -26687,7 +26641,6 @@ package android.provider {
     method public static deprecated boolean getShowGTalkServiceStatus(android.content.ContentResolver);
     method public static java.lang.String getString(android.content.ContentResolver, java.lang.String);
     method public static android.net.Uri getUriFor(java.lang.String);
-    method public static boolean putBoolean(android.content.ContentResolver, java.lang.String, boolean);
     method public static boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration);
     method public static boolean putFloat(android.content.ContentResolver, java.lang.String, float);
     method public static boolean putInt(android.content.ContentResolver, java.lang.String, int);
@@ -26701,7 +26654,6 @@ package android.provider {
     field public static final java.lang.String ALARM_ALERT = "alarm_alert";
     field public static final deprecated java.lang.String ALWAYS_FINISH_ACTIVITIES = "always_finish_activities";
     field public static final deprecated java.lang.String ANDROID_ID = "android_id";
-    field public static final java.lang.String ANIMATION_CONTROLS_DURATION = "animation_controls_duration";
     field public static final deprecated java.lang.String ANIMATOR_DURATION_SCALE = "animator_duration_scale";
     field public static final deprecated java.lang.String AUTO_TIME = "auto_time";
     field public static final deprecated java.lang.String AUTO_TIME_ZONE = "auto_time_zone";
@@ -26709,7 +26661,6 @@ package android.provider {
     field public static final java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT = "bluetooth_discoverability_timeout";
     field public static final deprecated java.lang.String BLUETOOTH_ON = "bluetooth_on";
     field public static final android.net.Uri CONTENT_URI;
-    field public static final java.lang.String CUSTOM_CARRIER_LABEL = "custom_carrier_label";
     field public static final deprecated java.lang.String DATA_ROAMING = "data_roaming";
     field public static final java.lang.String DATE_FORMAT = "date_format";
     field public static final deprecated java.lang.String DEBUG_APP = "debug_app";
@@ -26723,15 +26674,12 @@ package android.provider {
     field public static final java.lang.String END_BUTTON_BEHAVIOR = "end_button_behavior";
     field public static final java.lang.String FONT_SCALE = "font_scale";
     field public static final java.lang.String HAPTIC_FEEDBACK_ENABLED = "haptic_feedback_enabled";
-    field public static final java.lang.String HIDE_PANEL_BATTERY = "hide_panel_battery";
     field public static final deprecated java.lang.String HTTP_PROXY = "http_proxy";
-    field public static final java.lang.String IMMERSIVE_RECENTS = "immersive_recents";
     field public static final deprecated java.lang.String INSTALL_NON_MARKET_APPS = "install_non_market_apps";
     field public static final deprecated java.lang.String LOCATION_PROVIDERS_ALLOWED = "location_providers_allowed";
     field public static final deprecated java.lang.String LOCK_PATTERN_ENABLED = "lock_pattern_autolock";
     field public static final deprecated java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED = "lock_pattern_tactile_feedback_enabled";
     field public static final deprecated java.lang.String LOCK_PATTERN_VISIBLE = "lock_pattern_visible_pattern";
-    field public static final java.lang.String LOCK_SCREEN_SHOW_WEATHER = "lock_screen_show_weather";
     field public static final deprecated java.lang.String LOGGING_ID = "logging_id";
     field public static final deprecated java.lang.String MODE_RINGER = "mode_ringer";
     field public static final java.lang.String MODE_RINGER_STREAMS_AFFECTED = "mode_ringer_streams_affected";
@@ -28784,9 +28732,6 @@ package android.service.notification {
     method public boolean isOngoing();
     method public void writeToParcel(android.os.Parcel, int);
     field public static final android.os.Parcelable.Creator<android.service.notification.StatusBarNotification> CREATOR;
-    field public final android.app.Notification notification;
-    field public final java.lang.String pkg;
-    field public final android.os.UserHandle user;
   }
 
 }
@@ -37293,7 +37238,6 @@ package android.view {
     field public static final int PROGRESS_VISIBILITY_OFF = -2; // 0xfffffffe
     field public static final int PROGRESS_VISIBILITY_ON = -1; // 0xffffffff
     field public static final java.lang.String STATUS_BAR_BACKGROUND_TRANSITION_NAME = "android:status:background";
-    field public boolean mIsFloatingWindow;
   }
 
   public static abstract interface Window.Callback {
@@ -38331,7 +38275,6 @@ package android.view.inputmethod {
     ctor public EditorInfo();
     method public int describeContents();
     method public void dump(android.util.Printer, java.lang.String);
-    method public final void formalTextInput(boolean);
     method public final void makeCompatible(int);
     method public void writeToParcel(android.os.Parcel, int);
     field public static final android.os.Parcelable.Creator<android.view.inputmethod.EditorInfo> CREATOR;
diff --git a/api/system-current.txt b/api/system-current.txt
index a55ae48..1e7b94e 100644
--- a/api/system-current.txt
+++ b/api/system-current.txt
@@ -2181,21 +2181,6 @@ package android {
     field public static final int Theme_Light_Panel = 16973914; // 0x103005a
     field public static final int Theme_Light_WallpaperSettings = 16973922; // 0x1030062
     field public static final int Theme_Material = 16974372; // 0x1030224
-    field public static final int Theme_Material_DayNight = 16974552; // 0x10302d8
-    field public static final int Theme_Material_DayNight_DarkActionBar = 16974553; // 0x10302d9
-    field public static final int Theme_Material_DayNight_Dialog = 16974554; // 0x10302da
-    field public static final int Theme_Material_DayNight_DialogWhenLarge = 16974560; // 0x10302e0
-    field public static final int Theme_Material_DayNight_DialogWhenLarge_NoActionBar = 16974561; // 0x10302e1
-    field public static final int Theme_Material_DayNight_Dialog_Alert = 16974555; // 0x10302db
-    field public static final int Theme_Material_DayNight_Dialog_MinWidth = 16974556; // 0x10302dc
-    field public static final int Theme_Material_DayNight_Dialog_NoActionBar = 16974557; // 0x10302dd
-    field public static final int Theme_Material_DayNight_Dialog_NoActionBar_MinWidth = 16974558; // 0x10302de
-    field public static final int Theme_Material_DayNight_Dialog_Presentation = 16974559; // 0x10302df
-    field public static final int Theme_Material_DayNight_NoActionBar = 16974562; // 0x10302e2
-    field public static final int Theme_Material_DayNight_NoActionBar_Fullscreen = 16974563; // 0x10302e3
-    field public static final int Theme_Material_DayNight_NoActionBar_Overscan = 16974564; // 0x10302e4
-    field public static final int Theme_Material_DayNight_NoActionBar_TranslucentDecor = 16974565; // 0x10302e5
-    field public static final int Theme_Material_DayNight_Panel = 16974566; // 0x10302e6
     field public static final int Theme_Material_Dialog = 16974373; // 0x1030225
     field public static final int Theme_Material_DialogWhenLarge = 16974379; // 0x103022b
     field public static final int Theme_Material_DialogWhenLarge_NoActionBar = 16974380; // 0x103022c
@@ -3421,7 +3406,6 @@ package android.app {
     method public void finishAndRemoveTask();
     method public void finishFromChild(android.app.Activity);
     method public android.app.ActionBar getActionBar();
-    method public void finishFloating();
     method public final android.app.Application getApplication();
     method public android.content.ComponentName getCallingActivity();
     method public java.lang.String getCallingPackage();
@@ -3629,7 +3613,6 @@ package android.app {
     field public static final int RESULT_CANCELED = 0; // 0x0
     field public static final int RESULT_FIRST_USER = 1; // 0x1
     field public static final int RESULT_OK = -1; // 0xffffffff
-    field public boolean mIsFullscreenApp;
   }
 
   public static abstract interface Activity.TranslucentConversionListener {
@@ -5472,7 +5455,6 @@ package android.app {
     method public android.app.PendingIntent getPendingIntent(int, int);
     method public android.app.PendingIntent getPendingIntent(int, int, android.os.Bundle);
     method public void startActivities();
-    method public void setTaskOnHome(boolean);
     method public void startActivities(android.os.Bundle);
   }
 
@@ -11224,7 +11206,6 @@ package android.gesture {
     field public static final int GESTURE_STROKE_TYPE_SINGLE = 0; // 0x0
     field public static final int ORIENTATION_HORIZONTAL = 0; // 0x0
     field public static final int ORIENTATION_VERTICAL = 1; // 0x1
-    field protected boolean mClearPerformedGesture;
   }
 
   public static abstract interface GestureOverlayView.OnGestureListener {
@@ -11635,14 +11616,6 @@ package android.graphics {
     ctor public ColorFilter();
   }
 
-  public class ColorFilterMaker {
-    ctor public ColorFilterMaker();
-    method public static android.graphics.ColorFilter changeBWColor(int, float);
-    method public static android.graphics.ColorFilter changeColor(int, float);
-    method public static android.graphics.ColorFilter changeColorAlpha(int, float, float);
-    method public static android.graphics.ColorFilter changeHue(int, int);
-  }
-
   public class ColorMatrix {
     ctor public ColorMatrix();
     ctor public ColorMatrix(float[]);
@@ -16148,7 +16121,6 @@ package android.media {
     method public void setRingerMode(int);
     method public deprecated void setRouting(int, int, int);
     method public void setSpeakerphoneOn(boolean);
-    method public void setStreamMaxVolume(int, int);
     method public deprecated void setStreamMute(int, boolean);
     method public deprecated void setStreamSolo(int, boolean);
     method public void setStreamVolume(int, int, int);
@@ -25384,7 +25356,6 @@ package android.os {
   }
 
   public final class PowerManager {
-    method public java.lang.String getSeenWakeLocks();
     method public boolean isDeviceIdleMode();
     method public boolean isIgnoringBatteryOptimizations(java.lang.String);
     method public boolean isInteractive();
@@ -26067,23 +26038,6 @@ package android.preference {
     method public void setShowSilent(boolean);
   }
 
-  public class SlimSeekBarPreference extends android.preference.Preference implements android.widget.SeekBar.OnSeekBarChangeListener {
-    ctor public SlimSeekBarPreference(android.content.Context, android.util.AttributeSet);
-    method public void disablePercentageValue(boolean);
-    method public void disableText(boolean);
-    method public void isMilliseconds(boolean);
-    method public void minimumValue(int);
-    method public void multiplyValue(int);
-    method public void onProgressChanged(android.widget.SeekBar, int, boolean);
-    method public void onStartTrackingTouch(android.widget.SeekBar);
-    method public void onStopTrackingTouch(android.widget.SeekBar);
-    method public void setDefault(int);
-    method public void setInitValue(int);
-    method public void setInterval(int);
-    field public int interval;
-    field public static int maximum;
-  }
-
   public class SwitchPreference extends android.preference.TwoStatePreference {
     ctor public SwitchPreference(android.content.Context, android.util.AttributeSet, int, int);
     ctor public SwitchPreference(android.content.Context, android.util.AttributeSet, int);
@@ -28747,7 +28701,6 @@ package android.provider {
     method public static deprecated boolean getShowGTalkServiceStatus(android.content.ContentResolver);
     method public static java.lang.String getString(android.content.ContentResolver, java.lang.String);
     method public static android.net.Uri getUriFor(java.lang.String);
-    method public static boolean putBoolean(android.content.ContentResolver, java.lang.String, boolean);
     method public static boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration);
     method public static boolean putFloat(android.content.ContentResolver, java.lang.String, float);
     method public static boolean putInt(android.content.ContentResolver, java.lang.String, int);
@@ -28761,7 +28714,6 @@ package android.provider {
     field public static final java.lang.String ALARM_ALERT = "alarm_alert";
     field public static final deprecated java.lang.String ALWAYS_FINISH_ACTIVITIES = "always_finish_activities";
     field public static final deprecated java.lang.String ANDROID_ID = "android_id";
-    field public static final java.lang.String ANIMATION_CONTROLS_DURATION = "animation_controls_duration";
     field public static final deprecated java.lang.String ANIMATOR_DURATION_SCALE = "animator_duration_scale";
     field public static final deprecated java.lang.String AUTO_TIME = "auto_time";
     field public static final deprecated java.lang.String AUTO_TIME_ZONE = "auto_time_zone";
@@ -28769,7 +28721,6 @@ package android.provider {
     field public static final java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT = "bluetooth_discoverability_timeout";
     field public static final deprecated java.lang.String BLUETOOTH_ON = "bluetooth_on";
     field public static final android.net.Uri CONTENT_URI;
-    field public static final java.lang.String CUSTOM_CARRIER_LABEL = "custom_carrier_label";
     field public static final deprecated java.lang.String DATA_ROAMING = "data_roaming";
     field public static final java.lang.String DATE_FORMAT = "date_format";
     field public static final deprecated java.lang.String DEBUG_APP = "debug_app";
@@ -28783,15 +28734,12 @@ package android.provider {
     field public static final java.lang.String END_BUTTON_BEHAVIOR = "end_button_behavior";
     field public static final java.lang.String FONT_SCALE = "font_scale";
     field public static final java.lang.String HAPTIC_FEEDBACK_ENABLED = "haptic_feedback_enabled";
-    field public static final java.lang.String HIDE_PANEL_BATTERY = "hide_panel_battery";
     field public static final deprecated java.lang.String HTTP_PROXY = "http_proxy";
-    field public static final java.lang.String IMMERSIVE_RECENTS = "immersive_recents";
     field public static final deprecated java.lang.String INSTALL_NON_MARKET_APPS = "install_non_market_apps";
     field public static final deprecated java.lang.String LOCATION_PROVIDERS_ALLOWED = "location_providers_allowed";
     field public static final deprecated java.lang.String LOCK_PATTERN_ENABLED = "lock_pattern_autolock";
     field public static final deprecated java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED = "lock_pattern_tactile_feedback_enabled";
     field public static final deprecated java.lang.String LOCK_PATTERN_VISIBLE = "lock_pattern_visible_pattern";
-    field public static final java.lang.String LOCK_SCREEN_SHOW_WEATHER = "lock_screen_show_weather";
     field public static final deprecated java.lang.String LOGGING_ID = "logging_id";
     field public static final deprecated java.lang.String MODE_RINGER = "mode_ringer";
     field public static final java.lang.String MODE_RINGER_STREAMS_AFFECTED = "mode_ringer_streams_affected";
@@ -30889,9 +30837,6 @@ package android.service.notification {
     method public boolean isOngoing();
     method public void writeToParcel(android.os.Parcel, int);
     field public static final android.os.Parcelable.Creator<android.service.notification.StatusBarNotification> CREATOR;
-    field public final android.app.Notification notification;
-    field public final java.lang.String pkg;
-    field public final android.os.UserHandle user;
   }
 
 }
@@ -39598,7 +39543,6 @@ package android.view {
     field public static final int PROGRESS_VISIBILITY_OFF = -2; // 0xfffffffe
     field public static final int PROGRESS_VISIBILITY_ON = -1; // 0xffffffff
     field public static final java.lang.String STATUS_BAR_BACKGROUND_TRANSITION_NAME = "android:status:background";
-    field public boolean mIsFloatingWindow;
   }
 
   public static abstract interface Window.Callback {
@@ -40638,7 +40582,6 @@ package android.view.inputmethod {
     ctor public EditorInfo();
     method public int describeContents();
     method public void dump(android.util.Printer, java.lang.String);
-    method public final void formalTextInput(boolean);
     method public final void makeCompatible(int);
     method public void writeToParcel(android.os.Parcel, int);
     field public static final android.os.Parcelable.Creator<android.view.inputmethod.EditorInfo> CREATOR;
diff --git a/core/java/android/app/Activity.java b/core/java/android/app/Activity.java
index fbe7b18..ecd0050 100644
--- a/core/java/android/app/Activity.java
+++ b/core/java/android/app/Activity.java
@@ -35,12 +35,9 @@ import android.widget.Toolbar;
 import com.android.internal.app.IVoiceInteractor;
 import com.android.internal.app.WindowDecorActionBar;
 import com.android.internal.app.ToolbarActionBar;
-import com.android.internal.policy.PolicyManager;
-import com.android.internal.widget.FloatingWindowView;
 
 import android.annotation.SystemApi;
 import android.app.admin.DevicePolicyManager;
-import android.app.ActivityManager;
 import android.app.assist.AssistContent;
 import android.content.ComponentCallbacks2;
 import android.content.ComponentName;
@@ -58,10 +55,8 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.database.Cursor;
-import android.graphics.Color;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
-import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 import android.media.AudioManager;
 import android.media.session.MediaController;
@@ -75,7 +70,6 @@ import android.os.Parcelable;
 import android.os.RemoteException;
 import android.os.StrictMode;
 import android.os.UserHandle;
-import android.provider.Settings;
 import android.text.Selection;
 import android.text.SpannableStringBuilder;
 import android.text.TextUtils;
@@ -84,23 +78,20 @@ import android.util.AttributeSet;
 import android.util.EventLog;
 import android.util.Log;
 import android.util.PrintWriterPrinter;
-import android.util.TypedValue;
 import android.util.Slog;
 import android.util.SparseArray;
 import android.view.ActionMode;
 import android.view.ContextMenu;
 import android.view.ContextMenu.ContextMenuInfo;
 import android.view.ContextThemeWrapper;
-import android.view.Gravity;
-import android.view.IWindowManager;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.MotionEvent;
+import com.android.internal.policy.PhoneWindow;
 import android.view.SearchEvent;
-import android.view.ScaleGestureDetector;
 import android.view.View;
 import android.view.View.OnCreateContextMenuListener;
 import android.view.ViewGroup;
@@ -112,9 +103,6 @@ import android.view.WindowManager;
 import android.view.WindowManagerGlobal;
 import android.view.accessibility.AccessibilityEvent;
 import android.widget.AdapterView;
-import android.widget.FrameLayout;
-
-import com.android.internal.util.screwd.ColorUtils;
 
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
@@ -706,9 +694,6 @@ public class Activity extends ContextThemeWrapper
 
     private static final String REQUEST_PERMISSIONS_WHO_PREFIX = "@android:requestPermissions:";
 
-    private static final String SAVED_WINDOW_LAYOUT_IDS_KEY = "android:savedWindowLayoutIds";
-    private static final String SAVED_WINDOW_LAYOUT_TAG = "android:savedWindowLayout";
-
     private static class ManagedDialog {
         Dialog mDialog;
         Bundle mArgs;
@@ -760,7 +745,6 @@ public class Activity extends ContextThemeWrapper
     /*package*/ boolean mVisibleFromServer = false;
     /*package*/ boolean mVisibleFromClient = true;
     /*package*/ ActionBar mActionBar = null;
-    /*package*/ WindowDecorActionBar mDecorActionBar = null;
     private boolean mEnableDefaultActionBarUp;
 
     private VoiceInteractor mVoiceInteractor;
@@ -817,52 +801,6 @@ public class Activity extends ContextThemeWrapper
 
     private boolean mHasCurrentPermissionsRequest;
 
-    private Rect mOriginalBounds;
-    private boolean mIsSplitView;
-
-    private final int UNKNOWN = -10000;
-    private final int SNAP_NONE = 0;
-    private final int SNAP_LEFT = 1;
-    private final int SNAP_TOP = 2;
-    private final int SNAP_RIGHT = 3;
-    private final int SNAP_BOTTOM = 4;
-    private final int MOVE_MAX_RANGE = 10;
-
-    private Runnable mRunnable;
-    private Runnable mLayoutRunnable;
-    private int mRange = 100;
-    private int mSensitivity = 50;
-    private int mSnap = SNAP_NONE;
-    private int[] mSnapParam = new int[3]; // w,h,g
-    private int[] mOldParam = new int[2]; // w,h
-    private boolean mSnapped;
-    private int[] mOldLayout;
-    private int[] mLastLayout;
-    private boolean mTimeoutRunning;
-    private boolean mTimeoutDone;
-    private boolean mRestorePosition;
-    private boolean mChangedPreviousRange;
-    private float[] mPreviousRange = new float[2];
-
-    private Float screenX ;
-    private Float screenY ;
-    private Float viewX ;
-    private Float viewY ;
-    private Float leftFromScreen ;
-    private Float topFromScreen ;
-    private int mCurrentScreenHeight;
-    private int mCurrentScreenWidth;
-    private int mPreviousOrientation;
-    private int mAppMinimumWidth;
-    private int mAppMinimumHeight;
-    private int mAppFloatViewWidth;
-    private int mAppFloatViewHeight;
-    private boolean mChangedFlags = false;
-    private boolean isAlreadyAttachToWindow = false;
-    public boolean mIsFullscreenApp = false;
-    private ScaleGestureDetector mScaleGestureDetector;
-    private FloatingWindowView mFloatingWindowView;
-
     /** Return the intent that started this activity. */
     public Intent getIntent() {
         return mIntent;
@@ -986,9 +924,6 @@ public class Activity extends ContextThemeWrapper
             mVoiceInteractor.attachActivity(this);
         }
         mCalled = true;
-        mPreviousOrientation = getResources().getConfiguration().orientation;
-        mScaleGestureDetector = new ScaleGestureDetector(getApplicationContext(), mScaleGestureListener);
-        mScaleGestureDetector.setQuickScaleEnabled(false);
     }
 
     /**
@@ -1027,7 +962,6 @@ public class Activity extends ContextThemeWrapper
     final void performRestoreInstanceState(Bundle savedInstanceState) {
         onRestoreInstanceState(savedInstanceState);
         restoreManagedDialogs(savedInstanceState);
-        restoreManagedWindowLayout(savedInstanceState);
     }
 
     /**
@@ -1136,54 +1070,6 @@ public class Activity extends ContextThemeWrapper
         }
     }
 
-    private void restoreManagedWindowLayout(Bundle savedInstanceState) {
-        final Bundle b = savedInstanceState.getBundle(SAVED_WINDOW_LAYOUT_TAG);
-        if (b == null) {
-            return;
-        }
-
-        if (mWindow == null) {
-            return;
-        }
-
-        if (!mWindow.mIsFloatingWindow) {
-            return;
-        }
-
-        final int[] ids = b.getIntArray(SAVED_WINDOW_LAYOUT_IDS_KEY);
-        final int x = ids[0];
-        final int y = ids[1];
-        final int width = ids[2];
-        final int height = ids[3];
-        mSnap = ids[4];
-        WindowManager.LayoutParams params = mWindow.getAttributes();
-        params.x = x;
-        params.y = y;
-        switch (mSnap) {
-              case SNAP_LEFT:
-                   params.width = (mCurrentScreenWidth / 2);
-                   params.height = ViewGroup.LayoutParams.MATCH_PARENT;
-                   break;
-              case SNAP_RIGHT:
-                   params.width = (mCurrentScreenWidth / 2);
-                   params.height = ViewGroup.LayoutParams.MATCH_PARENT;
-                   break;
-              case SNAP_TOP:
-                   params.width = ViewGroup.LayoutParams.MATCH_PARENT;
-                   params.height = (mCurrentScreenHeight / 2);
-                   break;
-              case SNAP_BOTTOM:
-                   params.width = ViewGroup.LayoutParams.MATCH_PARENT;
-                   params.height = (mCurrentScreenHeight / 2);
-                   break;
-              case SNAP_NONE:
-                   params.width = width;
-                   params.height = height;
-                   break;
-        }
-        mWindow.setAttributes(params);
-    }
-
     private Dialog createDialog(Integer dialogId, Bundle state, Bundle args) {
         final Dialog dialog = onCreateDialog(dialogId, args);
         if (dialog == null) {
@@ -1257,7 +1143,6 @@ public class Activity extends ContextThemeWrapper
     @CallSuper
     protected void onStart() {
         if (DEBUG_LIFECYCLE) Slog.v(TAG, "onStart " + this);
-        setupFloatingActionBar(false);
         mCalled = true;
 
         mFragments.doLoaderStart();
@@ -1265,87 +1150,6 @@ public class Activity extends ContextThemeWrapper
         getApplication().dispatchActivityStarted(this);
     }
 
-    private void setupFloatingActionBar(boolean reload) {
-        if (mWindow == null) {
-            return;
-        }
-
-        if (!mWindow.mIsFloatingWindow) {
-            return;
-        }
-
-        if (mWindow.peekDecorView() == null) {
-            return;
-        }
-
-        mWindow.getDecorView().setSystemUiVisibility(
-            View.SYSTEM_UI_FLAG_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_IMMERSIVE);
-
-        FrameLayout decorFloatingView = (FrameLayout) mWindow.peekDecorView().getRootView();
-        if (decorFloatingView == null) {
-            return;
-        }
-        if (!reload) {
-            decorFloatingView.setFitsSystemWindows(true);
-            mFloatingWindowView = new FloatingWindowView(this, getActionBarHeight(true));
-            decorFloatingView.addView(mFloatingWindowView, -1, FloatingWindowView.getParams());
-            decorFloatingView.setTagInternal(android.R.id.extractArea, mFloatingWindowView);
-            changeTitleBarColor();
-        } else {
-            mFloatingWindowView = (FloatingWindowView) decorFloatingView.getTag(android.R.id.extractArea);
-            changeTitleBarColor();
-            decorFloatingView.bringChildToFront(mFloatingWindowView);
-        }
-    }
-
-    private void changeFloatingWindowColor(int bg_color, int ic_color) {
-        mFloatingWindowView.setFloatingBackgroundColor(bg_color);
-        mFloatingWindowView.setFloatingColorFilter(ic_color);
-    }
-
-
-    private void changeTitleBarColor() {
-        if (mFloatingWindowView != null) {
-            try {
-                final PackageManager pm = getPackageManager();
-                // Getting current task packagename
-                final ActivityManager am = (ActivityManager) getSystemService(Activity.ACTIVITY_SERVICE);
-                List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);
-                ActivityManager.RunningTaskInfo task = tasks.get(0); // current task
-                ComponentName rootActivity = task.baseActivity;
-                String appPackageName = rootActivity.getPackageName();
-                // Get theme from packagename
-                final Resources res = pm.getResourcesForApplication(appPackageName);
-                final int[] attrs = new int[] {
-                        res.getIdentifier("colorPrimary", "attr", appPackageName),
-                        android.R.attr.colorPrimary
-                };
-
-                final Resources.Theme theme = res.newTheme();
-                final ComponentName cn = pm.getLaunchIntentForPackage(appPackageName).getComponent();
-                theme.applyStyle(pm.getActivityInfo(cn, 0).theme, false);
-                // Obtain the colorPrimary color from the attrs
-                TypedArray a = theme.obtainStyledAttributes(attrs);
-                // Do something with the color
-                final int colorPrimary = a.getColor(0, a.getColor(1, Color.WHITE));
-                // Make sure you recycle the TypedArray
-                a.recycle();
-                a = null;
-                int iconTint;
-
-                if (ColorUtils.isBrightColor(colorPrimary)) {
-                    iconTint = Color.BLACK;
-                } else {
-                    iconTint = Color.WHITE;
-                }
-                    changeFloatingWindowColor(colorPrimary, iconTint);
-                } catch (final NameNotFoundException e) {
-                    e.printStackTrace();
-                }
-            }
-    }
-
     /**
      * Called after {@link #onStop} when the current activity is being
      * re-displayed to the user (the user has navigated back to it).  It will
@@ -1426,7 +1230,6 @@ public class Activity extends ContextThemeWrapper
         final Window win = getWindow();
         if (win != null) win.makeActive();
         if (mActionBar != null) mActionBar.setShowHideAnimationEnabled(true);
-        setupFloatingActionBar(true);
         mCalled = true;
     }
 
@@ -1500,7 +1303,6 @@ public class Activity extends ContextThemeWrapper
         saveManagedDialogs(outState);
         mActivityTransitionState.saveState(outState);
         storeHasCurrentPermissionRequest(outState);
-        saveManagedWindowLayout(outState);
         if (DEBUG_LIFECYCLE) Slog.v(TAG, "onSaveInstanceState " + this + ": " + outState);
     }
 
@@ -1628,27 +1430,6 @@ public class Activity extends ContextThemeWrapper
         outState.putBundle(SAVED_DIALOGS_TAG, dialogState);
     }
 
-    private void saveManagedWindowLayout(Bundle outState) {
-        if (mWindow == null) {
-            return;
-        }
-
-        if (!mWindow.mIsFloatingWindow) {
-            return;
-        }
-
-        Bundle windowLayoutState = new Bundle();
-
-        int[] ids = new int[5];
-        WindowManager.LayoutParams params = mWindow.getAttributes();
-        ids[0] = params.x;
-        ids[1] = params.y;
-        ids[2] = params.width;
-        ids[3] = params.height;
-        ids[4] = mSnap;
-        windowLayoutState.putIntArray(SAVED_WINDOW_LAYOUT_IDS_KEY, ids);
-        outState.putBundle(SAVED_WINDOW_LAYOUT_TAG, windowLayoutState);
-    }
 
     /**
      * Called as part of the activity lifecycle when an activity is going into
@@ -1872,7 +1653,6 @@ public class Activity extends ContextThemeWrapper
     @CallSuper
     protected void onDestroy() {
         if (DEBUG_LIFECYCLE) Slog.v(TAG, "onDestroy " + this);
-        sendAppEndBroadcast();
         mCalled = true;
 
         // dismiss any dialogs we are managing.
@@ -1955,51 +1735,6 @@ public class Activity extends ContextThemeWrapper
         if (mWindow != null) {
             // Pass the configuration changed event to the window
             mWindow.onConfigurationChanged(newConfig);
-            if (mWindow.mIsFloatingWindow) {
-                refreshAppLayoutSize();
-                Configuration config = getResources().getConfiguration();
-                if (config.orientation != mPreviousOrientation) {
-                    mWindow.setGravity(Gravity.LEFT | Gravity.TOP);
-                    if (!isUnSnap()) {
-                        requestChangingFlagsLayout();
-                    }
-                    WindowManager.LayoutParams params = mWindow.getAttributes();
-                    switch (mSnap) {
-                        case SNAP_LEFT:
-                             params.width = (mCurrentScreenWidth / 2);
-                             params.height = ViewGroup.LayoutParams.MATCH_PARENT;
-	                     params.x = 0;
-	                     params.y = 0;
-                             break;
-                        case SNAP_RIGHT:
-                             params.width = (mCurrentScreenWidth / 2);
-                             params.height = ViewGroup.LayoutParams.MATCH_PARENT;
-	                     params.x = (mCurrentScreenWidth / 2);
-	                     params.y = 0;
-                             break;
-                        case SNAP_TOP:
-                             params.width = ViewGroup.LayoutParams.MATCH_PARENT;
-                             params.height = (mCurrentScreenHeight / 2);
-	                     params.x = 0;
-	                     params.y = 0;
-                             break;
-                        case SNAP_BOTTOM:
-                             params.width = ViewGroup.LayoutParams.MATCH_PARENT;
-                             params.height = (mCurrentScreenHeight / 2);
-	                     params.x = 0;
-	                     params.y = (mCurrentScreenHeight / 2);
-                             break;
-                        case SNAP_NONE:
-                             int width = params.width;
-                             int height = params.height;
-                             params.width = height;
-                             params.height = width;
-                             break;
-                    }
-                    mWindow.setAttributes(params);
-                    mPreviousOrientation = config.orientation;
-                }
-            }
         }
 
         if (mActionBar != null) {
@@ -3030,48 +2765,8 @@ public class Activity extends ContextThemeWrapper
      * @return boolean Return true if this event was consumed.
      */
     public boolean dispatchTouchEvent(MotionEvent ev) {
-        if (ev.getAction() == MotionEvent.ACTION_DOWN)
+        if (ev.getAction() == MotionEvent.ACTION_DOWN) {
             onUserInteraction();
-        if (mWindow.mIsFloatingWindow) {
-            if (isUnSnap()) {
-                mScaleGestureDetector.onTouchEvent(ev);
-            }
-            int actionBarHeight = getActionBarHeight(false);
-            switch (ev.getAction()) {
-                  case MotionEvent.ACTION_DOWN:
-                       setTouchViewDown(ev.getX(), ev.getY());
-                       onUserInteraction();
-                       updateFocusApp();
-                       if (viewY < actionBarHeight) {
-                           if (!mChangedPreviousRange) {
-                               setPreviousTouchRange(ev.getRawX(), ev.getRawY());
-                               mChangedPreviousRange = true;
-                           }
-                       }
-                       break;
-                  case MotionEvent.ACTION_MOVE:
-                       if (viewY < actionBarHeight) {
-                           changeFlagsLayoutParams();
-                           setTouchViewMove(ev.getRawX(), ev.getRawY());
-                           if (mRestorePosition && moveRangeAboveLimit(ev)) {
-                               restoreOldPosition();
-                           }
-                           showSnap((int) ev.getRawX(), (int) ev.getRawY());
-                       }
-                       break;
-                  case MotionEvent.ACTION_UP:
-                       if (viewY < actionBarHeight) {
-                           mChangedFlags = false;
-                           finishSnap(isValidSnap() && mTimeoutDone);
-                           discardTimeout();
-                           mChangedPreviousRange = false;
-                       }
-                       break;
-             }
-        } else {
-             if (ev.getAction() == MotionEvent.ACTION_DOWN) {
-                 onUserInteraction();
-             }
         }
         if (getWindow().superDispatchTouchEvent(ev)) {
             return true;
@@ -3080,508 +2775,6 @@ public class Activity extends ContextThemeWrapper
     }
 
     /**
-     * @hide
-     */
-    public void setTouchViewDown(float x , float y) {
-        viewX = x;
-        viewY = y;
-    }
-
-    /**
-     * @hide
-     */
-    public void setPreviousTouchRange(float x , float y) {
-        mPreviousRange[0] = x;
-        mPreviousRange[1] = y;
-    }
-
-    /**
-     * @hide
-     */
-    public void setTouchViewMove(float x , float y) {
-        screenX = x;
-        screenY = y;
-        leftFromScreen = (screenX - viewX);
-        topFromScreen = (screenY - viewY);
-        initLayoutParams(leftFromScreen, topFromScreen);
-    }
-
-    /**
-     * @hide
-     */
-    public void setChangedPreviousRange(boolean needed) {
-        mChangedPreviousRange = needed;
-    }
-
-    /**
-     * @hide
-     */
-    public boolean getChangedPreviousRange() {
-        return mChangedPreviousRange;
-    }
-
-    private int getActionBarHeight(boolean smaller) {
-        ActionBar actionBar = getActionBar();
-        int actionBarHeight = (actionBar != null) ? actionBar.getHeight()
-                          : getAppDimensionPixel(smaller);
-        return (smaller ? getAppDimensionPixel(smaller) : actionBarHeight);
-    }
-
-    /**
-     * @hide
-     */
-    public void updateFocusApp() {
-        IWindowManager wm = (IWindowManager) WindowManagerGlobal.getWindowManagerService();
-        try {
-             wm.notifyFloatActivityTouched(mToken, false);
-        } catch (RemoteException e) {
-             Log.e(TAG, "Cannot notify activity touched", e);
-        }
-    }
-
-    private void initLayoutParams(float x , float y) {
-        WindowManager.LayoutParams param = mWindow.getAttributes();
-        param.x = (int) x;
-        param.y = (int) y;
-        mWindow.setAttributes(param);
-    }
-
-    /**
-     * @hide
-     */
-    public void changeFlagsLayoutParams() {
-        mWindow.setGravity(Gravity.LEFT | Gravity.TOP);
-        if (!mChangedFlags) {
-            mChangedFlags = true;
-            requestChangingFlagsLayout();
-        }
-    }
-
-    private void requestChangingFlagsLayout() {
-        mWindow.setCloseOnTouchOutside(false);
-        mWindow.addFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL);
-        mWindow.addFlags(WindowManager.LayoutParams.FLAG_SPLIT_TOUCH);
-        if (ActivityManager.isHighEndGfx()) {
-            mWindow.addFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);
-        }
-    }
-
-    /**
-     * @hide
-     */
-    public void setChangedFlags(boolean changed) {
-        mChangedFlags = changed;
-    }
-
-    /**
-     * @hide
-     */
-    public boolean moveRangeAboveLimit(MotionEvent event) {
-        final float x = event.getRawX();
-        final float y = event.getRawY();
-
-        boolean returnValue = false;
-        if (Math.abs(mPreviousRange[0] - x) > MOVE_MAX_RANGE) {
-            returnValue = true;
-        } else if (Math.abs(mPreviousRange[1] - y) > MOVE_MAX_RANGE) {
-            returnValue = true;
-        }
-        return returnValue;
-    }
-
-    /**
-     * @hide
-     */
-    public void showSnap(int x, int y) {
-        initSnappable(x, y);
-        calculateSnap();
-        if (isValidSnap()) {
-            setupTimeout();
-        }
-    }
-
-    /**
-     * @hide
-     */
-    public void finishSnap(boolean apply) {
-        if (apply) {
-            if (saveOldPosition()) {
-                mRestorePosition = true;
-            }
-	    WindowManager.LayoutParams lpp = mWindow.getAttributes();
-	    lpp.width = mSnapParam[0];
-	    lpp.height = mSnapParam[1];
-	    int gravity = mSnapParam[2];
-	    lpp.x = (gravity == Gravity.RIGHT) ? (mCurrentScreenWidth / 2) : 0;
-	    lpp.y = (gravity == Gravity.BOTTOM) ? (mCurrentScreenHeight / 2) : 0;
-	    mWindow.setAttributes(lpp);
-            mWindow.getDecorView().setSystemUiVisibility(
-                View.SYSTEM_UI_FLAG_FULLSCREEN
-                    | View.SYSTEM_UI_FLAG_IMMERSIVE);
-        } else {
-            mWindow.getDecorView().setSystemUiVisibility(
-                View.SYSTEM_UI_FLAG_FULLSCREEN
-                    | View.SYSTEM_UI_FLAG_IMMERSIVE);
-	    mSnap = SNAP_NONE;
-        }
-    }
-
-    /**
-     * @hide
-     */
-    public boolean isValidSnap() {
-        return (mSnapParam[0] != UNKNOWN) &&
-                (mSnapParam[1] != UNKNOWN) &&
-                 (mSnapParam[2] != UNKNOWN);
-    }
-
-    private boolean saveOldPosition() {
-        if (mRestorePosition) return true;
-        if (mSnapped) {
-            return (isUnSnap() || mTimeoutRunning);
-        }
-        mSnapped = true;
-        final WindowManager.LayoutParams params = mWindow.getAttributes();
-        int[] layout = { params.x, params.y, params.width, params.height };
-        mOldLayout = layout;
-        return true;
-    }
-
-    private boolean isUnSnap() {
-        return (mSnap == SNAP_NONE);
-    }
-
-    /**
-     * @hide
-     */
-    public boolean restoreOldPosition() {
-        if (!mSnapped) return false;
-        restoreOldPositionWithoutRefresh();
-        return true;
-    }
-
-    private void restoreOldPositionWithoutRefresh() {
-        if (!mSnapped) return;
-        WindowManager.LayoutParams params = mWindow.getAttributes();
-        params.x = mOldLayout[0];
-        params.y = mOldLayout[1];
-        params.width = mOldLayout[2];
-        params.height = mOldLayout[3];
-        mWindow.setAttributes(params);
-        mSnapped = false;
-        mRestorePosition = false;
-    }
-
-    /**
-     * @hide
-     */
-    public boolean getRestorePosition() {
-        return mRestorePosition;
-    }
-
-    private boolean initSnappable(int x, int y) {
-        if ((Math.abs(mOldParam[0] - x) > mSensitivity) ||
-              (Math.abs(mOldParam[1] - y) > mSensitivity)) {
-            mOldParam[0] = x;
-            mOldParam[1] = y;
-            return false;
-        }
-        mOldParam[0] = x;
-        mOldParam[1] = y;
-
-        if (x < mRange) {
-            mSnap = SNAP_LEFT;
-        } else if (x > (mCurrentScreenWidth - mRange)) {
-            mSnap = SNAP_RIGHT;
-        } else if (y < mRange) {
-            mSnap = SNAP_TOP;
-        } else if (y > (mCurrentScreenHeight - mRange)) {
-            mSnap = SNAP_BOTTOM;
-        } else {
-            mSnap = SNAP_NONE;
-            return false;
-        }
-        return true;
-    }
-
-    private void refreshAppLayoutSize() {
-        final IWindowManager wm = (IWindowManager) WindowManagerGlobal.getWindowManagerService();
-
-        try {
-            Rect windowFloatViewBounds = wm.getFloatViewRect();
-            mAppFloatViewWidth = (windowFloatViewBounds.right - windowFloatViewBounds.left);
-            mAppFloatViewHeight = (windowFloatViewBounds.bottom - windowFloatViewBounds.top);
-
-            Rect windowCurrentScreenBounds = wm.getAppFullscreenViewRect();
-            mCurrentScreenWidth = (windowCurrentScreenBounds.right - windowCurrentScreenBounds.left);
-            mCurrentScreenHeight = (windowCurrentScreenBounds.bottom - windowCurrentScreenBounds.top);
-
-            Rect windowMinimumBounds = wm.getAppMinimumViewRect();
-            mAppMinimumWidth = (windowMinimumBounds.right - windowMinimumBounds.left);
-            mAppMinimumHeight = (windowMinimumBounds.bottom - windowMinimumBounds.top);
-
-        } catch (RemoteException e) {
-            Log.e(TAG, "Could not perform get size view layout", e);
-        }
-    }
-
-    private void refreshAppFloatViewSize() {
-        final IWindowManager wm = (IWindowManager) WindowManagerGlobal.getWindowManagerService();
-
-        try {
-            Rect windowBounds = wm.getFloatViewRect();
-            mAppFloatViewWidth = (windowBounds.right - windowBounds.left);
-            mAppFloatViewHeight = (windowBounds.bottom - windowBounds.top);
-        } catch (RemoteException e) {
-            Log.e(TAG, "Could not perform float view layout", e);
-        }
-    }
-
-    private void refreshCurrentScreenSize() {
-        final IWindowManager wm = (IWindowManager) WindowManagerGlobal.getWindowManagerService();
-
-        try {
-            Rect windowBounds = wm.getAppFullscreenViewRect();
-            mCurrentScreenWidth = (windowBounds.right - windowBounds.left);
-            mCurrentScreenHeight = (windowBounds.bottom - windowBounds.top);
-        } catch (RemoteException e) {
-            Log.e(TAG, "Could not perform get app fullscreen view layout", e);
-        }
-    }
-
-    /**
-     * @hide
-     */
-    public void forceSnap(int side) {
-        if (side == SNAP_NONE) {
-            restoreOldPosition();
-            return;
-        }
-        if (mSnapped) {
-            restoreOldPositionWithoutRefresh();
-        }
-        mSnap = side;
-        calculateSnap();
-        finishSnap(true);
-    }
-
-    private void calculateSnap() {
-        switch (mSnap) {
-              case SNAP_LEFT:
-                   mSnapParam[0] = (mCurrentScreenWidth / 2);
-                   mSnapParam[1] = ViewGroup.LayoutParams.MATCH_PARENT;
-                   mSnapParam[2] = Gravity.TOP | Gravity.LEFT;
-                   break;
-              case SNAP_RIGHT:
-                   mSnapParam[0] = (mCurrentScreenWidth / 2);
-                   mSnapParam[1] = ViewGroup.LayoutParams.MATCH_PARENT;
-                   mSnapParam[2] = Gravity.RIGHT;
-                   break;
-              case SNAP_TOP:
-                   mSnapParam[0] = ViewGroup.LayoutParams.MATCH_PARENT;
-                   mSnapParam[1] = (mCurrentScreenHeight / 2);
-                   mSnapParam[2] = Gravity.TOP;
-                   break;
-              case SNAP_BOTTOM:
-                   mSnapParam[0] = ViewGroup.LayoutParams.MATCH_PARENT;
-                   mSnapParam[1] = (mCurrentScreenHeight / 2);
-                   mSnapParam[2] = Gravity.BOTTOM;
-                   break;
-              case SNAP_NONE:
-                   mSnapParam[0] = UNKNOWN;
-                   mSnapParam[1] = UNKNOWN;
-                   mSnapParam[2] = UNKNOWN;
-                   break;
-        }
-    }
-
-    /**
-     * @hide
-     */
-    public boolean getTimeoutDone() {
-        return mTimeoutDone;
-    }
-
-    /**
-     * @hide
-     */
-    public void discardTimeout() {
-        mTimeoutDone = false;
-        mTimeoutRunning = false;
-        mHandler.removeCallbacks(mRunnable);
-    }
-
-    private void setupTimeout() {
-        if (mTimeoutRunning) return;
-        if (mRunnable == null) {
-            mRunnable = new Runnable() {
-                  @Override
-                  public void run() {
-                      mHandler.postDelayed(new Runnable() {
-                               @Override
-                               public void run() {
-                                   mTimeoutRunning = false;
-                                   mTimeoutDone = true;
-                               }
-                      }, 250);
-                  }
-            };
-        }
-        mTimeoutRunning = true;
-        mHandler.postDelayed(mRunnable, 750);
-    }
-
-    private int getAppDimensionPixel(boolean smaller) {
-        float scale = getResources().getDisplayMetrics().density;
-        int sized = smaller ? 32 : 48;
-        int pixel = (int) (sized * scale + 0.5f);
-        return pixel;
-    }
-
-    private void refreshAppMinimumSize() {
-        final IWindowManager wm = (IWindowManager) WindowManagerGlobal.getWindowManagerService();
-
-        try {
-            Rect windowBounds = wm.getAppMinimumViewRect();
-            mAppMinimumWidth = (windowBounds.right - windowBounds.left);
-            mAppMinimumHeight = (windowBounds.bottom - windowBounds.top);
-        } catch (RemoteException e) {
-            Log.e(TAG, "Could not perform get app minimum view layout", e);
-        }
-    }
-
-    /**
-     * @hide
-     */
-    public void sendAppLaunchBroadcast() {
-        Intent appIntent = new Intent(Intent.ACTION_ACTIVITY_LAUNCH_DETECTOR);
-        appIntent.putExtra("packagename", getPackageName());
-        appIntent.putExtra("packagetoken", mToken);
-        appIntent.addFlags(
-                Intent.FLAG_RECEIVER_REGISTERED_ONLY | Intent.FLAG_RECEIVER_FOREGROUND);
-        sendBroadcastAsUser(appIntent, UserHandle.CURRENT_OR_SELF);
-        moveTaskToBack(true);
-    }
-
-    private void sendAppEndBroadcast() {
-        Intent endIntent = new Intent(Intent.ACTION_ACTIVITY_END_DETECTOR);
-        endIntent.putExtra("packagename", getPackageName());
-        endIntent.addFlags(
-                Intent.FLAG_RECEIVER_REGISTERED_ONLY | Intent.FLAG_RECEIVER_FOREGROUND);
-        sendBroadcastAsUser(endIntent, UserHandle.CURRENT_OR_SELF);
-    }
-
-    private void setProgressLayoutApp() {
-        if (mLayoutRunnable == null) {
-            mLayoutRunnable = new Runnable() {
-                  @Override
-                  public void run() {
-                      setCurrentLayoutApp();
-                  }
-            };
-        }
-        mHandler.postDelayed(mLayoutRunnable, 500);
-    }
-
-    private void discardLayoutProgress() {
-        mHandler.removeCallbacks(mLayoutRunnable);
-    }
-
-    private void setCurrentLayoutApp() {
-        if (isUnSnap()) {
-            final WindowManager.LayoutParams params = mWindow.getAttributes();
-            final int width = params.width;
-            final int height = params.height;
-            if (width >= mCurrentScreenWidth) {
-                params.width = ViewGroup.LayoutParams.MATCH_PARENT;
-            } else if (width <= mAppMinimumWidth) {
-                params.width = mAppMinimumWidth;
-            }
-            if (height >= mCurrentScreenHeight) {
-                params.height = ViewGroup.LayoutParams.MATCH_PARENT;
-            } else if (height <= mAppMinimumHeight) {
-                params.height = mAppMinimumHeight;
-            }
-            mWindow.setAttributes(params);
-        }
-        mHandler.removeCallbacks(mLayoutRunnable);
-    }
-
-    /**
-     * @hide
-     */
-    public void setFullscreenApp() {
-        if (mIsFullscreenApp) {
-            return;
-        }
-        WindowManager.LayoutParams params = mWindow.getAttributes();
-        int[] layout = { params.x, params.y, params.width, params.height };
-        mLastLayout = layout;
-        params.width = ViewGroup.LayoutParams.MATCH_PARENT;
-        params.height = ViewGroup.LayoutParams.MATCH_PARENT;
-        mWindow.getDecorView().setSystemUiVisibility(
-            View.SYSTEM_UI_FLAG_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_IMMERSIVE);
-        mWindow.setAttributes(params);
-        mIsFullscreenApp = true;
-    }
-
-    /**
-     * @hide
-     */
-    public void restorePreviousLayoutApp() {
-        if (!mIsFullscreenApp) {
-            return;
-        }
-        WindowManager.LayoutParams params = mWindow.getAttributes();
-        params.x = mLastLayout[0];
-        params.y = mLastLayout[1];
-        params.width = mLastLayout[2];
-        params.height = mLastLayout[3];
-        mWindow.getDecorView().setSystemUiVisibility(
-            View.SYSTEM_UI_FLAG_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_IMMERSIVE);
-        mWindow.setAttributes(params);
-        mIsFullscreenApp = false;
-    }
-
-    private final ScaleGestureDetector.OnScaleGestureListener mScaleGestureListener
-            = new ScaleGestureDetector.SimpleOnScaleGestureListener() {
-
-        private float lastSpanX;
-        private float lastSpanY;
-        private WindowManager.LayoutParams params;
-
-        @Override
-        public boolean onScaleBegin(ScaleGestureDetector scaleGestureDetector) {
-            discardLayoutProgress();
-            lastSpanX = scaleGestureDetector.getCurrentSpanX();
-            lastSpanY = scaleGestureDetector.getCurrentSpanY();
-            params = mWindow.getAttributes();
-            return true;
-        }
-
-        @Override
-        public boolean onScale(ScaleGestureDetector scaleGestureDetector) {
-            float spanX = scaleGestureDetector.getCurrentSpanX();
-            float spanY = scaleGestureDetector.getCurrentSpanY();
-            float newWidth = spanX / lastSpanX * (float) params.width;
-            float newHeight = spanY / lastSpanY * (float) params.height;
-            params.width = (int) newWidth;
-            params.height = (int) newHeight;
-            mWindow.setAttributes(params);
-            lastSpanX = spanX;
-            lastSpanY = spanY;
-            return true;
-        }
-
-        @Override
-        public void onScaleEnd(ScaleGestureDetector detector) {
-            setProgressLayoutApp();
-        }
-    };
-
-    /**
      * Called to process trackball events.  You can override this to
      * intercept all trackball events before they are dispatched to the
      * window.  Be sure to call this implementation for trackball events
@@ -5689,11 +4882,6 @@ public class Activity extends ContextThemeWrapper
         }
     }
 
-    public void finishFloating() {
-        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
-        mMainThread.performFinishFloating();
-    }
-
     /**
      * Call this when your activity is done and should be closed.  The
      * ActivityResult is propagated back to whoever launched you via
@@ -7001,10 +6189,7 @@ public class Activity extends ContextThemeWrapper
 
         mFragments.attachHost(null /*parent*/);
 
-        if (makeNewWindow(context, intent, info)) {
-            parent = null;
-        }
-
+        mWindow = new PhoneWindow(this);
         mWindow.setCallback(this);
         mWindow.setOnWindowDismissedCallback(this);
         mWindow.getLayoutInflater().setPrivateFactory(this);
@@ -7049,65 +6234,6 @@ public class Activity extends ContextThemeWrapper
         mCurrentConfig = config;
     }
 
-    private boolean makeNewWindow(Context context, Intent intent, ActivityInfo info) {
-        boolean floating = (intent.getFlags() & Intent.FLAG_FLOATING_WINDOW) == Intent.FLAG_FLOATING_WINDOW;
-        boolean floatingswitch = Settings.System.getInt(getContentResolver(), Settings.System.FLOATING_WINDOW_MODE, 0) == 1;
-        if (intent != null && floating && floatingswitch) {
-
-            TypedArray styleArray = context.obtainStyledAttributes(info.theme, com.android.internal.R.styleable.Window);
-            TypedValue backgroundValue = styleArray.peekValue(com.android.internal.R.styleable.Window_windowBackground);
-
-            // Apps that have no title don't need no title bar
-            TypedValue outValue = new TypedValue();
-            boolean result = styleArray.getValue(com.android.internal.R.styleable.Window_windowNoTitle, outValue);
-
-            if (backgroundValue != null && backgroundValue.toString().contains("light")) {
-                context.getTheme().applyStyle(com.android.internal.R.style.Theme_DeviceDefault_FloatingWindowLight, true);
-            } else {
-                context.getTheme().applyStyle(com.android.internal.R.style.Theme_DeviceDefault_FloatingWindow, true);
-            }
-
-            // Create our new window
-            mWindow = PolicyManager.makeNewWindow(this);
-            mWindow.mIsFloatingWindow = true;
-            if (!isAlreadyAttachToWindow) {
-                isAlreadyAttachToWindow = true;
-                mWindow.setCloseOnTouchOutsideIfNotSet(true);
-                mWindow.setGravity(Gravity.CENTER);
-                // Scale it
-                scaleFloatingWindow();
-            }
-
-            WindowManager.LayoutParams params = mWindow.getAttributes();
-            params.privateFlags |= WindowManager.LayoutParams.PRIVATE_FLAG_NO_MOVE_ANIMATION;
-            if (android.os.Process.myUid() == android.os.Process.SYSTEM_UID) {
-                mWindow.setFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND,
-                        WindowManager.LayoutParams.FLAG_DIM_BEHIND);
-                params.alpha = 1f;
-                params.dimAmount = 0.25f;
-            }
-            mWindow.setAttributes(params);
-
-            refreshAppLayoutSize();
-            return true;
-        } else {
-            mWindow = PolicyManager.makeNewWindow(this);
-            return false;
-        }
-    }
-
-    private void scaleFloatingWindow() {
-        final IWindowManager wm = (IWindowManager) WindowManagerGlobal.getWindowManagerService();
-
-        try {
-            Rect windowBounds = wm.getFloatViewRect();
-            mWindow.setLayout(windowBounds.right - windowBounds.left,
-                    windowBounds.bottom - windowBounds.top);
-        } catch (RemoteException e) {
-            Log.e(TAG, "Could not perform float view layout", e);
-        }
-    }
-
     /** @hide */
     public final IBinder getActivityToken() {
         return mParent != null ? mParent.getActivityToken() : mToken;
diff --git a/core/java/android/app/ActivityManager.java b/core/java/android/app/ActivityManager.java
index 6127881..0ae9187 100644
--- a/core/java/android/app/ActivityManager.java
+++ b/core/java/android/app/ActivityManager.java
@@ -592,9 +592,9 @@ public class ActivityManager {
          * @param colorPrimary A color to override the theme's primary color.  This color must be opaque.
          */
         public TaskDescription(String label, Bitmap icon, int colorPrimary) {
-            /*if ((colorPrimary != 0) && (Color.alpha(colorPrimary) != 255)) {
+            if ((colorPrimary != 0) && (Color.alpha(colorPrimary) != 255)) {
                 throw new RuntimeException("A TaskDescription's primary color should be opaque");
-            }*/
+            }
 
             mLabel = label;
             mIcon = icon;
@@ -1326,6 +1326,23 @@ public class ActivityManager {
     }
 
     /**
+     * Check whether the current foreground tasks belongs to a given package.
+     *
+     * @param packageName Name of the package to check for
+     *
+     * @return Whether the current foreground tasks belongs to the given package
+     * @hide
+     */
+    public boolean isPackageInForeground(String packageName) {
+        try {
+            return ActivityManagerNative.getDefault().isPackageInForeground(packageName);
+        } catch (RemoteException e) {
+            // System dead, we will be dead too soon!
+            return false;
+        }
+    }
+
+    /**
      * Completely remove the given task.
      *
      * @param taskId Identifier of the task to be removed.
diff --git a/core/java/android/app/ActivityManagerNative.java b/core/java/android/app/ActivityManagerNative.java
index c019265..544331f 100644
--- a/core/java/android/app/ActivityManagerNative.java
+++ b/core/java/android/app/ActivityManagerNative.java
@@ -647,6 +647,15 @@ public abstract class ActivityManagerNative extends Binder implements IActivityM
             return true;
         }
 
+        case IS_PACKAGE_IN_FOREGROUND_TRANSACTION: {
+            data.enforceInterface(IActivityManager.descriptor);
+            String packageName = data.readString();
+            boolean result = isPackageInForeground(packageName);
+            reply.writeNoException();
+            reply.writeInt(result ? 1 : 0);
+            return true;
+        }
+
         case GET_RECENT_TASKS_TRANSACTION: {
             data.enforceInterface(IActivityManager.descriptor);
             int maxNum = data.readInt();
@@ -827,16 +836,6 @@ public abstract class ActivityManagerNative extends Binder implements IActivityM
             return true;
         }
 
-        case GET_ACTIVITY_FOR_TASK_TRANSACTION: {
-            data.enforceInterface(IActivityManager.descriptor);
-            int task = data.readInt();
-            boolean onlyRoot = data.readInt() != 0;
-            IBinder res = getActivityForTask(task, onlyRoot);
-            reply.writeNoException();
-            reply.writeStrongBinder(res);
-            return true;
-        }
-
         case GET_CONTENT_PROVIDER_TRANSACTION: {
             data.enforceInterface(IActivityManager.descriptor);
             IBinder b = data.readStrongBinder();
@@ -2098,13 +2097,14 @@ public abstract class ActivityManagerNative extends Binder implements IActivityM
             return true;
         }
 
-        case SHOW_BOOT_MESSAGE_TRANSACTION: {
+        case UPDATE_BOOT_PROGRESS_TRANSACTION: {
             data.enforceInterface(IActivityManager.descriptor);
+            int stage = data.readInt();
             ApplicationInfo info = ApplicationInfo.CREATOR.createFromParcel(data);
             int current = data.readInt();
             int total = data.readInt();
             boolean always = data.readInt() != 0;
-            showBootMessage(info, current, total, always);
+            updateBootProgress(stage, info, current, total, always);
             reply.writeNoException();
             return true;
         }
@@ -3313,6 +3313,18 @@ class ActivityManagerProxy implements IActivityManager
         reply.recycle();
         return list;
     }
+    public boolean isPackageInForeground(String packageName) throws RemoteException {
+        Parcel data = Parcel.obtain();
+        Parcel reply = Parcel.obtain();
+        data.writeInterfaceToken(IActivityManager.descriptor);
+        data.writeString(packageName);
+        mRemote.transact(IS_PACKAGE_IN_FOREGROUND_TRANSACTION, data, reply, 0);
+        reply.readException();
+        boolean result = reply.readInt() != 0;
+        data.recycle();
+        reply.recycle();
+        return result;
+    }
     public List<ActivityManager.RecentTaskInfo> getRecentTasks(int maxNum,
             int flags, int userId) throws RemoteException {
         Parcel data = Parcel.obtain();
@@ -3558,21 +3570,6 @@ class ActivityManagerProxy implements IActivityManager
         data.recycle();
         reply.recycle();
     }
-
-    public IBinder getActivityForTask(int task, boolean onlyRoot) throws RemoteException
-    {
-        Parcel data = Parcel.obtain();
-        Parcel reply = Parcel.obtain();
-        data.writeInterfaceToken(IActivityManager.descriptor);
-        data.writeInt(task);
-        data.writeInt(onlyRoot ? 1 : 0);
-        mRemote.transact(GET_ACTIVITY_FOR_TASK_TRANSACTION, data, reply, 0);
-        reply.readException();
-        IBinder res = reply.readStrongBinder();
-        data.recycle();
-        reply.recycle();
-        return res;
-    }
     public int getTaskForActivity(IBinder token, boolean onlyRoot) throws RemoteException
     {
         Parcel data = Parcel.obtain();
@@ -5291,16 +5288,17 @@ class ActivityManagerProxy implements IActivityManager
         return res;
     }
 
-    public void showBootMessage(ApplicationInfo info, int current, int total,
-            boolean always) throws RemoteException {
+    public void updateBootProgress(int stage, ApplicationInfo optimizedApp,
+            int currentAppPos, int totalAppCount, boolean always) throws RemoteException {
         Parcel data = Parcel.obtain();
         Parcel reply = Parcel.obtain();
         data.writeInterfaceToken(IActivityManager.descriptor);
-        info.writeToParcel(data, 0);
-        data.writeInt(current);
-        data.writeInt(total);
+        data.writeInt(stage);
+        optimizedApp.writeToParcel(data, 0);
+        data.writeInt(currentAppPos);
+        data.writeInt(totalAppCount);
         data.writeInt(always ? 1 : 0);
-        mRemote.transact(SHOW_BOOT_MESSAGE_TRANSACTION, data, reply, 0);
+        mRemote.transact(UPDATE_BOOT_PROGRESS_TRANSACTION, data, reply, 0);
         reply.readException();
         data.recycle();
         reply.recycle();
diff --git a/core/java/android/app/ActivityThread.java b/core/java/android/app/ActivityThread.java
index 3076299..782dc46 100644
--- a/core/java/android/app/ActivityThread.java
+++ b/core/java/android/app/ActivityThread.java
@@ -2278,18 +2278,6 @@ public final class ActivityThread {
         return mActivities.get(token).activity;
     }
 
-    protected void performFinishFloating() {
-        synchronized (mPackages) {
-            Activity a = null;
-            for (ActivityClientRecord ar : mActivities.values()) {
-                a = ar.activity;
-                if (a != null && !a.mFinished && a.getWindow() != null && a.getWindow().mIsFloatingWindow) {
-                    a.finish();
-                }
-            }
-        }
-    }
-
     public final void sendActivityResult(
             IBinder token, String id, int requestCode,
             int resultCode, Intent data) {
@@ -3145,12 +3133,12 @@ public final class ActivityThread {
                 r.state = null;
                 r.persistentState = null;
             } catch (Exception e) {
-                /*if (!mInstrumentation.onException(r.activity, e)) {
+                if (!mInstrumentation.onException(r.activity, e)) {
                     throw new RuntimeException(
                         "Unable to resume activity "
                         + r.intent.getComponent().toShortString()
                         + ": " + e.toString(), e);
-                }*/
+                }
             }
         }
         return r;
@@ -4459,7 +4447,9 @@ public final class ActivityThread {
             int uid = Process.myUid();
             String[] packages = getPackageManager().getPackagesForUid(uid);
 
-            if (packages != null) {
+            // If there are several packages in this application we won't
+            // initialize the graphics disk caches
+            if (packages != null && packages.length == 1) {
                 HardwareRenderer.setupDiskCache(cacheDir);
                 RenderScriptCacheDir.setupDiskCache(cacheDir);
             }
diff --git a/core/java/android/app/ApplicationPackageManager.java b/core/java/android/app/ApplicationPackageManager.java
index 35237a7..c829daa 100644
--- a/core/java/android/app/ApplicationPackageManager.java
+++ b/core/java/android/app/ApplicationPackageManager.java
@@ -1643,28 +1643,19 @@ final class ApplicationPackageManager extends PackageManager {
 
     @Override
     public @NonNull List<VolumeInfo> getPackageCandidateVolumes(ApplicationInfo app) {
-        return getPackageCandidateVolumesInternal(app, false);
-    }
-
-    @Override
-    public @NonNull List<VolumeInfo> getPackageCandidateVolumesForceable(ApplicationInfo app) {
-        return getPackageCandidateVolumesInternal(app, true);
-    }
-
-    private @NonNull List<VolumeInfo> getPackageCandidateVolumesInternal(ApplicationInfo app, boolean forceable) {
         final StorageManager storage = mContext.getSystemService(StorageManager.class);
         final VolumeInfo currentVol = getPackageCurrentVolume(app);
         final List<VolumeInfo> vols = storage.getVolumes();
         final List<VolumeInfo> candidates = new ArrayList<>();
         for (VolumeInfo vol : vols) {
-            if (Objects.equals(vol, currentVol) || isPackageCandidateVolume(app, vol, forceable)) {
+            if (Objects.equals(vol, currentVol) || isPackageCandidateVolume(app, vol)) {
                 candidates.add(vol);
             }
         }
         return candidates;
     }
 
-    private static boolean isPackageCandidateVolume(ApplicationInfo app, VolumeInfo vol, boolean forceable) {
+    private static boolean isPackageCandidateVolume(ApplicationInfo app, VolumeInfo vol) {
         // Private internal is always an option
         if (VolumeInfo.ID_PRIVATE_INTERNAL.equals(vol.getId())) {
             return true;
@@ -1674,7 +1665,7 @@ final class ApplicationPackageManager extends PackageManager {
         // anywhere else
         if (app.isSystemApp()
                 || app.installLocation == PackageInfo.INSTALL_LOCATION_INTERNAL_ONLY
-                || (!forceable && app.installLocation == PackageInfo.INSTALL_LOCATION_UNSPECIFIED)) {
+                || app.installLocation == PackageInfo.INSTALL_LOCATION_UNSPECIFIED) {
             return false;
         }
 
diff --git a/core/java/android/app/IActivityManager.java b/core/java/android/app/IActivityManager.java
index 17f0a44..75951cf 100644
--- a/core/java/android/app/IActivityManager.java
+++ b/core/java/android/app/IActivityManager.java
@@ -129,6 +129,7 @@ public interface IActivityManager extends IInterface {
             ActivityManager.TaskDescription description, Bitmap thumbnail) throws RemoteException;
     public Point getAppTaskThumbnailSize() throws RemoteException;
     public List<RunningTaskInfo> getTasks(int maxNum, int flags) throws RemoteException;
+    public boolean isPackageInForeground(String packageName) throws RemoteException;
     public List<ActivityManager.RecentTaskInfo> getRecentTasks(int maxNum,
             int flags, int userId) throws RemoteException;
     public ActivityManager.TaskThumbnail getTaskThumbnail(int taskId) throws RemoteException;
@@ -147,7 +148,6 @@ public interface IActivityManager extends IInterface {
     public int getFocusedStackId() throws RemoteException;
     public void registerTaskStackListener(ITaskStackListener listener) throws RemoteException;
     public int getTaskForActivity(IBinder token, boolean onlyRoot) throws RemoteException;
-    public IBinder getActivityForTask(int task, boolean onlyRoot) throws RemoteException;
     public ContentProviderHolder getContentProvider(IApplicationThread caller,
             String name, int userId, boolean stable) throws RemoteException;
     public ContentProviderHolder getContentProviderExternal(String name, int userId, IBinder token)
@@ -408,8 +408,8 @@ public interface IActivityManager extends IInterface {
 
     public long[] getProcessPss(int[] pids) throws RemoteException;
 
-    public void showBootMessage(ApplicationInfo info, int current, int total,
-            boolean always) throws RemoteException;
+    public void updateBootProgress(int stage, ApplicationInfo optimizedApp,
+            int currentAppPos, int totalAppCount, boolean always) throws RemoteException;
 
     public void keyguardWaitingForActivityDrawn() throws RemoteException;
 
@@ -623,6 +623,11 @@ public interface IActivityManager extends IInterface {
         }
     }
 
+    public static final int BOOT_STAGE_STARTING_APPS = 1;
+    public static final int BOOT_STAGE_FSTRIM = 2;
+    public static final int BOOT_STAGE_PREPARING_APPS = 3;
+    public static final int BOOT_STAGE_COMPLETE = 4;
+
     String descriptor = "android.app.IActivityManager";
 
     // Please keep these transaction codes the same -- they are also
@@ -758,7 +763,7 @@ public interface IActivityManager extends IInterface {
     int IS_INTENT_SENDER_TARGETED_TO_PACKAGE_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+134;
     int UPDATE_PERSISTENT_CONFIGURATION_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+135;
     int GET_PROCESS_PSS_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+136;
-    int SHOW_BOOT_MESSAGE_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+137;
+    int UPDATE_BOOT_PROGRESS_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+137;
     int KILL_ALL_BACKGROUND_PROCESSES_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+139;
     int GET_CONTENT_PROVIDER_EXTERNAL_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+140;
     int REMOVE_CONTENT_PROVIDER_EXTERNAL_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+141;
@@ -807,8 +812,8 @@ public interface IActivityManager extends IInterface {
     int GET_ACTIVITY_DISPLAY_ID_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+184;
     int DELETE_ACTIVITY_CONTAINER_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+185;
     int SET_PROCESS_MEMORY_TRIM_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+186;
-    /* FLOAT VIEW */
-    int GET_ACTIVITY_FOR_TASK_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+200;
+
+
     // Start of L transactions
     int GET_TAG_FOR_INTENT_SENDER_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+210;
     int START_USER_IN_BACKGROUND_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+211;
@@ -872,4 +877,5 @@ public interface IActivityManager extends IInterface {
             = IBinder.FIRST_CALL_TRANSACTION+299;
     int SHOW_ASSIST_FROM_ACTIVITY_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+300;
     int IS_ROOT_VOICE_INTERACTION_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+301;
+    int IS_PACKAGE_IN_FOREGROUND_TRANSACTION = IBinder.FIRST_CALL_TRANSACTION+302;
 }
diff --git a/core/java/android/app/INotificationManager.aidl b/core/java/android/app/INotificationManager.aidl
index 804f16a..e749d0a 100644
--- a/core/java/android/app/INotificationManager.aidl
+++ b/core/java/android/app/INotificationManager.aidl
@@ -100,8 +100,4 @@ interface INotificationManager
     void applyRestore(in byte[] payload, int user);
 
     ParceledListSlice getAppActiveNotifications(String callingPkg, int userId);
-
-    // Halo
-    void setHaloPolicyBlack(String pkg, int uid, boolean halo);
-    boolean isPackageAllowedForHalo(String pkg, int uid);
 }
diff --git a/core/java/android/app/Instrumentation.java b/core/java/android/app/Instrumentation.java
index 84403dd..cddcd9f 100644
--- a/core/java/android/app/Instrumentation.java
+++ b/core/java/android/app/Instrumentation.java
@@ -1561,18 +1561,10 @@ public class Instrumentation {
             }
         }
         try {
-            // we must resolve if the last intent in the stack is floating to give the flag to the previous
-            boolean floating = false;
-            if (intents.length > 0) {
-                floating = (intents[intents.length - 1].getFlags()&Intent.FLAG_FLOATING_WINDOW) == Intent.FLAG_FLOATING_WINDOW;
-            }
             String[] resolvedTypes = new String[intents.length];
             for (int i=0; i<intents.length; i++) {
                 intents[i].migrateExtraStreamToClipData();
                 intents[i].prepareToLeaveProcess();
-                if (floating) {
-                    intents[i].addFlags(Intent.FLAG_FLOATING_WINDOW);
-                }
                 resolvedTypes[i] = intents[i].resolveTypeIfNeeded(who.getContentResolver());
             }
             int result = ActivityManagerNative.getDefault()
diff --git a/core/java/android/app/Notification.java b/core/java/android/app/Notification.java
index febe423..8835a09 100644
--- a/core/java/android/app/Notification.java
+++ b/core/java/android/app/Notification.java
@@ -5740,4 +5740,3 @@ public class Notification implements Parcelable
         }
     }
 }
-
diff --git a/core/java/android/app/StatusBarManager.java b/core/java/android/app/StatusBarManager.java
index 6f26c8c..fad3f62 100644
--- a/core/java/android/app/StatusBarManager.java
+++ b/core/java/android/app/StatusBarManager.java
@@ -82,7 +82,6 @@ public class StatusBarManager {
 
     public static final int NAVIGATION_HINT_BACK_ALT      = 1 << 0;
     public static final int NAVIGATION_HINT_IME_SHOWN     = 1 << 1;
-    public static final int NAVIGATION_HINT_RECENT_ALT    = 1 << 2;
 
     public static final int WINDOW_STATUS_BAR = 1;
     public static final int WINDOW_NAVIGATION_BAR = 2;
diff --git a/core/java/android/app/TaskStackBuilder.java b/core/java/android/app/TaskStackBuilder.java
index d30872e..0077db1 100644
--- a/core/java/android/app/TaskStackBuilder.java
+++ b/core/java/android/app/TaskStackBuilder.java
@@ -63,7 +63,6 @@ public class TaskStackBuilder {
 
     private final ArrayList<Intent> mIntents = new ArrayList<Intent>();
     private final Context mSourceContext;
-    private boolean mFirstTaskOnHome = true;
 
     private TaskStackBuilder(Context a) {
         mSourceContext = a;
@@ -80,10 +79,6 @@ public class TaskStackBuilder {
         return new TaskStackBuilder(context);
     }
 
-    public void setTaskOnHome(boolean firstTaskOnHome) {
-        mFirstTaskOnHome = firstTaskOnHome;
-    }
-
     /**
      * Add a new Intent to the task stack. The most recently added Intent will invoke
      * the Activity at the top of the final task stack.
@@ -306,16 +301,9 @@ public class TaskStackBuilder {
         Intent[] intents = new Intent[mIntents.size()];
         if (intents.length == 0) return intents;
 
-        Intent newIntent = new Intent(mIntents.get(0));
-        newIntent.addFlags(
-                Intent.FLAG_ACTIVITY_NEW_TASK |
-                Intent.FLAG_ACTIVITY_CLEAR_TASK);
-
-        if (mFirstTaskOnHome) {
-            newIntent.addFlags(Intent.FLAG_ACTIVITY_TASK_ON_HOME);
-        }
-
-        intents[0] = newIntent;
+        intents[0] = new Intent(mIntents.get(0)).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK |
+                Intent.FLAG_ACTIVITY_CLEAR_TASK |
+                Intent.FLAG_ACTIVITY_TASK_ON_HOME);
         for (int i = 1; i < intents.length; i++) {
             intents[i] = new Intent(mIntents.get(i));
         }
diff --git a/core/java/android/content/Intent.java b/core/java/android/content/Intent.java
index 3654d72..c06f98a 100644
--- a/core/java/android/content/Intent.java
+++ b/core/java/android/content/Intent.java
@@ -698,20 +698,6 @@ public class Intent implements Parcelable, Cloneable {
     public static final String ACTION_PICK = "android.intent.action.PICK";
 
     /**
-     * Registered and foreground services only
-     * @hide
-     */
-    public static final String ACTION_ACTIVITY_LAUNCH_DETECTOR =
-            "android.intent.action.ACTIVITY_LAUNCH_DETECTOR";
-
-    /**
-     * Registered and foreground services only
-     * @hide
-     */
-    public static final String ACTION_ACTIVITY_END_DETECTOR =
-            "android.intent.action.ACTIVITY_END_DETECTOR";
-
-    /**
      * Activity Action: Creates a shortcut.
      * <p>Input: Nothing.</p>
      * <p>Output: An Intent representing the shortcut. The intent must contain three
@@ -2498,21 +2484,6 @@ public class Intent implements Parcelable, Cloneable {
     public static final String ACTION_AIRPLANE_MODE_CHANGED = "android.intent.action.AIRPLANE_MODE";
 
     /**
-     * <p>Broadcast Action: The user has changed carrier label:</p>
-     * <ul>
-     *   <li><em>state</em> - String value.</li>
-     * </ul>
-     *
-     * <p class="note">This is a protected intent that can only be sent
-     * by the system.
-     *
-     * @hide
-     */
-    //@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
-    public static final String ACTION_CUSTOM_CARRIER_LABEL_CHANGED
-            = "android.intent.action.CUSTOM_CARRIER_LABEL";
-
-    /**
      * Broadcast Action: Some content providers have parts of their namespace
      * where they publish new events or items that the user may be especially
      * interested in. For these things, they may broadcast this action when the
@@ -4391,19 +4362,7 @@ public class Intent implements Parcelable, Cloneable {
      * Activity.finishAndRemoveTask()}.
      */
     public static final int FLAG_ACTIVITY_RETAIN_IN_RECENTS = 0x00002000;
-    /**
-     * If set, this intent will always match start up as a floating window
-     * in multi window scenarios.
-     * @hide
-     */
-    public static final int FLAG_FLOATING_WINDOW = 0x00003000;
-    /**
-     * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
-     * this flag will cause a newly launching task to be resized according to the split
-     * view metrics, making it running alongside another app.
-     * @hide
-     */
-    public static final int FLAG_ACTIVITY_SPLIT_VIEW = 0x00001000;
+
     /**
      * If set, when sending a broadcast only registered receivers will be
      * called -- no BroadcastReceiver components will be launched.
@@ -8069,14 +8028,8 @@ public class Intent implements Parcelable, Cloneable {
         if (N > 0) {
             mCategories = new ArraySet<String>();
             int i;
-            String readStr;
             for (i=0; i<N; i++) {
-                readStr = in.readString();
-                if (readStr != null) {
-                    mCategories.add(readStr.intern());
-                } else {
-                    Log.e("Intent", "readFromParcel: unknown parcel string");
-                }
+                mCategories.add(in.readString().intern());
             }
         } else {
             mCategories = null;
diff --git a/core/java/android/content/pm/ActivityInfo.java b/core/java/android/content/pm/ActivityInfo.java
index ea5a0ee..0105e09 100644
--- a/core/java/android/content/pm/ActivityInfo.java
+++ b/core/java/android/content/pm/ActivityInfo.java
@@ -625,10 +625,10 @@ public class ActivityInfo extends ComponentInfo
      * framework call here to get the real value.
      */
     public int getRealConfigChanged() {
-        // If an app doesn't handle screen size changes or layout changes, just ignore it, don't kill them!
-        return configChanges | ActivityInfo.CONFIG_SCREEN_LAYOUT | ActivityInfo.CONFIG_SCREEN_SIZE
-                    | (applicationInfo.targetSdkVersion < android.os.Build.VERSION_CODES.HONEYCOMB_MR2 ?
-                        ActivityInfo.CONFIG_SMALLEST_SCREEN_SIZE : 0);
+        return applicationInfo.targetSdkVersion < android.os.Build.VERSION_CODES.HONEYCOMB_MR2
+                ? (configChanges | ActivityInfo.CONFIG_SCREEN_SIZE
+                        | ActivityInfo.CONFIG_SMALLEST_SCREEN_SIZE)
+                : configChanges;
     }
 
     /**
diff --git a/core/java/android/content/pm/PackageManager.java b/core/java/android/content/pm/PackageManager.java
index afa38cd..8f0500e 100644
--- a/core/java/android/content/pm/PackageManager.java
+++ b/core/java/android/content/pm/PackageManager.java
@@ -4524,8 +4524,6 @@ public abstract class PackageManager {
     public abstract @Nullable VolumeInfo getPackageCurrentVolume(ApplicationInfo app);
     /** {@hide} */
     public abstract @NonNull List<VolumeInfo> getPackageCandidateVolumes(ApplicationInfo app);
-    /** {@hide} */
-    public abstract @NonNull List<VolumeInfo> getPackageCandidateVolumesForceable(ApplicationInfo app);
 
     /** {@hide} */
     public abstract int movePrimaryStorage(VolumeInfo vol);
diff --git a/core/java/android/gesture/GestureOverlayView.java b/core/java/android/gesture/GestureOverlayView.java
index a9103ee..e0d454c 100644
--- a/core/java/android/gesture/GestureOverlayView.java
+++ b/core/java/android/gesture/GestureOverlayView.java
@@ -88,7 +88,6 @@ public class GestureOverlayView extends FrameLayout {
     private final Rect mInvalidRect = new Rect();
     private final Path mPath = new Path();
     private boolean mGestureVisible = true;
-    protected boolean mClearPerformedGesture = true;
 
     private float mX;
     private float mY;
@@ -577,7 +576,7 @@ public class GestureOverlayView extends FrameLayout {
         // if there is fading out going on, stop it.
         if (mFadingHasStarted) {
             cancelClearAnimation();
-        } else if (mIsFadingOut || !mClearPerformedGesture) {
+        } else if (mIsFadingOut) {
             setPaintAlpha(255);
             mIsFadingOut = false;
             mFadingHasStarted = false;
@@ -699,13 +698,8 @@ public class GestureOverlayView extends FrameLayout {
                     listeners.get(i).onGestureEnded(this, event);
                 }
 
-                if (mClearPerformedGesture)
-                    clear(mHandleGestureActions && mFadeEnabled, mHandleGestureActions && mIsGesturing,
-                            false);
-                else if (mHandleGestureActions && mIsGesturing) {
-                    mIsFadingOut = false;
-                    postDelayed(mFadingOut, mFadeOffset);
-                }
+                clear(mHandleGestureActions && mFadeEnabled, mHandleGestureActions && mIsGesturing,
+                        false);
             } else {
                 cancelGesture(event);
 
@@ -778,12 +772,9 @@ public class GestureOverlayView extends FrameLayout {
                 fireOnGesturePerformed();
 
                 mFadingHasStarted = false;
-                if (mClearPerformedGesture) {
-                    mPath.rewind();
-                    mCurrentGesture = null;
-                    mPreviousWasGesturing = false;
-                } else
-                    mResetGesture = true;
+                mPath.rewind();
+                mCurrentGesture = null;
+                mPreviousWasGesturing = false;
                 setPaintAlpha(255);
             }
 
diff --git a/core/java/android/hardware/camera2/legacy/RequestThreadManager.java b/core/java/android/hardware/camera2/legacy/RequestThreadManager.java
index 6fae2b4..c26d07d 100644
--- a/core/java/android/hardware/camera2/legacy/RequestThreadManager.java
+++ b/core/java/android/hardware/camera2/legacy/RequestThreadManager.java
@@ -243,8 +243,6 @@ public class RequestThreadManager {
                     }
                 } catch (LegacyExceptionUtils.BufferQueueAbandonedException e) {
                     Log.w(TAG, "Surface abandoned, dropping frame. ", e);
-                } catch (IllegalArgumentException e) {
-                    Log.w(TAG, "no valid native surface, dropping frame. ", e);
                 }
             }
 
diff --git a/core/java/android/inputmethodservice/IInputMethodWrapper.java b/core/java/android/inputmethodservice/IInputMethodWrapper.java
index 574caa0..857e335 100644
--- a/core/java/android/inputmethodservice/IInputMethodWrapper.java
+++ b/core/java/android/inputmethodservice/IInputMethodWrapper.java
@@ -31,8 +31,6 @@ import android.os.IBinder;
 import android.os.Message;
 import android.os.RemoteException;
 import android.os.ResultReceiver;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.Log;
 import android.view.InputChannel;
 import android.view.inputmethod.EditorInfo;
@@ -133,9 +131,6 @@ class IInputMethodWrapper extends IInputMethod.Stub
             return;
         }
 
-        boolean formalText = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.FORMAL_TEXT_INPUT, 0, UserHandle.USER_CURRENT_OR_SELF) == 1;
-
         switch (msg.what) {
             case DO_DUMP: {
                 AbstractInputMethodService target = mTarget.get();
@@ -174,7 +169,6 @@ class IInputMethodWrapper extends IInputMethod.Stub
                         ? new InputConnectionWrapper(inputContext) : null;
                 EditorInfo info = (EditorInfo)args.arg2;
                 info.makeCompatible(mTargetSdkVersion);
-                info.formalTextInput(formalText);
                 inputMethod.startInput(ic, info);
                 args.recycle();
                 return;
@@ -186,7 +180,6 @@ class IInputMethodWrapper extends IInputMethod.Stub
                         ? new InputConnectionWrapper(inputContext) : null;
                 EditorInfo info = (EditorInfo)args.arg2;
                 info.makeCompatible(mTargetSdkVersion);
-                info.formalTextInput(formalText);
                 inputMethod.restartInput(ic, info);
                 args.recycle();
                 return;
diff --git a/core/java/android/inputmethodservice/InputMethodService.java b/core/java/android/inputmethodservice/InputMethodService.java
index c550cbd..5e9cd97 100644
--- a/core/java/android/inputmethodservice/InputMethodService.java
+++ b/core/java/android/inputmethodservice/InputMethodService.java
@@ -6,7 +6,7 @@
  * the License at
  * 
  * http://www.apache.org/licenses/LICENSE-2.0
- *
+ * 
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
@@ -26,17 +26,12 @@ import android.content.Context;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
-import android.database.ContentObserver;
 import android.graphics.Rect;
 import android.graphics.Region;
 import android.os.Bundle;
-import android.os.Handler;
 import android.os.IBinder;
-import android.os.RemoteException;
 import android.os.ResultReceiver;
-import android.os.ServiceManager;
 import android.os.SystemClock;
-import android.os.UserHandle;
 import android.provider.Settings;
 import android.text.InputType;
 import android.text.Layout;
@@ -56,10 +51,7 @@ import android.view.ViewTreeObserver;
 import android.view.Window;
 import android.view.WindowManager;
 import android.view.WindowManager.BadTokenException;
-import android.view.animation.Animation;
-import android.view.animation.Animation.AnimationListener;
 import android.view.animation.AnimationUtils;
-import android.view.animation.Interpolator;
 import android.view.inputmethod.CompletionInfo;
 import android.view.inputmethod.CursorAnchorInfo;
 import android.view.inputmethod.EditorInfo;
@@ -74,9 +66,6 @@ import android.widget.Button;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
 
-import com.android.internal.statusbar.IStatusBarService;
-
-import com.android.internal.util.rr.AwesomeAnimationHelper;
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
 
@@ -85,7 +74,7 @@ import java.io.PrintWriter;
  * which final implementations can derive from and customize.  See the
  * base class {@link AbstractInputMethodService} and the {@link InputMethod}
  * interface for more information on the basics of writing input methods.
- *
+ * 
  * <p>In addition to the normal Service lifecycle methods, this class
  * introduces some new specific callbacks that most subclasses will want
  * to make use of:</p>
@@ -101,7 +90,7 @@ import java.io.PrintWriter;
  * <li> {@link #onStartInputView(EditorInfo, boolean)} to deal with input
  * starting within the input area of the IME.
  * </ul>
- *
+ * 
  * <p>An input method has significant discretion in how it goes about its
  * work: the {@link android.inputmethodservice.InputMethodService} provides
  * a basic framework for standard UI elements (input view, candidates view,
@@ -116,7 +105,7 @@ import java.io.PrintWriter;
  * execute callbacks as it needs information about them, and provides APIs for
  * programmatic control over them.  They layout of these elements is explicitly
  * defined:</p>
- *
+ * 
  * <ul>
  * <li>The soft input view, if available, is placed at the bottom of the
  * screen.
@@ -127,11 +116,11 @@ import java.io.PrintWriter;
  * the application and its top part will contain the extract text of what is
  * currently being edited by the application.
  * </ul>
- *
- *
+ * 
+ * 
  * <a name="SoftInputView"></a>
  * <h3>Soft Input View</h3>
- *
+ * 
  * <p>Central to most input methods is the soft input view.  This is where most
  * user interaction occurs: pressing on soft keys, drawing characters, or
  * however else your input method wants to generate text.  Most implementations
@@ -140,7 +129,7 @@ import java.io.PrintWriter;
  * as long as the input view is visible, you will see user interaction in
  * that view and can call back on the InputMethodService to interact with the
  * application as appropriate.</p>
- *
+ * 
  * <p>There are some situations where you want to decide whether or not your
  * soft input view should be shown to the user.  This is done by implementing
  * the {@link #onEvaluateInputViewShown()} to return true or false based on
@@ -150,17 +139,17 @@ import java.io.PrintWriter;
  * implementation always shows the input view unless there is a hard
  * keyboard available, which is the appropriate behavior for most input
  * methods.</p>
- *
- *
+ * 
+ * 
  * <a name="CandidatesView"></a>
  * <h3>Candidates View</h3>
- *
+ * 
  * <p>Often while the user is generating raw text, an input method wants to
  * provide them with a list of possible interpretations of that text that can
  * be selected for use.  This is accomplished with the candidates view, and
  * like the soft input view you implement {@link #onCreateCandidatesView()}
  * to instantiate your own view implementing your candidates UI.</p>
- *
+ * 
  * <p>Management of the candidates view is a little different than the input
  * view, because the candidates view tends to be more transient, being shown
  * only when there are possible candidates for the current text being entered
@@ -170,11 +159,11 @@ import java.io.PrintWriter;
  * UI in the same way as the soft input view: it will never cause application
  * windows to resize, only cause them to be panned if needed for the user to
  * see the current focus.</p>
- *
- *
+ * 
+ * 
  * <a name="FullscreenMode"></a>
  * <h3>Fullscreen Mode</h3>
- *
+ * 
  * <p>Sometimes your input method UI is too large to integrate with the
  * application UI, so you just want to take over the screen.  This is
  * accomplished by switching to full-screen mode, causing the input method
@@ -183,7 +172,7 @@ import java.io.PrintWriter;
  * there is a standard implementation for the extract editor that you should
  * not need to change.  The editor is placed at the top of the IME, above the
  * input and candidates views.</p>
- *
+ * 
  * <p>Similar to the input view, you control whether the IME is running in
  * fullscreen mode by implementing {@link #onEvaluateFullscreenMode()}
  * to return true or false based on
@@ -199,18 +188,18 @@ import java.io.PrintWriter;
  * {@link #onDisplayCompletions(CompletionInfo[])} to show completions
  * generated by your application, typically in your candidates view like you
  * would normally show candidates.
- *
- *
+ * 
+ * 
  * <a name="GeneratingText"></a>
  * <h3>Generating Text</h3>
- *
+ * 
  * <p>The key part of an IME is of course generating text for the application.
  * This is done through calls to the
  * {@link android.view.inputmethod.InputConnection} interface to the
  * application, which can be retrieved from {@link #getCurrentInputConnection()}.
  * This interface allows you to generate raw key events or, if the target
  * supports it, directly edit in strings of candidates and committed text.</p>
- *
+ * 
  * <p>Information about what the target is expected and supports can be found
  * through the {@link android.view.inputmethod.EditorInfo} class, which is
  * retrieved with {@link #getCurrentInputEditorInfo()} method.  The most
@@ -221,13 +210,13 @@ import java.io.PrintWriter;
  * raw key events to it.  An input method will also want to look at other
  * values here, to for example detect password mode, auto complete text views,
  * phone number entry, etc.</p>
- *
+ * 
  * <p>When the user switches between input targets, you will receive calls to
  * {@link #onFinishInput()} and {@link #onStartInput(EditorInfo, boolean)}.
  * You can use these to reset and initialize your input state for the current
  * target.  For example, you will often want to clear any input state, and
  * update a soft keyboard to be appropriate for the new inputType.</p>
- *
+ * 
  * @attr ref android.R.styleable#InputMethodService_imeFullscreenBackground
  * @attr ref android.R.styleable#InputMethodService_imeExtractEnterAnimation
  * @attr ref android.R.styleable#InputMethodService_imeExtractExitAnimation
@@ -325,23 +314,6 @@ public class InputMethodService extends AbstractInputMethodService {
      */
     boolean mShouldClearInsetOfPreviousIme;
 
-
-    boolean mForcedAutoRotate;
-
-    private IStatusBarService mStatusBarService;
-    private Object mServiceAquireLock = new Object();
-    Handler mHandler;
-
-    private Window mWindowIme;
-    private int mAnimationDuration;
-    private int mAnimationEnterIndex;
-    private int mAnimationExitIndex;
-    private int mInterpolatorIndex;
-    private boolean mExitOnly;
-    private boolean mReverseExit;
-
-    private SettingsObserver mSettingsObserver;
-
     final Insets mTmpInsets = new Insets();
     final int[] mTmpLocation = new int[2];
 
@@ -385,46 +357,6 @@ public class InputMethodService extends AbstractInputMethodService {
             }
         }
     };
-
-    private class SettingsObserver extends ContentObserver {
-
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            getContentResolver().registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.ANIMATION_IME_DURATION),
-                                    false, this);
-            getContentResolver().registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.ANIMATION_IME_ENTER),
-                                    false, this);
-            getContentResolver().registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.ANIMATION_IME_EXIT),
-                                    false, this);
-            getContentResolver().registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.ANIMATION_IME_INTERPOLATOR),
-                                    false, this);
-
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            updateSettings();
-        }
-    }
-
-    private void updateSettings() {
-        mAnimationEnterIndex = Settings.System.getInt(getContentResolver(),
-                      Settings.System.ANIMATION_IME_ENTER, 0);
-        mAnimationExitIndex = Settings.System.getInt(getContentResolver(),
-                      Settings.System.ANIMATION_IME_EXIT, 0);
-        mInterpolatorIndex = Settings.System.getInt(getContentResolver(),
-                      Settings.System.ANIMATION_IME_INTERPOLATOR, 0);
-        int temp = Settings.System.getInt(getContentResolver(),
-                      Settings.System.ANIMATION_IME_DURATION, 0);
-        mAnimationDuration = temp * 15;
-    }
     
     /**
      * Concrete implementation of
@@ -465,7 +397,6 @@ public class InputMethodService extends AbstractInputMethodService {
             if (DEBUG) Log.v(TAG, "unbindInput(): binding=" + mInputBinding
                     + " ic=" + mInputConnection);
             onUnbindInput();
-            mInputStarted = false;
             mInputBinding = null;
             mInputConnection = null;
         }
@@ -743,8 +674,7 @@ public class InputMethodService extends AbstractInputMethodService {
         return false;
     }
 
-    @Override
-    public void onCreate() {
+    @Override public void onCreate() {
         mTheme = Resources.selectSystemTheme(mTheme,
                 getApplicationInfo().targetSdkVersion,
                 android.R.style.Theme_InputMethod,
@@ -764,13 +694,8 @@ public class InputMethodService extends AbstractInputMethodService {
         if (mHardwareAccelerated) {
             mWindow.getWindow().addFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);
         }
-        mHandler = new Handler();
-        mSettingsObserver = new SettingsObserver(mHandler);
-        mSettingsObserver.observe();
         initViews();
         mWindow.getWindow().setLayout(MATCH_PARENT, WRAP_CONTENT);
-        mWindowIme = mWindow.getWindow();
-        updateSettings();
     }
 
     /**
@@ -827,12 +752,9 @@ public class InputMethodService extends AbstractInputMethodService {
         mCandidatesVisibility = getCandidatesHiddenVisibility();
         mCandidatesFrame.setVisibility(mCandidatesVisibility);
         mInputFrame.setVisibility(View.GONE);
-
-        mHandler = new Handler();
     }
 
-    @Override
-    public void onDestroy() {
+    @Override public void onDestroy() {
         super.onDestroy();
         mRootView.getViewTreeObserver().removeOnComputeInternalInsetsListener(
                 mInsetsComputer);
@@ -862,8 +784,7 @@ public class InputMethodService extends AbstractInputMethodService {
      * {@link #onCreateInputView} and {@link #onStartInputView} and related
      * appropriate functions if the UI is displayed.
      */
-    @Override
-    public void onConfigurationChanged(Configuration newConfig) {
+    @Override public void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
         
         boolean visible = mWindowVisible;
@@ -996,15 +917,7 @@ public class InputMethodService extends AbstractInputMethodService {
      * is currently running in fullscreen mode.
      */
     public void updateFullscreenMode() {
-        boolean fullScreenOverride = Settings.System.getIntForUser(getContentResolver(),
-                Settings.System.DISABLE_FULLSCREEN_KEYBOARD, 0,
-                UserHandle.USER_CURRENT_OR_SELF) != 0;
-        boolean isFullscreen;
-        if (fullScreenOverride) {
-            isFullscreen = false;
-        } else {
-            isFullscreen = mShowInputRequested && onEvaluateFullscreenMode();
-        }
+        boolean isFullscreen = mShowInputRequested && onEvaluateFullscreenMode();
         boolean changed = mLastShowInputRequested != mShowInputRequested;
         if (mIsFullscreen != isFullscreen || !mFullscreenApplied) {
             changed = true;
@@ -1541,28 +1454,6 @@ public class InputMethodService extends AbstractInputMethodService {
             mWindowWasVisible = true;
             mInShowWindow = false;
         }
-
-        IStatusBarService statusbar = getStatusBarService();
-        int mKeyboardRotationTimeout = Settings.System.getIntForUser(getContentResolver(),
-                Settings.System.KEYBOARD_ROTATION_TIMEOUT, 0, UserHandle.USER_CURRENT_OR_SELF);
-        if (mKeyboardRotationTimeout > 0) {
-            mHandler.removeCallbacks(restoreAutoRotation);
-            if (!mForcedAutoRotate) {
-                boolean isAutoRotate = (Settings.System.getIntForUser(getContentResolver(),
-                    Settings.System.ACCELEROMETER_ROTATION, 0,
-                    UserHandle.USER_CURRENT_OR_SELF) == 1);
-                if (!isAutoRotate) {
-                    try {
-                        if (statusbar != null) {
-                            statusbar.setAutoRotate(true);
-                            mForcedAutoRotate = true;
-                        }
-                    } catch (RemoteException e) {
-                        mStatusBarService = null;
-                    }
-                }
-            }
-        }
     }
 
     void showWindowInner(boolean showInput) {
@@ -1652,48 +1543,15 @@ public class InputMethodService extends AbstractInputMethodService {
             onWindowHidden();
             mWindowWasVisible = false;
         }
-
-        int mKeyboardRotationTimeout = Settings.System.getIntForUser(getContentResolver(),
-                Settings.System.KEYBOARD_ROTATION_TIMEOUT, 0, UserHandle.USER_CURRENT_OR_SELF);
-        if (mKeyboardRotationTimeout > 0) {
-            mHandler.removeCallbacks(restoreAutoRotation);
-            if (mForcedAutoRotate) {
-                mHandler.postDelayed(restoreAutoRotation, mKeyboardRotationTimeout);
-            }
-        }
     }
 
-    final Runnable restoreAutoRotation = new Runnable() {
-        @Override public void run() {
-            try {
-                IStatusBarService statusbar = getStatusBarService();
-                if (statusbar != null) {
-                    statusbar.setAutoRotate(false);
-                }
-                mForcedAutoRotate = false;
-            } catch (RemoteException e) {
-                mStatusBarService = null;
-            }
-        }
-    };
-
     /**
      * Called when the input method window has been shown to the user, after
      * previously not being visible.  This is done after all of the UI setup
      * for the window has occurred (creating its views etc).
      */
     public void onWindowShown() {
-        if (mAnimationEnterIndex == 0) {
-            mWindow.getWindow().setWindowAnimations(android.R.style.Animation_InputMethod);
-            return;
-        }
-        Dialog dialog = this.getWindow();
-        mWindowIme = dialog.getWindow();
-        mWindowIme.setWindowAnimations(-1);
-        dialog.show();
-        Animation anim = retrieveAnimation(true);
-        if (anim == null) return;
-        mRootView.startAnimation(anim);
+        // Intentionally empty
     }
     
     /**
@@ -1701,56 +1559,7 @@ public class InputMethodService extends AbstractInputMethodService {
      * after previously being visible.
      */
     public void onWindowHidden() {
-        if (mAnimationExitIndex == 0) {
-            mWindow.getWindow().setWindowAnimations(android.R.style.Animation_InputMethod);
-            return;
-        }
-        final Dialog dialog = this.getWindow();
-        mWindowIme = dialog.getWindow();
-        mWindowIme.setWindowAnimations(-1);
-
-        final Handler handler = new Handler();
-        final Runnable runnable = new Runnable() {
-                @Override
-                public void run() {
-                     dialog.hide();
-                }
-        };
-
-        Animation anim = retrieveAnimation(false);
-        if (anim != null){
-            anim.setAnimationListener(new AnimationListener() {
-                @Override
-                public void onAnimationStart(Animation animation) {}
-                @Override
-                public void onAnimationRepeat(Animation animation) {}
-                @Override
-                public void onAnimationEnd(Animation animation) {
-                    handler.removeCallbacks(runnable);
-                    dialog.hide();
-                }
-            });
-            dialog.show();
-            mRootView.startAnimation(anim);
-            if (mAnimationDuration > 0) {
-                handler.postDelayed(runnable, (mAnimationDuration * 2));
-            } else {
-                handler.postDelayed(runnable, 1000);
-            }
-        }
-    }
-
-    private Animation retrieveAnimation(boolean enter){
-        int[] animArray = AwesomeAnimationHelper.getAnimations(enter ? mAnimationEnterIndex : mAnimationExitIndex, mExitOnly, mReverseExit);
-        int animInt = enter ? animArray[1] : animArray[0];
-        if (animInt == 0) return null;
-        Animation anim = AnimationUtils.loadAnimation(this, animInt);
-        Interpolator intplr= AwesomeAnimationHelper.getInterpolator(this, mInterpolatorIndex);
-        if (intplr != null) anim.setInterpolator(intplr);
-        if (mAnimationDuration > 0) {
-            anim.setDuration(mAnimationDuration);
-        }
-        return anim;
+        // Intentionally empty
     }
 
     /**
@@ -2458,16 +2267,6 @@ public class InputMethodService extends AbstractInputMethodService {
         return true;
     }
     
-    IStatusBarService getStatusBarService() {
-        synchronized (mServiceAquireLock) {
-            if (mStatusBarService == null) {
-                mStatusBarService = IStatusBarService.Stub.asInterface(
-                        ServiceManager.getService("statusbar"));
-            }
-            return mStatusBarService;
-        }
-    }
-
     /**
      * Return text that can be used as a button label for the given
      * {@link EditorInfo#imeOptions EditorInfo.imeOptions}.  Returns null
@@ -2662,8 +2461,7 @@ public class InputMethodService extends AbstractInputMethodService {
      * Performs a dump of the InputMethodService's internal state.  Override
      * to add your own information to the dump.
      */
-    @Override
-    protected void dump(FileDescriptor fd, PrintWriter fout, String[] args) {
+    @Override protected void dump(FileDescriptor fd, PrintWriter fout, String[] args) {
         final Printer p = new PrintWriterPrinter(fout);
         p.println("Input method service state for " + this + ":");
         p.println("  mWindowCreated=" + mWindowCreated
diff --git a/core/java/android/os/IPowerManager.aidl b/core/java/android/os/IPowerManager.aidl
index 617677c..4e0f329 100644
--- a/core/java/android/os/IPowerManager.aidl
+++ b/core/java/android/os/IPowerManager.aidl
@@ -60,12 +60,8 @@ interface IPowerManager
 
     // sets the attention light (used by phone app only)
     void setAttentionLight(boolean on, int color);
-
-   // blocked wakelock support
-    String getSeenWakeLocks();
-
     // update the uids being synchronized by network socket request manager
-    //void updateBlockedUids(int uid, boolean isBlocked);
+    void updateBlockedUids(int uid, boolean isBlocked);
 
     void setKeyboardVisibility(boolean visible);
 
@@ -75,4 +71,3 @@ interface IPowerManager
 
     void wakeUpWithProximityCheck(long time, String reason, String opPackageName);
 }
-
diff --git a/core/java/android/os/PowerManager.java b/core/java/android/os/PowerManager.java
index e0c1f19..bbee5a3 100644
--- a/core/java/android/os/PowerManager.java
+++ b/core/java/android/os/PowerManager.java
@@ -899,17 +899,6 @@ public final class PowerManager {
         }
     }
 
-    public String getSeenWakeLocks()
-    {
-	try {
-	    if (mService != null) {
-		return mService.getSeenWakeLocks();
-	    }
-	} catch (RemoteException e) {
-	}
-	return null;
-    }
-
     /**
      * Returns true if the device is currently in idle mode.  This happens when a device
      * has been sitting unused and unmoving for a sufficiently long period of time, so that
diff --git a/core/java/android/provider/CallLog.java b/core/java/android/provider/CallLog.java
index 1ae7860..f6c68dd 100644
--- a/core/java/android/provider/CallLog.java
+++ b/core/java/android/provider/CallLog.java
@@ -677,7 +677,7 @@ public class CallLog {
             Uri result = resolver.insert(uri, values);
             resolver.delete(uri, "_id IN " +
                     "(SELECT _id FROM calls ORDER BY " + DEFAULT_SORT_ORDER
-                    + " LIMIT -1 OFFSET 5000)", null);
+                    + " LIMIT -1 OFFSET 500)", null);
             return result;
         }
 
diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 24deb8d..3ab16fe 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -16,8 +16,6 @@
 
 package android.provider;
 
-import android.annotation.ChaosLab;
-import android.annotation.ChaosLab.Classification;
 import android.annotation.SdkConstant;
 import android.annotation.SdkConstant.SdkConstantType;
 import android.annotation.SystemApi;
@@ -1486,7 +1484,6 @@ public final class Settings {
             MOVED_TO_SECURE.add(Secure.LOCK_PATTERN_ENABLED);
             MOVED_TO_SECURE.add(Secure.LOCK_PATTERN_VISIBLE);
             MOVED_TO_SECURE.add(Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED);
-            MOVED_TO_SECURE.add(Secure.LOCK_PASS_TO_SECURITY_VIEW);
             MOVED_TO_SECURE.add(Secure.LOGGING_ID);
             MOVED_TO_SECURE.add(Secure.PARENTAL_CONTROL_ENABLED);
             MOVED_TO_SECURE.add(Secure.PARENTAL_CONTROL_LAST_UPDATE);
@@ -1737,44 +1734,6 @@ public final class Settings {
         }
 
         /**
-         * Look up a boolean in the database.
-         * @hide
-         * @param resolver to access the database with
-         * @param name to look up in the table
-         * @param def Value to return if the setting is not defined.
-         * @return The setting's current value, or 'def' if it is not defined
-         * or not a valid boolean.
-         */
-        public static boolean getBoolean(ContentResolver cr, String name, boolean def) {
-            String v = getString(cr, name);
-            try {
-                if(v != null)
-                    return "1".equals(v);
-                else
-                    return def;
-            } catch (NumberFormatException e) {
-                return def;
-            }
-        }
-
-	/**
-         * Convenience function for updating a single settings value as a
-         * boolean. This will either create a new entry in the table if the
-         * given name does not exist, or modify the value of the existing row
-         * with that name. Note that internally setting values are always
-         * stored as strings, so this function converts the given value to a
-         * string before storing it.
-         *
-         * @param cr The ContentResolver to access.
-         * @param name The name of the setting to modify.
-         * @param value The new value for the setting.
-         * @return true if the value was set, false on database errors
-         */
-        public static boolean putBoolean(ContentResolver cr, String name, boolean value) {
-            return putString(cr, name, value ? "1" : "0");
-        }
-
-        /**
          * Convenience function for retrieving a single system settings value
          * as an integer.  Note that internally setting values are always
          * stored as strings; this function converts the string to an integer
@@ -2429,13 +2388,6 @@ public final class Settings {
             "lock_pattern_tactile_feedback_enabled";
 
         /**
-         * Whether to use the custom quick unlock screen control
-         * @hide
-         */
-        public static final String LOCKSCREEN_QUICK_UNLOCK_CONTROL =
-                "lockscreen_quick_unlock_control";
-
-        /**
          * A formatted string of the next alarm that is set, or the empty string
          * if there is no alarm set.
          *
@@ -2542,18 +2494,6 @@ public final class Settings {
         public static final int SCREEN_BRIGHTNESS_MODE_AUTOMATIC = 1;
 
         /**
-		 * Whether to show battery saver notification
-         * @hide
-         */
-        public static final String BATTERY_SAVER_NOTIFICATION = "battery_saver_notification";
-
-        /**
-         * Whether to show low battery notification
-         * @hide
-         */
-        public static final String BATTERY_LOW_NOTIFICATION = "battery_low_notification";
-
-        /**
          * The keyboard brightness to be used while the screen is on.
          * Valid value range is between 0 and {@link PowerManager#getMaximumKeyboardBrightness()}
          * @deprecated
@@ -3049,6 +2989,14 @@ public final class Settings {
                 new DiscreteValueValidator(new String[] {"12", "24"});
 
         /**
+        * Developer options - Navigation Bar show switch
+        * @deprecated Moved to CMSettings.Secure.DEV_FORCE_SHOW_NAVBAR
+        * @hide
+        */
+        public static final String DEV_FORCE_SHOW_NAVBAR = "dev_force_show_navbar";
+
+
+        /**
          * Date format string
          *   mm/dd/yyyy
          *   dd/mm/yyyy
@@ -3110,36 +3058,6 @@ public final class Settings {
         public static final String ANIMATOR_DURATION_SCALE = Global.ANIMATOR_DURATION_SCALE;
 
         /**
-         * Determine custom scroll friction.
-         * @hide
-         */
-        public static final String CUSTOM_SCROLL_FRICTION = "custom_scroll_friction";
-
-        /**
-         * Determine custom fling velocity.
-         * @hide
-         */
-        public static final String CUSTOM_FLING_VELOCITY = "custom_fling_velocity";
-
-        /**
-         * Determine custom overscroll distance.
-         * @hide
-         */
-        public static final String CUSTOM_OVERSCROLL_DISTANCE = "custom_overscroll_distance";
-
-        /**
-         * Determine custom overfling distance.
-         * @hide
-         */
-        public static final String CUSTOM_OVERFLING_DISTANCE = "custom_overfling_distance";
-
-         /**
-         *
-         * @hide
-         */
-        public static final String ANIMATION_CONTROLS_NO_SCROLL = "animation_controls_no_scroll";
-
-        /**
          * Control the type of rotation which can be performed using the accelerometer
          * if ACCELEROMETER_ROTATION is enabled.
          * Value is a bitwise combination of
@@ -3164,13 +3082,6 @@ public final class Settings {
         public static final Validator ACCELEROMETER_ROTATION_VALIDATOR = sBooleanValidator;
 
         /**
-         * Control whether the accelerometer will be used to change lockscreen
-         * orientation.  If 0, it will not be used; if 1, it will be used by default.
-         * @hide
-         */
-        public static final String LOCKSCREEN_ROTATION = "lockscreen_rotation";
-
-        /**
          * Default screen rotation when no other policy applies.
          * When {@link #ACCELEROMETER_ROTATION} is zero and no on-screen Activity expresses a
          * preference, this rotation value will be used. Must be one of the
@@ -3218,16 +3129,6 @@ public final class Settings {
         public static final Validator VIBRATE_WHEN_RINGING_VALIDATOR = sBooleanValidator;
 
         /**
-         * Whether the incoming call should be shown as intrusive fullscreen pop-up.
-         * The value is boolean (1 or 0).
-         *    0 - Non-intrusive
-         *    1 - Fullscreen
-         *
-         * @hide
-         */
-        public static final String USE_INTRUSIVE_CALL = "use_intrusive_call";
-
-        /**
          * Whether the audible DTMF tones are played by the dialer when dialing. The value is
          * boolean (1 or 0).
          */
@@ -3310,16 +3211,6 @@ public final class Settings {
         public static final Validator NOTIFICATION_LIGHT_PULSE_VALIDATOR = sBooleanValidator;
 
         /**
-
-        /**
-         * Force expanded notifications on all apps that support it.
-         * @hide
-         */
-        public static final String FORCE_EXPANDED_NOTIFICATIONS = "force_expanded_notifications";
-
-     
-
-        /**
          * Show pointer location on screen?
          * 0 = no
          * 1 = yes
@@ -3390,30 +3281,6 @@ public final class Settings {
         public static final Validator LOCKSCREEN_DISABLED_VALIDATOR = sBooleanValidator;
 
         /**
-         * Whether to show media art on lockscreen
-         * @hide
-         */
-        public static final String LOCKSCREEN_MEDIA_METADATA = "lockscreen_media_metadata";
-
-        /**
-         * Whether to show Brightness Icon On Brightness Slider
-         * @hide
-         */
-        public static final String BRIGHTNESS_ICON = "brightness_icon";
-
-	/**
-         * Whether to persistently show Add Tile Icon Even When Brightness Slider Is Disabled
-         * @hide
-         */
-        public static final String PERSIST_ADD = "persist_add";
-
-        /**
-         * Whether to use the proximity sensor to turn the screen on/off during a call
-         * @hide
-         */
-        public static final String IN_CALL_PROXIMITY_SENSOR = "in_call_proximity_sensor";
-
-        /**
          * @deprecated Use {@link android.provider.Settings.Global#LOW_BATTERY_SOUND}
          * instead
          * @hide
@@ -3536,72 +3403,6 @@ public final class Settings {
         /** @hide */
         public static final Validator POINTER_SPEED_VALIDATOR =
                 new InclusiveFloatRangeValidator(-7, 7);
-   
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_ENABLED_PREFERENCE_KEY = "blurred_status_bar_expanded_enabled_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-        public static final String BLUR_SCALE_PREFERENCE_KEY = "blurred_expanded_panel_scale_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-        public static final String BLUR_RADIUS_PREFERENCE_KEY = "blurred_expanded_panel_radius_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-  
-        public static final String TRANSLUCENT_NOTIFICATIONS_PRECENTAGE_PREFERENCE_KEY = "translucent_notifications_percentage_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-
-        public static final String TRANSLUCENT_QUICK_SETTINGS_PRECENTAGE_PREFERENCE_KEY = "translucent_quick_settings_percentage_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-
-        public static final String TRANSLUCENT_HEADER_PRECENTAGE_PREFERENCE_KEY = "translucent_header_percentage_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-
-        public static final String TRANSLUCENT_HEADER_PREFERENCE_KEY = "translucent_header_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-   
-        public static final String TRANSLUCENT_QUICK_SETTINGS_PREFERENCE_KEY = "translucent_quick_settings_pref";
-
-        /**
-         * XOSP Blur personalization settings
-         * @hide
-         */
-   
-        public static final String TRANSLUCENT_NOTIFICATIONS_PREFERENCE_KEY = "translucent_notifications_pref";
-
-        /**
-         * Enable built in CAF task manager
-         * @hide
-         */
-        public static final String ENABLE_TASK_MANAGER = "enable_task_manager";
 
         /**
          * Show icon when stylus is used?
@@ -3706,2577 +3507,34 @@ public final class Settings {
         public static final String WIFI_AUTO_CONNECT_TYPE = "wifi_auto_connect_type";
 
         /**
-          * Volume keys control cursor in text fields (default is 0)
-          * 0 - Disabled
-          * 1 - Volume up/down moves cursor left/right
-          * 2 - Volume up/down moves cursor right/left
-          * @hide
-          */
-         public static final String VOLUME_KEY_CURSOR_CONTROL = "volume_key_cursor_control";
-
-        /**
-         * Whether to enable voice wakeup.  The value is boolean (1 or 0).
-         * @hide
-         */
-        public static final String VOICE_WAKEUP = "voice_wakeup";
-
-        /**
-         * An intent (a flattened Uri String) to launch when user voice launch
-         * action is detected. An empty or null string will launch the default
-         * voice search activity.
-         * @hide
-         */
-        public static final String VOICE_LAUNCH_INTENT = "voice_launch_intent";
-
-        /**
-	 *
-         * Navbar Recents Switch
-         * @hide
-         */
-        public static final String NAVBAR_RECENTS_SWITCH = "navbar_recents_switch";
-
-        /**
-         * Whether navigation bar is placed on the left side in landscape mode
-         * @hide
-         */
-        public static final String NAVBAR_LEFT_IN_LANDSCAPE = "navigation_bar_left";
-
-        /**
-         * Locale for secondary overlay on dialer for t9 search input
-         * @hide
-         */
-        public static final String T9_SEARCH_INPUT_LOCALE = "t9_search_input_locale";
-
-        /**
-         * @hide
-         */
-        public static final String SHOW_SU_INDICATOR = "show_su_indicator";
-
-        /**
-         * Whether to use the custom status bar header or not
-         * @hide
-         */
-        public static final String STATUS_BAR_CUSTOM_HEADER = "status_bar_custom_header";
-
-        /**
-         * Current active provider
-         * @hide
-         */
-        public static final String STATUS_BAR_CUSTOM_HEADER_PROVIDER = "status_bar_custom_header_provider";
-
-        /**
-         * Statusbar RR logo
-         * @hide
-         */
-        public static final String STATUS_BAR_RR_LOGO = "status_bar_rr_logo";
-
-	/**
-         * Statusbar RR logo color setting
-         * @hide
-         */
-
-	public static final String STATUS_BAR_RR_LOGO_COLOR = "status_bar_rr_logo_color";
-
-  	/**
-         * Style of Status bar logo
-         * 0 - Left (default)
-         * 1 - Right
-         * @hide
-         */
-        public static final String STATUS_BAR_RR_LOGO_STYLE = "status_bar_rr_logo_style";
-        
-        /**
-         * Statusbar Dark Icons On Light StatusBar
-         * @hide
-         */
-        public static final String SHOW_DARK_ICONS = "show_dark_icons";
-
-        /**
-         * Statusbar Custom logos
-         * @hide
-         */
-        public static final String SHOW_CUSTOM_LOGO = "show_custom_logo";
-
-	/**
-         * Statusbar Custom logos Color
-         * @hide
-         */
-
-	public static final String CUSTOM_LOGO_COLOR = "custom_logo_color";
-
- 	 /**
-         * Take your Pick 
-         * @hide
-         */
-        public static final String CUSTOM_LOGO_STYLE = "custom_logo_style";
-
-	/**
-         * show clear all recents button
-         *  @hide
-         */
-        public static final String SHOW_CLEAR_ALL_RECENTS = "show_clear_all_recents";
-
-        /**
-         * location of the clear all recents button
-         * @hide
-         */
-        public static final String RECENTS_CLEAR_ALL_LOCATION = "recents_clear_all_location";
-
-        /**
-         * Recents Clear All Button Style
-         * @hide
-         */
-        public static final String CLEAR_RECENTS_STYLE = "clear_recents_style";
-
-       /**
-         * Recents Clear All Button Style Switch
-         * @hide
-         */
-        public static final String CLEAR_RECENTS_STYLE_ENABLE = "clear_recents_style_enable";
-        
-	/**
-         * Navbar Button Color Switch
-         * @hide
-         */
-        public static final String NAVBAR_TINT_SWITCH = "navbar_tint_switch";
-        
-         /**
-         * Navbar Button Color
-         * @hide
-         */
-        public static final String NAVBAR_BUTTON_COLOR= "navbar_button_color";
-
-       /**
-         * Recents Clear All Button Color
-         * @hide
-         */
-        public static final String FAB_BUTTON_COLOR= "fab_button_color";
-
-       /**
-         * Recents MemBar Color
-         * @hide
-         */
-        public static final String MEM_BAR_COLOR= "mem_bar_color";
-
-       /**
-         * Recents MemBar Text Color
-         * @hide
-         */
-        public static final String MEM_TEXT_COLOR= "mem_text_color";
-
-       /**
-         * Recents Clear Button Color
-         * @hide
-         */
-        public static final String CLEAR_BUTTON_COLOR= "clear_button_color";
-
-       /**
-         * Recents Date Text Color
-         * @hide
-         */
-        public static final String RECENTS_DATE_COLOR= "recents_date_color";
-
-       /**
-         * Recents Clock Text Color
-         * @hide
-         */
-        public static final String RECENTS_CLOCK_COLOR= "recents_clock_color";
-
-       /**
-         * Recents FAB animation
-         * @hide
-         */
-        public static final String RECENTS_ROTATE_FAB= "recents_rotate_fab";
-
-       /**
-         * Recents FAB animation style
-         * @hide
-         */
-        public static final String FAB_ANIMATION_STYLE= "fab_animation_style";
-               
-        /**
-         * TaskView Pin Color
-         * @hide
-         */
-        public static final String PIN_BUTTON_COLOR = "pin_button_color";
-
-       /**
-         * TaskView MW button Color 
-         * @hide
-         */
-        public static final String MW_BUTTON_COLOR= "mw_button_color";
-
-       /**
-         * TaskView Float Button Color
-         * @hide
-         */
-        public static final String FLOAT_BUTTON_COLOR= "float_button_color";
-
-       /**
-         * TaskView Kill Button Color
-         * @hide
-         */
-        public static final String KILL_APP_BUTTON_COLOR= "kill_app_button_color";
-
-       /**
-         * TaskView App Color
-         * @hide
-         */
-        public static final String TV_APP_COLOR= "tv_app_color";
-        
-        /**
-         * TaskView App Description Text Color
-         * @hide
-         */
-        public static final String TV_APP_TEXT_COLOR= "tv_app_text_color";
-
-	/**
-         *
-         * Whether to apply a shadow on  the text of header
-         * value is the radius of the shadow that is to be applied.
-         * @hide
-         */
-        public static final String STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW = "status_bar_custom_header_text_shadow";
-
-        /**
-         *
-         * Apply a custom color to the text shadow on the header
-         * @hide
-         */
-        public static final String STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW_COLOR = "status_bar_custom_header_text_shadow_color";
-
-        /**
-         * Whether to show or hide search bar in recents view
-         * @hide
-         */
-        public static final String RECENTS_SEARCH_BAR = "recents_search_bar";
-
-        /**
-         * Whether to dismiss all recents tasks
-         * @hide
-         */
-        public static final String RECENTS_CLEAR_ALL_DISMISS_ALL = "recents_clear_all_dismiss_all";
-
-	/**
-         * show the membar in recents
-         *  @hide
-         */
-        public static final String SYSTEMUI_RECENTS_MEM_DISPLAY = "systemui_recents_mem_display";
-
-        /**  
-         * AOKP Custom System Animations
-         * @hide
-         */  
-        public static final String[] ACTIVITY_ANIMATION_CONTROLS = new String[] {
-                "activity_open",
-                "activity_close",
-                "task_open",
-                "task_close",
-                "task_to_front",
-                "task_to_back",
-                "wallpaper_open",
-                "wallpaper_close",
-                "wallpaper_intra_open",
-                "wallpaper_intra_close",
-                "task_open_behind",
-        };  
-        public static final String ANIMATION_CONTROLS_DURATION = "animation_controls_duration";
-
-        /**
-         * Toast animations
-         *
-         * @hide
-         */
-        public static final String TOAST_ANIMATION = "toast_animation";
-
-   	/**
-  	* volume answer.
-         * @hide
-        */
-        public static final String ANSWER_VOLUME_BUTTON_BEHAVIOR_ANSWER = "call_volume_answer";
-
-	/**
-         * Whether to display clock while recents are in full screen
-         * @hide
-         */
-        public static final String RECENTS_FULL_SCREEN_CLOCK = "recents_full_screen_clock";
-
-        /**
-         * Whether to display clock while recents are in full screen
-         * @hide
-         */
-        public static final String RECENTS_FULL_SCREEN_DATE = "recents_full_screen_date";
-
-        /**
-         * ListView Animations
-         * 0 == None
-         * 1 == Wave (Left)
-         * 2 == Wave (Right)
-         * 3 == Scale
-         * 4 == Alpha
-         * 5 == Stack (Top)
-         * 6 == Stack (Bottom)
-         * 7 == Translate (Left)
-         * 8 == Translate (Right)
-         * @hide
-         */
-        public static final String LISTVIEW_ANIMATION = "listview_animation";
-
-        /**
-         * ListView Interpolators
-         * 0 == None
-         * 1 == accelerate_interpolator
-         * 2 == decelerate_interpolator
-         * 3 == accelerate_decelerate_interpolator
-         * 4 == anticipate_interpolator
-         * 5 == overshoot_interpolator
-         * 6 == anticipate_overshoot_interpolator
-         * 7 == bounce_interpolator
-         * @hide    */
-
-        public static final String LISTVIEW_INTERPOLATOR = "listview_interpolator";
-
-        /**
-         * Toast icon
-         *
-         * @hide
-         */
-        public static final String TOAST_ICON = "toast_icon";
-
-
-        /**
-         * Color of toast message icon
-         * @hide
-         */
-        public static final String TOAST_ICON_COLOR = "toast_icon_color";
-
-        /**
-         * Color of toast message test
-         * @hide
-         */
-        public static final String TOAST_TEXT_COLOR = "toast_text_color";
-
-        /**
-         * Whether to mute annoying notifications
-         * @hide
-         */
-        public static final String MUTE_ANNOYING_NOTIFICATIONS_THRESHOLD = "mute_annoying_notifications_threshold";
-
-        /**
-         * IMPORTANT: If you add a new public settings you also have to add it to
-         * PUBLIC_SETTINGS below. If the new setting is hidden you have to add
-         * it to PRIVATE_SETTINGS below. Also add a validator that can validate
-         * the setting value. See an example above. */
-
-        /**
-         * Whether to use gesture anywhere feature.
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_ENABLED = "gesture_anywhere_enabled";
-
-        /**
-         * Position of gesture anywhere trigger.  Value is either Gravity.LEFT or Gravity.RIGHT
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_POSITION = "gesture_anywhere_position";
-
-        /**
-         * Last time gestures were altered.
-         * Used to determine if gestures should be reloaded by the view.
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_CHANGED = "gesture_anywhere_changed";
-
-        /**
-         * Width of the gesture anywhere trigger.
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_TRIGGER_WIDTH = "gesture_anywhere_trigger_width";
-
-        /**
-         * Position of gesture anywhere trigger.
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_TRIGGER_TOP = "gesture_anywhere_trigger_top";
-
-        /**
-         * Height of the gesture anywhere trigger.
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_TRIGGER_HEIGHT = "gesture_anywhere_trigger_height";
-
-        /**
-         * Whether to display the gesture anywhere trigger region or not.
-         * Used internally for showing the trigger in settings so user can see its placement
-         * @hide
-         */
-        @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-        public static final String GESTURE_ANYWHERE_SHOW_TRIGGER = "gesture_anywhere_show_trigger";
-
-        /** Network speed indicator
-         * 0 = disabled
-	 * 1 = show bits per second
-	 * 2 = show Bytes per second
-         * @hide
-         */
-        public static final String STATUS_BAR_TRAFFIC = "status_bar_traffic";
-
-        /**
-         * Network traffic indicator, goes from least to greatest significant bitwise
-         * 0 = Display up-stream traffic if set
-         * 1 = Display down-stream traffic if set
-         * 2 = Show as Byte/s if set
-         * 16-31 = Refresh interval(ms) min: 250 max: 32750 default: 1000
-         * @hide
-         */
-        public static final String NETWORK_TRAFFIC_STATE = "network_traffic_state";
-
-        /**
-         * Whether or not to hide the network traffic indicator when there is no activity
-         * @hide
-         */
-        public static final String NETWORK_TRAFFIC_AUTOHIDE = "network_traffic_autohide";
-
-        /**
-         * Network traffic inactivity threshold (default is 10 kBs)
-         * @hide
-         */
-        public static final String NETWORK_TRAFFIC_AUTOHIDE_THRESHOLD = "network_traffic_autohide_threshold";
-
-	 /**
-         * Network stats Color style
-         * @hide
-         */
-
-	public static final String NETWORK_TRAFFIC_COLOR = "network_traffic_color";
-
-        /**
-         * Alternative recent apps integration using OmniSwitch
-         * @hide
-         */
-        public static final String RECENTS_USE_OMNISWITCH = "recents_use_omniswitch";
-
-        /**
-         * Whether to display recents in full screen
-         * @hide
-         */
-        public static final String RECENTS_FULL_SCREEN = "recents_full_screen";
-
-
-	/**
-         * Whether to disable showing arrows in network traffic indicators
-         * @hide
-         */
-        public static final String NETWORK_TRAFFIC_HIDEARROW = "network_traffic_hidearrow";
-        
-	/**
-         * Hide lockscreen date
-         * @hide
-         */
-        public static final String HIDE_LOCKSCREEN_DATE = "hide_lockscreen_date";
-
-        /**
-         * Hide lockscreen clock
-         * @hide
-         */
-        public static final String HIDE_LOCKSCREEN_CLOCK = "hide_lockscreen_clock";
-
-        /**
-         * Hide lockscreen alarm
-         * @hide
-         */
-        public static final String HIDE_LOCKSCREEN_ALARM = "hide_lockscreen_alarm";
-
-
-	/**
-         * Hide panel clock
-         * @hide
-         */
-        public static final String HIDE_PANEL_CLOCK = "hide_panel_clock";
-
-	/**
-         * Hide Date Of Header clock
-         * @hide
-         */
-        public static final String HIDE_PANEL_DATE = "hide_panel_date";
-
-	/**
-         * Hide panel clock
-         * @hide
-         */
-        public static final String HIDE_PANEL_CLOCKVALUE = "hide_panel_clockvalue";
-
-	/**
-         * Hide panel clock
-         * @hide
-         */
-        public static final String HIDE_PANEL_ALARM = "hide_panel_alarm";
-
-	/*
-         *  Hide Settings Battery Charging text in Panel
-         * @hide
-         */
-        public static final String HIDE_PANEL_BATTERY = "hide_panel_battery";
-
-
-	/**
-         * Hide panel icons
-         * @hide
-         */
-        public static final String HIDE_PANEL_ICONS = "hide_panel_icons";
-
-	/**
-         * Hide user icon in Panel
-         * @hide
-         */
-        public static final String HIDE_USER_ICON = "hide_user_icon";
-
-	/**
-         * Header Clock Font Style
-         * @hide
-         */
-        public static final String HEADER_CLOCK_FONT_STYLE = "header_clock_font_style";
-
-
-	/**
-         * Hide Weather Font Style
-         * @hide
-         */
-        public static final String HEADER_WEATHER_FONT_STYLE = "header_weather_font_style";
-
-	/**
-         * Hide AM/PM Font Style
-         * @hide
-         */
-        public static final String HEADER_DETAIL_FONT_STYLE = "header_detail_font_style";
-
-	/**
-         * Hide Date Font Style
-         * @hide
-         */
-        public static final String HEADER_DATE_FONT_STYLE = "header_date_font_style";
-
-	/**
-         * Hide Alarm Font Style
-         * @hide
-         */
-        public static final String HEADER_ALARM_FONT_STYLE = "header_alarm_font_style";
-
-	/**
-         * Header Clock Color
-         * @hide
-         */
-        public static final String HEADER_CLOCK_COLOR = "header_clock_color";
-
-	/**
-         * Header Date Color
-         * @hide
-         */
-        public static final String HEADER_DETAIL_COLOR = "header_detail_color";
-
-	/**
-         * Header Weather Color
-         * @hide
-         */
-        public static final String HEADER_WEATHERONE_COLOR = "header_weatherone_color";
-
-	/**
-         * Header Weather Color
-         * @hide
-         */
-        public static final String HEADER_WEATHERTWO_COLOR = "header_weather2_color";
-        
-        
-        /**
-         * Dashboard custom colors switch
-         * @hide
-         */
-        public static final String DASHBOARD_CUSTOM_COLORS = "db_custom_colors";
-
-	/**
-         * Dashboard icon colors
-         * @hide
-         */
-        public static final String DB_ICON_COLOR = "db_icon_color";
-
-	/**
-         * Dashboard text color
-         * @hide
-         */
-        public static final String DB_TEXT_COLOR = "db_text_color";
-        
-        
-        /**
-         * Dashboard category text color
-         * @hide
-         */
-        public static final String SETTINGS_CATEGORY_TEXT_COLOR = "settings_category_text_color";
-        
-        
-         /**
-         * Dashboard color
-         * @hide
-         */
-        public static final String SETTINGS_BG_COLOR = "settings_bg_color";
-        
-        
-        /**
-         * Dashboard title text size
-         * @hide
-         */
-        public static final String SETTINGS_TITLE_TEXT_SIZE = "settings_title_text_size";
-
-        /**
-         * Dashboard category text size
-         * @hide
-         */
-        public static final String SETTINGS_CATEGORY_TEXT_SIZE = "settings_category_text_size";
-        
-        
-        /**
-         * Settings Dash Font Style
-         * @hide
-         */
-        public static final String DASHBOARD_FONT_STYLE = "dashboard_font_style";
-
-
-
-	/**
-         * Header Battery Text Color
-         * @hide
-         */
-        public static final String HEADER_BATTERY_TEXT_COLOR = "header_battery_text_color";
-
-	/**
-         * Header alarm Color
-         * @hide
-         */
-        public static final String HEADER_ALARM_TEXT_COLOR = "header_alarm_text_color";
-
-
-        /**
-
-         * Whether to listen on the entire screen for touches to un-dim
-         * the buttons instead of just listening on the navbar
-         * @hide
-         */
-        public static final String DIM_NAV_BUTTONS_TOUCH_ANYWHERE = "dim_nav_buttons_touch_anywhere";
-
-        /**
-         * Whether to show the battery bar
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR = "statusbar_battery_bar";
-
-        /**
-         * Status Bar Colors Switch
-         * @hide
-         */
-        public static final String STATUSBAR_COLOR_SWITCH = "statusbar_color_switch";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_COLOR = "statusbar_battery_bar_color";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_THICKNESS = "statusbar_battery_bar_thickness";
-        
-        /**
-         * @hide
-         */       
-        public static final String STATUSBAR_BATTERY_BAR_CHARGING_COLOR = "statusbar_battery_bar_charging_color";
-
-
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_BATTERY_LOW_COLOR_WARNING =
-                "statusbar_battery_bar_battery_low_color_warning";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_HIGH_COLOR =
-                "statusbar_battery_bar_high_color";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_LOW_COLOR =
-                "statusbar_battery_bar_low_color";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_USE_GRADIENT_COLOR =
-                "statusbar_battery_bar_use_gradient_color";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_STYLE = "statusbar_battery_bar_style";
-
-        /**
-         * @hide
-         */
-        public static final String STATUSBAR_BATTERY_BAR_ANIMATE = "statusbar_battery_bar_animate";
-
-        /**
-         * Colors used for the color picker panel puttons
-         * 0: Benzo colors
-         * 1: Material colors
-         * 2: RGB colors
-         * default: 0
-         * @hide
-         */
-        public static final String COLOR_PICKER_PALETTE = "color_picker_palette";
-
-
-     /**
-         * Whether to display powermenu on secure lockscreen
-         *
-         * @hide
-         */
-        public static final String POWER_MENU_LOCKSCREEN = "power_menu_lockscreen";
-
-        /**
-         * Switch for headset icon
-         * @hide
-         */
-        public static final String SHOW_HEADSET_ICON = "show_headset_icon";
-
-        /**
-         * Status bar carrier label
-         * 0: Hide
-         * 1: Display on keyguard status bar
-         * 2: Display on Normal status bar
-         * 3: Enabled for both
-         * @hide
-         */
-        public static final String STATUS_BAR_SHOW_CARRIER = "status_bar_show_carrier";
-
-        /**
-         * custom carrier label. The value is
-         * String.
-         */
-        public static final String CUSTOM_CARRIER_LABEL = "custom_carrier_label";
-
-        /**
-         * Carrier Label Custom Color
-         * @hide
-         */
-        public static final String STATUS_BAR_CARRIER_COLOR = "status_bar_carrier_color";
-
-        /**
-         * Custom carrier label font style
-         * @hide
-         */
-        public static final String STATUS_BAR_CARRIER_FONT_STYLE = "status_bar_carrier_font_style";
-        
-        /**
-         * Settings for carrier label font size
-         * @hide
-         */
-        public static final String STATUS_BAR_CARRIER_FONT_SIZE = "status_bar_carrier_font_size";
-
-        /**
-	 * Disable Immersive Message
-         * @hide
-         */
-        public static final String DISABLE_IMMERSIVE_MESSAGE = "disable_immersive_message";
-
-
-	/**
-         * Enable double tap gesture anywhere on the lock screen put device to sleep
-         * @hide
-         */
-        public static final String DOUBLE_TAP_SLEEP_ANYWHERE = "double_tap_sleep_anywhere";
-
-        /**
-
-         * Disable FC Notifications (1/2)
-         * @hide
-         */
-        public static final String DISABLE_FC_NOTIFICATIONS = "disable_fc_notifications";
-
-        /**
-         * Status bar weather temperature
-         * 0: Hide the temperature
-         * 1: Display the temperature with scale
-         * 2: Display the temperature without scale
-         * @hide
-         */
-        public static final String STATUS_BAR_SHOW_WEATHER_TEMP = "status_bar_show_weather_temp";
-
-        /**
-         * Style of Weather Temp
-         * 0 - Right (default)
-         * 1 - Left
-         * @hide
-         */
-        public static final String STATUS_BAR_WEATHER_TEMP_STYLE = "status_bar_weather_temp_style";
-
-        /**
-         * Statusbar weather color setting
-         * @hide
-         */
-        public static final String STATUS_BAR_WEATHER_COLOR = "status_bar_weather_color";
-
-        /**
-         * Statusbar weather font size setting
-         * @hide
-         */
-        public static final String STATUS_BAR_WEATHER_SIZE = "status_bar_weather_size";
-
-        /**
-         * Statusbar weather font style setting
-         * @hide
-         */
-        public static final String STATUS_BAR_WEATHER_FONT_STYLE = "status_bar_weather_font_style";
-        /*
-         * Whether to show the weather info on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_SHOW_WEATHER = "lock_screen_show_weather";
-
-        /**
-         * Whether to show the weather location lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_SHOW_WEATHER_LOCATION = "lock_screen_show_weather_location";
-
-        /**
-         * Whether to show the weather update timestamp on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_SHOW_WEATHER_TIMESTAMP = "lock_screen_show_weather_timestamp";
-
-        /**
-         * Weather condition icon on the lock screen
-         * 0: monochrome
-         * 1: colored
-         * 2: vclouds
-         * default: 0
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_CONDITION_ICON = "lock_screen_weather_condition_icon";
-
-        /**
-         * Whether to hide the weather panel when the notifications will reach the number of notifications
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_HIDE_PANEL = "lock_screen_weather_hide_panel";
-
-        /**
-         * Hide the weather panel when the visible lockscreen notifications will reach this number
-         * 1: 1 notification (always)
-         * 2: 2 notifications
-         * 3: 3 notifications
-         * 4: 4 notifications
-         * 5: 5 notifications
-         * 6: 6 notifications
-         * default: 4
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_NUMBER_OF_NOTIFICATIONS = "lock_screen_weather_number_of_notifications";
-
-        /**
-         * Number of notifications visible on the lockscreen including the overflow container
-         * @hide
-         */
-        public static final String LOCK_SCREEN_VISIBLE_NOTIFICATIONS = "lock_screen_visible_notifications";
-
-        /**
-         * Defines the shortcuts to be shown on lockscreen
-         * Usage is like this: target:icon|target:icon|target:icon
-         * if :icon is not set, default application icon will be used
-         * @hide
-         */
-        public static final String LOCKSCREEN_SHORTCUTS = "lockscreen_shortcuts";
-
-        /**
-         * Whether shorcuts open with normal or longpress
-         * @hide
-         */
-        public static final String LOCKSCREEN_SHORTCUTS_LONGPRESS =
-                "lockscreen_shortcuts_longpress";
-                
-        /**
-         * Color of Lockscreen Shortcuts Icons
-         * @hide
-         */
-        public static final String LS_SHORTCUT_ICON_COLOR =
-                "ls_shortcut_icon_color";
-
-
-        /**
-         * If On-The-Go should be displayed at the power menu.
-         *
-         * @hide
-         */
-        public static final String POWER_MENU_ONTHEGO_ENABLED = "power_menu_onthego_enabled";
-
-        /**
-         * The alpha value of the On-The-Go overlay.
-         *
-         * @hide
-         */
-        public static final String ON_THE_GO_ALPHA = "on_the_go_alpha";
-
-        /**
-         * The camera instance to use.
-         * 0 = Rear Camera
-         * 1 = Front Camera
-         *
-         * @hide
-         */
-        public static final String ON_THE_GO_CAMERA = "on_the_go_camera";
-
-        /**
-         * Whether the service should restart itself or not.
-         *
-         * @hide
-         */
-        public static final String ON_THE_GO_SERVICE_RESTART = "on_the_go_service_restart";
-        
-       /**
-         * Switch to Enable/Disable ScreenRecord Shorcut.
-         *
-         * @hide
-         */
-        public static final String SCREEN_RECORD_SHORTCUT_SWITCH = "screen_record_shortcut";
-        
-	/**
-         * Switch to Enable/Disable ScreenShot Shorcut.
-         *
-         * @hide
-         */
-        public static final String SCREEN_SHOT_SHORTCUT_SWITCH = "screen_shot_shortcut";
-
-        /**
-         * Change fonts for the system lockscreen clock widget
-         *
-         * @hide
-         */
-        public static final String LOCK_CLOCK_FONTS = "lock_clock_fonts";
-        
-        /**
-         * Change fonts for the system lockscreen date
-         *
-         * @hide
-         */
-        public static final String LOCK_DATE_FONTS = "lock_date_fonts";
-        
-        /**
-         * Change font size for the system lockscreen clock widget
-         *
-         * @hide
-         */
-        public static final String LOCKCLOCK_FONT_SIZE = "lockclock_font_size";
-        
-        /**
-         * Change font size for the system lockscreen date
-         *
-         * @hide
-         */
-        public static final String LOCKDATE_FONT_SIZE= "lockdate_font_size";
-
-	/**
-         * Settings for clock font style
-         * @hide
-         */
-        public static final String STATUSBAR_CLOCK_FONT_STYLE = "statusbar_clock_font_style";
-
-
-	/**
-         * Custom Colors Switch
-         * @hide
-         */
-        public static final String NOTIF_COLOR_SWITCH = "notif_color_switch";
-
-         /**
-         * Colorize the media notifications background
-         * 0: never
-         * 1: if the notification doesn`t include an own color
-         * 2: always
-         * default: 0
-         * @hide
-         */
-        public static final String NOTIFICATION_MEDIA_BG_MODE = "notification_media_bg_mode";
-
-        /**
-         * Colorize the notifications app icon background
-         * 0: never
-         * 1: if the notification doesn`t include an own color
-         * 2: always
-         * default: 0
-         * @hide
-         */
-        public static final String NOTIFICATION_APP_ICON_BG_MODE = "notification_app_icon_bg_mode";
-
-       /**
-         * Colorize the notifications app icon
-         * 0: never
-         * 1: if the icon is an greyscale icon
-         * 2: always
-         * default: 0
-         * @hide
-         */
-        public static final String NOTIFICATION_APP_ICON_COLOR_MODE = "notification_app_icon_color_mode";
-
-        /**
-         * Color of the notifications background
-         * @hide
-         */
-        public static final String NOTIFICATION_BG_COLOR = "notification_bg_color";
-
-        /**
-         * Color of the notifications background on longpress
-         * @hide
-         */
-        public static final String NOTIFICATION_GUTS_BG_COLOR = "notification_bg_guts_color";
-
-        /**
-         * Color of the notifications icon background
-         * @hide
-         */
-        public static final String NOTIFICATION_APP_ICON_BG_COLOR = "notification_app_icon_bg_color";
-
-        /**
-         * Color of the notification text
-         * @hide
-         */
-        public static final String NOTIFICATION_TEXT_COLOR = "notification_text_color";
-
-        /**
-         * Color of notification icon
-         * @hide
-         */
-        public static final String NOTIFICATION_ICON_COLOR = "notification_icon_color";
-
-        /**
-         * Color of Battery Icon
-         * @hide
-         */
-        public static final String BATTERY_ICON_COLOR = "battery_icon_color";
-
-        /**
-         * Color of Battery Text
-         * @hide
-         */
-        public static final String BATTERY_TEXT_COLOR = "battery_text_color";
-
-	/**
-         * Settings for clock font size
-         * @hide
-         */
-        public static final String STATUSBAR_CLOCK_FONT_SIZE = "statusbar_clock_font_size";
-	
-
-        /**
-         * Shows custom date before clock time
-         * 0 - No Date
-         * 1 - Small Date
-         * 2 - Normal Date
-         * @hide
-         */
-        public static final String STATUS_BAR_DATE = "status_bar_date";
-
-        /**
-         * Sets the date string style
-         * 0 - Regular style
-         * 1 - Lowercase
-         * 2 - Uppercase
-         * @hide
-         */
-        public static final String STATUS_BAR_DATE_STYLE = "status_bar_date_style";
-
-        /**
-         * Stores the java DateFormat string for the date
-         * @hide
-         */
-        public static final String STATUS_BAR_DATE_FORMAT = "status_bar_date_format";
-
-         /**
-         * Setting for clock color
-         * @hide
-         */
-        public static final String STATUSBAR_CLOCK_COLOR = "statusbar_clock_color";
-
-	/**
-         * Show four g instead of lte
-         * @hide
-         */
-        public static final String SHOW_FOURG = "show_fourg";
-
-	/**
-         * Show 3g instead of H+
-         * @hide
-         */
-        public static final String SHOW_THREEG = "show_threeg";
-        
-        /**
-         * Whether to display app circle sidebar
-         * @hide
-         */
-        public static final String ENABLE_APP_CIRCLE_BAR = "enable_app_circle_bar";
-        
-         /**
-         * A list of packages to include in app circle bar.
-         * This should be a string of packages separated by |			
-         * @hide
-         */
-        public static final String WHITELIST_APP_CIRCLE_BAR = "whitelist_app_circle_bar";
-
- 
-         /**
-          * Width of the app circle bar trigger
-          *
-          * @hide
-          */
-         public static final String APP_CIRCLE_BAR_TRIGGER_WIDTH = "app_circle_bar_trigger_width";
- 
-         /**
-          * Position of app circle bar trigger
-          *
-          * @hide
-          */
-         public static final String APP_CIRCLE_BAR_TRIGGER_TOP = "app_circle_bar_trigger_top";
- 
-         /**
-          * Height of the app circle bar trigger
-          *
-          * @hide
-          */
-         public static final String APP_CIRCLE_BAR_TRIGGER_HEIGHT = "app_circle_bar_trigger_height";
- 
-         /**
-          * Whether to display the trigger region or not
-          *
-          * @hide
-          */
-         public static final String APP_CIRCLE_BAR_SHOW_TRIGGER = "app_circle_bar_show_trigger";
-
-
-        /**
-         * Allows to show the background activity back the lockscreen
-         * 0 = off
-         * 1 = on
-         * @hide
-         */
-        public static final String LOCKSCREEN_SEE_THROUGH = "lockscreen_see_through";
-
-        /**
-         * Allows setting the radius for lockscreen blur
-         * @hide
-         */
-        public static final String LOCKSCREEN_BLUR_RADIUS = "lockscreen_blur_radius";
-                      
-        /**
-         * Double Tap to Sleep Navbar
-         * @hide
-         */
-        public static final String DOUBLE_TAP_SLEEP_NAVBAR = "double_tap_sleep_navbar";
-
-        /**
-         * Enable HW keys
-         * @hide
-         */
-        public static final String ENABLE_HW_KEYS = "enable_hw_keys";
-
- 	/**
-         * Three Finger Gesture from Oppo
-         *
-         * @hide
-         */
-        public static final String THREE_FINGER_GESTURE = "three_finger_gesture";
-
-        /**
-         * Boolean value whether to link ringtone and notification volume
-         *
-         * @hide
-         */
-        public static final String VOLUME_LINK_NOTIFICATION = "volume_link_notification";
-
-        /**
-         * Override and forcefully disable the fullscreen keyboard
-         * @hide
-         */
-        public static final String DISABLE_FULLSCREEN_KEYBOARD = "disable_fullscreen_keyboard";
-
-        /**
-         * Automatic keyboard rotation timeout.  0 to disable completely.
-         * @hide
-         */
-        public static final String KEYBOARD_ROTATION_TIMEOUT = "keyboard_rotation_timeout";
-
-        /**
-         * Forces formal text input.  1 to replace emoticon key with enter key.
-         * @hide
-         */
-        public static final String FORMAL_TEXT_INPUT = "formal_text_input";
-
-	/**
-	 * Enable blocking wakelock
-	 * @hide
-	 */
-	public static final String WAKELOCK_BLOCKING_ENABLED = "wakelock_blocking_enabled";
-
-	/**
-	 * List of wakelock blocks selected
-	 * @hide
-	 */
-	public static final String WAKELOCK_BLOCKING_LIST = "wakelock_blocking_list";
-
-        /**
-         * Change the screenshot delay
-         * @hide
-         */
-        public static final String SCREENSHOT_DELAY = "screenshot_delay";
-
-         /**
-         * Change the color of the lockscreen bottom camera shortcut
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_CAMERA_ICON_COLOR = "lockscreen_camera_icon_color";
-
-        /**
-         * Change the color of the lockscreen bottom phone shortcut
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_PHONE_ICON_COLOR = "lockscreen_phone_icon_color";
-
-        /**
-         * Change the color of the lockscreen lock icon
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_LOCK_ICON_COLOR = "lockscreen_lock_icon_color";
-
-        /**
-         *
-         * @hide
-         */
-        public static final String ANIMATION_IME_DURATION = "animation_ime_duration";
-
-        /**
-         * Whether to show four tiles per row.
-         * @hide
-         */
-        public static final String QS_USE_FOUR_COLUMNS = "qs_use_four_columns";
-
-	/**
-         * Wether to show a headsup enable/disable button in status bar header
-         *
-         * @hide
-         */
-        public static final String HEADS_UP_SHOW_STATUS_BUTTON = "heads_up_show_status_button";
-
-        /**
-         * IME Animations
-         *
-         * @hide
-         */
-        public static final String ANIMATION_IME_ENTER = "animation_ime_enter";
-
-        /**
-         *
-         * @hide
-         */
-        public static final String ANIMATION_IME_EXIT = "animation_ime_exit";
-
-        /**
-         *
-         * @hide
-         */
-        public static final String ANIMATION_IME_INTERPOLATOR = "animation_ime_interpolator";
-
-        /**
-         *
-         * whether to enable or disable vibration on succesful fingerprint auth
-         * @hide
-         */
-        public static final String FINGERPRINT_SUCCESS_VIB = "fingerprint_success_vib";
-
-        /**
-         * Change the color of the lockscreen indication text
-         * @hide
-         */
-        public static final String LOCKSCREEN_INDICATION_TEXT_COLOR = "lockscreen_indication_text_color";
-
-        /**
-         * Change the color of the lockscreen clock
-         * Number of columns to display on the quick settings panel
-         * Default is 3
-         * @hide
-         */
-        public static final String QS_NUM_TILE_COLUMNS = "sysui_qs_num_tile_columns";
-
-        /**
-         * Whether to display set of animations when prompting the power menu
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_CLOCK_COLOR = "lockscreen_clock_color";
-
-        /**
-         * Change the color of the lockscreen owner's info text
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_OWNER_INFO_COLOR = "lockscreen_owner_info_color";
-
-        /**
-         * Change the color of the lockscreen alarm text
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_ALARM_COLOR = "lockscreen_alarm_color";
-
-  	/**
-	 *
-         * Whether to show switches for wifi/cell/bt in the settings dashboard
-         * @hide
-         */
-        public static final String DASHBOARD_SWITCHES = "dashboard_switches";
-
-        /**
-         * Change the color of the lockscreen date underneath the clock
-         *
-         * @hide
-         */
-        public static final String LOCKSCREEN_CLOCK_DATE_COLOR = "lockscreen_clock_date_color";
-
-        /**
-         * Enable double tap gesture anywhere on the lock screen put device to sleep
-         * @hide
-         */
-        public static final String DOUBLE_TAP_SLEEP_LOCK_SCREEN = "double_tap_sleep_lock_screen";
-
-        /**
-         * Allows setting the hold back to kill timeout
-         * @hide
-         */
-        public static final String HOLD_BACK_TO_KILL_TIMEOUT = "hold_back_to_kill_timeout";
-
-        /**
-         * Timeout for ambient display notification
-         * @hide
-         */
-        public static final String DOZE_TIMEOUT = "doze_timeout";
-
-        /**
-         * Use pick up gesture sensor as doze pulse trigger
-         * @hide
-         */
-        public static final String DOZE_TRIGGER_PICKUP = "doze_trigger_pickup";
-
-        /**
-         * Use significant motion sensor as doze pulse trigger
-         * @hide
-         */
-        public static final String DOZE_TRIGGER_SIGMOTION = "doze_trigger_sigmotion";
-
-        /**
-         * Use notifications as doze pulse triggers
-         * @hide
-         */
-        public static final String DOZE_TRIGGER_NOTIFICATION = "doze_trigger_notification";
-
-        /**
-         * Follow pre-configured doze pulse repeat schedule
-         * @hide
-         */
-        public static final String DOZE_SCHEDULE = "doze_schedule";
-
-        /**
-         * Doze pulse screen brightness level
-         * @hide
-         */
-        public static final String DOZE_BRIGHTNESS = "doze_brightness";
-
-        /**
-         * Volume key controls ringtone or media sound stream
-         * @hide
-         */
-        public static final String VOLUME_KEYS_CONTROL_RING_STREAM = "volume_keys_control_ring_stream";  
-
-
-        /** 
-         * Position of date
-         * 0 - Left of clock
-         * 1 - Right of clock
-         * @hide
-         */
-        public static final String STATUSBAR_CLOCK_DATE_POSITION = "statusbar_clock_date_position";
-
-        /**
-         * Whether to display set of animations when prompting the power menu
-         * @hide
-         */
-        public static final String POWER_MENU_ANIMATIONS = "power_menu_animations";
-
-        /**
-         * Heads up timeout configuration
-         * @hide
-         */
-        public static final String HEADS_UP_TIMEOUT = "heads_up_timeout";
-
-        /**
-         * Whether to use slim recents
-         * @hide
-         */
-        public static final String USE_SLIM_RECENTS = "use_slim_recents";
-
-        /**
-         * Whether to only show actually running tasks
-         * @hide
-         */
-        public static final String RECENT_SHOW_RUNNING_TASKS = "show_running_tasks";
-
-        /**
-         * Amount of apps to show in recents
-         * @hide
-         */
-        public static final String RECENTS_MAX_APPS = "recents_max_apps";
-
-	/**
-         * Change quick settings tiles animation style
-         *
-         * @hide
-         */
-        public static final String ANIM_TILE_STYLE = "anim_tile_style";
-
-        /**
-         * Change quick settings tiles animation duration
-         *
-         * @hide
-         */
-        public static final String ANIM_TILE_DURATION = "anim_tile_duration";
-
-        /**
-         * Change quick settings tiles interpolator
-         *
-         * @hide
-         */
-        public static final String ANIM_TILE_INTERPOLATOR = "anim_tile_interpolator";
-
-        /**
-         * Whether recent panel gravity is left or right (default = Gravity.RIGHT).
-         * @hide
-         */
-        public static final String RECENT_PANEL_GRAVITY = "recent_panel_gravity";
-
-        /**
-         * Size of recent panel view in percent (default = 100).
-         * @hide
-         */
-        public static final String RECENT_PANEL_SCALE_FACTOR = "recent_panel_scale_factor";
-
-        /**
-         * User favorite tasks for recent panel.
-         * @hide
-         */
-        public static final String RECENT_PANEL_FAVORITES = "recent_panel_favorites";
-
-        /**
-         * Recent panel expanded mode (auto = 0, always = 1, never = 2).
-         * default = 0.
-         *
-         * @hide
-         */
-        public static final String RECENT_PANEL_EXPANDED_MODE = "recent_panel_expanded_mode";
-
-        /**
-         * Recent panel: Show topmost task
-         *
-         * @hide
-         */
-        public static final String RECENT_PANEL_SHOW_TOPMOST = "recent_panel_show_topmost";
-
-        /**
-         * Recent panel background color
-         *
-         * @hide
-         */
-        public static final String RECENT_PANEL_BG_COLOR = "recent_panel_bg_color";
-
-        /**
-         * Recent card background color
-         *
-         * @hide
-         */
-        public static final String RECENT_CARD_BG_COLOR = "recent_card_bg_color";
-
-        /**
-         * Recent card text color
-         *
-         * @hide
-         */
-        public static final String RECENT_CARD_TEXT_COLOR = "recent_card_text_color";
-
-        /**
-         * Recent app sidebar content
-         *
-         * @hide
-         */
-        public static final String RECENT_APP_SIDEBAR_CONTENT = "recent_app_sidebar_content";
-
-        /**
-         * Disable text labels for the slim recent app sidebar items
-         *
-         * @hide
-         */
-        public static final String RECENT_APP_SIDEBAR_DISABLE_LABELS = "recent_app_sidebar_disable_labels";
-
-        /**
-         * Slim recent app sidebar background color
-         *
-         * @hide
-         */
-        public static final String RECENT_APP_SIDEBAR_BG_COLOR = "recent_app_sidebar_bg_color";
-
-        /**
-         * Slim recent app sidebar text color
-         *
-         * @hide
-         */
-        public static final String RECENT_APP_SIDEBAR_TEXT_COLOR = "recent_app_sidebar_text_color";
-
-
-        /**
-         * Whether to use slim recent app sidebar
-         * @hide
-         */
-        public static final String USE_RECENT_APP_SIDEBAR = "use_recent_app_sidebar";
-
-	/**
-         * Whether the app sidebar should open simultaneously with recents
-         * Alternative: recents are allowed to open before the app sidebar finished inflating
-         *
-         * @hide
-         */
-        public static final String RECENT_APP_SIDEBAR_OPEN_SIMULTANEOUSLY =
-                "recent_app_sidebar_open_simultaneously";
-
-        /**
-         * Size of recent app sidebar in percent (default = 100).
-         *
-         * @hide
-         */
-        public static final String RECENT_APP_SIDEBAR_SCALE_FACTOR = "recent_app_sidebar_scale_factor";
-
-        /**
-         * Whether or not to launch default music player when headset is connected
-         * @hide
-         */
-        public static final String HEADSET_CONNECT_PLAYER = "headset_connect_player";
-
-        /**
-         * Enable/Disable screenshot sound
-         * @hide
-         */
-        public static final String SCREENSHOT_SOUND = "screenshot_sound";
-
-        /**
-         * enable custom lockscreen max notifications config
-         * @hide
-         */
-        public static final String LOCK_SCREEN_CUSTOM_NOTIF = "lock_screen_custom_notif";
-
-        /**
-         * custom lockscreen max notification config
-         * @hide
-         */
-        public static final String LOCKSCREEN_MAX_NOTIF_CONFIG = "lockscreen_max_notif_cofig";
-
-	/**
-         * Whether the proximity sensor will adjust call to speaker
-         * @hide
-         */
-        public static final String PROXIMITY_AUTO_SPEAKER = "proximity_auto_speaker";
-
-        /**
-         * Time delay to activate speaker after proximity sensor triggered
-         * @hide
-         */
-        public static final String PROXIMITY_AUTO_SPEAKER_DELAY = "proximity_auto_speaker_delay";
-
-        /**
-         * Whether the proximity sensor will adjust call to speaker,
-         * only while in call (not while ringing on outgoing call)
-         * @hide
-         */
-        public static final String PROXIMITY_AUTO_SPEAKER_INCALL_ONLY =
-                "proximity_auto_speaker_incall_only";
-
-        /**
-         * Transparent qs shade
-         * @hide
-         */
-        public static final String QS_TRANSPARENT_SHADE = "qs_transparent_shade";
-
-        /**
-         * Whether to apply a shadow on top of the header image
-         * value is the alpha value of the shadow image is 0 -> no shadow -> 255 black
-         * @hide
-         */
-        public static final String STATUS_BAR_CUSTOM_HEADER_SHADOW = "status_bar_custom_header_shadow";
-
- 	/**
-         * Color of the clear all icon in the notification drawer
-         * @hide
-         */
-        public static final String NOTIFICATION_DRAWER_CLEAR_ALL_ICON_COLOR = "nd_clear_all_icon_color";
-
-        /**
-         * Whether to prevent loud volume levels when headset is first plugged in.
-         * @hide
-         */
-        public static final String SAFE_HEADSET_VOLUME = "safe_headset_volume";
-
-        /**
-         * whether to enable torch on lockscreen
-         * @hide
-         */
-        public static final String KEYGUARD_TOGGLE_TORCH = "keyguard_toggle_torch";
-        
-        /**
-         * whether to enable /disable showing charging current on lockscreen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_SHOW_CURRENT = "lock_screen_show_current";
-
-
-	/**
-         * Color of the signal icons on the status bar
-         * @hide
-         */
-        public static final String STATUS_BAR_NETWORK_ICONS_SIGNAL_COLOR = "status_bar_network_icons_signal_color";
-
-        /**
-         * Color of the signal icons on the status bar, (dark mode)
-         * @hide
-         */
-        public static final String STATUS_BAR_NETWORK_ICONS_SIGNAL_COLOR_DARK_MODE = "status_bar_network_icons_signal_color_dark_mode";
-
-        /**
-         * Color of the no sim icon on the status bar
-         * @hide
-         */
-        public static final String STATUS_BAR_NETWORK_ICONS_NO_SIM_COLOR = "status_bar_network_icons_no_sim_color";
-
-        /**
-         * Color of the no sim icon on the status bar, (dark mode)
-         * @hide
-         */
-        public static final String STATUS_BAR_NETWORK_ICONS_NO_SIM_COLOR_DARK_MODE = "status_bar_network_icons_no_sim_color_dark_mode";
-
-        /**
-         * Color of the airplane mode icon on the status bar
-         * @hide
-         */
-        public static final String STATUS_BAR_NETWORK_ICONS_AIRPLANE_MODE_COLOR = "status_bar_network_icons_airplane_mode_color";
-
-        /**
-         * Color of the airplane mode icon on the status bar, (dark mode)
-         * @hide
-         */
-        public static final String STATUS_BAR_NETWORK_ICONS_AIRPLANE_MODE_COLOR_DARK_MODE = "status_bar_network_icons_airplane_mode_color_dark_mode";
-
-        /**
-         * Color of the status icons on the status bar
-         * @hide
-         */
-        public static final String STATUS_BAR_STATUS_ICONS_COLOR = "status_bar_status_icons_status_color";
-
-        /**
-         * Color of the status icons on the status bar, (dark mode)
-         * @hide
-         */
-        public static final String STATUS_BAR_STATUS_ICONS_COLOR_DARK_MODE = "status_bar_status_icons_status_color_color_dark_mode";
-
-        /**
-         * Color of the notification icons on the status bar
-         * @hide
-         */
-        public static final String STATUS_BAR_NOTIFICATION_ICONS_COLOR = "status_bar_notification_icons_color";
-
-        /**
-         * Color of the notification icons on the status bar, (dark mode)
-         * @hide
-         */
-        public static final String STATUS_BAR_NOTIFICATION_ICONS_COLOR_DARK_MODE = "status_bar_notification_icons_color_dark_mode";
-
-        /**
-         * Color of the weather text on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_TEXT_COLOR = "lock_screen_weather_text_color";
-
-        /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_ICON_COLOR = "lock_screen_weather_icon_color";
-
-  	 /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_TEMP_COLOR = "lock_screen_weather_temp_color";
-
- 	 /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_CON_COLOR = "lock_screen_weather_con_color";
-
-  	 /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_STAMP_COLOR = "lock_screen_weather_stamp_color";
-
-  	 /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_HUM_COLOR = "lock_screen_weather_hum_color";
-
-  	 /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_CITY_COLOR = "lock_screen_weather_city_color";
-
-        /**
-         * Master switch for clock color
-         * @hide
-         */
-        public static final String STATUSBAR_CLOCK_COLOR_SWITCH = "statusbar_clock_color_switch";
-
-  	 /**
-         * Color of the weather condition icons on the lock screen
-         * @hide
-         */
-        public static final String LOCK_SCREEN_WEATHER_WIND_COLOR = "lock_screen_weather_wind_color";
-
-
-        /**
-         * Immersive recents options
-         *
-         * 0 = Default AOSP look
-         * 1 = Statusbar only
-         * 2 = Navbar only
-         * 3 = Fullscreen
-         */ 
-        public static final String IMMERSIVE_RECENTS = "immersive_recents";
-
-        /**
-         * Change the number of columns displayed in the Settings dashboard
-         * @hide
-         */
-        public static final String DASHBOARD_COLUMNS = "dashboard_columns";
-
-        /**
-         * Give Missed call notifications a breathing effect
-         * @hide
-         */
-        public static final String KEY_MISSED_CALL_BREATH = "missed_call_breath";
-
-        /**
-         * Give Voicemail notifications a breathing effect
-         * @hide
-         */
-        public static final String KEY_VOICEMAIL_BREATH = "voicemail_breath";
-
-        /**
-         * Give SMS notifications a breathing effect
-         * @hide
-         */
-        public static final String KEY_SMS_BREATH = "sms_breath";
-
-        /**
-         * Transparent qs header
-         * @hide
-         */
-        public static final String QS_TRANSPARENT_HEADER = "qs_transparent_header";
-
-        /**
-         * Transparent volume dialog
-         * @hide
-         */
-        public static final String TRANSPARENT_VOLUME_DIALOG = "transparent_volume_dialog";
-
-        /**
-         * Transparent power menu and dialogs
-         * @hide
-         */
-        public static final String TRANSPARENT_POWER_MENU = "transparent_power_menu";
-
-        /**
-         * Dim amount around power/reboot menu dialogs
-         * @hide
-         */
-        public static final String TRANSPARENT_POWER_DIALOG_DIM = "transparent_power_dialog_dim";
-
-        /**
-         * Whether to display dashboard dividers
-         * @hide
-         */
-        public static final String DASHBOARD_TILEVIEW_DIVIDERS = "dashboard_tileview_dividers";
-
-        /**
-         * Whether to display dashboard tiles in a double line layout
-         * @hide
-         */
-        public static final String DASHBOARD_TILEVIEW_DOUBLE_LINES = "dashboard_tileview_double_lines";
-
-        /**
-         * Custom status bar header font style
-         * @hide
-         */
-        public static final String STATUS_BAR_HEADER_FONT_STYLE = "status_bar_header_font_style";
-
-        /**
-         * Add rotation to navbar buttons on navbar recreate (rotate screen, etc)
-         * @hide
-         */
-        public static final String NAV_BUTTONS_ROTATION = "nav_buttons_rotation";
-
-
-        /** Whether to vibrate when quick settings tile is Single pressed.
-         *
-         * @hide
-         */
-        public static final String QUICK_SETTINGS_SP_VIBRATE = "quick_settings_sp_vibrate";
-
-        /** Whether to vibrate when Settings icon is pressed.
-         *
-         * @hide
-         */
-        public static final String QUICK_SETTINGS_ICON_VIBRATE = "quick_settings_icon_vibrate";
-
-        /** Whether to vibrate when Header Items are pressed.
-         *
-         * @hide
-         */
-        public static final String QUICK_SETTINGS_HEADER_VIBRATE = "quick_settings_header_vibrate";
-
-        /** Whether to vibrate when Header Items are Long pressed.
-         *
-         * @hide
-         */
-        public static final String QUICK_SETTINGS_HEADER_VIBRATE_LONG = "quick_settings_header_vibrate_long";
-        
-       
-        /**
-         * Use "main" tiles on the first row of the quick settings panel
-         * 0 = no, 1 = yes
-         * @hide
-         */
-         
-        public static final String QS_USE_MAIN_TILES = "qs_use_main_tiles";
-
-        /**
-         * Quick Settings Smart Pulldown
-         * @hide
-         */
-        public static final String QS_SMART_PULLDOWN = "qs_smart_pulldown";
-
-        /**
-         * Quick Settings Color Switch
-         * @hide
-         */
-        public static final String QS_COLOR_SWITCH = "qs_color_switch";
-
-        /**
-         * Quick Settings Header Text Color
-         * @hide
-         */
-        public static final String QS_HEADER_TEXT_COLOR = "qs_header_text_color";
-
-        /**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String HEADER_BACKGROUND_GRADIENT_USE_CENTER_COLOR = "header_background_gradient_use_center_color";
-
-        /**
-         * Orientation of the background colors of expanded header
-         * @hide
-         */
-        public static final String HEADER_BACKGROUND_GRADIENT_ORIENTATION = "header_background_gradient_orientation";
-
-        /**
-         * Use a center color for header background
-         * @hide
-         */
-        public static final String HEADER_BACKGROUND_COLOR_START = "header_background_color_start";
-
-        /**
-         * Start color of the status bar header
-         * @hide
-         */
-        public static final String HEADER_BACKGROUND_COLOR_CENTER = "header_background_color_center";
-
-        /**
-         * Center color of the status bar header
-         * @hide
-         */
-        public static final String HEADER_BACKGROUND_COLOR_END = "header_background_color_end";
-
-	/**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_BACKGROUND_GRADIENT_USE_CENTER_COLOR = "volume_dialog_background_gradient_use_center_color";
-
-        /**
-         * Orientation of the background colors of expanded header
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_BACKGROUND_GRADIENT_ORIENTATION = "volume_dialog_background_gradient_orientation";
-
-        /**
-         * Use a center color for header background
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_BACKGROUND_COLOR_START = "volume_dialog_background_color_start";
-
-        /**
-         * Start color of the status bar header
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_BACKGROUND_COLOR_CENTER = "volume_dialog_background_color_center";
-
-        /**
-         * Center color of the status bar header
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_BACKGROUND_COLOR_END = "volume_dialog_background_color_end";
-
-        /**
-         * Expanded header stroke
-         * 0 = disabled
-         * 1 = use accent color (default)
-         * 2 = use custom color
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_HEADER_STROKE = "status_bar_expanded_header_stroke";
-
-        /**
-         * Expanded header stroke custom color
-         * Accent color is used as default
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_HEADER_STROKE_COLOR = "status_bar_expanded_header_stroke_color";
-
-        /**
-         * Expanded header stroke custom thickness
-         * 4dp is default for Cyanide
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_HEADER_STROKE_THICKNESS = "status_bar_expanded_header_stroke_thickness";
-
-        /**
-         * Expanded header custom corner radius
-         * 0dp is default
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_HEADER_CORNER_RADIUS = "status_bar_expanded_header_corner_radius";
-
-        /**
-         * Expanded header custom stroke dash width
-         * Set 0 to disable (default)
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_HEADER_STROKE_DASH_WIDTH = "status_bar_expanded_header_stroke_dash_width";
-
-        /**
-         * Expanded header custom stroke dash width
-         * Set 0 to disable (default)
-         * @hide
-         */
-        public static final String STATUS_BAR_EXPANDED_HEADER_STROKE_DASH_GAP = "status_bar_expanded_header_stroke_dash_gap";
-
-        /**
-         * Use a center color for header background
-         * @hide
-         */
-        public static final String QS_HEADER_COLOR = "qs_header_color";
-
-
-        /**
-         * Quick Settings Text Color
-         * @hide
-         */
-        public static final String QS_TEXT_COLOR = "qs_text_color";
-
-        /**
-         * Quick Settings Icon Color
-         * @hide
-         */
-        public static final String QS_ICON_COLOR = "qs_icon_color";
-
-        /**
-         * Quick Settings BG Color
-         * @hide
-         */
-        public static final String QS_BACKGROUND_COLOR = "qs_bg_color";
-
-       /**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String QS_BACKGROUND_GRADIENT_USE_CENTER_COLOR = "qs_background_gradient_use_center_color";
-
-        /**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String QS_BACKGROUND_GRADIENT_ORIENTATION = "qs_background_gradient_orientation";
-
-        /**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String QS_BACKGROUND_COLOR_START = "qs_background_color_start";
-
-        /**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String QS_BACKGROUND_COLOR_CENTER = "qs_background_color_center";
-
-        /**
-         * Color of the quick settings panel background
-         * @hide
-         */
-        public static final String QS_BACKGROUND_COLOR_END = "qs_background_color_end";
-
-
-        /**
-         * Quick Settings Brightness Icon Color
-         * @hide
-         */
-        public static final String QS_BRIGHTNESS_ICON_COLOR = "qs_brightness_icon_color";
-
-        /**
-         * header image package to use for daylight header - package name - null if default
-         * @hide
-         */
-        public static final String STATUS_BAR_DAYLIGHT_HEADER_PACK = "status_bar_daylight_header_pack";
-
-	/**
-         * What color to use for the battery LED while charging - really full (100%)
-         * @hide
-         */
-        public static final String BATTERY_LIGHT_REALLY_FULL_COLOR = "battery_light_really_full_color";
-
-        /**
-         * Define when Nfc polling is activated.
-         * @hide
-         */
-        public static final String NFC_POLLING_MODE = "nfc_polling";
-
-        /** Whether to vibrate when quick settings tile is pressed.
-         *
-         * @hide
-         */
-        public static final String QUICK_SETTINGS_TILES_VIBRATE = "quick_settings_vibrate";
-
-        /**
-         * Snooze time for heads up
-         *
-         * @hide
-         */
-        public static final String HEADS_UP_SNOOZE_LENGTH_MS = "heads_up_snooze_length_ms";
-
-        /**
-         * Force heads up in all applications
-         * @hide
-         */
-        public static final String HEADS_UP_FORCE_ALL = "heads_up_force_all";
-
-        /**
-         * Whether to enable status and navigation bar color in battery saver mode.
-         *
-         * @hide
-         */
-        public static final String BATTERY_SAVER_MODE_COLOR = "battery_save_mode_color";
-
-        /**
-         *  List of apps hidden from recents
-         * @hide
-         */
-        public static final String HIDE_FROM_RECENTS_LIST = "hide_from_recents_list";
-		
-	/**
-         * Option to launch slim actions in floating mode
-         * @hide
-         */
-        public static final String SLIM_ACTION_FLOATS = "slim_action_floats";
-
-        /**
-         * Control the use of floating windows
-         * 0 = off
-         * 1 = on, duh
-         * @hide
-         */
-        public static final String FLOATING_WINDOW_MODE = "floating_window_mode";
-
-        /**
-         * Launch gesture anywhere in floating window or not
-         * @hide
-         */
-        public static final String GESTURE_ANYWHERE_FLOATING = "gesture_anywhere_floating";
-
-        /**
-         * Whether to display a menu containing 'Wipe data', 'Force close' and other options
-         * in the notification area and in the recent app list
-         * @hide
-         */
-        public static final String DEVELOPMENT_SHORTCUT = "development_shortcut";
-
-        /**
-         * Config for advanced pa pie 2.0
-         *
-         * @hide
-         */
-        public static final String PA_PIE_CONFIG = "pa_pie_config";
-
-       /**
-        * PA Pie control panel. Meet him on the spot.
-        * 0 = off
-        * 1 = on
-        * Changes aspect depends on status bar visibility.
-        * @hide
-        */
-        public static final String PA_PIE_STATE = "pa_pie_state";
-
-        /**
-         * Pie size fraction, default is 1.0f (normal)
-         * @hide
-         */
-        public static final String PA_PIE_SIZE = "pa_pie_size";
-
-        /**
-         * Locations of the Pa Pie in the screen.
-         * (1<<0) = LEFT
-         * (1<<1) = BOTTOM
-         * (1<<2) = RIGHT
-         * (1<<3) = TOP
-         * Default: LEFT
-         * @hide
-         */
-        public static final String PA_PIE_GRAVITY = "pa_pie_gravity";
-
-        /**
-         * Pie gap angle, should default to 2
-         * @hide
-         */
-        public static final String PA_PIE_GAP = "pa_pie_gap";
-
-        /**
-         * Pie empty angle, should default to 12
-         * @hide
-         */
-        public static final String PA_PIE_ANGLE = "pa_pie_angle";
-
-        /**
-         * Whether to use a separate delay for "slide to unlock" and security
-         * lock
-         * Pie status report
-         * 0 = Bare
-         * 1 = Quick
-         * 2 = Default
-         * 3 = Slow
-         * @hide
-         */
-        public static final String PA_PIE_MODE = "pa_pie_mode";
-
-        /**
-         * PA Pie menu, should default to 1 (yes, show)
-         * @hide
-         */
-        public static final String PA_PIE_MENU = "pa_pie_menu";
-
-        /**
-         * PA Pie last app, should default to 0 (no, show only when needed)
-         * @hide
-         */
-        public static final String PA_PIE_LAST_APP = "pa_pie_last_app";
-
-        /**
-         * PA Pie kill task, default to 0 (off)
-         * @hide
-         */
-        public static final String PA_PIE_KILL_TASK = "pa_pie_kill_task";
-
-        /**
-         * PA Pie action notifications, default to off
-         * @hide
-         */
-        public static final String PA_PIE_NOTIFICATIONS = "pa_pie_notifications";
-
-        /**
-         * Pie quick settings panel
-         * @hide
-         */
-        public static final String PA_PIE_SETTINGS_PANEL = "pa_pie_settings_panel";
-
-        /**
-         * PA Pie power, should default to 0 (no, show only when needed)
-         * @hide
-         */
-        public static final String PA_PIE_POWER = "pa_pie_power";
-
-        /**
-         * Pie screenshot
-         * @hide
-         */
-        public static final String PA_PIE_SCREENSHOT = "pa_pie_screenshot";
-
-        /**
-         * Pie toggles torch
-         * @hide
-         */
-        public static final String PA_PIE_TORCH = "pa_pie_torch";
-
-        /**
-         * Pie power menu
-         * @hide
-         */
-        public static final String PA_PIE_POWER_MENU = "pa_pie_power_menu";
-
-        /**
-         * Pie expanded desktop
-         * @hide
-         */
-        public static final String PA_PIE_EXPANDED_DESKTOP = "pa_pie_expanded_desktop";
-
-       // PIE COLORS EVERYWHERE! //
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_ENABLE_COLOR = "pa_pie_enable_color";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_JUICE = "pa_pie_juice";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_BUTTON_COLOR = "pa_pie_button_color";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_SNAP_BACKGROUND = "pa_pie_snap_background";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_BACKGROUND = "pa_pie_background";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_SELECT = "pa_pie_select";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_OUTLINES = "pa_pie_outlines";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_STATUS_CLOCK = "pa_pie_status_clock";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_STATUS = "pa_pie_status";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_CHEVRON = "pa_pie_chevron";
-
-        /**
-         * @hide
-         */
-        public static final String PA_PIE_ALWAYS_RIGHT = "pa_pie_always_right";
-
-        /**
-         * Hide carrier label based on number of notification icons
-         * @hide
-         */
-        public static final String HIDE_CARRIER_MAX_SWITCH = "hide_carrier_max_switch";
-
-        /**
-         * Hide the carrier label on the status bar depending on the amount of notifications
-         *
-         * 1 notification icon (always)
-         * 2 notification icons
-         * 3 notification icons
-         * 4 notification icons
-         * 5 notification icons
-         * 6 notification icons
-         * @hide
-         */
-        public static final String HIDE_CARRIER_MAX_NOTIFICATION = "hide_carrier_max_notification";
-
-        /**
-         * Whether to show the battery fully charged notification
-         * @hide
-         */
-        public static final String BATTERY_FULLY_CHARGED_NOTIFICATION = "battery_fully_charged_notification";
-
-        /**
-         * Volume dialog stroke
-         * 0 = disabled
-         * 1 = use accent color (default)
-         * 2 = use custom color
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_STROKE = "volume_dialog_stroke";
-
-        /**
-         * Volume dialog stroke custom color
-         * Accent color is used as default
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_STROKE_COLOR = "volume_dialog_stroke_color";
-
-        /**
-         * Volume dialog stroke custom thickness
-         * 4dp is default for RR
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_STROKE_THICKNESS = "volume_dialog_stroke_thickness";
-
-        /**
-         * Volume dialog custom corner radius
-         * 2dp is system default for VolumeDialog
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_CORNER_RADIUS = "volume_dialog_corner_radius";
-
-        /**
-         * Volume dialog custom stroke dash width
-         * Set 0 to disable (default)
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_STROKE_DASH_WIDTH = "volume_dialog_stroke_dash_width";
-
-        /**
-         * Volume dialog custom stroke dash gap
-         * 10 is default for RR
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_STROKE_DASH_GAP = "volume_dialog_stroke_dash_gap";
-
-        /**
-         * Volume dialog color
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_COLOR_SWITCH = "volume_dialog_color_switch";
-
-	/**
-         * Icon color of the volume dialog
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_ICON_COLOR = "volume_dialog_icon_color";
-
-        /**
-         * Slider color of the volume dialog
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_SLIDER_COLOR = "volume_dialog_slider_color";
-
-        /**
-         * Slider icon color of the volume dialog
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_SLIDER_ICON_COLOR = "volume_dialog_slider_icon_color";
-
-        /**
-         * Inactive color of the volume dialog slider
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_SLIDER_INACTIVE_COLOR = "volume_dialog_slider_inactive_color";
-
-        /**
-         * Slider icon color of the volume dialog
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_EXPAND_BUTTON_COLOR = "volume_dialog_expand_button_color";
-        
-                /**
-         * Quick settings stroke
-         * 0 = disabled
-         * 1 = use accent color (default)
-         * 2 = use custom color
-         * @hide
-         */
-        public static final String QS_CUSTOM_MASTER_SWITCH = "qs_custom_master_switch";
-        
-         /**
-         * Quick settings stroke
-         * master switch
-         * @hide
-         */
-        public static final String QS_HEADER_MASTER_SWITCH = "qs_header_master_switch";
-
-        /**
-         * Quick settings stroke
-         * 0 = disabled
-         * 1 = use accent color (default)
-         * 2 = use custom color
-         * @hide
-         */
-        public static final String QS_STROKE = "qs_stroke";
-
-        /**
-         * Color of the quick settings icon background ripple effect
-         * @hide
-         */
-        public static final String QS_RIPPLE_COLOR = "qs_ripple_color";
-
-        /**
-         *  Color of the used portion of the qs brightness slider
-         * @hide
-         */
-        public static final String QS_BRIGHTNESS_SLIDER_COLOR = "qs_brightness_slider_color";
-
-        /**
-         *  Color of the unused portion of the qs brightness slider
-         * @hide
-         */
-        public static final String QS_BRIGHTNESS_SLIDER_BG_COLOR = "qs_brightness_slider_bg_color";
-
-        /**
-         * Quick settings stroke custom color
-         * Accent color is used as default
-         * @hide
-         */
-        public static final String QS_STROKE_COLOR = "qs_stroke_color";
-
-        /**
-         * Quick settings stroke custom thickness
-         * 4dp is default for RR
-         * @hide
-         */
-        public static final String QS_STROKE_THICKNESS = "qs_stroke_thickness";
-
-        /**
-         * Quick settings custom corner radius
-         * 0dp is default
-         * @hide
-         */
-        public static final String QS_CORNER_RADIUS = "qs_corner_radius";
-
-        /**
-         * Quick settings custom stroke dash width
-         * Set 0 to disable (default)
-         * @hide
-         */
-        public static final String QS_STROKE_DASH_WIDTH = "qs_stroke_dash_width";
-
-        /**
-         * Quick settings custom stroke dash gap
-         * 10 is default for RR
-         * @hide
-         */
-        public static final String QS_STROKE_DASH_GAP = "qs_stroke_dash_gap";
-
-        /**
-         * Quick settings RR logo style
-         *
-         * @hide
-         */
-        public static final String QS_PANEL_LOGO_STYLE = "qs_panel_logo_style";
-
-
-        /**
-         * Quick settings RR logo
-         *
-         * @hide
-         */
-        public static final String QS_PANEL_LOGO = "qs_panel_logo";
-
-        /**
-         * Quick settings RR logo color
-         *
-         * @hide
-         */
-        public static final String QS_PANEL_LOGO_COLOR = "qs_panel_logo_color";
-
-        /**
-         * Quick settings RR logo alpha
-         *
-         * @hide
-         */
-        public static final String QS_PANEL_LOGO_ALPHA = "qs_panel_logo_alpha";
-
-        /**
-         * Volume dialog timeout
-         *
-         * @hide
-         */
-        public static final String VOLUME_DIALOG_TIMEOUT = "volume_dialog_timeout";
-
-        /**
-         * Animation of panels during task manager/quick settings change
-         * @hide
-         */
-
-        public static final String QS_TASK_ANIMATION = "qs_task_animation";
-
-        /**
-         * Recents Blur 
-         * @hide
-         */
-        public static final String RECENT_APPS_ENABLED_PREFERENCE_KEY = "blurred_recent_app_enabled_pref";
+          * Volume keys control cursor in text fields (default is 0)
+          * 0 - Disabled
+          * 1 - Volume up/down moves cursor left/right
+          * 2 - Volume up/down moves cursor right/left
+          * @hide
+          */
+         public static final String VOLUME_KEY_CURSOR_CONTROL = "volume_key_cursor_control";
 
         /**
-         * Notifications alpha
-         *
+         * Whether to enable voice wakeup.  The value is boolean (1 or 0).
          * @hide
          */
-        public static final String NOTIFICATION_ALPHA = "notification_alpha";
+        public static final String VOICE_WAKEUP = "voice_wakeup";
 
         /**
-         * Enable\Disable Bluetooth Battery bar
+         * An intent (a flattened Uri String) to launch when user voice launch
+         * action is detected. An empty or null string will launch the default
+         * voice search activity.
          * @hide
          */
-        public static final String BLUETOOTH_SHOW_BATTERY = "bluetooth_show_battery";
+        public static final String VOICE_LAUNCH_INTENT = "voice_launch_intent";
 
         /**
-         * Hide Zen icon in statusbar
+         * Volume key controls ringtone or media sound stream
          * @hide
          */
-        public static final String SHOW_ZEN_ICON = "show_zen_icon";
-
+        public static final String VOLUME_KEYS_CONTROL_RING_STREAM =
+                "volume_keys_control_ring_stream";
 
         /**
          * Settings to backup. This is here so that it's in the same place as the settings
@@ -6773,14 +4031,6 @@ public final class Settings {
             Secure.WIFI_WATCHDOG_PING_TIMEOUT_MS;
 
         /**
-         * Whether flip action during incomming call should mute or dismiss
-         * the call (mute = 0, dismiss = 1, nothing = 2 (default))
-         *
-         * @hide
-         */
-        public static final String CALL_FLIP_ACTION_KEY = "call_flip_action_key";
-
-        /**
          * An app can use this method to check if it is currently allowed to write or modify system
          * settings. In order to gain write access to the system settings, an app must declare the
          * {@link android.Manifest.permission#WRITE_SETTINGS} permission in its manifest. If it is
@@ -6830,7 +4080,6 @@ public final class Settings {
             MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_PATTERN_ENABLED);
             MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_PATTERN_VISIBLE);
             MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED);
-            MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_PASS_TO_SECURITY_VIEW);
             MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_PATTERN_SIZE);
             MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_DOTS_VISIBLE);
             MOVED_TO_LOCK_SETTINGS.add(Secure.LOCK_SHOW_ERROR_PATH);
@@ -7604,12 +4853,6 @@ public final class Settings {
                 LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED = "lock_pattern_tactile_feedback_enabled";
 
         /**
-
-         * Whether keyguard will direct show security view (0 = false, 1 = true)
-         * @hide
-         */
-        public static final String LOCK_PASS_TO_SECURITY_VIEW = "lock_screen_pass_to_security_view";
-  	/**
          * Determines the width and height of the LockPatternView widget
          * @hide
          */
@@ -7628,15 +4871,6 @@ public final class Settings {
         public static final String LOCK_SHOW_ERROR_PATH = "lock_pattern_show_error_path";
 
         /**
-         * Disable checking for running overlays during permission changes
-         * running OmniSwicth will trigger this and we want to give people
-         * possibility to make it easier on demand
-         *
-         * @hide
-         */
-        public static final String PACKAGE_INSTALL_OVERLAY_CHECK_DISABLED = "package_install_overlay_check_disabled";
-
-        /**
          * This preference allows the device to be locked given time after screen goes off,
          * subject to current DeviceAdmin policy limits.
          * @hide
@@ -8637,20 +5871,6 @@ public final class Settings {
          */
         public static final String DOZE_ENABLED = "doze_enabled";
 
-
-
-        /**
-         * Whether the device should color invert notifications when doze if enabled.
-         * @hide
-         */
-        public static final String DOZE_NOTIFICATION_INVERT_ENABLED = "doze_notification_invert_enabled";
-
-        /**
-         * Add or remove software navigation bar
-         * @hide
-         */
-        public static final String NAVIGATION_BAR_VISIBLE = "navigation_bar_visible";
-        
         /**
          * The current night mode that has been selected by the user.  Owned
          * and controlled by UiModeManagerService.  Constants are as per
@@ -8894,322 +6114,6 @@ public final class Settings {
          */
         public static final String VOLUME_LINK_NOTIFICATION = "volume_link_notification";
 
-         /**
-         * Whether user is allowed to pull down quick settings on secure keyguard.
-         * @hide
-         */
-        public static final String STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD = "status_bar_locked_on_secure_keyguard";
-
-        /**
-         * Whether the reboot submenu at the power menu should trigger actions with a
-         * single click or with a confirmation.
-         * @hide
-         */
-        public static final String ADVANCED_REBOOT_ONECLICK = "advanced_reboot_oneclick";
-
-        /**
-         * Enable Disable Halo In Extended Statusbar
-         * @hide
-         */
-        public static final String HALO_ENABLE = "halo_enable";
-
-
-        /**
-         * HALO, should default to 0 (no, do not show)
-         * @hide
-         */
-        public static final String HALO_ACTIVE = "halo_active";
-
-        /**
-         * HALO hide?, should default to 0 (no, do not hide)
-         * @hide
-         */
-        public static final String HALO_HIDE = "halo_hide";
-
-        /**
-         * HALO pause activities?, defaults to 0 (no, do not pause) on devices which isLargeRAM() == true
-         * otherwise it defaults to 1 (yes, do pause)
-         * @hide
-         */
-        public static final String HALO_PAUSE = "halo_pause";
-
-        /**
-         * HALO size fraction, default is 1.0f (normal)
-         * @hide
-         */
-        public static final String HALO_SIZE = "halo_size";
-
-        /**
-         * Whether to use one tap tile action to enable or disable data 
-         * @hide
-         */
-        public static final String QS_DATA_ADVANCED = "qs_data_advanced";
-
-        /**
-         * HALO message box?, should default to 1 (yes, show message box on incoming notification) [1/2]
-         * @hide
-         */
-        public static final String HALO_MSGBOX = "halo_msgbox";
-
-        /**
-         * HALO notificatoin count?, should default to 4 (both)
-         * @hide
-         */
-        public static final String HALO_NOTIFY_COUNT = "halo_notify_count";
-
-        /**
-         * HALO message box animation?, should default to 2 (flip animation)
-         * @hide
-         */
-        public static final String HALO_MSGBOX_ANIMATION = "halo_msgbox_animation";
-
-        /**
-         * HALO unlock ping?, should default to 0 (no, do not ping on unlock)
-         * @hide
-         */
-        public static final String HALO_UNLOCK_PING = "halo_unlock_ping";
-
-        /**
-         * HALO color, default is 0xffbbbbbb (normal)
-         * @hide
-         */
-        public static final String HALO_COLOR = "halo_color";
-
-        /**
-         * @hide
-         */
-        public static final String NAVIGATION_BAR_HEIGHT_LANDSCAPE = "navigation_bar_height_landscape";
-
-        /**
-         * @hide
-         */
-        public static final String NAVIGATION_BAR_HEIGHT = "navigation_bar_height";
-
-        /**
-         * @hide
-         */
-        public static final String NAVIGATION_BAR_WIDTH = "navigation_bar_width";
-
-        /**
-         * Navigation bar mode
-         *
-         * @hide
-         */
-        public static final String NAVIGATION_BAR_MODE = "navigation_bar_mode";
-
-        /**
-         * Fling actions
-         *
-         * @hide
-         */
-        public static final String FLING_GESTURE_ACTIONS = "fling_gesture_configs";
-
-        /**
-         * Fling logo visible
-         *
-         * @hide
-         */
-        public static final String FLING_LOGO_VISIBLE = "fling_logo_visible";
-
-        /**
-         * Fling logo animates
-         *
-         * @hide
-         */
-        public static final String FLING_LOGO_ANIMATES= "fling_logo_animates";
-
-        /**
-         * Fling logo animates
-         *
-         * @hide
-         */
-        public static final String FLING_LOGO_COLOR = "fling_logo_color";
-
-        /**
-         * Fling pulse music visualizer
-         *
-         * @hide
-         */
-        public static final String FLING_PULSE_ENABLED = "fling_pulse_enabled";
-
-        /**
-         * Fling pulse music visualizer color
-         *
-         * @hide
-         */
-        public static final String FLING_PULSE_COLOR = "fling_pulse_color";
-
-        /**
-         * Fling ripple effect
-         *
-         * @hide
-         */
-        public static final String FLING_RIPPLE_ENABLED = "fling_ripple_enabled";
-
-        /**
-         * Fling ripple color
-         *
-         * @hide
-         */
-        public static final String FLING_RIPPLE_COLOR = "fling_ripple_color";
-
-        /**
-         * Fling gesture trails on/off
-         *
-         * @hide
-         */
-        public static final String FLING_TRAILS_ENABLED = "fling_trails_enabled";
-
-        /**
-         * Fling gesture trails color
-         *
-         * @hide
-         */
-        public static final String FLING_TRAILS_COLOR = "fling_trails_color";
-
-        /**
-         * Fling pulse lavalamp psychedelic colors
-         *
-         * @hide
-         */
-        public static final String FLING_PULSE_LAVALAMP_ENABLED = "fling_pulse_lavalamp_enabled";
-
-        /**
-         * Fling pulse lavalamp animation speed
-         *
-         * @hide
-         */
-        public static final String FLING_PULSE_LAVALAMP_SPEED = "fling_pulse_lavalamp_speed";
-
-        /**
-         * Pulse renderer implementation
-         *
-         * @hide
-         */
-        public static final String PULSE_RENDER_STYLE_URI = "pulse_render_style";
-
-        /**
-         * time it takes to execute Fling long press action
-         *
-         * @hide
-         */
-        public static final String FLING_LONGPRESS_TIMEOUT = "fling_longpress_timeout";
-
-        /**
-         * distance to swipe right when device is in portrait orientation to
-         * trigger action
-         *
-         * @hide
-         */
-        public static final String FLING_LONGSWIPE_THRESHOLD_RIGHT_PORT = "fling_longswipe_threshold_right_port";
-
-        /**
-         * distance to swipe left when device is in portrait orientation to
-         * trigger action
-         *
-         * @hide
-         */
-        public static final String FLING_LONGSWIPE_THRESHOLD_LEFT_PORT = "fling_longswipe_threshold_left_port";
-
-        /**
-         * distance to swipe right when device is in landscape orientation to
-         * trigger action. Apples to a horizontal layout (tablet/phablet)
-         *
-         * @hide
-         */
-        public static final String FLING_LONGSWIPE_THRESHOLD_RIGHT_LAND = "fling_longswipe_threshold_right_land";
-
-        /**
-         * distance to swipe left when device is in landscape orientation to
-         * trigger action. Apples to a horizontal layout (tablet/phablet)
-         *
-         * @hide
-         */
-        public static final String FLING_LONGSWIPE_THRESHOLD_LEFT_LAND = "fling_longswipe_threshold_left_land";
-
-        /**
-         * distance to swipe up when device is in landscape orientation to
-         * trigger action. Apples to a vertical layout (phones)
-         *
-         * @hide
-         */
-        public static final String FLING_LONGSWIPE_THRESHOLD_UP_LAND = "fling_longswipe_threshold_up_land";
-
-        /**
-         * distance to swipe down when device is in landscape orientation to
-         * trigger action. Apples to a horizontal layout (phones)
-         *
-         * @hide
-         */
-        public static final String FLING_LONGSWIPE_THRESHOLD_DOWN_LAND = "fling_longswipe_threshold_down_land";
-
-        /**
-         * width of Fling trails stroke, in density pixels
-         *
-         * @hide
-         */
-        public static final String FLING_TRAILS_WIDTH = "fling_trails_width";
-
-        /**
-         * Custom Pulse Widths
-         * @hide
-         */
-        public static final String PULSE_CUSTOM_DIMEN = "pulse_custom_dimen";
-                        
-        /**
-         * Custom Spacing Between Pulse Bars
-         * @hide
-         */
-        public static final String PULSE_CUSTOM_DIV = "pulse_custom_div";
-        
-        /**
-         * Size of Filled bars
-         * @hide
-         */
-        public static final String PULSE_FILLED_BLOCK_SIZE = "pulse_filled_block_size";
-        
-         /**
-         * Size of Empty Spaces Between Horizontal Visualizer Bars
-         * @hide
-         */
-        public static final String PULSE_EMPTY_BLOCK_SIZE = "pulse_empty_block_size";
-        
-         /**
-         * Pulse Fudge Factor
-         * @hide
-         */
-        public static final String PULSE_CUSTOM_FUDGE_FACTOR = "pulse_custom_fudge_factor";
-        
-         /**
-         * Pulse Fudge Factor
-         * @hide
-         */
-        public static final String PULSE_SOLID_FUDGE_FACTOR = "pulse_solid_fudge_factor";
-        
-         /**
-         * Pulse Lavamp Animation Speed
-         * @hide
-         */
-        public static final String LAVAMP_SOLID_SPEED = "lavamp_solid_speed";
-
-        /**
-         * Navbar buttons transparency
-         * @hide
-         */
-        public static final String NAVBAR_BUTTONS_ALPHA = "navbar_buttons_alpha";
-
-        /**
-         * Launch notifications in floating mode
-         * @hide
-         */
-        public static final String HALO_FLOAT_NOTIFICATIONS = "halo_float_notifications";
-
-	/**
-         * Components that the Themes qstile modifies
-         * @hide
-         */
-        public static final String THEMES_TILE_COMPONENTS = "themes_tile_components";
-
         /**
          * This are the settings to be backed up.
          *
@@ -9266,8 +6170,7 @@ public final class Settings {
             MOUNT_UMS_NOTIFY_ENABLED,
             SLEEP_TIMEOUT,
             DOUBLE_TAP_TO_WAKE,
-            CAMERA_GESTURE_DISABLED,
-            STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD,
+            CAMERA_GESTURE_DISABLED
         };
 
         /**
@@ -9532,7 +6435,7 @@ public final class Settings {
          * {@hide}
          */
         public static final String AIRPLANE_MODE_TOGGLEABLE_RADIOS = "airplane_mode_toggleable_radios";
-        
+
         /**
          * A Long representing a bitmap of profiles that should be disabled when bluetooth starts.
          * See {@link android.bluetooth.BluetoothProfile}.
@@ -9550,7 +6453,7 @@ public final class Settings {
          *   "00:11:22,0;01:02:03:04,2"
          * @hide
          */
-        public static final String BLUETOOTH_INTEROPERABILITY_LIST = "bluetooth_interoperability_list";
+       public static final String BLUETOOTH_INTEROPERABILITY_LIST = "bluetooth_interoperability_list";
 
         /**
          * The policy for deciding when Wi-Fi should go to sleep (which will in
@@ -9693,12 +6596,6 @@ public final class Settings {
         public static final String ADB_ENABLED = "adb_enabled";
 
         /**
-         * Whether to display the ADB notification even if not connected.
-         * @hide
-         */
-        public static final String ADB_ALWAYS_NOTIFY = "adb_always_notify";
-
-        /**
          * String to contain power menu actions
          * @deprecated Use {@link CMSettings.Secure#POWER_MENU_ACTIONS} instead
          * @hide
@@ -10976,12 +7873,6 @@ public final class Settings {
         public static final String SHOW_PROCESSES = "show_processes";
 
         /**
-         * Control whether the process CPU info meter should be shown.
-         * @hide
-         */
-        public static final String SHOW_CPU = "show_cpu";
-
-        /**
          * If 1 low power mode is enabled.
          * @hide
          */
@@ -12101,4 +8992,3 @@ public final class Settings {
         return packages[0];
     }
 }
-
diff --git a/core/java/android/service/notification/StatusBarNotification.java b/core/java/android/service/notification/StatusBarNotification.java
index d4030cf..2cab914 100644
--- a/core/java/android/service/notification/StatusBarNotification.java
+++ b/core/java/android/service/notification/StatusBarNotification.java
@@ -29,7 +29,7 @@ import android.os.UserHandle;
  * the status bar and any {@link android.service.notification.NotificationListenerService}s.
  */
 public class StatusBarNotification implements Parcelable {
-    public final String pkg;
+    private final String pkg;
     private final int id;
     private final String tag;
     private final String key;
@@ -38,8 +38,8 @@ public class StatusBarNotification implements Parcelable {
     private final int uid;
     private final String opPkg;
     private final int initialPid;
-    public final Notification notification;
-    public final UserHandle user;
+    private final Notification notification;
+    private final UserHandle user;
     private final long postTime;
 
     private final int score;
diff --git a/core/java/android/text/Layout.java b/core/java/android/text/Layout.java
index 48823d1..22ad634 100644
--- a/core/java/android/text/Layout.java
+++ b/core/java/android/text/Layout.java
@@ -192,9 +192,8 @@ public abstract class Layout {
                      int width, Alignment align, TextDirectionHeuristic textDir,
                      float spacingMult, float spacingAdd) {
 
-        if (width < 0) {
-            width = 0;
-        }
+        if (width < 0)
+            throw new IllegalArgumentException("Layout: " + width + " < 0");
 
         // Ensure paint doesn't have baselineShift set.
         // While normally we don't modify the paint the user passed in,
@@ -222,7 +221,7 @@ public abstract class Layout {
                               int width, Alignment align,
                               float spacingmult, float spacingadd) {
         if (width < 0) {
-            width = 0;
+            throw new IllegalArgumentException("Layout: " + width + " < 0");
         }
 
         mText = text;
diff --git a/core/java/android/view/IWindowManager.aidl b/core/java/android/view/IWindowManager.aidl
index 1cd0fae..b3f4046 100644
--- a/core/java/android/view/IWindowManager.aidl
+++ b/core/java/android/view/IWindowManager.aidl
@@ -258,11 +258,6 @@ interface IWindowManager
     boolean needsNavigationBar();
 
     /**
-     * Navigation bar window is currently capable of being vertical
-     */
-    boolean navigationBarCanMove();
-
-    /**
      * Lock the device immediately with the specified options (can be null).
      */
     void lockNow(in Bundle options);
@@ -293,20 +288,5 @@ interface IWindowManager
      */
     WindowContentFrameStats getWindowContentFrameStats(IBinder token);
 
-    /**
-     * Get current system ui visibility mode.
-     *
-     * @hide
-     */
-    int getSystemUIVisibility();
-
-
-    
     void setLiveLockscreenEdgeDetector(boolean enable);
-
-    /** FLOAT VIEW **/
-    Rect getAppFullscreenViewRect();
-    Rect getAppMinimumViewRect();
-    Rect getFloatViewRect();
-    void notifyFloatActivityTouched(IBinder token, boolean force);
 }
diff --git a/core/java/android/view/View.java b/core/java/android/view/View.java
index 651a8dc..4b56352 100644
--- a/core/java/android/view/View.java
+++ b/core/java/android/view/View.java
@@ -21161,9 +21161,7 @@ public class View implements Drawable.Callback, KeyEvent.Callback,
 
     /** @hide */
     public void hackTurnOffWindowResizeAnim(boolean off) {
-        if (mAttachInfo != null) {
-            mAttachInfo.mTurnOffWindowResizeAnim = off;
-        }
+        mAttachInfo.mTurnOffWindowResizeAnim = off;
     }
 
     /**
diff --git a/core/java/android/view/ViewConfiguration.java b/core/java/android/view/ViewConfiguration.java
index 04ffe39..93f5779 100644
--- a/core/java/android/view/ViewConfiguration.java
+++ b/core/java/android/view/ViewConfiguration.java
@@ -18,12 +18,10 @@ package android.view;
 
 import android.app.AppGlobals;
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.graphics.Point;
 import android.os.RemoteException;
-import android.os.UserHandle;
 import android.provider.Settings;
 import android.util.DisplayMetrics;
 import android.util.SparseArray;
@@ -75,7 +73,7 @@ public class ViewConfiguration {
      * appropriate button to bring up the global actions dialog (power off,
      * lock screen, etc).
      */
-    private static final int GLOBAL_ACTIONS_KEY_TIMEOUT = 250;
+    private static final int GLOBAL_ACTIONS_KEY_TIMEOUT = 500;
 
     /**
      * Defines the duration in milliseconds we will wait to see if a touch event
@@ -89,7 +87,7 @@ public class ViewConfiguration {
      * is a jump tap. If the user does not complete the jump tap within this interval, it is
      * considered to be a tap.
      */
-    private static final int JUMP_TAP_TIMEOUT = 250;
+    private static final int JUMP_TAP_TIMEOUT = 500;
 
     /**
      * Defines the duration in milliseconds between the first tap's up event and
@@ -123,12 +121,12 @@ public class ViewConfiguration {
      * Defines the duration in milliseconds we want to display zoom controls in response
      * to a user panning within an application.
      */
-    private static final int ZOOM_CONTROLS_TIMEOUT = 1500;
+    private static final int ZOOM_CONTROLS_TIMEOUT = 3000;
 
     /**
      * Inset in dips to look for touchable content when the user touches the edge of the screen
      */
-    private static final int EDGE_SLOP = 6;
+    private static final int EDGE_SLOP = 12;
 
     /**
      * Distance a touch can wander before we think the user is scrolling in dips.
@@ -182,13 +180,7 @@ public class ViewConfiguration {
     /**
      * Maximum velocity to initiate a fling, as measured in dips per second
      */
-    private static int MAXIMUM_FLING_VELOCITY = 16000;
-    
-    /**
-     * Maximum velocity to initiate a fling, as measured in dips per second
-     * @hide
-     */
-    public static final int DEFAULT_MAXIMUM_FLING_VELOCITY = 16000;    
+    private static final int MAXIMUM_FLING_VELOCITY = 8000;
 
     /**
      * Delay before dispatching a recurring accessibility event in milliseconds.
@@ -208,35 +200,17 @@ public class ViewConfiguration {
     /**
      * The coefficient of friction applied to flings/scrolls.
      */
-    private static float SCROLL_FRICTION = 0.007f;
-    
-    /**
-     * The coefficient of friction applied to flings/scrolls.
-     * @hide
-     */
-    public static final float DEFAULT_SCROLL_FRICTION = 0.007f;    
+    private static final float SCROLL_FRICTION = 0.015f;
 
     /**
      * Max distance in dips to overscroll for edge effects
      */
-    private static int OVERSCROLL_DISTANCE = 0;
-    
-    /**
-     * Max distance in dips to overscroll for edge effects
-     * @hide
-     */
-    public static final int DEFAULT_OVERSCROLL_DISTANCE = 0;
+    private static final int OVERSCROLL_DISTANCE = 0;
 
     /**
      * Max distance in dips to overfling for edge effects
      */
-    private static int OVERFLING_DISTANCE = 6;
-
-    /**
-     * Max distance in dips to overfling for edge effects
-     * @hide
-     */
-    public static final int DEFAULT_OVERFLING_DISTANCE = 6;
+    private static final int OVERFLING_DISTANCE = 6;
 
     /**
      * Default duration to hide an action mode for.
@@ -251,7 +225,6 @@ public class ViewConfiguration {
     private static final int HAS_PERMANENT_MENU_KEY_TRUE = 1;
     private static final int HAS_PERMANENT_MENU_KEY_FALSE = 2;
 
-    private Context mContext;
     private final int mEdgeSlop;
     private final int mFadingEdgeLength;
     private final int mMinimumFlingVelocity;
@@ -308,39 +281,6 @@ public class ViewConfiguration {
      * @see android.util.DisplayMetrics
      */
     private ViewConfiguration(Context context) {
-        final ContentResolver resolver = context.getContentResolver();
-        if (Settings.System.getInt(resolver,
-                          Settings.System.ANIMATION_CONTROLS_NO_SCROLL, 0) != 1) {
-            SCROLL_FRICTION = DEFAULT_SCROLL_FRICTION;
-            MAXIMUM_FLING_VELOCITY = DEFAULT_MAXIMUM_FLING_VELOCITY;
-            OVERSCROLL_DISTANCE = DEFAULT_OVERSCROLL_DISTANCE;
-            OVERFLING_DISTANCE = DEFAULT_OVERFLING_DISTANCE;
-        } else {
-            SCROLL_FRICTION = Settings.System.getFloat(resolver,
-                          Settings.System.CUSTOM_SCROLL_FRICTION, DEFAULT_SCROLL_FRICTION);
-            int maximumFlingVelocity = Settings.System.getInt(resolver,
-                          Settings.System.CUSTOM_FLING_VELOCITY, DEFAULT_MAXIMUM_FLING_VELOCITY);
-            if (maximumFlingVelocity == 0) {
-                MAXIMUM_FLING_VELOCITY = DEFAULT_MAXIMUM_FLING_VELOCITY;
-            } else {
-                MAXIMUM_FLING_VELOCITY = maximumFlingVelocity;
-            }
-            int overScrollDistance = Settings.System.getInt(resolver,
-                          Settings.System.CUSTOM_OVERSCROLL_DISTANCE, DEFAULT_OVERSCROLL_DISTANCE);
-            if (overScrollDistance > 100) {
-                OVERSCROLL_DISTANCE = DEFAULT_OVERSCROLL_DISTANCE;
-            } else {
-                OVERSCROLL_DISTANCE = overScrollDistance;
-            }
-            int overFlingDistance = Settings.System.getInt(resolver,
-                          Settings.System.CUSTOM_OVERFLING_DISTANCE, DEFAULT_OVERFLING_DISTANCE);
-            if (overFlingDistance > 100 || overFlingDistance == 0) {
-                OVERFLING_DISTANCE = DEFAULT_OVERFLING_DISTANCE;
-            } else {
-                OVERFLING_DISTANCE = overFlingDistance;
-            }
-        }		
-        mContext = context;
         final Resources res = context.getResources();
         final DisplayMetrics metrics = res.getDisplayMetrics();
         final Configuration config = res.getConfiguration();
@@ -816,29 +756,7 @@ public class ViewConfiguration {
      * @return true if a permanent menu key is present, false otherwise.
      */
     public boolean hasPermanentMenuKey() {
-             // Check if navbar is on to set overflow menu button
-        boolean mHasNavigationBar = Settings.Secure.getInt(mContext.getContentResolver(),
-                    Settings.Secure.NAVIGATION_BAR_VISIBLE, 0) == 1;
-        // Check if hw keys are on to set overflow menu button
-        boolean mHasHwKeysEnabled = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.ENABLE_HW_KEYS, 0) == 1;
-
-        IWindowManager wm = WindowManagerGlobal.getWindowManagerService();
-        // Report no menu key if device has soft buttons
-        try {
-            if (wm.hasNavigationBar() || mHasNavigationBar || !mHasHwKeysEnabled) {
-                return false;
-            }
-        } catch (RemoteException ex) {
-            // do nothing, continue trying to guess
-        }
-
-       // Report menu key presence based on hardware key rebinding
-        try {
-            return wm.hasPermanentMenuKey();
-        } catch (RemoteException ex) {
-            return true;
-        }
+        return sHasPermanentMenuKey;
     }
 
     /**
diff --git a/core/java/android/view/Window.java b/core/java/android/view/Window.java
index ec8ad7a..50a926f 100644
--- a/core/java/android/view/Window.java
+++ b/core/java/android/view/Window.java
@@ -206,8 +206,6 @@ public abstract class Window {
 
     private boolean mDestroyed;
 
-    public boolean mIsFloatingWindow = false;
-
     // The current window attributes.
     private final WindowManager.LayoutParams mWindowAttributes =
         new WindowManager.LayoutParams();
diff --git a/core/java/android/view/WindowManager.java b/core/java/android/view/WindowManager.java
index ee1fcb8..36f593e 100644
--- a/core/java/android/view/WindowManager.java
+++ b/core/java/android/view/WindowManager.java
@@ -566,21 +566,13 @@ public interface WindowManager extends ViewManager {
          */
         public static final int TYPE_VOICE_INTERACTION_STARTING = FIRST_SYSTEM_WINDOW+33;
 
- 	  /**
+        /**
          * Window type: Windows that are layered within the keyguard
          * This type is LAST_SYSTEM_WINDOW-1 to avoid future conflicts with AOSP
          * @hide
          */
         public static final int TYPE_KEYGUARD_PANEL = FIRST_SYSTEM_WINDOW+998;
 
-         /**
-         * Window type: Recents. Same layer as {@link #TYPE_SYSTEM_DIALOG} but only appears on
-         * one user's screen.
-         * In multiuser systems shows on all users' windows.
-         * @hide
-         */
-        public static final int TYPE_RECENTS_OVERLAY = FIRST_SYSTEM_WINDOW+34;
-
         /**
          * End of types of system windows.
          */
diff --git a/core/java/android/view/WindowManagerPolicy.java b/core/java/android/view/WindowManagerPolicy.java
index 8f1d742..9d7c741 100644
--- a/core/java/android/view/WindowManagerPolicy.java
+++ b/core/java/android/view/WindowManagerPolicy.java
@@ -666,6 +666,11 @@ public interface WindowManagerPolicy {
     public WindowState getWinShowWhenLockedLw();
 
     /**
+     * Returns the current keyguard panel, if such a thing exists.
+     */
+    public WindowState getWinKeyguardPanelLw();
+
+    /**
      * Called when the system would like to show a UI to indicate that an
      * application is starting.  You can use this to add a
      * APPLICATION_STARTING_TYPE window with the given appToken to the window
@@ -1167,15 +1172,10 @@ public interface WindowManagerPolicy {
     public void systemBooted();
 
     /**
-     * name of package being worked on during boot time message
+     * Update UI for boot-up progress.
      */
-    public void setPackageName(String pkgName);
-
-    /**
-     * Show boot time message to the user.
-     */
-    public void showBootMessage(final ApplicationInfo info, final int current, final int total,
-            final boolean always);
+    public void updateBootProgress(final int stage, final ApplicationInfo optimizedApp,
+            final int currentAppPos, final int totalAppCount);
 
     /**
      * Hide the UI for showing boot messages, never to be displayed again.
@@ -1255,11 +1255,6 @@ public interface WindowManagerPolicy {
     public boolean needsNavigationBar();
 
     /**
-     * Navigation bar window is currently capable of being vertical
-     */
-    public boolean navigationBarCanMove();
-
-    /**
      * Lock the device now.
      */
     public void lockNow(Bundle options);
diff --git a/core/java/android/view/inputmethod/EditorInfo.java b/core/java/android/view/inputmethod/EditorInfo.java
index b5e4844..6130fd5 100644
--- a/core/java/android/view/inputmethod/EditorInfo.java
+++ b/core/java/android/view/inputmethod/EditorInfo.java
@@ -374,16 +374,6 @@ public class EditorInfo implements InputType, Parcelable {
         }
     }
 
-    public final void formalTextInput(boolean forceLong) {
-        if (forceLong) {
-            switch (inputType&(TYPE_MASK_CLASS|TYPE_MASK_VARIATION)) {
-                case TYPE_CLASS_TEXT|TYPE_TEXT_VARIATION_SHORT_MESSAGE:
-                    inputType = TYPE_CLASS_TEXT|TYPE_TEXT_VARIATION_LONG_MESSAGE
-                            | (inputType&TYPE_MASK_FLAGS);
-            }
-        }
-    }
-
     /**
      * Write debug output of this object.
      */
diff --git a/core/java/android/view/inputmethod/InputMethodManager.java b/core/java/android/view/inputmethod/InputMethodManager.java
index f4c3ffc..1c8a79b 100644
--- a/core/java/android/view/inputmethod/InputMethodManager.java
+++ b/core/java/android/view/inputmethod/InputMethodManager.java
@@ -1352,17 +1352,6 @@ public final class InputMethodManager {
     /**
      * @hide
      */
-    public boolean isImeShowing() {
-        try {
-            return mService.isImeShowing();
-        } catch (RemoteException e) {
-            return false;
-        }
-    }
-
-    /**
-     * @hide
-     */
     public void checkFocus() {
         if (checkFocusNoStartInput(false, true)) {
             startInputInner(null, 0, 0, 0);
diff --git a/core/java/android/widget/AbsListView.java b/core/java/android/widget/AbsListView.java
index 42e1427..6e9a418 100644
--- a/core/java/android/widget/AbsListView.java
+++ b/core/java/android/widget/AbsListView.java
@@ -1,6 +1,5 @@
 /*
  * Copyright (C) 2006 The Android Open Source Project
- * This code has been modified. Portions copyright (C) 2013, ThinkingBridge Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -29,14 +28,10 @@ import android.graphics.drawable.Drawable;
 import android.graphics.drawable.TransitionDrawable;
 import android.os.Bundle;
 import android.os.Debug;
-import android.os.Message;
-import android.os.Handler;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.os.StrictMode;
 import android.os.Trace;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextUtils;
@@ -70,13 +65,8 @@ import android.view.accessibility.AccessibilityManager;
 import android.view.accessibility.AccessibilityNodeInfo;
 import android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction;
 import android.view.accessibility.AccessibilityNodeInfo.CollectionInfo;
-import android.view.animation.AlphaAnimation;
-import android.view.animation.Animation;
-import android.view.animation.AnimationUtils;
 import android.view.animation.Interpolator;
 import android.view.animation.LinearInterpolator;
-import android.view.animation.ScaleAnimation;
-import android.view.animation.TranslateAnimation;
 import android.view.inputmethod.BaseInputConnection;
 import android.view.inputmethod.CompletionInfo;
 import android.view.inputmethod.CorrectionInfo;
@@ -736,17 +726,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
     private boolean mIsDetaching;
 
     /**
-     * for ListView Animations
-     */
-    private boolean mIsWidget;
-    private int mListAnimationMode = 0;
-    private int mListAnimationInterpolatorMode = 0;
-    private boolean mListAnimationModeSet = false;
-    private int mWidth, mHeight = 0;
-    private int mPositionV;
-    private boolean mIsTap = false;
-
-    /**
      * Interface definition for a callback to be invoked when the list or grid
      * has been scrolled.
      */
@@ -888,9 +867,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         mOverflingDistance = configuration.getScaledOverflingDistance();
 
         mDensityScale = getContext().getResources().getDisplayMetrics().density;
-
-        setPersistentDrawingCache(ViewGroup.PERSISTENT_ANIMATION_CACHE
-            | ViewGroup.PERSISTENT_SCROLLING_CACHE);
     }
 
     @Override
@@ -2173,8 +2149,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         mInLayout = false;
 
         mOverscrollMax = (b - t) / OVERSCROLL_LIMIT_DIVISOR;
-        mHeight = getHeight();
-        mWidth = getWidth();
 
         // TODO: Move somewhere sane. This doesn't belong in onLayout().
         if (mFastScroll != null) {
@@ -2369,13 +2343,8 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         }
 
         final View scrapView = mRecycler.getScrapView(position);
-        View child = mAdapter.getView(position, scrapView, this);
-
+        final View child = mAdapter.getView(position, scrapView, this);
         if (scrapView != null) {
-            if (mListAnimationMode != 0 && !mIsWidget) {
-                child = setAnimation(child);
-            }
-
             if (child != scrapView) {
                 // Failed to re-bind the data, return scrap to the heap.
                 mRecycler.addScrapView(scrapView, position);
@@ -2432,126 +2401,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         }
     }
 
-    private View setAnimation(View view) {
-        if (view == null) {
-            return view;
-        }
-
-        int scrollY = 0;
-        boolean down = false;
-        Animation anim = null;
-
-        try {
-            scrollY = getChildAt(0).getTop();
-        } catch (NullPointerException e) {
-            scrollY = mPositionV;
-        }
-
-        if (mPositionV < scrollY) {
-            down = true;
-        }
-
-        mPositionV = scrollY;
-
-        switch (mListAnimationMode) {
-            case 1:
-                anim = new ScaleAnimation(0.5f, 1.0f, 0.5f, 1.0f);
-                break;
-            case 2:
-                anim = new ScaleAnimation(0.5f, 1.0f, 0.5f, 1.0f,
-                    Animation.RELATIVE_TO_SELF, 1.0f,
-                    Animation.RELATIVE_TO_SELF, 1.0f);
-                break;
-            case 3:
-                anim = new ScaleAnimation(0.5f, 1.0f, 0.5f, 1.0f,
-                    Animation.RELATIVE_TO_SELF, 0.5f,
-                    Animation.RELATIVE_TO_SELF, 0.5f);
-                break;
-            case 4:
-                anim = new AlphaAnimation(0.0f, 1.0f);
-                break;
-            case 5:
-                anim = new TranslateAnimation(0.0f, 0.0f, -mHeight, 0.0f);
-                break;
-            case 6:
-                anim = new TranslateAnimation(0.0f, 0.0f, mHeight, 0.0f);
-                break;
-            case 7:
-                if (down) {
-                    anim = new TranslateAnimation(0.0f, 0.0f, -mHeight, 0.0f);
-                } else {
-                    anim = new TranslateAnimation(0.0f, 0.0f, mHeight, 0.0f);
-                }
-                break;
-            case 8:
-                if (down) {
-                    anim = new TranslateAnimation(0.0f, 0.0f, mHeight, 0.0f);
-                } else {
-                    anim = new TranslateAnimation(0.0f, 0.0f, -mHeight, 0.0f);
-                }
-                break;
-            case 9:
-                anim = new TranslateAnimation(-mWidth, 0.0f, 0.0f, 0.0f);
-                break;
-            case 10:
-                anim = new TranslateAnimation(mWidth, 0.0f, 0.0f, 0.0f);
-                break;
-        }
-
-        if (mListAnimationInterpolatorMode == 0) {
-            return applyAnimationToView(view, anim);
-        }
-
-        switch (mListAnimationInterpolatorMode) {
-            case 1:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.accelerate_interpolator));
-                break;
-            case 2:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.decelerate_interpolator));
-                break;
-            case 3:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.accelerate_decelerate_interpolator));
-                break;
-            case 4:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.anticipate_interpolator));
-                break;
-            case 5:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.overshoot_interpolator));
-                break;
-            case 6:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.anticipate_overshoot_interpolator));
-                break;
-            case 7:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.bounce_interpolator));
-                break;
-            case 8:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.cycle_interpolator));
-                break;
-            case 9:
-                anim.setInterpolator(AnimationUtils.loadInterpolator(
-                    mContext, android.R.anim.linear_interpolator));
-                break;
-        }
-        return applyAnimationToView(view, anim);
-    }
-
-    private View applyAnimationToView(View view, Animation anim) {
-        if (anim == null) {
-            return view;
-        }
-        anim.setDuration(500);
-        view.startAnimation(anim);
-        return view;
-    }
-
     class ListItemAccessibilityDelegate extends AccessibilityDelegate {
         @Override
         public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfo info) {
@@ -3554,7 +3403,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         int lastYCorrection = 0;
 
         if (mTouchMode == TOUCH_MODE_SCROLL) {
-            mIsWidget = false;
             if (PROFILE_SCROLLING) {
                 if (!mScrollProfilingStarted) {
                     Debug.startMethodTracing("AbsListViewScroll");
@@ -3783,12 +3631,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         }
     }
 
-    private final Handler mInverse = new Handler() {
-        public void handleMessage(Message msg) {
-            mIsTap = !mIsTap;
-        }
-    };
-
     @Override
     public boolean onTouchEvent(MotionEvent ev) {
         if (!isEnabled()) {
@@ -3889,9 +3731,8 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
     }
 
     private void onTouchDown(MotionEvent ev) {
-        mIsTap = true;
         mActivePointerId = ev.getPointerId(0);
-        mInverse.sendEmptyMessageDelayed(0, 100);
+
         if (mTouchMode == TOUCH_MODE_OVERFLING) {
             // Stopped the fling. It is a scroll.
             mFlingRunnable.endFling();
@@ -4551,24 +4392,8 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
      */
     void reportScrollStateChange(int newState) {
         if (newState != mLastScrollState) {
-            mLastScrollState = newState;
-            if (newState == OnScrollListener.SCROLL_STATE_IDLE) {
-                mListAnimationModeSet = false;
-                mListAnimationMode = 0;
-            } else if (!mListAnimationModeSet) {
-                mListAnimationModeSet = true;
-                mListAnimationMode = Settings.System.getIntForUser(
-                        mContext.getContentResolver(),
-                        Settings.System.LISTVIEW_ANIMATION,
-                        0, UserHandle.USER_CURRENT_OR_SELF);
-                if (mListAnimationMode != 0) {
-                    mListAnimationInterpolatorMode = Settings.System.getIntForUser(
-                            mContext.getContentResolver(),
-                            Settings.System.LISTVIEW_INTERPOLATOR,
-                            0, UserHandle.USER_CURRENT_OR_SELF);
-                }
-            }
             if (mOnScrollListener != null) {
+                mLastScrollState = newState;
                 mOnScrollListener.onScrollStateChanged(this, newState);
             }
         }
@@ -4701,7 +4526,7 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
             removeCallbacks(mCheckFlywheel);
 
             reportScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);
-                clearScrollingCache();
+            clearScrollingCache();
             mScroller.abortAnimation();
 
             if (mFlingStrictSpan != null) {
@@ -5518,7 +5343,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         int count = mItemCount;
         int lastHandledItemCount = mLastHandledItemCount;
         mLastHandledItemCount = mItemCount;
-        mIsWidget = true;
 
         if (mChoiceMode != CHOICE_MODE_NONE && mAdapter != null && mAdapter.hasStableIds()) {
             confirmCheckedPositionsById();
diff --git a/core/java/android/widget/ArrayAdapter.java b/core/java/android/widget/ArrayAdapter.java
index 32a0adb..027f6d6 100644
--- a/core/java/android/widget/ArrayAdapter.java
+++ b/core/java/android/widget/ArrayAdapter.java
@@ -395,14 +395,10 @@ public class ArrayAdapter<T> extends BaseAdapter implements Filterable, ThemedSp
         }
 
         T item = getItem(position);
-        if (item == null) {
-          text.setText("");
+        if (item instanceof CharSequence) {
+            text.setText((CharSequence)item);
         } else {
-            if (item instanceof CharSequence) {
-                text.setText((CharSequence)item);
-            } else {
-                text.setText(item.toString());
-            }
+            text.setText(item.toString());
         }
 
         return view;
diff --git a/core/java/android/widget/ListPopupWindow.java b/core/java/android/widget/ListPopupWindow.java
index b07ee4f..c6de5dd 100644
--- a/core/java/android/widget/ListPopupWindow.java
+++ b/core/java/android/widget/ListPopupWindow.java
@@ -82,7 +82,6 @@ public class ListPopupWindow {
     private boolean mDropDownVerticalOffsetSet;
 
     private int mDropDownGravity = Gravity.NO_GRAVITY;
-    private boolean mAllowLeftOverdraw;
 
     private boolean mDropDownAlwaysVisible = false;
     private boolean mForceIgnoreOutsideTouch = false;
@@ -469,18 +468,6 @@ public class ListPopupWindow {
         mDropDownGravity = gravity;
     }
 
-     /**
-     * Allow the popup window to draw outside the left edge of the container
-     * if mClipToScreen = true.
-     *
-     * @param enabled True to allow outside draw (default = false).
-     * @see #findDropDownPosition - #link:PopupWindow.java
-     * @hide
-     */
-    public void setAllowLeftOverdraw(boolean enabled) {
-        mAllowLeftOverdraw = enabled;
-    }
-
     /**
      * @return The width of the popup window in pixels.
      */
@@ -663,7 +650,6 @@ public class ListPopupWindow {
             mPopup.setWidth(widthSpec);
             mPopup.setHeight(heightSpec);
             mPopup.setClipToScreenEnabled(true);
-            mPopup.setAllowLeftOverdraw(mAllowLeftOverdraw);
             
             // use outside touchable to dismiss drop down when touching outside of it, so
             // only set this if the dropdown is not always visible
diff --git a/core/java/android/widget/OverScroller.java b/core/java/android/widget/OverScroller.java
index 33b28d0..50569d7 100644
--- a/core/java/android/widget/OverScroller.java
+++ b/core/java/android/widget/OverScroller.java
@@ -18,7 +18,6 @@ package android.widget;
 
 import android.content.Context;
 import android.hardware.SensorManager;
-import android.os.PowerManager;
 import android.util.Log;
 import android.view.ViewConfiguration;
 import android.view.animation.AnimationUtils;
@@ -43,8 +42,6 @@ public class OverScroller {
     private static final int SCROLL_MODE = 0;
     private static final int FLING_MODE = 1;
 
-    private final PowerManager mPm;
-
     /**
      * Creates an OverScroller with a viscous fluid scroll interpolator and flywheel.
      * @param context
@@ -80,8 +77,6 @@ public class OverScroller {
         mFlywheel = flywheel;
         mScrollerX = new SplineOverScroller(context);
         mScrollerY = new SplineOverScroller(context);
-        
-        mPm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
     }
 
     /**
@@ -376,7 +371,6 @@ public class OverScroller {
      */
     public void startScroll(int startX, int startY, int dx, int dy, int duration) {
         mMode = SCROLL_MODE;
-        mPm.cpuBoost(1500000);
         mScrollerX.startScroll(startX, dx, duration);
         mScrollerY.startScroll(startY, dy, duration);
     }
@@ -447,7 +441,6 @@ public class OverScroller {
             }
         }
 
-        mPm.cpuBoost(1500000);
         mMode = FLING_MODE;
         mScrollerX.fling(startX, velocityX, minX, maxX, overX);
         mScrollerY.fling(startY, velocityY, minY, maxY, overY);
diff --git a/core/java/android/widget/PopupMenu.java b/core/java/android/widget/PopupMenu.java
index 1a58702..1507dfb 100644
--- a/core/java/android/widget/PopupMenu.java
+++ b/core/java/android/widget/PopupMenu.java
@@ -210,14 +210,6 @@ public class PopupMenu implements MenuBuilder.Callback, MenuPresenter.Callback {
         getMenuInflater().inflate(menuRes, mMenu);
     }
 
-     /**
-     * Show the menu item icon.
-     * @hide
-     */
-    public void setForceShowIcon() {
-        mPopup.setForceShowIcon(true);
-    }
-
     /**
      * Show the menu popup anchored to the view specified during construction.
      * @see #dismiss()
@@ -234,18 +226,6 @@ public class PopupMenu implements MenuBuilder.Callback, MenuPresenter.Callback {
         mPopup.dismiss();
     }
 
-     /**
-     * Allow the popup window to draw outside the left edge of the container
-     * if mClipToScreen = true.
-     *
-     * @param enabled True to allow outside draw (default = false).
-     * @see #findDropDownPosition - #link:PopupWindow.java
-     * @hide
-     */
-    public void setAllowLeftOverdraw(boolean enabled) {
-        mPopup.setAllowLeftOverdraw(enabled);
-    }
-
     /**
      * Set a listener that will be notified when the user selects an item from the menu.
      *
diff --git a/core/java/android/widget/PopupWindow.java b/core/java/android/widget/PopupWindow.java
index 0772478..f9fa027 100644
--- a/core/java/android/widget/PopupWindow.java
+++ b/core/java/android/widget/PopupWindow.java
@@ -126,8 +126,6 @@ public class PopupWindow {
     private boolean mAttachedInDecor = true;
     private boolean mAttachedInDecorSet = false;
 
-    private boolean mAllowLeftOverdraw;
-
     private OnTouchListener mTouchInterceptor;
 
     private int mWidthMode;
@@ -723,18 +721,6 @@ public class PopupWindow {
         setClippingEnabled(!enabled);
     }
 
-     /**
-     * Allow the popup window to draw outside the left edge of the container
-     * if mClipToScreen = true.
-     *
-     * @param enabled True to allow outside draw (default = false).
-     * @see #findDropDownPosition
-     * @hide
-     */
-    public void setAllowLeftOverdraw(boolean enabled) {
-        mAllowLeftOverdraw = enabled;
-    }
-
     /**
      * Allow PopupWindow to scroll the anchor's parent to provide more room
      * for the popup. Enabled by default.
@@ -1478,7 +1464,7 @@ public class PopupWindow {
                 p.x -= right - displayFrameWidth;
             }
 
-            if (p.x < displayFrame.left && !mAllowLeftOverdraw) {
+            if (p.x < displayFrame.left) {
                 p.x = displayFrame.left;
                 p.width = Math.min(p.width, displayFrameWidth);
             }
diff --git a/core/java/android/widget/RemoteViews.java b/core/java/android/widget/RemoteViews.java
index 324bd07..6a272e5 100644
--- a/core/java/android/widget/RemoteViews.java
+++ b/core/java/android/widget/RemoteViews.java
@@ -33,7 +33,6 @@ import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.graphics.Bitmap;
-import android.graphics.Color;
 import android.graphics.PorterDuff;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
@@ -55,9 +54,6 @@ import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
 import android.widget.AdapterView.OnItemClickListener;
-
-import com.android.internal.util.rr.ColorHelper;
-
 import libcore.util.Objects;
 
 import com.android.internal.R;
@@ -1686,7 +1682,7 @@ public class RemoteViews implements Parcelable, Filter {
             Drawable d = drawables[index];
             if (d != null) {
                 d.mutate();
-                d.setColorFilter(ColorHelper.getColorFilter(color));
+                d.setColorFilter(color, mode);
             }
         }
 
@@ -2854,7 +2850,7 @@ public class RemoteViews implements Parcelable, Filter {
     private Context getContextForResources(Context context, String themePackageName) {
         if (mApplication != null) {
             if (context.getUserId() == UserHandle.getUserId(mApplication.uid)
-                     && context.getPackageName().equals(mApplication.packageName)
+                    && context.getPackageName().equals(mApplication.packageName)
                     && themePackageName == null) {
                 return context;
             }
diff --git a/core/java/android/widget/Scroller.java b/core/java/android/widget/Scroller.java
index 63da3f7..357c9c3 100644
--- a/core/java/android/widget/Scroller.java
+++ b/core/java/android/widget/Scroller.java
@@ -19,7 +19,6 @@ package android.widget;
 import android.content.Context;
 import android.hardware.SensorManager;
 import android.os.Build;
-import android.os.PowerManager;
 import android.view.ViewConfiguration;
 import android.view.animation.AnimationUtils;
 import android.view.animation.Interpolator;
@@ -111,8 +110,7 @@ public class Scroller  {
 
     // A context-specific coefficient adjusted to physical values.
     private float mPhysicalCoeff;
-    private final PowerManager mPm;
-        
+
     static {
         float x_min = 0.0f;
         float y_min = 0.0f;
@@ -180,7 +178,6 @@ public class Scroller  {
         mFlywheel = flywheel;
 
         mPhysicalCoeff = computeDeceleration(0.84f); // look and feel tuning
-        mPm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
     }
 
     /**
@@ -398,7 +395,6 @@ public class Scroller  {
         mDeltaX = dx;
         mDeltaY = dy;
         mDurationReciprocal = 1.0f / (float) mDuration;
-        mPm.cpuBoost(1500000);
     }
 
     /**
diff --git a/core/java/android/widget/Toast.java b/core/java/android/widget/Toast.java
index d5c3dc6..e8dccab 100644
--- a/core/java/android/widget/Toast.java
+++ b/core/java/android/widget/Toast.java
@@ -1,6 +1,5 @@
 /*
  * Copyright (C) 2007 The Android Open Source Project
- * Modification copyright (C) 2014 - AOSB Project - Credit zst123 "XuiMod"
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,21 +18,18 @@ package android.widget;
 
 import android.annotation.IntDef;
 import android.annotation.StringRes;
+import android.app.ActivityManager;
 import android.app.INotificationManager;
 import android.app.ITransientNotification;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.pm.PackageManager;
-import android.content.res.ColorStateList;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.graphics.PixelFormat;
-import android.graphics.PorterDuff.Mode;
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
 import android.os.RemoteException;
 import android.os.ServiceManager;
-import android.provider.Settings;
 import android.util.Log;
 import android.view.Gravity;
 import android.view.LayoutInflater;
@@ -45,8 +41,6 @@ import android.view.accessibility.AccessibilityManager;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 
-import com.android.internal.util.rr.RandomColorHelper;
-
 /**
  * A toast is a view containing a quick little message for the user.  The toast class
  * helps you create and show those.
@@ -94,7 +88,6 @@ public class Toast {
     public static final int LENGTH_LONG = 1;
 
     final Context mContext;
-    static Context tContext;
     final TN mTN;
     int mDuration;
     View mNextView;
@@ -108,14 +101,13 @@ public class Toast {
      */
     public Toast(Context context) {
         mContext = context;
-        tContext = context;
         mTN = new TN();
         mTN.mY = context.getResources().getDimensionPixelSize(
                 com.android.internal.R.dimen.toast_y_offset);
         mTN.mGravity = context.getResources().getInteger(
                 com.android.internal.R.integer.config_toastDefaultGravity);
     }
-
+    
     /**
      * Show the view for the specified duration.
      */
@@ -150,7 +142,7 @@ public class Toast {
             // Empty
         }
     }
-
+    
     /**
      * Set the view to show.
      * @see #getView
@@ -184,7 +176,7 @@ public class Toast {
     public int getDuration() {
         return mDuration;
     }
-
+    
     /**
      * Set the margins of the view.
      *
@@ -240,7 +232,7 @@ public class Toast {
     public int getXOffset() {
         return mTN.mX;
     }
-
+    
     /**
      * Return the Y offset in pixels to apply to the gravity's location.
      */
@@ -269,14 +261,12 @@ public class Toast {
     public static Toast makeText(Context context, CharSequence text, @Duration int duration) {
         Toast result = new Toast(context);
 
-        final ColorStateList textColor = RandomColorHelper.getToastTextColorList(tContext);
         LayoutInflater inflate = (LayoutInflater)
                 context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         View v = inflate.inflate(com.android.internal.R.layout.transient_notification, null);
         TextView tv = (TextView)v.findViewById(com.android.internal.R.id.message);
         tv.setText(text);
-        tv.setTextColor(textColor);
-
+        
         result.mNextView = v;
         result.mDuration = duration;
 
@@ -306,7 +296,7 @@ public class Toast {
     public void setText(@StringRes int resId) {
         setText(mContext.getText(resId));
     }
-
+    
     /**
      * Update the text in a Toast that was previously created using one of the makeText() methods.
      * @param s The new text for the Toast.
@@ -415,9 +405,10 @@ public class Toast {
                 }
 
                 ImageView appIcon = (ImageView) mView.findViewById(android.R.id.icon);
-                final ColorStateList iconColor = RandomColorHelper.getToastIconColorList(tContext);
-                if ((Settings.System.getInt(context.getContentResolver(), Settings.System.TOAST_ICON, 1) == 1)) {
-                    if (appIcon != null) {
+                if (appIcon != null) {
+                    ActivityManager am =
+                            (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
+                    if (!am.isPackageInForeground(packageName)) {
                         PackageManager pm = context.getPackageManager();
                         Drawable icon = null;
                         try {
@@ -426,8 +417,6 @@ public class Toast {
                             // nothing to do
                         }
                         appIcon.setImageDrawable(icon);
-                        appIcon.setImageTintList(iconColor);
-                        appIcon.setImageTintMode(Mode.MULTIPLY);
                     }
                 }
                 mWM = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);
@@ -435,58 +424,6 @@ public class Toast {
                 // the layout direction
                 final Configuration config = mView.getContext().getResources().getConfiguration();
                 final int gravity = Gravity.getAbsoluteGravity(mGravity, config.getLayoutDirection());
-
-                switch(Settings.System.getInt(context.getContentResolver(), Settings.System.TOAST_ANIMATION, 1)) {
-                case 0:
-                        mParams.windowAnimations = -1;
-                        break;
-                case 1:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast;
-                        break;
-                case 2:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_Fade;
-                        break;
-                case 3:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_SlideRight;
-                        break;
-                case 4:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_SlideLeft;
-                        break;
-                case 5:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_Xylon;
-                        break;
-                case 6:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_Toko;
-                        break;
-                case 7:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_Tn;
-                        break;
-                case 8:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_Honami;
-                        break;
-                case 9:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_FastFade;
-                        break;
-                case 10:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_GrowFade;
-                        break;
-                case 11:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_GrowFadeCenter;
-                        break;
-                case 12:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_GrowFadeBottom;
-                        break;
-                case 13:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_Translucent;
-                        break;
-                case 14:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_SlideLeftRight;
-                        break;
-                case 15:
-                        mParams.windowAnimations = com.android.internal.R.style.Animation_Toast_SlideRightLeft;
-                        break;
-                }
-
                 mParams.gravity = gravity;
                 if ((gravity & Gravity.HORIZONTAL_GRAVITY_MASK) == Gravity.FILL_HORIZONTAL) {
                     mParams.horizontalWeight = 1.0f;
diff --git a/core/java/com/android/internal/app/IBatteryStats.aidl b/core/java/com/android/internal/app/IBatteryStats.aidl
index f02555c..ba92f48 100644
--- a/core/java/com/android/internal/app/IBatteryStats.aidl
+++ b/core/java/com/android/internal/app/IBatteryStats.aidl
@@ -122,13 +122,15 @@ interface IBatteryStats {
     void setBatteryState(int status, int health, int plugType, int level, int temp, int volt);
     long getAwakeTimeBattery();
     long getAwakeTimePlugged();
-    /** @hide **/
-    void resetStatistics();
+
+
     /** @hide */
     byte[] getDockStatistics();
     /** @hide */
     ParcelFileDescriptor getDockStatisticsStream();
     /** @hide **/
+    void resetStatistics();
+    /** @hide **/
     void setDockBatteryState(int status, int health, int plugType, int level, int temp, int volt);
     /** @hide **/
     long getAwakeTimeDockBattery();
diff --git a/core/java/com/android/internal/app/PlatLogoActivity.java b/core/java/com/android/internal/app/PlatLogoActivity.java
index 2595fe0..efe88ff 100644
--- a/core/java/com/android/internal/app/PlatLogoActivity.java
+++ b/core/java/com/android/internal/app/PlatLogoActivity.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2010 The Android Open Source Project
+ * Copyright (C) 2014-2015 The CyanogenMod Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -57,10 +58,13 @@ public class PlatLogoActivity extends Activity {
     int mKeyCount;
     PathInterpolator mInterpolator = new PathInterpolator(0f, 0f, 0.5f, 1f);
 
+    private boolean mIsCM;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
+        mIsCM = getIntent().hasExtra("is_cm");
         mLayout = new FrameLayout(this);
         setContentView(mLayout);
     }
@@ -153,6 +157,7 @@ public class PlatLogoActivity extends Activity {
                                             .setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
                                                     | Intent.FLAG_ACTIVITY_CLEAR_TASK
                                                     | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS)
+                                            .putExtra("is_cm", mIsCM)
                                             .addCategory("com.android.internal.category.PLATLOGO"));
                                 } catch (ActivityNotFoundException ex) {
                                     Log.e("PlatLogoActivity", "No more eggs.");
@@ -202,7 +207,9 @@ public class PlatLogoActivity extends Activity {
     }
 
     public void showMarshmallow(View im) {
-        final Drawable fg = getDrawable(com.android.internal.R.drawable.platlogo);
+        final Drawable fg = getDrawable(mIsCM
+                ? com.android.internal.R.drawable.platlogo_cm
+                : com.android.internal.R.drawable.platlogo);
         fg.setBounds(0, 0, im.getWidth(), im.getHeight());
         fg.setAlpha(0);
         im.getOverlay().add(fg);
diff --git a/core/java/com/android/internal/logging/MetricsConstants.java b/core/java/com/android/internal/logging/MetricsConstants.java
index d0085a1..b90cb36 100644
--- a/core/java/com/android/internal/logging/MetricsConstants.java
+++ b/core/java/com/android/internal/logging/MetricsConstants.java
@@ -16,12 +16,11 @@
 package com.android.internal.logging;
 
 /**
- * Constants for metrics logs.
+ * Constants for mestrics logs.
  *
  * @hide
  */
 public interface MetricsConstants {
-     public static final int DONT_TRACK_ME_BRO = -Integer.MAX_VALUE + 1;	
     // These constants must match those in the analytic pipeline, do not edit.
     // Add temporary values to the top of MetricsLogger instead.
     public static final int VIEW_UNKNOWN = 0;
@@ -263,23 +262,10 @@ public interface MetricsConstants {
     public static final int TUNER_DEMO_MODE_ON = 236;
     public static final int TUNER_BATTERY_PERCENTAGE = 237;
     public static final int FUELGAUGE_INACTIVE_APPS = 238;
-    public static final int QS_NAVBAR_TOGGLE = 239;
-
-
-
-   //Notification Drawer	
-   public static final int NOTIFICATION_DRAWER_SETTINGS = 247;
-
-    // Lock screen weather settings
-    public static final int LOCKSCREEN_WEATHER_SETTINGS = 248;
-
-    public static final int QS_HEADSUP = 243;
 
     // These constants must match those in the analytic pipeline, do not edit.
     // Add temporary values to the top of MetricsLogger instead.
 
     //aliases
     public static final int DEVICEINFO_STORAGE = DEVICEINFO_MEMORY;
-
-    public static final int DIRTYTWEAKS = 239; 
 }
diff --git a/core/java/com/android/internal/logging/MetricsLogger.java b/core/java/com/android/internal/logging/MetricsLogger.java
index db24b97..b6240e4 100644
--- a/core/java/com/android/internal/logging/MetricsLogger.java
+++ b/core/java/com/android/internal/logging/MetricsLogger.java
@@ -46,7 +46,6 @@ public class MetricsLogger implements MetricsConstants {
     public static final int ACTION_FINGERPRINT_RENAME = 254;
     public static final int ACTION_DOUBLE_TAP_POWER_CAMERA_GESTURE = 255;
     public static final int ACTION_WIGGLE_CAMERA_GESTURE = 256;
-    public static final int HALO_SETTINGS = 257;
 
     public static void visible(Context context, int category) throws IllegalArgumentException {
         if (Build.IS_DEBUGGABLE && category == VIEW_UNKNOWN) {
diff --git a/core/java/com/android/internal/policy/IKeyguardService.aidl b/core/java/com/android/internal/policy/IKeyguardService.aidl
index f5b6eb5..6f47f70 100644
--- a/core/java/com/android/internal/policy/IKeyguardService.aidl
+++ b/core/java/com/android/internal/policy/IKeyguardService.aidl
@@ -15,8 +15,6 @@
  */
 package com.android.internal.policy;
 
-import android.graphics.Bitmap;
-
 import com.android.internal.policy.IKeyguardDrawnCallback;
 import com.android.internal.policy.IKeyguardStateCallback;
 import com.android.internal.policy.IKeyguardExitCallback;
@@ -96,8 +94,5 @@ oneway interface IKeyguardService {
      * to start the keyguard dismiss sequence.
      */
     void onActivityDrawn();
-
-    oneway void setBackgroundBitmap(in Bitmap bmp);
-
     void showKeyguard();
 }
diff --git a/core/java/com/android/internal/policy/PhoneFallbackEventHandler.java b/core/java/com/android/internal/policy/PhoneFallbackEventHandler.java
index 9896aca..2cb9c25 100644
--- a/core/java/com/android/internal/policy/PhoneFallbackEventHandler.java
+++ b/core/java/com/android/internal/policy/PhoneFallbackEventHandler.java
@@ -28,13 +28,15 @@ import android.os.UserHandle;
 import android.provider.Settings;
 import android.telephony.TelephonyManager;
 import android.util.Log;
-import android.view.View;
-import android.view.HapticFeedbackConstants;
 import android.view.FallbackEventHandler;
+import android.view.HapticFeedbackConstants;
 import android.view.KeyEvent;
-
+import android.view.View;
 import com.android.internal.policy.PhoneWindow;
 
+/**
+ * @hide
+ */
 public class PhoneFallbackEventHandler implements FallbackEventHandler {
     private static String TAG = "PhoneFallbackEventHandler";
     private static final boolean DEBUG = false;
diff --git a/core/java/com/android/internal/policy/PhoneWindow.java b/core/java/com/android/internal/policy/PhoneWindow.java
index 05ad9e6..fe0bc65 100644
--- a/core/java/com/android/internal/policy/PhoneWindow.java
+++ b/core/java/com/android/internal/policy/PhoneWindow.java
@@ -23,14 +23,42 @@ import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
 import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
 import static android.view.WindowManager.LayoutParams.*;
 
-import android.app.SearchManager;
-import android.os.UserHandle;
-
 import android.animation.Animator;
 import android.animation.ObjectAnimator;
 import android.app.ActivityManagerNative;
+import android.app.SearchManager;
+import android.os.Build;
+import android.os.UserHandle;
 
+import android.view.ActionMode;
+import android.view.ContextThemeWrapper;
+import android.view.Gravity;
+import android.view.IRotationWatcher.Stub;
+import android.view.IWindowManager;
+import android.view.InputDevice;
+import android.view.InputEvent;
+import android.view.InputQueue;
+import android.view.KeyCharacterMap;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.MotionEvent;
+import android.view.SearchEvent;
+import android.view.SurfaceHolder.Callback2;
+import android.view.View;
+import android.view.ViewConfiguration;
+import android.view.ViewGroup;
+import android.view.ViewManager;
+import android.view.ViewParent;
+import android.view.ViewRootImpl;
+import android.view.ViewStub;
+import android.view.ViewTreeObserver.OnPreDrawListener;
+import android.view.Window;
+import android.view.WindowInsets;
+import android.view.WindowManager;
 import com.android.internal.R;
+import com.android.internal.view.FloatingActionMode;
 import com.android.internal.view.RootViewSurfaceTaker;
 import com.android.internal.view.StandaloneActionMode;
 import com.android.internal.view.menu.ContextMenuBuilder;
@@ -43,9 +71,9 @@ import com.android.internal.view.menu.MenuView;
 import com.android.internal.widget.ActionBarContextView;
 import com.android.internal.widget.BackgroundFallback;
 import com.android.internal.widget.DecorContentParent;
+import com.android.internal.widget.FloatingToolbar;
 import com.android.internal.widget.SwipeDismissLayout;
 
-import android.app.Activity;
 import android.app.ActivityManager;
 import android.app.KeyguardManager;
 import android.content.ComponentName;
@@ -70,7 +98,6 @@ import android.media.AudioManager;
 import android.media.session.MediaController;
 import android.media.session.MediaSessionLegacyHelper;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.IBinder;
@@ -92,37 +119,8 @@ import android.util.EventLog;
 import android.util.Log;
 import android.util.SparseArray;
 import android.util.TypedValue;
-
-import android.view.ActionMode;
-import android.view.ContextThemeWrapper;
 import android.view.GestureDetector;
 import android.view.GestureDetector.SimpleOnGestureListener;
-import android.view.Display;
-import android.view.Gravity;
-import android.view.IRotationWatcher.Stub;
-import android.view.IWindowManager;
-import android.view.InputDevice;
-import android.view.InputEvent;
-import android.view.InputQueue;
-import android.view.KeyCharacterMap;
-import android.view.KeyEvent;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.MotionEvent;
-import android.view.SearchEvent;
-import android.view.Surface;
-import android.view.SurfaceHolder;
-import android.view.View;
-import android.view.ViewConfiguration;
-import android.view.ViewGroup;
-import android.view.ViewManager;
-import android.view.ViewParent;
-import android.view.ViewRootImpl;
-import android.view.ViewStub;
-import android.view.Window;
-import android.view.WindowInsets;
-import android.view.WindowManager;
 import android.view.accessibility.AccessibilityEvent;
 import android.view.accessibility.AccessibilityManager;
 import android.view.animation.Animation;
@@ -134,16 +132,12 @@ import android.widget.PopupWindow;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
-import android.view.ViewTreeObserver.OnPreDrawListener;
-import android.view.SurfaceHolder.Callback2;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 
 import com.android.internal.statusbar.IStatusBarService;
 import com.android.internal.R;
-import com.android.internal.view.FloatingActionMode;
-import com.android.internal.widget.FloatingToolbar;
 
 /**
  * Android-specific Window.
@@ -200,7 +194,6 @@ public class PhoneWindow extends Window implements MenuBuilder.Callback {
     private LayoutInflater mLayoutInflater;
 
     private TextView mTitleView;
-    private Context mContext;
 
     private DecorContentParent mDecorContentParent;
     private ActionMenuPresenterCallback mActionMenuPresenterCallback;
@@ -275,6 +268,7 @@ public class PhoneWindow extends Window implements MenuBuilder.Callback {
     private boolean mAlwaysReadCloseOnTouchAttr = false;
     private boolean mEnableGestures;
 
+    private Context mContext;
     private ContextMenuBuilder mContextMenu;
     private MenuDialogHelper mContextMenuHelper;
     private boolean mClosingActionMenu;
diff --git a/core/java/com/android/internal/statusbar/IStatusBar.aidl b/core/java/com/android/internal/statusbar/IStatusBar.aidl
index d05ab46..ba67cf4 100644
--- a/core/java/com/android/internal/statusbar/IStatusBar.aidl
+++ b/core/java/com/android/internal/statusbar/IStatusBar.aidl
@@ -17,9 +17,6 @@
 package com.android.internal.statusbar;
 
 import android.os.Bundle;
-import android.content.Intent;
-
-import com.android.internal.statusbar.StatusBarIcon;
 import android.service.notification.StatusBarNotification;
 
 import com.android.internal.statusbar.StatusBarIcon;
@@ -48,10 +45,6 @@ oneway interface IStatusBar
     void preloadRecentApps();
     void cancelPreloadRecentApps();
     void showScreenPinningRequest();
-    void toggleLastApp();
-    void toggleKillApp();
-    void toggleScreenshot();
-    void toggleOrientationListener(boolean enable);
 
     /**
      * Notifies the status bar that an app transition is pending to delay applying some flags with
@@ -65,13 +58,6 @@ oneway interface IStatusBar
     void appTransitionCancelled();
 
     /**
-     * Notifies the status bar that a camera launch gesture has been detected.
-     *
-     * @param source the identifier for the gesture, see {@link StatusBarManager}
-     */
-    void onCameraLaunchGestureDetected(int source);
-
-    /**
      * Notifies the status bar that an app transition is now being executed.
      *
      * @param statusBarAnimationsStartTime the desired start time for all visual animations in the
@@ -84,8 +70,11 @@ oneway interface IStatusBar
     void showAssistDisclosure();
     void startAssist(in Bundle args);
 
-    void setAutoRotate(boolean enabled);
-    void showCustomIntentAfterKeyguard(inout Intent intent);
-    void screenPinningStateChanged(boolean enabled);
+    /**
+     * Notifies the status bar that a camera launch gesture has been detected.
+     *
+     * @param source the identifier for the gesture, see {@link StatusBarManager}
+     */
+    void onCameraLaunchGestureDetected(int source);
 }
 
diff --git a/core/java/com/android/internal/statusbar/IStatusBarService.aidl b/core/java/com/android/internal/statusbar/IStatusBarService.aidl
index 762b158..7db2cc9 100644
--- a/core/java/com/android/internal/statusbar/IStatusBarService.aidl
+++ b/core/java/com/android/internal/statusbar/IStatusBarService.aidl
@@ -18,7 +18,6 @@ package com.android.internal.statusbar;
 
 import android.os.Bundle;
 import android.service.notification.StatusBarNotification;
-import android.content.Intent;
 
 import com.android.internal.statusbar.IStatusBar;
 import com.android.internal.statusbar.StatusBarIcon;
@@ -68,10 +67,6 @@ interface IStatusBarService
     void toggleRecentApps();
     void preloadRecentApps();
     void cancelPreloadRecentApps();
-    void toggleLastApp();
-    void toggleKillApp();
-    void toggleScreenshot();
-    void toggleOrientationListener(boolean enable);
 
     /**
      * Notifies the status bar that an app transition is pending to delay applying some flags with
@@ -95,8 +90,4 @@ interface IStatusBarService
     void appTransitionStarting(long statusBarAnimationsStartTime, long statusBarAnimationsDuration);
 
     void startAssist(in Bundle args);
-
-    void setAutoRotate(boolean enabled);
-    void showCustomIntentAfterKeyguard(inout Intent intent);
-    void screenPinningStateChanged(boolean enabled);
 }
diff --git a/core/java/com/android/internal/util/NotificationColorUtil.java b/core/java/com/android/internal/util/NotificationColorUtil.java
index 5ee7ae4..6076973 100644
--- a/core/java/com/android/internal/util/NotificationColorUtil.java
+++ b/core/java/com/android/internal/util/NotificationColorUtil.java
@@ -189,32 +189,6 @@ public class NotificationColorUtil {
         return charSequence;
     }
 
-    /**
-     * Sets all the grayscale colors set by {@link android.text.style.TextAppearanceSpan}s on
-     * the text to the given color.
-     *
-     * @param charSequence The text to process.
-     * @param color The color to set.
-     * @return The color changed text.
-     */
-    public CharSequence processCharSequenceColors(int color, CharSequence charSequence) {
-        if (charSequence instanceof Spanned) {
-            Spanned ss = (Spanned) charSequence;
-            Object[] spans = ss.getSpans(0, ss.length(), Object.class);
-            SpannableStringBuilder builder = new SpannableStringBuilder(ss.toString());
-            for (Object span : spans) {
-                Object resultSpan = span;
-                if (span instanceof TextAppearanceSpan) {
-                    resultSpan = processTextAppearanceSpan(color, (TextAppearanceSpan) span);
-                }
-                builder.setSpan(resultSpan, ss.getSpanStart(span), ss.getSpanEnd(span),
-                        ss.getSpanFlags(span));
-            }
-            return builder;
-        }
-        return charSequence;
-    }
-
     private TextAppearanceSpan processTextAppearanceSpan(TextAppearanceSpan span) {
         ColorStateList colorStateList = span.getTextColor();
         if (colorStateList != null) {
@@ -242,37 +216,10 @@ public class NotificationColorUtil {
         return span;
     }
 
-    private TextAppearanceSpan processTextAppearanceSpan(int color, TextAppearanceSpan span) {
-        ColorStateList colorStateList = span.getTextColor();
-        if (colorStateList != null) {
-            int[] colors = colorStateList.getColors();
-            boolean changed = false;
-            for (int i = 0; i < colors.length; i++) {
-                if (ImageUtils.isGrayscale(colors[i])) {
-
-                    // Allocate a new array so we don't change the colors in the old color state
-                    // list.
-                    if (!changed) {
-                        colors = Arrays.copyOf(colors, colors.length);
-                    }
-                    colors[i] = processColor(color);
-                    changed = true;
-                }
-            }
-            if (changed) {
-                return new TextAppearanceSpan(
-                        span.getFamily(), span.getTextStyle(), span.getTextSize(),
-                        new ColorStateList(colorStateList.getStates(), colors),
-                        span.getLinkTextColor());
-            }
-        }
-        return span;
-    }
-
     private int processColor(int color) {
         return Color.argb(Color.alpha(color),
-                Color.red(color),
-                Color.green(color),
-                Color.blue(color));
+                255 - Color.red(color),
+                255 - Color.green(color),
+                255 - Color.blue(color));
     }
 }
diff --git a/core/java/com/android/internal/util/cm/ActionUtils.java b/core/java/com/android/internal/util/cm/ActionUtils.java
index 25eec6d..7e86cd3 100644
--- a/core/java/com/android/internal/util/cm/ActionUtils.java
+++ b/core/java/com/android/internal/util/cm/ActionUtils.java
@@ -4,7 +4,6 @@ import android.app.ActivityManager;
 import android.app.ActivityManagerNative;
 import android.app.ActivityOptions;
 import android.app.IActivityManager;
-import android.content.ActivityNotFoundException;
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.PackageManager;
@@ -102,29 +101,18 @@ public class ActionUtils {
             throws RemoteException {
         ActivityManager.RecentTaskInfo lastTask = getLastTask(context, userId);
 
-        if (lastTask == null) {
+        if (lastTask == null || lastTask.id < 0) {
             return false;
         }
 
-        final Intent lastAppIntent = lastTask.baseIntent;
-        final String packageName = lastAppIntent.getComponent().getPackageName();
+        final String packageName = lastTask.baseIntent.getComponent().getPackageName();
         final IActivityManager am = ActivityManagerNative.getDefault();
         final ActivityOptions opts = ActivityOptions.makeCustomAnimation(context,
                 com.android.internal.R.anim.last_app_in,
                 com.android.internal.R.anim.last_app_out);
 
         if (DEBUG) Log.d(TAG, "switching to " + packageName);
-        if (lastTask.id > 0) {
-            am.moveTaskToFront(lastTask.id, ActivityManager.MOVE_TASK_NO_USER_ACTION, opts.toBundle());
-        } else if (lastAppIntent != null) {
-            // last task is dead, restart it.
-            lastAppIntent.addFlags(Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY);
-            try {
-                context.startActivityAsUser(lastAppIntent, opts.toBundle(), UserHandle.CURRENT);
-            } catch (ActivityNotFoundException e) {
-                Log.w("Recent", "Unable to launch recent task", e);
-            }
-        }
+        am.moveTaskToFront(lastTask.id, ActivityManager.MOVE_TASK_NO_USER_ACTION, opts.toBundle());
 
         return true;
     }
diff --git a/core/java/com/android/internal/util/cm/PowerMenuConstants.java b/core/java/com/android/internal/util/cm/PowerMenuConstants.java
index c336170..3debd09 100644
--- a/core/java/com/android/internal/util/cm/PowerMenuConstants.java
+++ b/core/java/com/android/internal/util/cm/PowerMenuConstants.java
@@ -21,13 +21,11 @@ public class PowerMenuConstants {
     public static final String GLOBAL_ACTION_KEY_POWER = "power";
     public static final String GLOBAL_ACTION_KEY_REBOOT = "reboot";
     public static final String GLOBAL_ACTION_KEY_SCREENSHOT = "screenshot";
-    public static final String GLOBAL_ACTION_KEY_SCREENRECORD = "screenrecord";
     public static final String GLOBAL_ACTION_KEY_AIRPLANE = "airplane";
     public static final String GLOBAL_ACTION_KEY_USERS = "users";
     public static final String GLOBAL_ACTION_KEY_SETTINGS = "settings";
     public static final String GLOBAL_ACTION_KEY_LOCKDOWN = "lockdown";
     public static final String GLOBAL_ACTION_KEY_BUGREPORT = "bugreport";
-    public static final String GLOBAL_ACTION_KEY_TORCH = "torch";
     public static final String GLOBAL_ACTION_KEY_SILENT = "silent";
     public static final String GLOBAL_ACTION_KEY_VOICEASSIST = "voiceassist";
     public static final String GLOBAL_ACTION_KEY_ASSIST = "assist";
@@ -36,13 +34,11 @@ public class PowerMenuConstants {
         GLOBAL_ACTION_KEY_POWER,
         GLOBAL_ACTION_KEY_REBOOT,
         GLOBAL_ACTION_KEY_SCREENSHOT,
-        GLOBAL_ACTION_KEY_SCREENRECORD,
         GLOBAL_ACTION_KEY_AIRPLANE,
         GLOBAL_ACTION_KEY_USERS,
         GLOBAL_ACTION_KEY_SETTINGS,
         GLOBAL_ACTION_KEY_LOCKDOWN,
         GLOBAL_ACTION_KEY_BUGREPORT,
-        GLOBAL_ACTION_KEY_TORCH,
         GLOBAL_ACTION_KEY_SILENT,
         GLOBAL_ACTION_KEY_VOICEASSIST,
         GLOBAL_ACTION_KEY_ASSIST
diff --git a/core/java/com/android/internal/view/IInputMethodManager.aidl b/core/java/com/android/internal/view/IInputMethodManager.aidl
index d1ee9a0..60c5e42 100644
--- a/core/java/com/android/internal/view/IInputMethodManager.aidl
+++ b/core/java/com/android/internal/view/IInputMethodManager.aidl
@@ -79,5 +79,4 @@ interface IInputMethodManager {
     void setAdditionalInputMethodSubtypes(String id, in InputMethodSubtype[] subtypes);
     int getInputMethodWindowVisibleHeight();
     oneway void notifyUserAction(int sequenceNumber);
-    boolean isImeShowing();
 }
diff --git a/core/java/com/android/internal/view/menu/MenuPopupHelper.java b/core/java/com/android/internal/view/menu/MenuPopupHelper.java
index f288797..7d45071 100644
--- a/core/java/com/android/internal/view/menu/MenuPopupHelper.java
+++ b/core/java/com/android/internal/view/menu/MenuPopupHelper.java
@@ -54,8 +54,6 @@ public class MenuPopupHelper implements AdapterView.OnItemClickListener, View.On
     private final int mPopupStyleAttr;
     private final int mPopupStyleRes;
 
-    private boolean mAllowLeftOverdraw;
-
     private View mAnchorView;
     private ListPopupWindow mPopup;
     private ViewTreeObserver mTreeObserver;
@@ -122,10 +120,6 @@ public class MenuPopupHelper implements AdapterView.OnItemClickListener, View.On
         return mDropDownGravity;
     }
 
-    public void setAllowLeftOverdraw(boolean enabled) {
-        mAllowLeftOverdraw = enabled;
-    }
-
     public void show() {
         if (!tryShow()) {
             throw new IllegalStateException("MenuPopupHelper cannot be used without an anchor");
@@ -162,7 +156,6 @@ public class MenuPopupHelper implements AdapterView.OnItemClickListener, View.On
             anchor.addOnAttachStateChangeListener(this);
             mPopup.setAnchorView(anchor);
             mPopup.setDropDownGravity(mDropDownGravity);
-            mPopup.setAllowLeftOverdraw(mAllowLeftOverdraw);
         } else {
             return false;
         }
diff --git a/core/java/com/android/internal/widget/LockPatternUtils.java b/core/java/com/android/internal/widget/LockPatternUtils.java
index 0c8a3f5..dc2cf1e 100644
--- a/core/java/com/android/internal/widget/LockPatternUtils.java
+++ b/core/java/com/android/internal/widget/LockPatternUtils.java
@@ -1097,14 +1097,6 @@ public class LockPatternUtils {
                 Settings.System.HAPTIC_FEEDBACK_ENABLED, 1, UserHandle.USER_CURRENT) != 0;
     }
 
-    public boolean shouldPassToSecurityView(int userId) {
-        return getBoolean(Settings.Secure.LOCK_PASS_TO_SECURITY_VIEW, false, userId);
-    }
-
-    public void setPassToSecurityView(boolean enabled, int userId) {
-        setBoolean(Settings.Secure.LOCK_PASS_TO_SECURITY_VIEW, enabled, userId);
-    }
-
     /**
      * @return the pattern lockscreen size
      */
diff --git a/core/java/com/android/server/BootReceiver.java b/core/java/com/android/server/BootReceiver.java
index 92d5aea..6103ebc 100644
--- a/core/java/com/android/server/BootReceiver.java
+++ b/core/java/com/android/server/BootReceiver.java
@@ -97,6 +97,7 @@ public class BootReceiver extends BroadcastReceiver {
         final DropBoxManager db = (DropBoxManager) ctx.getSystemService(Context.DROPBOX_SERVICE);
         final SharedPreferences prefs = ctx.getSharedPreferences("log_files", Context.MODE_PRIVATE);
         final String headers = new StringBuilder(512)
+            .append("CM Version: ").append(SystemProperties.get("ro.cm.version")).append("\n")
             .append("Build: ").append(Build.FINGERPRINT).append("\n")
             .append("Hardware: ").append(Build.BOARD).append("\n")
             .append("Revision: ")
diff --git a/core/res/AndroidManifest.xml b/core/res/AndroidManifest.xml
index c3c6f94..84c3a9c 100644
--- a/core/res/AndroidManifest.xml
+++ b/core/res/AndroidManifest.xml
@@ -2397,7 +2397,6 @@
     <permission android:name="android.permission.BATTERY_STATS"
         android:protectionLevel="signature|privileged|development" />
 
-
     <!-- Allows an application to reset the device battery statistics.
     <p>Not for use by third-party applications.
          @hide -->
@@ -2793,8 +2792,7 @@
                  android:backupAgent="com.android.server.backup.SystemBackupAgent"
                  android:killAfterRestore="false"
                  android:icon="@drawable/ic_launcher_android"
-                 android:supportsRtl="true"
-                 android:theme="@style/Theme.Material.DayNight.DarkActionBar">
+                 android:supportsRtl="true">
         <activity android:name="com.android.internal.app.ChooserActivity"
                 android:theme="@style/Theme.DeviceDefault.Resolver"
                 android:finishOnCloseSystemDialogs="true"
diff --git a/core/res/res/anim/popup_enter_material.xml b/core/res/res/anim/popup_enter_material.xml
index 4ca11b8..79de26b 100644
--- a/core/res/res/anim/popup_enter_material.xml
+++ b/core/res/res/anim/popup_enter_material.xml
@@ -1,30 +1,22 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/common/res/anim/fade_in.xml
-**
-** Copyright 2007, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License"); 
-** you may not use this file except in compliance with the License. 
-** You may obtain a copy of the License at 
-**
-**     http://www.apache.org/licenses/LICENSE-2.0 
-**
-** Unless required by applicable law or agreed to in writing, software 
-** distributed under the License is distributed on an "AS IS" BASIS, 
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
-** See the License for the specific language governing permissions and 
-** limitations under the License.
-*/
+<!-- Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
 -->
 
-<set xmlns:android="http://schemas.android.com/apk/res/android" android:shareInterpolator="false">
-    <scale 	android:interpolator="@interpolator/decelerate_quint"
-	 	   	android:fromXScale="0.9" android:toXScale="1.0"
-           	android:fromYScale="0.9" android:toYScale="1.0"
-           	android:pivotX="50%" android:pivotY="100%"
-           	android:duration="@android:integer/config_activityDefaultDur" />
-    <alpha 	android:interpolator="@interpolator/decelerate_cubic"
-            android:fromAlpha="0.0" android:toAlpha="1.0"
-            android:duration="@android:integer/config_activityShortDur" />
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false" >
+    <alpha android:fromAlpha="0.0" android:toAlpha="1.0"
+           android:interpolator="@interpolator/decelerate_cubic"
+           android:duration="@android:integer/config_activityShortDur" />
 </set>
diff --git a/core/res/res/drawable-nodpi/platlogo_cm.xml b/core/res/res/drawable-nodpi/platlogo_cm.xml
new file mode 100644
index 0000000..b863c27
--- /dev/null
+++ b/core/res/res/drawable-nodpi/platlogo_cm.xml
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2015 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="48.0"
+    android:viewportHeight="48.0">
+
+    <path
+        android:name="body"
+        android:fillColor="#FFFFFF"
+        android:pathData="M24,12L24,12L24,12L24,12L24,12c7.7,0,14,1.2,14.9,2.6c0,0,0,0,0,0c1,1.5,1.1,6.5,1.1,9.4s-0.1,7.8-1.1,9.4
+c0,0,0,0,0,0C38,34.8,31.7,36,24,36l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c-7.7,0-14-1.2-14.9-2.6c0,0,0,0,0,0C8.1,31.8,8,26.9,8,24
+s0.1-7.8,1.1-9.4c0,0,0,0,0,0C10,13.2,16.3,12,24,12L24,12L24,12L24,12L24,12z" />
+    <path
+        android:name="top"
+        android:fillColor="#EBEBEB"
+        android:pathData="M39,15c0,1.7-6.7,3-15,3S9,16.7,9,15s6.7-3,15-3S39,13.3,39,15z" />
+    <path
+        android:name="r_ant"
+        android:fillColor="#FFFFFF"
+        android:pathData="M35,15c-0.1,0-0.3,0-0.4-0.1c-0.5-0.2-0.8-0.8-0.5-1.3l2-5c0.2-0.5,0.8-0.8,1.3-0.5
+c0.5,0.2,0.8,0.8,0.5,1.3l-2,5C35.7,14.8,35.3,15,35,15z" />
+    <path
+        android:name="l_ant"
+        android:fillColor="#FFFFFF"
+        android:pathData="M13,15c0.1,0,0.3,0,0.4-0.1c0.5-0.2,0.8-0.8,0.5-1.3l-2-5c-0.2-0.5-0.8-0.8-1.3-0.5
+c-0.5,0.2-0.8,0.8-0.5,1.3l2,5C12.3,14.8,12.7,15,13,15z" />
+    <path
+        android:name="smile"
+        android:fillColor="#EBEBEB"
+        android:pathData="M22,32C22,32,22,32.1,22,32c0,0.9,0.6,1.5,1.4,1.5h1.1c0.8,0,1.5-0.7,1.5-1.5c0,0,0-0.1,0-0.1H22z" />
+    <path
+        android:name="l_eye"
+        android:fillColor="#EBEBEB"
+        android:pathData="M16,20c-2.8,0-5,2.2-5,5c0,2.8,2.2,5,5,5c2.8,0,5-2.2,5-5C21,22.2,18.8,20,16,20z" />
+    <path
+        android:name="r_eye"
+        android:fillColor="#EBEBEB"
+        android:pathData="M32,20c-2.8,0-5,2.2-5,5c0,2.8,2.2,5,5,5c2.8,0,5-2.2,5-5C37,22.2,34.8,20,32,20z" />
+</vector>
diff --git a/core/res/res/drawable-nodpi/stat_sys_adb.xml b/core/res/res/drawable-nodpi/stat_sys_adb.xml
index 8cc9961..9dd9497 100644
--- a/core/res/res/drawable-nodpi/stat_sys_adb.xml
+++ b/core/res/res/drawable-nodpi/stat_sys_adb.xml
@@ -1,11 +1,11 @@
 <!--
-Copyright (C) 2014 The Android Open Source Project
+    Copyright (c) 2015 The CyanogenMod Project
 
-   Licensed under the Apache License, Version 2.0 (the "License");
+    Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
 
-         http://www.apache.org/licenses/LICENSE-2.0
+        http://www.apache.org/licenses/LICENSE-2.0
 
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
@@ -14,23 +14,26 @@ Copyright (C) 2014 The Android Open Source Project
     limitations under the License.
 -->
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24.0dp"
-        android:height="24.0dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M21.3,6.6L21,6.9c0,1-3.8,1.7-9,1.7S3,7.9,3,6.9L2.7,6.6C2.1,7.6,2,10.7,2,12.5
+c0,1.8,0.1,4.9,0.7,5.8l0,0C3.2,19.3,7.2,20,12,20c4.8,0,8.8-0.7,9.3-1.7l0,0c0.6-1,0.7-4.1,0.7-5.8C22,10.7,21.9,7.6,21.3,6.6z
+M7,17c-1.7,0-3-1.3-3-3s1.3-3,3-3c1.7,0,3,1.3,3,3S8.7,17,7,17z
+M17,17c-1.7,0-3-1.3-3-3c0-1.7,1.3-3,3-3c1.7,0,3,1.3,3,3 C20,15.7,18.7,17,17,17z" />
     <path
-        android:pathData="M8.4,5.3c-0.2,0.0 -0.4,-0.2 -0.5,-0.4L7.1,1.6C7.0,1.4 7.2,1.1 7.4,1.0C7.7,0.9 8.0,1.1 8.0,1.4l0.8,3.3c0.1,0.3 -0.1,0.5 -0.4,0.6C8.5,5.3 8.4,5.3 8.4,5.3z"
-        android:fillColor="#FFFFFF"/>
+        android:fillColor="#BBFFFFFF"
+        android:pathData="M21.4,6.9c0,1-4.2,1.9-9.4,1.9S2.6,7.9,2.6,6.9S6.8,5,12,5S21.4,5.8,21.4,6.9z" />
     <path
-        android:pathData="M15.6,5.3c0.0,0.0 -0.1,0.0 -0.1,0.0c-0.3,-0.1 -0.4,-0.3 -0.4,-0.6L16.0,1.4C16.0,1.1 16.3,0.9 16.6,1.0c0.3,0.1 0.4,0.3 0.4,0.6l-0.8,3.3C16.1,5.1 15.9,5.3 15.6,5.3z"
-        android:fillColor="#FFFFFF"/>
+        android:fillColor="#FFFFFF"
+        android:pathData="M19.7,6.5c-0.1,0.3-0.5,0.5-0.8,0.3c-0.3-0.1-0.5-0.5-0.3-0.8l1.3-3.1c0.1-0.3,0.5-0.5,0.8-0.3
+C20.9,2.7,21.1,3,21,3.4L19.7,6.5z" />
     <path
-        android:pathData="M18.6,5.4c-0.1,-0.1 -0.2,-0.1 -0.3,-0.2c0.2,0.2 0.3,0.3 0.3,0.5c0.0,0.9 -2.9,1.7 -6.6,1.7S5.4,6.7 5.4,5.7c0.0,-0.2 0.1,-0.3 0.3,-0.5C5.6,5.3 5.5,5.4 5.4,5.4C5.0,5.9 4.0,8.0 4.0,12.0s1.0,6.1 1.4,6.6C5.9,19.0 8.0,20.0 12.0,20.0s6.1,-1.0 6.6,-1.4C19.0,18.1 20.0,16.0 20.0,12.0S19.0,5.9 18.6,5.4zM8.0,13.0c-0.6,0.0 -1.0,-0.4 -1.0,-1.0c0.0,-0.6 0.4,-1.0 1.0,-1.0s1.0,0.4 1.0,1.0C9.0,12.6 8.6,13.0 8.0,13.0zM16.0,13.0c-0.6,0.0 -1.0,-0.4 -1.0,-1.0c0.0,-0.6 0.4,-1.0 1.0,-1.0s1.0,0.4 1.0,1.0C17.0,12.6 16.6,13.0 16.0,13.0z"
-        android:fillColor="#FFFFFF"/>
-   <path
-        android:pathData="M5.35,5.7
-                          a 6.6 1.75 0 1 1 13.25 0
-                          a 6.6 1.75 0 1 1 -13.25 0
-                          z" 
-        android:fillColor="#BBFFFFFF" />
+        android:fillColor="#FFFFFF"
+        android:pathData="M4.3,6.5C4.5,6.8,4.8,7,5.1,6.8C5.5,6.7,5.6,6.3,5.5,6L4.2,2.9C4.1,2.6,3.7,2.4,3.4,2.5
+C3.1,2.7,2.9,3,3,3.4L4.3,6.5z" />
 </vector>
diff --git a/core/res/res/layout/global_actions_silent_mode.xml b/core/res/res/layout/global_actions_silent_mode.xml
index 1ce075e..56fa28b 100644
--- a/core/res/res/layout/global_actions_silent_mode.xml
+++ b/core/res/res/layout/global_actions_silent_mode.xml
@@ -37,7 +37,7 @@
             android:layout_marginEnd="8dp"
             android:layout_marginTop="6dp"
             android:layout_marginBottom="6dp"
-            android:src="@drawable/ic_power_dnd_total_silence"
+            android:src="@drawable/ic_lock_dnd_total_silence"
             android:scaleType="center"
             android:duplicateParentState="true"
             android:background="@drawable/silent_mode_indicator"
@@ -66,7 +66,7 @@
             android:layout_marginEnd="8dp"
             android:layout_marginTop="6dp"
             android:layout_marginBottom="6dp"
-            android:src="@drawable/ic_power_dnd_priority"
+            android:src="@drawable/ic_lock_dnd_priority"
             android:scaleType="center"
             android:duplicateParentState="true"
             android:background="@drawable/silent_mode_indicator"
@@ -95,7 +95,7 @@
             android:layout_marginEnd="8dp"
             android:layout_marginTop="6dp"
             android:layout_marginBottom="6dp"
-            android:src="@drawable/ic_power_vibrate"
+            android:src="@drawable/ic_lock_vibrate"
             android:scaleType="center"
             android:duplicateParentState="true"
             android:background="@drawable/silent_mode_indicator"
@@ -124,11 +124,10 @@
             android:layout_marginEnd="8dp"
             android:layout_marginTop="6dp"
             android:layout_marginBottom="6dp"
-            android:src="@drawable/ic_power_ring"
+            android:src="@drawable/ic_lock_ring"
             android:scaleType="center"
             android:duplicateParentState="true"
             android:background="@drawable/silent_mode_indicator"
             />
     </LinearLayout>
 </LinearLayout>
-
diff --git a/core/res/res/values-csb-rPL/cm_strings.xml b/core/res/res/values-csb-rPL/cm_strings.xml
new file mode 100644
index 0000000..2ce9b8b
--- /dev/null
+++ b/core/res/res/values-csb-rPL/cm_strings.xml
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+     Copyright (C) 2012-2015 The CyanogenMod Project
+     Copyright (c) 2013, The Linux Foundation. All rights reserved.
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- label for item that screenshots in phone options dialog -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- [CHAR LIMIT=NONE] Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- [CHAR LIMIT=NONE] Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- [CHAR LIMIT=NONE] Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- [CHAR LIMIT=NONE] Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- label for item that reboots the phone in phone options dialog -->
+  <!-- label for current user in phone options dialog -->
+  <!-- Reboot menu -->
+  <!-- Button to reboot the phone, within the Reboot Options dialog -->
+  <!-- Button to reboot the phone into recovery, within the Reboot Options dialog -->
+  <!-- Button to reboot the phone into bootloader, within the Reboot Options dialog -->
+  <!-- Button to reboot the phone into download, within the Reboot Options dialog -->
+  <!-- Button to soft reboot the device, within the Reboot Options dialog -->
+  <!-- Title of dialog to confirm rebooting. -->
+  <!-- Reboot Confirmation Dialog.  When the user chooses to reboot the device, there will
+         be a confirmation dialog.  This is the message. -->
+  <!-- Reboot Progress Dialog. This is shown if the user chooses to reboot the phone. -->
+  <!-- Long-press back kill application -->
+  <!-- ADB over network notification -->
+  <!-- ADB over USB and network notification -->
+  <!-- ADB notification message-->
+  <!-- ADB custom tile -->
+  <!-- Title of an application permission, listed so the user can choose whether they want the application to do this. -->
+  <!-- stylus gestures support -->
+  <!-- Zen mode buttons -->
+  <!-- Wifi Hotspot disabled due to subscription change -->
+  <!-- WiFi turn off notification action text -->
+  <!-- Privacy Guard -->
+  <!-- Text of the checkbox for the permission confirmation dialog to remember the user's choice. [CHAR LIMIT=40] -->
+  <!-- App ops requests -->
+  <!-- Notify user that they are in Lock-to-app (for devices without navbar) -->
+  <!-- Template for showing cellular network operator name while LTE calling is enabled -->
+  <!-- Keyguard strings -->
+  <!-- Sequence of characters used to separate carrier message strings in keyguard. Typically just vertical line
+         with spaces on either side. [CHAR LIMIT=3] -->
+  <!-- Protected Apps Notification -->
+  <!-- Battery fully charged notification -->
+  <!-- [CHAR LIMIT=NONE] Title of an application permission, listed so the user can choose
+         whether they want to allow the application to do this. -->
+  <!-- [CHAR LIMIT=NONE] Description of an application permission, listed so the user can choose
+         whether they want to allow the application to do this. -->
+  <!-- Uicc hotswapped event configuration needed notification -->
+</resources>
diff --git a/core/res/res/values-csb-rPL/strings.xml b/core/res/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..58b884b
--- /dev/null
+++ b/core/res/res/values-csb-rPL/strings.xml
@@ -0,0 +1,1627 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/* //device/apps/common/assets/res/any/strings.xml
+**
+** Copyright 2006, The Android Open Source Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Suffix added to a number to signify size in bytes. -->
+  <!-- Suffix added to a number to signify size in kilobytes. -->
+  <!-- Suffix added to a number to signify size in megabytes. -->
+  <!-- Suffix added to a number to signify size in gigabytes. -->
+  <!-- Suffix added to a number to signify size in terabytes. -->
+  <!-- Suffix added to a number to signify size in petabytes. -->
+  <!-- Format string used to add a suffix like "KB" or "MB" to a number
+         to display a size in kilobytes, megabytes, or other size units.
+         Some languages (like French) will want to add a space between
+         the placeholders. -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration in days -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one day with hours -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one day with one hours -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration in hours -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one hour with minutes -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one hour with one minute -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration in minutes -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one minute -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one minute with seconds -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one minute with one second -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration in seconds -->
+  <!-- [CHAR_LIMIT=10] Suffix added to signify duration of one second -->
+  <!-- Used in Contacts for a field that has no label and in Note Pad
+         for a note with no name. -->
+  <!-- How to display the lack of a phone number -->
+  <!-- How to display the lack of a name -->
+  <!-- What the UI should display for "voice mail" unless overridden by the SIM-->
+  <!-- What the UI should display for "Msisdn" unless overridden by the SIM-->
+  <!-- For GsmMmiCode.java -->
+  <!-- Displayed when the user dialed an MMI code whose function
+         could not be performed. This will be displayed in a toast. -->
+  <!-- Displayed when the user dialed an MMI code whose function
+         could not be performed because FDN is enabled. This will be displayed in a toast. -->
+  <!-- Displayed when a phone feature such as call barring was activated. -->
+  <!-- Displayed in front of the list of a set of service classes
+         (voice, data, fax, etc.) that were enabled. -->
+  <!-- Displayed when a phone feature such as call forwarding was deactivated. -->
+  <!-- Displayed when a phone property such as a SIM password was registered. -->
+  <!-- Displayed when a phone property such as a SIM password was erased. -->
+  <!-- Displayed when a SIM password was entered incorrectly. -->
+  <!-- Displayed when a phone feature triggered by an MMI code is complete. -->
+  <!-- Displayed when a SIM PIN password is entered incorrectly. -->
+  <!-- Displayed when a SIM PUK password is entered incorrectly. -->
+  <!-- Displayed when SIM PIN passwords are entered inconsistently. -->
+  <!-- Displayed when a SIM PIN password is too long or too short. -->
+  <!-- Displayed when a SIM PUK password is too short. -->
+  <!-- Displayed to prompt the user to type the PUK password to unlock
+         the SIM card. -->
+  <!-- Displayed when user attempts to change SIM PIN1 without enabling PIN1. -->
+  <!-- Displayed when a SIM PIN/PUK is entered incorrectly. -->
+  <!-- Title for the dialog used to display the user's IMEI number [CHAR LIMIT=10] -->
+  <!-- Title for the dialog used to display the user's MEID number on CDMA network
+         [CHAR LIMIT=10] -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling caller ID. -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling caller ID. -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling connected line ID. -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling connected line ID restriction. -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling call forwarding. -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling call waiting. -->
+  <!-- Displayed as the title for a success/failure report enabling/disabling call barring. -->
+  <!-- Displayed as the title for a success/failure report changing the SIM password. -->
+  <!-- Displayed as the title for a success/failure report changing the SIM PIN. -->
+  <!-- Displayed to confirm to the user that caller ID will be restricted on the next call as usual. -->
+  <!-- Displayed to confirm to the user that caller ID will be not restricted on the next call even though it usually is. -->
+  <!-- Displayed to confirm to the user that caller ID will not be restricted on the next call but usually is. -->
+  <!-- Displayed to confirm to the user that caller ID will not be restricted on the next call or in general. -->
+  <!-- Displayed to tell the user that caller ID is not provisioned for their SIM. -->
+  <!-- Displayed to tell the user that they cannot change the caller ID setting. -->
+  <!-- Notification title to tell the user that restricted state is changed by access control. -->
+  <!-- Displayed to tell the user that data service is blocked by access control. -->
+  <!-- Displayed to tell the user that emergency service is blocked by access control. -->
+  <!-- Displayed to tell the user that normal service is blocked by access control. -->
+  <!-- Displayed to tell the user that all emergency and normal voice services are blocked by access control. -->
+  <!-- Displayed to tell the user that sms service is blocked by access control. -->
+  <!-- Displayed to tell the user that voice/data service is blocked by access control. -->
+  <!-- Displayed to tell the user that voice and sms service are blocked by access control. -->
+  <!-- Displayed to tell the user that all service is blocked by access control. -->
+  <!-- Displayed to tell the user that peer changed TTY mode -->
+  <!-- Mappings between TS 27.007 +CFCC/+CLCK "service classes" and human-readable strings-->
+  <!-- Example: Service was enabled for: Voice, Data -->
+  <!-- Example: Service was enabled for: Voice, Data -->
+  <!-- Example: Service was enabled for: Voice, FAX -->
+  <!-- Example: Service was enabled for: Voice, SMS -->
+  <!-- Meaning: asynchronous data.  Example: Service was enabled for: Voice, Async -->
+  <!-- Meaning: synchronous data.  Example: Service was enabled for: Voice, Async -->
+  <!-- Meaning: packet data.  Example: Service was enabled for: Voice, Packet -->
+  <!-- Meaning: unknown.  Example: Service was enabled for: Voice, PAD -->
+  <!-- CDMA Roaming Indicator Strings (non ERI)-->
+  <!-- Default roaming indicator text -->
+  <!-- Displayed when WFC registration fails -->
+  <!-- WFC Operator Error Codes -->
+  <!-- WFC Operator Error Messages showed as alerts -->
+  <!-- WFC Operator Error Messages showed as notifications -->
+  <!-- Template for showing cellular network operator name while WFC is active -->
+  <!-- Template for showing operator name for data connection while WFC is active -->
+  <!-- WFC, summary for Disabled -->
+  <!-- WFC, summary for Wi-Fi Preferred -->
+  <!-- WFC, summary for Cellular Preferred -->
+  <!-- WFC, summary for Wi-Fi Only -->
+  <!--
+        {0} is one of "bearerServiceCode*"
+        {1} is dialing number
+        {2} is time in seconds
+
+        cfTemplateRegistered and cfTemplateRegisteredTime mean that a phone number
+        has been set but forwarding is not on.
+    -->
+  <!-- Displayed when the call forwarding query was not able to be forwarded. -->
+  <!-- Displayed when the call forwarding query was forwarded. -->
+  <!-- Displayed when the call forwarding query will be forwarded after some time. -->
+  <!-- Displayed when the call forwarding query was set but forwarding is not enabled. -->
+  <!-- Displayed when the call forwarding query was set but forwarding is not enabled. -->
+  <!-- android.net.http Error strings -->
+  <!-- Displayed when a feature code (non-phone number) is dialed and completes successfully. -->
+  <!-- Displayed when a feature code (non-phone number) is dialed and completes unsuccessfully. -->
+  <!-- android.net.http Error strings -->
+  <!-- Displayed when a web request was successful. -->
+  <!-- Displayed when a web request failed with a generic network error. -->
+  <!-- Displayed when a web request failed because the URL could not be found. -->
+  <!-- Displayed when a web request failed because the site's authentication scheme is not supported by us. -->
+  <!-- Displayed when a web request failed because the authentication failed. -->
+  <!-- Displayed when a web request failed because the authentication with the proxy failed. -->
+  <!-- Displayed when a web request failed because there was a connection error. -->
+  <!-- Displayed when a web request failed because there was an input or output error. -->
+  <!-- Displayed when a web request failed because the request timed out -->
+  <!-- Displayed when a web request failed because the site tried to redirect us one too many times -->
+  <!-- Displayed when a web request failed because the protocol of the server is not supported. -->
+  <!-- Displayed when a web request failed because the a secure connection couldn't be made to the server.-->
+  <!-- Displayed when a web request failed because the URL isn't in a valid form. -->
+  <!-- Displayed when a request failed because we failed to open the file. -->
+  <!-- Displayed when a request failed because the file wasn't found. -->
+  <!-- Displayed when a request failed because there are too many requests right now. -->
+  <!-- Account notifications -->
+  <!-- A notification is shown when the AccountManager is unable to
+    supply an auth token without prompting the user to re-enter the
+    password.  This is the text that will scroll through the
+    notification bar (will be seen by the user as he uses another application). -->
+  <!-- Sync notifications -->
+  <!-- A notification is shown when there is a sync error.  This is the text that will scroll through the notification bar (will be seen by the user as he uses another application). -->
+  <!-- A notification is shown when there is a sync error.  This is the title of the notification.  It will be seen in the pull-down notification tray. -->
+  <!-- A notification is shown when there is a sync error.  This is the message of the notification.  It describes the error, in this case is there were too many deletes. The argument is the type of content, for example Gmail or Calendar. It will be seen in the pull-down notification tray. -->
+  <!-- If MMS discovers there isn't much space left on the device, it will show a toast with this message. -->
+  <!-- If MMS discovers there isn't much space left on the device, it will show a toast with this message. -->
+  <!-- If MMS discovers there isn't much space left on the device, it will show a toast with this message. -->
+  <!-- If MMS discovers there isn't much space left on the device, it will show a toast with this message. -->
+  <!-- SSL CA cert notification -->
+  <!-- Shows up when there is a user SSL CA Cert installed on the
+         device.  Indicates to the user that SSL traffic can be intercepted.  [CHAR LIMIT=NONE] -->
+  <!-- Content text for a notification. The Title of the notification is "ssl_ca_cert_warning",
+         i.e. "Network may be monitored". This says that an unknown party is doing the monitoring.
+         [CHAR LIMIT=100]-->
+  <!-- Content text for a notification. The Title of the notification is "ssl_ca_cert_warning",
+        i.e. "Network may be monitored". This indicates that an unspecified administrator is doing
+        the monitoring. [CHAR LIMIT=100]-->
+  <!-- Content text for a notification. The Title of the notification is "ssl_ca_cert_warning",
+         i.e. "Network may be monitored". This indicates who is doing the monitoring.
+         [CHAR LIMIT=100]-->
+  <!-- Work profile deleted notification-->
+  <!-- Shows up in the notification's title when the system deletes the work profile. [CHAR LIMIT=NONE] -->
+  <!-- Content text for a notification. The Title of the notification is "work_profile_deleted",
+         i.e. "Work profile deleted". This says that the profile is deleted by the system as a result of
+         the current profile owner gone missing. [CHAR LIMIT=100]-->
+  <!-- Content text for an expanded notification. The Title of the notification is "work_profile_deleted",
+         i.e. "Work profile deleted". This further explains that the profile is deleted by the system
+         as a result of the current profile admin gone missing. [CHAR LIMIT=NONE]-->
+  <!-- Content text for a notification. The Title of the notification is "work_profile_deleted",
+        This indicates that a work profile has been deleted. [CHAR LIMIT=NONE]-->
+  <!-- Factory reset warning dialog strings-->
+  <!-- Shows up in the dialog's title to warn about an impeding factory reset. [CHAR LIMIT=NONE] -->
+  <!-- Text message in the factory reset warning dialog. This says that the the device admin app
+         is missing or corrupted. As a result the device will be erased. [CHAR LIMIT=NONE]-->
+  <!-- Display name for any time a piece of data refers to the owner of the phone. For example, this could be used in place of the phone's phone number. -->
+  <!-- Power Dialog -->
+  <!-- Title for the Phone Options dialog to lock the screen, turn off the phone etc. -->
+  <!-- Title for the Phone Options dialog to lock the screen, turn off the phone etc. -->
+  <!-- Title for the Phone Options dialog to lock the screen, turn off the phone etc. -->
+  <!-- Button to turn on silent mode, within the Phone Options dialog -->
+  <!-- Button to turn on the radio, within the Phone Options dialog -->
+  <!-- Button to turn off the radio, within the Phone Options dialog -->
+  <!-- Button to lock the screen, within the Phone Options dialog -->
+  <!-- Button to turn off the phone, within the Phone Options dialog -->
+  <!-- Spoken description for ringer silent option. [CHAR LIMIT=NONE] -->
+  <!-- Spoken description for ringer vibrate option. [CHAR LIMIT=NONE] -->
+  <!-- Spoken description for ringer normal option. [CHAR LIMIT=NONE] -->
+  <!-- Reboot to Recovery Progress Dialog. This is shown before it reboots to recovery. -->
+  <!-- Reboot to Recovery for factory reset. -->
+  <!-- Shutdown Progress Dialog. This is shown if the user chooses to power off the phone. -->
+  <!-- Shutdown Confirmation Dialog.  When the user chooses to power off the phone, there will
+         be a confirmation dialog.  This is the message. -->
+  <!-- Shutdown Confirmation Dialog.  When the user chooses to power off the TV, there will
+         be a confirmation dialog.  This is the message. -->
+  <!-- Shutdown Confirmation Dialog.  When the user chooses to power off the watch, there will
+         be a confirmation dialog.  This is the message. -->
+  <!-- Shutdown Confirmation Dialog.  When the user chooses to power off the phone, there will
+         be a confirmation dialog.  This is the message. -->
+  <!-- Shutdown Confirmation Dialog.  When the user chooses to power off the phone, it asks
+         the user if they'd like to shut down.  This is the message.  This is used instead of
+         shutdown_confirm when the system is configured to use long press to go directly to the
+         power off dialog instead of the global actions menu. -->
+  <!-- Title of dialog to confirm rebooting into safe mode. [CHAR LIMIT=50] -->
+  <!-- Shutdown Confirmation Dialog.  Message in the confirmation dialog
+         when the user asks to reboot into safe mode. [CHAR LIMIT=NONE] -->
+  <!-- Recent Tasks dialog: title
+     TODO: this should move to SystemUI.apk, but the code for the old
+            recent dialog is still in the framework
+     -->
+  <!-- Recent Tasks dialog: message when there are no recent applications
+     TODO: this should move to SystemUI.apk, but the code for the old
+            recent dialog is still in the framework
+     -->
+  <!-- Title of the Global Actions Dialog -->
+  <!-- Title of the Global Actions Dialog -->
+  <!-- Title of the Global Actions Dialog -->
+  <!-- label for item that locks the phone in the phone options dialog -->
+  <!-- label for item that turns off power in phone options dialog -->
+  <!-- label for item that generates a bug report in the phone options dialog -->
+  <!-- Take bug report menu title [CHAR LIMIT=NONE] -->
+  <!-- Message in bugreport dialog describing what it does [CHAR LIMIT=NONE] -->
+  <!-- Format for build summary info [CHAR LIMIT=NONE] -->
+  <!-- label for item that enables silent mode in phone options dialog -->
+  <!-- status message in phone options dialog for when silent mode is enabled -->
+  <!-- status message in phone options dialog for when silent mode is disabled -->
+  <!-- label for item that toggles airplane mode -->
+  <!-- status message in phone options dialog for when airplane mode is on -->
+  <!-- status message in phone options dialog for when airplane mode is off -->
+  <!-- label for item that launches settings in phone options dialog [CHAR LIMIT=15]-->
+  <!-- label for item that launches assist in phone options dialog [CHAR LIMIT=15]-->
+  <!-- label for item that launches voice assist in phone options dialog [CHAR LIMIT=15]-->
+  <!-- label for item that locks the phone and enforces that it can't be unlocked without entering a credential. [CHAR LIMIT=15] -->
+  <!-- Text to use when the number in a notification info is too large
+         (greater than status_bar_notification_info_maxnum, defined in
+         values/config.xml) and must be truncated. May need to be localized
+         for most appropriate textual indicator of "more than X".
+         [CHAR LIMIT=4] -->
+  <!-- Displayed to the user to tell them that they have started up the phone in "safe mode" -->
+  <!-- Label for the Android system components when they are shown to the user. -->
+  <!-- Label for the user owner in the intent forwarding app. [CHAR LIMIT=15] -->
+  <!-- Label for a corporate profile in the intent forwarding app. [CHAR LIMIT=15] -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissioncds, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title for the capability of an accessibility service to retrieve window content. -->
+  <!-- Description for the capability of an accessibility service to retrieve window content. -->
+  <!-- Title for the capability of an accessibility service to request touch exploration. -->
+  <!-- Description for the capability of an accessibility service to request touch exploration. -->
+  <!-- Title for the capability of an accessibility service to request enhanced web accessibility. -->
+  <!-- Description for the capability of an accessibility service to request enhanced web accessibility. -->
+  <!-- Title for the capability of an accessibility service to request to filter key events. -->
+  <!-- Description for the capability of an accessibility service to request to filter key events. -->
+  <!--  Permissions -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can install application shortcuts
+    in their Launcher -->
+  <!-- Description of an application permission, listed so the user can install application shortcuts
+    in their Launcher -->
+  <!-- Title of an application permission, listed so the user can uninstall application shortcuts
+    in their Launcher -->
+  <!-- Description of an application permission, listed so the user can install application shortcuts
+    in their Launcher -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to set the profile/device owners.
+     [CHAR LIMIT=NONE] -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of the body sensors permission, listed so the user can decide whether to allow the application to access body sensor data. [CHAR LIMIT=30] -->
+  <!-- Description of the body sensors permission, listed so the user can decide whether to allow the application to access data from body sensors. [CHAR LIMIT=NONE] -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the applicaiton to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Message shown during fingerprint acquisision when the fingerprint cannot be recognized -->
+  <!-- Message shown during fingerprint acquisision when the fingerprint cannot be recognized -->
+  <!-- Message shown during fingerprint acquisision when the fingerprint sensor needs cleaning -->
+  <!-- Message shown during fingerprint acquisision when the user removes their finger from the sensor too quickly -->
+  <!-- Message shown during fingerprint acquisision when the user moves their finger too slowly -->
+  <!-- Array containing custom messages shown during fingerprint acquisision from vendor.  Vendor is expected to add and translate these strings -->
+  <!-- Error message shown when the fingerprint hardware can't be accessed -->
+  <!-- Error message shown when the fingerprint hardware has run out of room for storing fingerprints -->
+  <!-- Error message shown when the fingerprint hardware timer has expired and the user needs to restart the operation. -->
+  <!-- Generic error message shown when the fingerprint operation (e.g. enrollment or authentication) is canceled. Generally not shown to the user-->
+  <!-- Generic error message shown when the fingerprint operation fails because too many attempts have been made. -->
+  <!-- Generic error message shown when the fingerprint hardware can't recognize the fingerprint -->
+  <!-- Template to be used to name enrolled fingerprints by default. -->
+  <!-- Array containing custom error messages from vendor.  Vendor is expected to add and translate these strings -->
+  <!-- Content description which should be used for the fingerprint icon. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. [CHAR LIMIT=30] -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. [CHAR LIMIT=30] -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. [CHAR LIMIT=30] -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. [CHAR LIMIT=30] -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Title of an application permission, for applications that wish to access notification policy. -->
+  <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+  <!-- Policy administration -->
+  <!-- Title of policy access to limiting the user's password choices -->
+  <!-- Description of policy access to limiting the user's password choices -->
+  <!-- Title of policy access to watch user login attempts -->
+  <!-- Description of policy access to watch user login attempts -->
+  <!-- Description of policy access to watch user login attempts -->
+  <!-- Description of policy access to watch user login attempts -->
+  <!-- Title of policy access to reset user's password -->
+  <!-- Description of policy access to reset user's password -->
+  <!-- Title of policy access to force lock the device -->
+  <!-- Description of policy access to limiting the user's password choices -->
+  <!-- Title of policy access to wipe primary user's data -->
+  <!-- Description of policy access to wipe the user's data -->
+  <!-- Description of policy access to wipe the user's data -->
+  <!-- Description of policy access to wipe the user's data -->
+  <!-- Title of policy access to wipe secondary user's data -->
+  <!-- Description of policy access to wipe the user's data -->
+  <!-- Description of policy access to wipe the user's data -->
+  <!-- Description of policy access to wipe the user's data -->
+  <!-- Title of policy access to set global proxy -->
+  <!-- Description of policy access to set global proxy -->
+  <!-- Title of policy access to enforce password expiration [CHAR LIMIT=50]-->
+  <!-- Description of policy access to enforce password expiration [CHAR LIMIT=110]-->
+  <!-- Title of policy access to require encrypted storage [CHAR LIMIT=30]-->
+  <!-- Description of policy access to require encrypted storage [CHAR LIMIT=110]-->
+  <!-- Title of policy access to disable all device cameras [CHAR LIMIT=30]-->
+  <!-- Description of policy access to disable all device cameras [CHAR LIMIT=110]-->
+  <!-- Title of policy access to disable keyguard features [CHAR LIMIT=30]-->
+  <!-- Description of policy access to disable keyguard features. [CHAR LIMIT=110]-->
+  <!-- The order of these is important, don't reorder without changing Contacts.java -->
+  <!-- Phone number types from android.provider.Contacts. This could be used when adding a new phone number for a contact, for example. -->
+  <!-- The order of these is important, don't reorder without changing Contacts.java -->
+  <!-- Email address types from android.provider.Contacts. This could be used when adding a new e-mail address for a contact, for example. -->
+  <!-- The order of these is important, don't reorder without changing Contacts.java -->
+  <!-- Postal address types from android.provider.Contacts. This could be used when adding a new address for a contact, for example. -->
+  <!-- The order of these is important, don't reorder without changing Contacts.java -->
+  <!-- Instant Messenger ID types from android.provider.Contacts. This could be used when adding a new IM for a contact, for example. -->
+  <!-- The order of these is important, don't reorder without changing Contacts.java -->
+  <!-- Organization types from android.provider.Contacts. This could be used when adding a new organization for a contact, for example. -->
+  <!-- The order of these is important, don't reorder without changing Contacts.java -->
+  <!-- Instant Message protocols/providers from android.provider.Contacts -->
+  <!-- Custom phone number type -->
+  <!-- Home phone number type -->
+  <!-- Mobile phone number type -->
+  <!-- Work phone number type -->
+  <!-- Work fax phone number type -->
+  <!-- Home fax phone number type -->
+  <!-- Pager phone number type -->
+  <!-- Other phone number type -->
+  <!-- Callback phone number type -->
+  <!-- Car phone number type -->
+  <!-- Company main phone number type -->
+  <!-- ISDN phone number type -->
+  <!-- Main phone number type -->
+  <!-- Other fax phone number type -->
+  <!-- Radio phone number type -->
+  <!-- Telex phone number type -->
+  <!-- TTY TDD phone number type -->
+  <!-- Work mobile phone number type -->
+  <!-- Work pager phone number type -->
+  <!-- Assistant phone number type -->
+  <!-- MMS phone number type -->
+  <!-- Label for custom events  [CHAR LIMIT=20] -->
+  <!-- Label for a birthday event  [CHAR LIMIT=20] -->
+  <!-- Label for an anniversary event  [CHAR LIMIT=20] -->
+  <!-- Label for other events  [CHAR LIMIT=20] -->
+  <!-- Custom email type -->
+  <!-- Home email type -->
+  <!-- Work email type -->
+  <!-- Other email type -->
+  <!-- Mobile email type -->
+  <!-- Custom postal address type -->
+  <!-- Home postal address type -->
+  <!-- Work postal address type -->
+  <!-- Other postal address type -->
+  <!-- Custom IM address type -->
+  <!-- Home IM address type -->
+  <!-- Work IM address type -->
+  <!-- Other IM address type -->
+  <!-- Custom IM protocol type -->
+  <!-- AIM IM protocol type -->
+  <!-- MSN IM protocol type -->
+  <!-- Yahoo IM protocol type -->
+  <!-- Skype IM protocol type -->
+  <!-- QQ IM protocol type -->
+  <!-- Google Talk IM protocol type -->
+  <!-- ICQ IM protocol type -->
+  <!-- Jabber IM protocol type -->
+  <!-- NetMeeting IM protocol type -->
+  <!-- Work organization type -->
+  <!-- Other organization type -->
+  <!-- Custom organization type -->
+  <!-- Custom relationship custom [CHAR LIMIT=20] -->
+  <!-- Assistant relationship type [CHAR LIMIT=20] -->
+  <!-- Brother relationship type [CHAR LIMIT=20] -->
+  <!-- Child relationship type [CHAR LIMIT=20] -->
+  <!-- Domestic Partner relationship type [CHAR LIMIT=20] -->
+  <!-- Father relationship type [CHAR LIMIT=20] -->
+  <!-- Friend relationship type [CHAR LIMIT=20] -->
+  <!-- Manager relationship type [CHAR LIMIT=20] -->
+  <!-- Mother relationship type [CHAR LIMIT=20] -->
+  <!-- Parent relationship type [CHAR LIMIT=20] -->
+  <!-- Partner relationship type [CHAR LIMIT=20] -->
+  <!-- Referred by relationship type [CHAR LIMIT=20] -->
+  <!-- Relative relationship type [CHAR LIMIT=20] -->
+  <!-- Sister relationship type [CHAR LIMIT=20] -->
+  <!-- Spouse relationship type [CHAR LIMIT=20] -->
+  <!-- Custom SIP address type. Same context as Custom phone type.  -->
+  <!-- Home SIP address type. Same context as Home phone type. -->
+  <!-- Work SIP address type. Same context as Work phone type. -->
+  <!-- Other SIP address type. Same context as Other phone type. -->
+  <!-- Error message that is displayed when the user clicks on a quick contacts badge, but
+         there is no contacts application installed that can display the quick contact -->
+  <!-- Instructions telling the user to enter their SIM PIN to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user to enter their SIM PUK to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Prompt to enter SIM PUK in Edit Text Box in unlock screen -->
+  <!-- Prompt to enter New SIM PIN in Edit Text Box in unlock screen -->
+  <!-- Displayed as hint in passwordEntry EditText on PasswordUnlockScreen [CHAR LIMIT=30]-->
+  <!-- Instructions telling the user to enter their text password to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user to enter their PIN password to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user that they entered the wrong pin while trying
+         to unlock the keyguard.  Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user how to unlock the phone. -->
+  <!-- This can be used in any application wanting to disable the text "Emergency number" -->
+  <!--
+       *** touch based lock / unlock ***
+                                          -->
+  <!-- On the keyguard screen, it shows the carrier the phone is connected to.  This is displayed if the phone is not connected to a carrier.-->
+  <!-- Shown in the lock screen to tell the user that the screen is locked. -->
+  <!-- when pattern lock is enabled, tell them about the emergency dial -->
+  <!-- On the keyguard screen, when pattern lock is disabled, only tell them to press menu to unlock.  This is shown in small font at the bottom. -->
+  <!-- On the unlock pattern screen, shown at the top of the unlock screen to tell the user what to do. Below this text is the place for theu ser to draw the pattern. -->
+  <!-- Button at the bottom of the unlock screen to make an emergency call or access other emergency assistance functions. -->
+  <!-- Button at the bottom of the unlock screen that lets the user return to a call -->
+  <!-- Shown to confirm that the user entered their lock pattern correctly. -->
+  <!-- On the unlock pattern screen, shown when the user enters the wrong lock pattern and must try again. -->
+  <!-- On the unlock password screen, shown when the user enters the wrong lock password and must try again. -->
+  <!-- Shown when face unlock failed multiple times so we're just using the backup -->
+  <!-- Shown in the lock screen when there is no SIM card. -->
+  <!-- Shown in the lock screen when there is no SIM card. -->
+  <!-- Shown in the lock screen when there is no SIM card. -->
+  <!-- Shown in the lock screen when there is no SIM card. -->
+  <!-- Shown in the lock screen to ask the user to insert a SIM card. -->
+  <!-- Shown in the lock screen to ask the user to insert a SIM card when sim is missing or not readable. -->
+  <!-- Shown in the lock screen when SIM card is permanently disabled. -->
+  <!-- Shown in the lock screen to inform the user to SIM card is permanently disabled. -->
+  <!-- Shown on transport control of lockscreen. Pressing button goes to previous track. -->
+  <!-- Shown on transport control of lockscreen. Pressing button goes to next track. -->
+  <!-- Shown on transport control of lockscreen. Pressing button pauses playback -->
+  <!-- Shown on transport control of lockscreen. Pressing button pauses playback -->
+  <!-- Shown on transport control of lockscreen. Pressing button pauses playback -->
+  <!-- Shown on transport control screens. Pressing button rewinds playback [CHAR LIMIT=NONE]-->
+  <!-- Shown on transport control screens. Pressing button fast forwards playback [CHAR LIMIT=NONE]-->
+  <!-- Shown in the lock screen when there is emergency calls only mode. -->
+  <!-- When the user inserts a sim card from an unsupported network, it becomes network
+         locked -->
+  <!-- When the user enters a wrong sim pin too many times, it becomes
+         PUK locked (Pin Unlock Kode) -->
+  <!-- Shown in the lock screen when the SIM has become PUK locked and the user must call customer care to unlock it. -->
+  <!-- Shown in the lock screen to tell the user that their SIM is locked and they must unlock it. -->
+  <!-- For the unlock screen, When the user enters a sim unlock code, it takes a little while to check
+         whether it is valid, and to unlock the sim if it is valid.  we display a
+         progress dialog in the meantime.  this is the emssage. -->
+  <!-- For the unlock screen, Information message shown in dialog when user has too many failed attempts at
+         drawing the unlock pattern -->
+  <!-- For the unlock screen, Information message shown in dialog when user has too many failed attempts at
+         entering the password -->
+  <!-- For the unlock screen, Information message shown in dialog when user has too many failed attempts at
+         entering the PIN -->
+  <!-- For the unlock screen, informational message shown in dialog when user is almost at the limit
+         where they will be locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- For the unlock screen, informational message shown in dialog when user is almost at the limit
+         where they will be locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- For the unlock screen, informational message shown in dialog when user is almost at the limit
+         where they will be locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- For the unlock screen, informational message shown in dialog when user is almost at the limit
+         where the device will be wiped. -->
+  <!-- For the unlock screen, informational message shown in dialog when user is almost at the limit
+         where the device will be wiped. -->
+  <!-- For the unlock screen, informational message shown in dialog when user is almost at the limit
+         where the device will be wiped. -->
+  <!-- For the unlock screen, informational message shown in dialog when user has exceeded the
+        maximum attempts and the device will now be wiped -->
+  <!-- For the unlock screen, informational message shown in dialog when user has exceeded the
+        maximum attempts and the device will now be wiped -->
+  <!-- For the unlock screen, informational message shown in dialog when user has exceeded the
+        maximum attempts and the device will now be wiped -->
+  <!-- On the unlock screen, countdown message shown while user is waiting to try again after too many
+         failed attempts -->
+  <!-- On the unlock screen, message shown on button that appears once it's apparent the user may have forgotten
+         their lock gesture -->
+  <!-- Title of the unlock screen that uses your Google login and password when the user hit
+         the 'forgot pattern' button.-->
+  <!-- Title of the unlock screen that uses your Google login and password when the user attempted
+         too many patterns and we are forcing them to use their account instead. -->
+  <!-- In the unlock screen, message telling the user that they need to use their Google login and password to unlock the phone -->
+  <!-- Hint caption for the username field when unlocking the phone using login and password -->
+  <!-- Hint caption for the password field when unlocking the phone using login and password -->
+  <!-- Button to try to unlock the phone using username and password -->
+  <!-- Displayed to the user when unlocking the phone with a username and password fails. -->
+  <!-- Hint displayed on account unlock screen to advise the user on how to recover the account. -->
+  <!-- Displayed in a progress dialog while a username and password are being checked. -->
+  <!-- Displayed on lock screen's left tab - unlock -->
+  <!-- Displayed on lock screen's right tab - turn sound on -->
+  <!-- Displayed on lock screen's right tab - turn sound off -->
+  <!-- Accessibility description sent when user starts drawing a lock pattern. [CHAR LIMIT=NONE] -->
+  <!-- Accessibility description sent when the pattern times out and is cleared. [CHAR LIMIT=NONE] -->
+  <!-- Accessibility description sent when user adds a dot to the pattern. [CHAR LIMIT=NONE]  -->
+  <!-- Accessibility description sent when user adds a dot to the pattern. Announces the 
+    actual cell when headphones are connected [CHAR LIMIT=NONE]  -->
+  <!-- Accessibility description sent when user completes drawing a pattern. [CHAR LIMIT=NONE] -->
+  <!-- Accessibility description of the unlock pattern area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description sent when user changes the current lock screen widget. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the add widget button. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the empty sidget slot (place holder for a new widget). [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the event of expanding an unlock area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the event of collapsing an unlock area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of a lock screen widget. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the lock screen user selector widget. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the lock screen status widget. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the camera widget. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the lock media control widget. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of widget reordering start. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of widget reordering end. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the a widget deletion event. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the button to expand the lock area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the slide unlock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the pattern unlock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the face unlock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the pin lock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the password lock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the unlock pattern area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the unlock slide area. [CHAR_LIMIT=none] -->
+  <!-- Password keyboard strings. Used by LockScreen and Settings -->
+  <!-- Label for "switch to symbols" key.  Must be short to fit on key! -->
+  <!-- Label for "switch to alphabetic" key.  Must be short to fit on key! -->
+  <!-- Label for ALT modifier key.  Must be short to fit on key! -->
+  <!-- Label for granularity to traverse the content on an AccessibilityNodeInfo by character. Only spoken to the user. [CHAR LIMIT=NONE] -->
+  <!-- Label for granularity to traverse the content on an AccessibilityNodeInfo by word. Only spoken to the user. [CHAR LIMIT=NONE] -->
+  <!-- Label for granularity to traverse the content on an AccessibilityNodeInfo by link. Only spoken to the user. [CHAR LIMIT=NONE] -->
+  <!-- Label for granularity to traverse the content on an AccessibilityNodeInfo by line. Only spoken to the user. [CHAR LIMIT=NONE] -->
+  <!-- A format string for 12-hour time of day, just the hour, not the minute, with lower-case "am" or "pm" (example: "3pm"). -->
+  <!-- A format string for 12-hour time of day, just the hour, not the minute, with capital "AM" or "PM" (example: "3PM"). -->
+  <!-- Title of the alert when something went wrong in the factory test. -->
+  <!-- Error message displayed when a non-system application tries to start a factory test. -->
+  <!-- Error message displayed when the factory test could not be started. -->
+  <!-- Button to restart the device after the factory test. -->
+  <!-- Do not translate.  WebView User Agent string -->
+  <!-- Do not translate.  WebView User Agent targeted content -->
+  <!-- Title for a JavaScript dialog. "The page at <url of current page> says:" -->
+  <!-- Default title for a javascript dialog -->
+  <!-- Title for the unload javascript dialog -->
+  <!-- Text for the positive button on the unload javascript dialog -->
+  <!-- Text for the negative button on the unload javascript dialog -->
+  <!-- Message in a javascript dialog asking if the user wishes to leave the current page -->
+  <!-- Title of the WebView save password dialog.  If the user enters a password in a form on a website, a dialog will come up asking if they want to save the password. -->
+  <!-- Toast for double-tap -->
+  <!-- Text to show in the auto complete drop down list on a text view when the WebView can auto fill the entire form, and the user has configured an AutoFill profile [CHAR-LIMIT=8] -->
+  <!-- Text to show in the auto complete drop down list on a text view when the WebView can auto fill the entire form but the user has not configured an AutoFill profile [CHAR-LIMIT=19] -->
+  <!-- String used to separate FirstName and LastName when writing out a local name
+         e.g. John<separator>Smith [CHAR-LIMIT=NONE]-->
+  <!-- Format string for displaying a name. $1 is First Name, $2 is autofill_address_name_separator, $3 is Last Name.
+         e.g. (John)( )(Smith) -->
+  <!-- String used to separate Name and Address Line 1
+         e.g. John Smith<separator>123 Main Street [CHAR-LIMIT=NONE]-->
+  <!-- Format string for displaying a name and address summary. $1 is the Full Name, $2 is autofill_address_summary_separator, $3 is the Address
+         e.g. (John Smith)(, )(123 Main Street) -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Do not translate. Regex used by AutoFill. -->
+  <!-- Label in a web form for "Province" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Postal code" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "State" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "ZIP code" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "County" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Island" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "District" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Department" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Prefecture" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Parish" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Area" [CHAR-LIMIT=NONE]  -->
+  <!-- Label in a web form for "Emirate" [CHAR-LIMIT=NONE]  -->
+  <!-- Title of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether
+    they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. [CHAR LIMIT=NONE] -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. [CHAR LIMIT=NONE] -->
+  <!-- Title of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+        they want to allow the application to do this. -->
+  <!-- If the user enters a password in a form on a website, a dialog will come up asking if they want to save the password. Text in the save password dialog, asking if the browser should remember a password. -->
+  <!-- If the user enters a password in a form on a website, a dialog will come up asking if they want to save the password. Button in the save password dialog, saying not to remember this password. -->
+  <!-- If the user enters a password in a form on a website, a dialog will come up asking if they want to save the password. Button in the save password dialog, saying to remember this password. -->
+  <!-- Button in the save password dialog, saying never to remember this password. This should be short. Should be "Never for this site". But it is too long, use "Never" instead -->
+  <!-- Displayed to the user when they do not have permission to open a particular web page. -->
+  <!-- Displayed to the user to confirm that they have copied text from a web page to the clipboard. -->
+  <!-- Menu item displayed at the end of a menu to allow users to see another page worth of menu items. This is shown on any app's menu as long as the app has too many items in the menu.-->
+  <!-- Prepended to the shortcut for a menu item to indicate that the user should hold the MENU button together with the shortcut to invoke the item. For example, if the shortcut to open a new tab in browser is MENU and B together, then this would be prepended to the letter "B" -->
+  <!-- Displayed in place of the regular shortcut letter when a menu item has Menu+space for the shortcut. -->
+  <!-- Displayed in place of the regular shortcut letter when a menu item has Menu+enter for the shortcut. -->
+  <!-- Displayed in place of the regular shortcut letter when a menu item has Menu+delete for the shortcut. -->
+  <!-- Strings used for search bar -->
+  <!-- This is the default button label in the system-wide search UI.
+         It is also used by the home screen's search "widget". It should be short -->
+  <!-- Default hint text for the system-wide search UI's text field. [CHAR LIMIT=30] -->
+  <!-- SearchView accessibility description for search button [CHAR LIMIT=NONE] -->
+  <!-- SearchView accessibility description for search text field [CHAR LIMIT=NONE] -->
+  <!-- SearchView accessibility description for clear button [CHAR LIMIT=NONE] -->
+  <!-- SearchView accessibility description for submit button [CHAR LIMIT=NONE] -->
+  <!-- SearchView accessibility description for voice button [CHAR LIMIT=NONE] -->
+  <!-- Title for a warning message about the interaction model changes after allowing an accessibility
+         service to put the device into explore by touch mode, displayed as a dialog message when
+         the user selects to enables the service. (default). [CHAR LIMIT=45] -->
+  <!-- Summary for a warning message about the interaction model changes after allowing an accessibility
+         service to put the device into explore by touch mode, displayed as a dialog message when
+         the user selects to enables the service. (tablet). [CHAR LIMIT=NONE] -->
+  <!-- Summary for a warning message about the interaction model changes after allowing an accessibility
+         service to put the device into explore by touch mode, displayed as a dialog message when
+         the user selects to enables the service. (default). [CHAR LIMIT=NONE] -->
+  <!-- String used to display the date. This is the string to say something happened 1 month ago. -->
+  <!-- String used to display the date. This is the string to say something happened more than 1 month ago. -->
+  <!-- This is used to express that something occurred within the last X days (e.g., Last 7 days). -->
+  <!-- This is used to express that something has occurred within the last month -->
+  <!-- This is used to express that something happened longer ago than the previous options -->
+  <!-- String used to display the date. Preposition for date display ("on May 29") -->
+  <!-- String used to display the date. Preposition for time display ("at 2:33am") -->
+  <!-- String used to display the date. Preposition for year display ("in 2008") -->
+  <!-- Appened to express the value is this unit of time: singular day -->
+  <!-- Appened to express the value is this unit of time: plural days -->
+  <!-- Appened to express the value is this unit of time: singular hour -->
+  <!-- Appened to express the value is this unit of time: plural hours -->
+  <!-- Appened to express the value is this unit of time: singular minute -->
+  <!-- Appened to express the value is this unit of time: plural minutes -->
+  <!-- Appened to express the value is this unit of time. -->
+  <!-- Appened to express the value is this unit of time. -->
+  <!-- Appened to express the value is this unit of time. -->
+  <!-- Appened to express the value is this unit of time. -->
+  <!-- Appened to express the value is this unit of time. -->
+  <!-- Appened to express the value is this unit of time. -->
+  <!-- Phrase describing a time duration using seconds [CHAR LIMIT=16] -->
+  <!-- Phrase describing a time duration using minutes [CHAR LIMIT=16] -->
+  <!-- Phrase describing a time duration using hours [CHAR LIMIT=16] -->
+  <!-- Title for error alert when a video cannot be played.  it can be used by any app. -->
+  <!-- Text for error alert when a video container is not valid for progressive download/playback. -->
+  <!-- Text for error alert when a video cannot be played. it can be used by any app. -->
+  <!-- Button to close error alert when a video cannot be played -->
+  <!-- Format indicating a relative expression and time.
+         Example: "4 hours ago, 11:00 am" -->
+  <!-- Quoted name for 12pm, lowercase -->
+  <!-- Quoted name for 12pm, uppercase first letter -->
+  <!-- Quoted name for 12am, lowercase -->
+  <!-- Quoted name for 12am, uppercase first letter -->
+  <!-- Format string for durations like "01:23" (1 minute, 23 seconds) -->
+  <!-- Format string for times like "1:43:33" (1 hour, 43 minutes, 33 seconds) -->
+  <!-- Item on EditText context menu. This action is used to select all text in the edit field. -->
+  <!-- Item on EditText context menu.  This action is used to cut selected the text into the clipboard.  -->
+  <!-- Item on EditText context menu. This action is used to cut selected the text into the clipboard. -->
+  <!-- Item on EditText context menu. This action is used to paste from the clipboard into the eidt field -->
+  <!-- Item on EditText context menu. This action is used to replace the current word by other suggested words, suggested by the IME or the spell checker -->
+  <!-- Item on EditText pop-up window. This action is used to delete the text that the user recently added. [CHAR LIMIT=15] -->
+  <!-- Item on EditText context menu. This action is used to copy a URL from the edit field into the clipboard. -->
+  <!-- Item on EditText context menu. Added only when the context menu is not empty, it enable selection context mode. [CHAR LIMIT=20] -->
+  <!-- Text selection contextual mode title, displayed in the CAB. [CHAR LIMIT=20] -->
+  <!-- Option to add the current misspelled word to the user dictionary. [CHAR LIMIT=25] -->
+  <!-- Option to delete the highlighted part of the text from the suggestion popup. [CHAR LIMIT=25] -->
+  <!-- EditText context menu -->
+  <!-- Title for EditText context menu [CHAR LIMIT=20] -->
+  <!-- If the device is getting low on internal storage, a notification is shown to the user.  This is the title of that notification. -->
+  <!-- If the device is getting low on internal storage, a notification is shown to the user.  This is the message of that notification. -->
+  <!-- If the device does not have storage for the main system classes, a notification is shown to the user.  This is the message of that notification. -->
+  <!-- [CHAR LIMIT=NONE] Stub notification title for an app running a service that has provided
+         a bad bad notification for itself. -->
+  <!-- [CHAR LIMIT=NONE] Stub notification text for an app running a service that has provided
+         a bad bad notification for itself. -->
+  <!-- Preference framework strings. -->
+  <!-- Preference framework strings. -->
+  <!-- Preference framework strings. -->
+  <!-- Preference framework strings. -->
+  <!-- This is the generic "attention" string to be used in attention dialogs.  Typically
+         combined with setIconAttribute(android.R.attr.alertDialogIcon)
+         (or setIcon(android.R.drawable.ic_dialog_alert) on legacy versions of the platform) -->
+  <!-- Text shown by list fragment when waiting for data to display. -->
+  <!-- Default text for a button that can be toggled on and off. -->
+  <!-- Default text for a button that can be toggled on and off. -->
+  <!-- Title of intent resolver dialog when selecting an application to run. -->
+  <!-- Title of intent resolver dialog when selecting an application to run
+         and a previously used application is known. -->
+  <!-- Title of intent resolver dialog when selecting a viewer application to run. -->
+  <!-- Title of intent resolver dialog when selecting a viewer application to run
+         and a previously used application is known. -->
+  <!-- Title of intent resolver dialog when selecting an editor application to run. -->
+  <!-- Title of intent resolver dialog when selecting an editor application to run
+         and a previously used application is known. -->
+  <!-- Title of intent resolver dialog when selecting a sharing application to run. -->
+  <!-- Title of intent resolver dialog when selecting a sharing application to run
+         and a previously used application is known. -->
+  <!-- Title of intent resolver dialog when selecting a HOME application to run. -->
+  <!-- Title of intent resolver dialog when selecting a HOME application to run
+         and a previously used application is known. -->
+  <!-- Option to always use the selected application resolution in the future. See the "Complete action using" dialog title-->
+  <!-- Title of the list of alternate options to complete an action shown when the
+         last used option is being displayed separately. -->
+  <!-- Text displayed when the user selects the check box for setting default application.  See the "Use by default for this action" check box. -->
+  <!-- Default title for the activity chooser, when one is not given. Android allows multiple activities to perform an action.  for example, there may be many ringtone pickers installed.  A dialog is shown to the user allowing him to pick which activity should be used.  This is the title. -->
+  <!-- title for the USB activity chooser. -->
+  <!-- Text to display when there are no activities found to display in the
+         activity chooser. See the "Select an action" title. -->
+  <!-- Title of the alert when an application has crashed. -->
+  <!-- Text of the alert that is displayed when an application has crashed. -->
+  <!-- Text of the alert that is displayed when an application has crashed. -->
+  <!-- Title of the alert when an application is not responding. -->
+  <!-- Text of the alert that is displayed when an application is not responding. -->
+  <!-- Text of the alert that is displayed when an application is not responding. -->
+  <!-- Text of the alert that is displayed when an application is not responding. -->
+  <!-- Text of the alert that is displayed when an application is not responding. -->
+  <!-- Button allowing the user to close an application that is not responding. This will kill the application. -->
+  <!-- Button allowing the user to send a bug report for application which has encountered an error. -->
+  <!-- Button allowing the user to choose to wait for an application that is not responding to become responsive again. -->
+  <!-- Text of the alert that is displayed when a web page is not responding. [CHAR-LIMIT=NONE] -->
+  <!-- [CHAR LIMIT=25] Title of the alert when application launches on top of another. -->
+  <!-- [CHAR LIMIT=50] Title of the alert when application launches on top of another. -->
+  <!-- [CHAR LIMIT=50] Title of the alert when application launches on top of another. -->
+  <!-- [CHAR LIMIT=50] Compat mode dialog: compat mode switch label. -->
+  <!-- [CHAR LIMIT=50] Compat mode dialog: compat mode switch label. -->
+  <!-- [CHAR LIMIT=200] Compat mode dialog: hint to re-enable compat mode dialog. -->
+  <!-- Text of the alert that is displayed when an application has violated StrictMode. -->
+  <!-- Text of the alert that is displayed when an application has violated StrictMode. -->
+  <!-- [CHAR LIMIT=40] Title of dialog that is shown when performing a system upgrade. -->
+  <!-- [CHAR LIMIT=40] Title of dialog that is shown when system is starting. -->
+  <!-- [CHAR LIMIT=NONE] Message shown in upgrading dialog when doing an fstrim. -->
+  <!-- [CHAR LIMIT=NONE] Message shown in upgrading dialog for each .apk that is optimized. -->
+  <!-- [CHAR LIMIT=NONE] Message shown in upgrading dialog for each .apk pre boot broadcast -->
+  <!-- [CHAR LIMIT=NONE] Message to show in upgrading dialog when reached the point of starting apps. -->
+  <!-- [CHAR LIMIT=NONE] Message to show in upgrading dialog when the bulk of the upgrade work is done. -->
+  <!-- Notification text to tell the user that a heavy-weight application is running. -->
+  <!-- Notification details to tell the user that a heavy-weight application is running. -->
+  <!-- Title of dialog prompting whether user wants to switch between heavy-weight apps. -->
+  <!-- Descriptive text for switching to a new heavy-weight application. -->
+  <!-- Notification text to tell the user that a process has exceeded its memory limit. -->
+  <!-- Notification details to tell the user that a process has exceeded its memory limit. -->
+  <!-- Title of dialog prompting the user to share a heap dump. -->
+  <!-- Text of dialog prompting the user to share a heap dump. -->
+  <!-- Displayed in the title of the chooser for things to do with text that
+         is to be sent to another application. For example, I can send
+         text through SMS or IM.  A dialog with those choices would be shown,
+         and this would be the title. -->
+  <!-- Title of the dialog where the user is adjusting the phone ringer volume -->
+  <!-- Title of the dialog where the user is adjusting the music volume -->
+  <!-- Hint shown in the volume toast to inform the user that the media audio is playing through Bluetooth. -->
+  <!-- Hint shown in the volume toast to inform the user that the current ringtone is the silent ringtone. -->
+  <!-- Title of the dialog where the user is adjusting the phone call volume -->
+  <!-- Title of the dialog where the user is adjusting the phone call volume when connected on bluetooth-->
+  <!-- Title of the dialog where the user is adjusting the audio volume for alarms -->
+  <!-- Title of the dialog where the user is adjusting the audio volume for notifications -->
+  <!-- Title of the dialog where the user is adjusting the general audio volume -->
+  <!-- Content description for bluetooth volume icon [CHAR LIMIT=100] -->
+  <!-- Content description for ringer volume icon [CHAR LIMIT=100] -->
+  <!-- Content description for in-call volume icon [CHAR LIMIT=100] -->
+  <!-- Content description for media volume icon [CHAR LIMIT=100] -->
+  <!-- Content description for notification volume icon [CHAR LIMIT=100] -->
+  <!-- Ringtone picker strings -->
+  <!-- Choice in the ringtone picker.  If chosen, the default ringtone will be used. -->
+  <!-- Choice in the ringtone picker.  If chosen, the default ringtone will be used. This fills in the actual ringtone's title into the message. -->
+  <!-- Choice in the ringtone picker.  If chosen, there will be silence instead of a ringtone played. -->
+  <!-- The title of the ringtone picker dialog. -->
+  <!-- If there is ever a ringtone set for some setting, but that ringtone can no longer be resolved, t his is shown instead.  For example, if the ringtone was on a SD card and it had been removed, this woudl be shown for ringtones on that SD card. -->
+  <!-- A notification is shown when there are open wireless networks nearby.  This is the notification's title. -->
+  <!-- A notification is shown when there are open wireless networks nearby.  This is the notification's message. -->
+  <!-- A notification is shown when a wifi captive portal network is detected.  This is the notification's title. -->
+  <!-- A notification is shown when a captive portal network is detected.  This is the notification's title. -->
+  <!-- A notification is shown when a captive portal network is detected.  This is the notification's message. -->
+  <!-- A notification is shown when the user connects to a Wi-Fi network and the system detects that that network has no Internet access. This is the notification's title. -->
+  <!-- A notification is shown when the user connects to a Wi-Fi network and the system detects that that network has no Internet access. This is the notification's message. -->
+  <!-- A notification is shown when a user's selected SSID is later disabled due to connectivity problems.  This is the notification's title / ticker. -->
+  <!-- A notification is shown when a user's selected SSID is later disabled due to connectivity problems.  The complete alert msg is: <hotspot name> + this string, i.e. "Linksys has a poor internet connection" -->
+  <!-- Do not translate. Default access point SSID used for tethering -->
+  <!-- A notification is shown the first time a connection is attempted on an app owned AP -->
+  <!-- title for this message -->
+  <!-- message explaining who is connecting to what -->
+  <!-- default application in case name can not be found -->
+  <!-- Name of the dialog that lets the user choose an accented character to insert -->
+  <!-- SMS per-application rate control Dialog -->
+  <!-- SMS_DIALOG: An SMS dialog is shown if an application tries to send too many SMSes.  This is the title of that dialog. -->
+  <!-- See SMS_DIALOG.  This is the message shown in that dialog. [CHAR LIMIT=NONE] -->
+  <!-- See SMS_DIALOG.  This is a button choice to allow sending the SMSes. [CHAR LIMIT=30] -->
+  <!-- See SMS_DIALOG.  This is a button choice to disallow sending the SMSes. [CHAR LIMIT=30] -->
+  <!-- SMS short code verification dialog. -->
+  <!-- The message text for the SMS short code confirmation dialog. [CHAR LIMIT=NONE] -->
+  <!-- Message details for the SMS short code confirmation dialog (possible premium short code). [CHAR LIMIT=NONE] -->
+  <!-- Message details for the SMS short code confirmation dialog (premium short code). [CHAR LIMIT=NONE] -->
+  <!-- Text of the approval button for the SMS short code confirmation dialog. [CHAR LIMIT=30] -->
+  <!-- Text of the cancel button for the SMS short code confirmation dialog. [CHAR LIMIT=30] -->
+  <!-- Text of the checkbox for the SMS short code confirmation dialog to remember the user's choice. [CHAR LIMIT=40] -->
+  <!-- Text shown when remember checkbox is checked to inform the user how they may undo the setting. [CHAR LIMIT=40] -->
+  <!-- Text of the approval button for the SMS short code confirmation dialog when checkbox is checked. [CHAR LIMIT=30] -->
+  <!-- Text of the cancel button for the SMS short code confirmation dialog when checkbox is checked. [CHAR LIMIT=30] -->
+  <!-- SIM swap and device reboot Dialog -->
+  <!-- See SIM_REMOVED_DIALOG.  This is the title of that dialog. -->
+  <!-- See SIM_REMOVED_DIALOG.  This is the message of that dialog. -->
+  <!-- See SIM_REMOVED_DIALOG.  This is the button of that dialog. -->
+  <!-- See SIM_ADDED_DIALOG.  This is the title of that dialog. -->
+  <!-- See SIM_ADDED_DIALOG.  This is the message of that dialog. -->
+  <!-- See SIM_ADDED_DIALOG.  This is the button of that dialog. -->
+  <!-- Date/Time picker dialogs strings -->
+  <!-- The title of the time picker dialog. [CHAR LIMIT=NONE] -->
+  <!-- The title of the date picker dialog. [CHAR LIMIT=NONE] -->
+  <!-- Name of the button in the date/time picker to accept the date/time change -->
+  <!-- Name of the button in the date/time picker to accept the date/time change -->
+  <!-- Security Permissions strings-->
+  <!-- Text that is placed at the front of a permission name that is being added to an app [CHAR LIMIT=NONE] -->
+  <!-- Text that is placed at the front of a permission name that is being added to an app [CHAR LIMIT=NONE] -->
+  <!-- Shown for an application when it doesn't require any permission grants. -->
+  <!-- [CHAR LIMIT=NONE] Additional text in permission description for perms that can cost money. -->
+  <!-- USB storage dialog strings -->
+  <!-- This is the title for the activity's window. -->
+  <!-- See USB_STORAGE.  USB_STORAGE_DIALOG:  After the user selects the notification, a dialog is shown asking if he wants to mount.  This is the title. -->
+  <!-- See USB_STORAGE.    This is the message. [CHAR LIMIT=NONE] -->
+  <!-- See USB_STORAGE.    This is the message. [CHAR LIMIT=NONE] -->
+  <!-- See USB_STORAGE.    This is the button text to mount the phone on the computer. -->
+  <!-- See USB_STORAGE_DIALOG.  If there was an error mounting, this is the text. [CHAR LIMIT=NONE] -->
+  <!-- See USB_STORAGE_DIALOG.  If there was an error mounting, this is the text. -->
+  <!-- USB_STORAGE: When the user connects the phone to a computer via USB, we show a notification asking if he wants to share files across.  This is the title -->
+  <!-- See USB_STORAGE. This is the message. -->
+  <!-- USB_STORAGE_STOP: While USB storage is enabled, we show a notification dialog asking if he wants to stop. This is the title -->
+  <!-- See USB_STORAGE. This is the message. -->
+  <!-- USB storage stop dialog strings -->
+  <!-- This is the label for the activity, and should never be visible to the user. -->
+  <!-- See USB_STORAGE_STOP.  USB_STORAGE_STOP_DIALOG:  After the user selects the notification, a dialog is shown asking if he wants to stop usb storage.  This is the title. -->
+  <!-- See USB_STORAGE_STOP.    This is the message. [CHAR LIMIT=NONE] -->
+  <!-- See USB_STORAGE_STOP.    This is the message. -->
+  <!-- See USB_STORAGE_STOP.    This is the button text to stop usb storage. -->
+  <!-- See USB_STORAGE_STOP_DIALOG.  If there was an error stopping, this is the text. -->
+  <!-- USB_STORAGE_KILL_STORAGE_USERS dialog  -->
+  <!-- USB_STORAGE_KILL_STORAGE_USERS dialog message text -->
+  <!-- USB_STORAGE_ERROR dialog  dialog-->
+  <!-- USB_STORAGE_ERROR dialog  ok button-->
+  <!-- USB_PREFERENCES: Notification for when the user connected to the charger only.  This is the title -->
+  <!-- USB_PREFERENCES: Notification for when the user connects the phone to a computer via USB in MTP mode.  This is the title -->
+  <!-- USB_PREFERENCES: Notification for when the user connects the phone to a computer via USB in PTP mode.  This is the title -->
+  <!-- USB_PREFERENCES: Notification for when the user connects the phone to a computer via USB in MIDI mode.  This is the title -->
+  <!-- USB_PREFERENCES: Notification for when a USB accessory is attached.  This is the title -->
+  <!-- See USB_PREFERENCES. This is the message. -->
+  <!-- Title of notification shown when ADB is actively connected to the phone. -->
+  <!-- Message of notification shown when ADB is actively connected to the phone. -->
+  <!-- Used to replace %s in urls retreived from the signin server with locales.  For Some        -->
+  <!-- devices we don't support all the locales we ship to and need to replace the '%s' with a    -->
+  <!-- locale string based on mcc values.  By default (0-length string) we don't replace the %s   -->
+  <!-- at all and later replace it with a locale string based on the users chosen locale          -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- Title of the pop-up dialog in which the user switches keyboard, also known as input method. -->
+  <!-- Title of a button to open the settings to enable or disable keyboards, also known as input methods [CHAR LIMIT=30] -->
+  <!-- Summary text of a toggle switch to enable/disable use of the IME while a physical
+         keyboard is connected[CHAR LIMIT=25] -->
+  <!-- Title of the physical keyboard category in the input method selector [CHAR LIMIT=10] -->
+  <!-- Title of the notification to prompt the user to select a keyboard layout. -->
+  <!-- Message of the notification to prompt the user to select a keyboard layout. -->
+  <!-- External media notification strings -->
+  <!-- Notification title when external media is being checked [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is being checked [CHAR LIMIT=NONE] -->
+  <!-- Notification body when new external media is detected [CHAR LIMIT=NONE] -->
+  <!-- Notification body when external media is ready for use [CHAR LIMIT=NONE] -->
+  <!-- Notification title when external media is unmountable (corrupt) [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is unmountable (corrupt) [CHAR LIMIT=NONE] -->
+  <!-- Notification title when external media is unsupported [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is unsupported [CHAR LIMIT=NONE] -->
+  <!-- Notification title when external media is unsafely removed [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is unsafely removed [CHAR LIMIT=NONE] -->
+  <!-- Notification title when external media is missing [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is missing [CHAR LIMIT=NONE] -->
+  <!-- Notification title when external media is unmounting [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is unmounting [CHAR LIMIT=NONE] -->
+  <!-- Notification action to setup external media [CHAR LIMIT=20] -->
+  <!-- Notification action to unmount external media [CHAR LIMIT=20] -->
+  <!-- Notification action to browse external media [CHAR LIMIT=20] -->
+  <!-- Notification title when external media is missing [CHAR LIMIT=30] -->
+  <!-- Notification body when external media is missing [CHAR LIMIT=30] -->
+  <!-- Notification title when moving an application to external storage [CHAR LIMIT=30] -->
+  <!-- Notification title when moving data to external storage [CHAR LIMIT=32] -->
+  <!-- Notification title when moving data to external storage [CHAR LIMIT=32] -->
+  <!-- Notification title when moving data to external storage [CHAR LIMIT=64] -->
+  <!-- Notification title when moving data to external storage failed [CHAR LIMIT=32] -->
+  <!-- Notification title when moving data to external storage failed [CHAR LIMIT=64] -->
+  <!-- Short summary of storage media status when removed [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when unmounted [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when checking [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when mounted [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when mounted read-only [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when removed unsafely [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when unmountable [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when unsupported [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when ejecting [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when formatting [CHAR LIMIT=32] -->
+  <!-- Short summary of storage media status when missing [CHAR LIMIT=32] -->
+  <!-- Shown in LauncherActivity when the requested target Intent didn't return any matching Activities, leaving the list empty. -->
+  <!-- Title of an application permission that lets an application route media output. -->
+  <!-- Description of an application permission that lets an application route media output. -->
+  <!-- Title of an application permission that lets it read install sessions. -->
+  <!-- Description of an application permission that lets it read install sessions. -->
+  <!-- Title of an application permission that lets it read install sessions. -->
+  <!-- Description of an application permission that lets it read install sessions. -->
+  <!-- Shown in the tutorial for tap twice for zoom control. -->
+  <!-- Shown in gadget hosts (e.g. the home screen) when there was an error inflating
+    the gadget. -->
+  <!-- Long label for a button on a full-screen input method for the "Go" action. -->
+  <!-- Long label for a button on a full-screen input method for the "Search" action. -->
+  <!-- Long label for a button on a full-screen input method for the "Send" action. -->
+  <!-- Long label for a button on a full-screen input method for the "Next" action. -->
+  <!-- Long label for a button on a full-screen input method for the "Done" action. -->
+  <!-- [CHAR LIMIT=6] Long label for a button on a full-screen input method for the "Previous" action. -->
+  <!-- Long label for a button on a full-screen input method for an unknown action. -->
+  <!-- Strings for search suggestions. These are going here because they are referenced by both
+         ContactsProvider and GoogleContactsProvider -->
+  <!-- This string appears (on two lines) when you type a number into contacts search, to let you dial the phone number you typed.  The first line will be in bigger type than the second. -->
+  <!-- This string appears (on two lines) when you type a number into contacts search, to let you create a contact whose phone number is the number you typed.  The first line will be in bigger type than the second. -->
+  <!-- This string array should be overridden by the manufacture to present a list of carrier-id,locale. The wifi regulatory domain is extracted from the locale information. This is used at startup to set system defaults by checking the system property ro.carrier for the carrier-id and searching through this array -->
+  <!-- An Array of [[Carrier-ID]                     -->
+  <!--              [default-locale]]                -->
+  <!-- Message to show when an intent automatically switches users into the personal profile. -->
+  <!-- Message to show when an intent automatically switches users into a work profile. -->
+  <!-- Label to show for a service that is running because it is an input method. -->
+  <!-- Label to show for a service that is running because it is a sync adapter. -->
+  <!-- Label to show for a service that is running because it is an accessibility module. -->
+  <!-- Label to show for a service that is running because it is a wallpaper. -->
+  <!-- Dialog title for user to select a different wallpaper from service list -->
+  <!-- Label to show for a service that is running because it is observing
+         the user's notifications. -->
+  <!-- Label to show for a service that is running because it is providing conditions. -->
+  <!-- Do Not Translate: Alternate eri.xml -->
+  <!-- The title of the notification when VPN is active. -->
+  <!-- The title of the notification when VPN is active with an application name. -->
+  <!-- The text of the notification when VPN is active. -->
+  <!-- The text of the notification when VPN is active with a session name. -->
+  <!-- Notification title when connecting to lockdown VPN. -->
+  <!-- Notification title when connected to lockdown VPN. -->
+  <!-- Notification title when error connecting to lockdown VPN. -->
+  <!-- Notification body that indicates user can touch to configure lockdown VPN connection. -->
+  <!-- Localized strings for WebView -->
+  <!-- Label for button in a WebView that will open a chooser to choose a file to upload -->
+  <!-- Label for the file upload control when no file has been chosen yet -->
+  <!-- Label for <input type="reset"> button in html -->
+  <!-- Label for <input type="submit"> button in html -->
+  <!-- Strings for car mode notification -->
+  <!-- Shown when car mode is enabled -->
+  <!-- Strings for tethered notification -->
+  <!-- Shown when the device is tethered -->
+  <!--  Strings for possible PreferenceActivity Back/Next buttons -->
+  <!-- Optional button to Skip a PreferenceActivity [CHAR LIMIT=20] -->
+  <!-- Displayed on the Find dialog when there are no matches [CHAR LIMIT=NONE]-->
+  <!-- Find dialog hint text.  Also used in the menu item to open find on page [CHAR LIMIT=NONE] -->
+  <!-- Displayed on the Find dialog to display the index of the highlighted
+         match and total number of matches found in the current page. [CHAR LIMIT=NONE] -->
+  <!-- Label for the "Done" button on the far left of action mode toolbars. -->
+  <!-- Strings for MasterClearReceiver. -->
+  <!-- Text for progress dialog while erasing USB storage volume [CHAR LIMIT=NONE] -->
+  <!-- Text for progress dialog while erasing SD card [CHAR LIMIT=NONE] -->
+  <!-- Text for WebView's text selection Action Mode -->
+  <!-- ActionBar action to share the current selection [CHAR LIMIT=10] -->
+  <!-- ActionBar action to use the current selection to open the Find on page functionality [CHAR LIMIT=10]-->
+  <!-- ActionBar action to use the current selection to perform a web search [CHAR-LIMIT=16] -->
+  <!-- ActionBar action to find the next match in the page [CHAR LIMIT=24] -->
+  <!-- ActionBar action to find the previous match in the page [CHAR LIMIT=24] -->
+  <!-- Network positioning notification ticker. The name of the user (e.g. John Doe) who sent
+         the request is shown as a dynamic string. -->
+  <!-- Network positioning notification and verification title to inform the user about
+         an incoming location request. -->
+  <!-- Network positioning notification message. The name of the user (e.g. John Doe) and
+         service (SUPL-service) who sent the request is shown as dynamic strings.
+         Translation should not be longer than master text. -->
+  <!-- Network positioning verification Yes. Button to push to share location information. -->
+  <!-- Network positioning verification No. Button to push to deny sharing of location
+         information. -->
+  <!-- Error message when the sync tried to delete too many things -->
+  <!-- Dialog message for when there are too many deletes that would take place and we want user confirmation -->
+  <!-- Dialog action for when there are too many deletes that would take place and we want user confirmation, and the user wants to delete the items -->
+  <!-- Dialog action for when there are too many deletes that would take place and we want user confirmation, and the user wants to undo the deletions -->
+  <!-- Dialog action for when there are too many deletes that would take place and we want user confirmation, and the user wants to do nothing for now -->
+  <!-- Choose Account Activity label -->
+  <!-- List item to add an account [CHAR LIMIT=20] -->
+  <!-- NumberPicker - accessibility support -->
+  <!-- Description of the button to increase the NumberPicker value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the NumberPicker value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the tap and hold action to get into scroll mode in NumberPicker. [CHAR LIMIT=NONE] -->
+  <!-- Description of the scrolling action in NumberPicker. [CHAR LIMIT=NONE] -->
+  <!-- TimePicker - accessibility support -->
+  <!-- Description of the button to increase the TimePicker's minute value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the TimePicker's minute value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to increase the TimePicker's hour value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the TimePicker's hour value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to increase the TimePicker's set PM value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the TimePicker's set AM value. [CHAR LIMIT=NONE] -->
+  <!-- DatePicker - accessibility support -->
+  <!-- Description of the button to increase the DatePicker's month value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the DatePicker's month value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to increase the DatePicker's day value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the DatePicker's day value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to increase the DatePicker's year value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to decrease the DatePicker's year value. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to move to the previous month. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button to move to the next month. [CHAR LIMIT=NONE] -->
+  <!-- KeyboardView - accessibility support -->
+  <!-- Description of the Alt button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Cancel button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Delete button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Done button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Mode change button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Shift button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Enter button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- ActivityChooserView - accessibility support -->
+  <!-- Description of the shwoing of a popup window with activities to choose from. [CHAR LIMIT=NONE] -->
+  <!-- Error message if the share target app cannto be launched. [CHAR LIMIT=NONE] -->
+  <!-- ShareActionProvider - accessibility support -->
+  <!-- Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] -->
+  <!-- Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] -->
+  <!-- Slide lock screen -->
+  <!-- Description of the sliding handle in the Slide unlock screen. [CHAR LIMIT=NONE] -->
+  <!-- Description of the unlock handle in the Slide unlock screen for tablets. [CHAR LIMIT=NONE] -->
+  <!-- Announce that a headset is required to hear keyboard keys while typing a password. [CHAR LIMIT=NONE] -->
+  <!-- The value of a keyboard key announced when accessibility is enabled and no headsed is used. [CHAR LIMIT=NONE] -->
+  <!-- Content description for the action bar "home" affordance. [CHAR LIMIT=NONE] -->
+  <!-- Content description for the action bar "up" affordance. [CHAR LIMIT=NONE] -->
+  <!-- Content description for the action menu overflow button. [CHAR LIMIT=NONE] -->
+  <!-- Formatting string for describing the action bar's title/home/up affordance.
+         This is a single tappable "button" that includes the app icon, the Up indicator
+         (usually a "<" chevron) and the window title text.
+         %1$s is the title. %2$s is the description of what tapping/clicking the whole
+         thing is going to do. -->
+  <!-- Just like action_bar_home_description_format, but this one will be used
+         if the window is also providing subtitle text.
+         %1$s is the title. %2$s is the subtitle. %3$s is the description of what
+         tapping/clicking the whole thing is going to do. -->
+  <!-- Storage description for internal storage. [CHAR LIMIT=NONE] -->
+  <!-- Storage description for a generic SD card. [CHAR LIMIT=NONE] -->
+  <!-- Storage description for a SD card from a specific manufacturer. [CHAR LIMIT=NONE] -->
+  <!-- Storage description for a generic USB drive. [CHAR LIMIT=NONE] -->
+  <!-- Storage description for a USB drive from a specific manufacturer. [CHAR LIMIT=NONE] -->
+  <!-- Storage description for USB storage. [CHAR LIMIT=NONE] -->
+  <!-- Notification title when data usage has exceeded warning threshold. [CHAR LIMIT=32] -->
+  <!-- Notification body when data usage has exceeded warning threshold. [CHAR LIMIT=32] -->
+  <!-- Notification title when 2G-3G data usage has exceeded limit threshold, and has been disabled. [CHAR LIMIT=32] -->
+  <!-- Notification title when 4G data usage has exceeded limit threshold, and has been disabled. [CHAR LIMIT=32] -->
+  <!-- Notification title when mobile data usage has exceeded limit threshold, and has been disabled. [CHAR LIMIT=32] -->
+  <!-- Notification title when Wi-Fi data usage has exceeded limit threshold, and has been disabled. [CHAR LIMIT=32] -->
+  <!-- Notification body when data usage has exceeded limit threshold, and has been disabled. [CHAR LIMIT=32] -->
+  <!-- Notification title when 2G-3G data usage has exceeded limit threshold. [CHAR LIMIT=32] -->
+  <!-- Notification title when 4G data usage has exceeded limit threshold. [CHAR LIMIT=32] -->
+  <!-- Notification title when mobile data usage has exceeded limit threshold. [CHAR LIMIT=32] -->
+  <!-- Notification title when Wi-Fi data usage has exceeded limit threshold. [CHAR LIMIT=32] -->
+  <!-- Notification body when data usage has exceeded limit threshold. [CHAR LIMIT=32] -->
+  <!-- Notification title when background data usage is limited. [CHAR LIMIT=32] -->
+  <!-- Notification body when background data usage is limited. [CHAR LIMIT=32] -->
+  <!-- SSL Certificate dialogs -->
+  <!-- Title for an SSL Certificate dialog -->
+  <!-- Message on an SSL Certificate dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Label for an information field on an SSL Certificate Dialog -->
+  <!-- Title for a button to expand the list of activities in ActivityChooserView [CHAR LIMIT=25] -->
+  <!-- Title default for a dialog showing possible activities in ActivityChooserView [CHAR LIMIT=25] -->
+  <!-- Title for a dialog showing possible activities for sharing in ShareActionProvider [CHAR LIMIT=25] -->
+  <!-- Delimeter used between each item in a textual list; for example "Alpha, Beta". [CHAR LIMIT=3] -->
+  <!-- STK sending DTMF, SMS, USSD, SS -->
+  <!-- STK launch Browser -->
+  <!-- STK setup Call -->
+  <!-- Title for a button to choose the currently selected activity
+         as the default in the activity resolver. [CHAR LIMIT=25] -->
+  <!-- Title for a button to choose the currently selected activity
+         from the activity resolver to use just this once. [CHAR LIMIT=25] -->
+  <!-- Text for the toast that is shown when the user clicks on a launcher that
+         doesn't support the work profile. [CHAR LIMIT=100] -->
+  <!-- Name of the default audio route for tablets when nothing
+         is connected to a headphone or other wired audio output jack. [CHAR LIMIT=50] -->
+  <!-- Name of the default audio route for tablets when nothing
+         is connected to a headphone or other wired audio output jack. [CHAR LIMIT=50] -->
+  <!-- Name of the default audio route when nothing is connected to
+         a headphone or other wired audio output jack. [CHAR LIMIT=50] -->
+  <!-- Name of the default audio route when wired headphones are
+         connected. [CHAR LIMIT=50] -->
+  <!-- Name of the default audio route when an audio dock is connected. [CHAR LIMIT=50] -->
+  <!-- Name of the default media route when HDMI is connected. [CHAR LIMIT=50] -->
+  <!-- Name of the default audio route category. [CHAR LIMIT=50] -->
+  <!-- Description of the bluetooth a2dp audio route. [CHAR LIMIT=50] -->
+  <!-- Description of a wireless display route. [CHAR LIMIT=50] -->
+  <!-- Content description of a MediaRouteButton for accessibility support.
+        Cast is the standard android verb for sending content to a remote device. [CHAR LIMIT=50] -->
+  <!-- Title of the media route chooser dialog. [CHAR LIMIT=40] -->
+  <!-- Title of the media route chooser dialog for selecting remote display routes. [CHAR LIMIT=40] -->
+  <!-- Placeholder text to show when no devices have been found. [CHAR LIMIT=50] -->
+  <!-- Button to access extended settings.  [CHAR LIMIT=30] -->
+  <!-- Button to disconnect from a media route.  [CHAR LIMIT=30] -->
+  <!-- Status message for remote routes attempting to scan/determine availability -->
+  <!-- Status message for a remote route attempting to connect -->
+  <!-- Status message for a remote route that is confirmed to be available for connection -->
+  <!-- Status message for remote routes that are not available for connection right now -->
+  <!-- Status message for a remote route that is in use (and thus unavailabe) right now -->
+  <!-- Display manager service -->
+  <!-- Name of the built-in display.  [CHAR LIMIT=50] -->
+  <!-- Name of the HDMI display.  [CHAR LIMIT=50] -->
+  <!-- Name of the N'th overlay display for testing.  [CHAR LIMIT=50] -->
+  <!-- Title text to show within the overlay.  [CHAR LIMIT=50] -->
+  <!-- Title text to append when the display is secure.  [CHAR LIMIT=30] -->
+  <!-- Keyguard strings -->
+  <!-- Message shown in pattern unlock after some number of unsuccessful attempts -->
+  <!-- Message shown when user enters wrong pattern -->
+  <!-- Message shown when user enters wrong password -->
+  <!-- Message shown when user enters wrong PIN -->
+  <!-- Countdown message shown after too many failed unlock attempts -->
+  <!-- Instructions for using the pattern unlock screen -->
+  <!-- Instructions for using the SIM PIN unlock screen -->
+  <!-- Instructions for using the PIN unlock screen -->
+  <!-- Instructions for using the password unlock screen -->
+  <!-- Hint shown in the PUK screen that asks the user to enter the PUK code given to them by their provider -->
+  <!-- Hint shown in the PUK unlock screen PIN TextView -->
+  <!-- Message shown when the user needs to confirm the PIN they just entered in the PUK screen -->
+  <!-- Message shown in dialog while the device is unlocking the SIM card -->
+  <!-- Message shown when the user enters the wrong PIN code -->
+  <!-- Message shown when the user enters an invalid SIM pin password in PUK screen -->
+  <!-- Message shown when the user enters an invalid PUK code in the PUK screen -->
+  <!-- Message shown when the user enters an invalid PUK code -->
+  <!-- String shown in PUK screen when PIN codes don't match -->
+  <!-- Message shown when the user exceeds the maximum number of pattern attempts -->
+  <!-- Instructions show in account unlock screen allowing user to enter their email password -->
+  <!-- Hint shown in TextView in account unlock screen of keyguard -->
+  <!-- Hint shown in TextView in account unlock screen of keyguard -->
+  <!-- Label shown on sign in button on account unlock screen of keyguard -->
+  <!-- Message shown when the user enters an invalid username/password combination in account unlock screen of keyguard -->
+  <!-- Hint text shown when user has too many failed password attempts in account unlock screen of keyguard -->
+  <!-- Message shown while device checks username/password in account unlock screen of keyguard -->
+  <!-- Message shown in dialog when max number of attempts are reached for PIN screen of keyguard -->
+  <!-- Message shown in dialog when max number of attempts are reached for password screen of keyguard -->
+  <!-- Message shown when user is almost at the limit of password attempts where the device will be wiped. -->
+  <!-- Message shown when user is almost at the limit of password attempts where the device will be wiped. -->
+  <!-- Message shown when user is almost at the limit of password attempts where the device will be wiped. -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped -->
+  <!-- Message shown in dialog when user is almost at the limit where they will be
+    locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- Message shown in dialog when user is almost at the limit where they will be
+    locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- Message shown in dialog when user is almost at the limit where they will be
+    locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- Sequence of characters used to separate message strings in keyguard. Typically just em-dash
+         with spaces on either side. [CHAR LIMIT=3] -->
+  <!-- The delete-widget drop target button text -->
+  <!-- Message shown in dialog when user is attempting to set the music volume above the
+    recommended maximum level for headphones -->
+  <!-- Text spoken when the user is performing a gesture that will enable accessibility. [CHAR LIMIT=none] -->
+  <!-- Text spoken when the user enabled accessibility. [CHAR LIMIT=none] -->
+  <!-- Text spoken when the user stops preforming a gesture that would enable accessibility. [CHAR LIMIT=none] -->
+  <!-- Text spoken when the current user is switched if accessibility is enabled. [CHAR LIMIT=none] -->
+  <!-- Message shown when switching to a user [CHAR LIMIT=none] -->
+  <!-- Default name of the owner user [CHAR LIMIT=20] -->
+  <!-- Error message title [CHAR LIMIT=35] -->
+  <!-- Message informing user that the change was disallowed by an administrator. [CHAR LIMIT=none] -->
+  <!-- Message informing user that the requested activity could not be found [CHAR LIMIT=none] -->
+  <!-- Printing -->
+  <!-- ISO (European standard) A0 media (paper) size: 33.11" × 46.81" -->
+  <!-- ISO (European standard) A1 media (paper) size: 23.39" × 33.11" -->
+  <!-- ISO (European standard) A2 media (paper) size: 16.54" x 23.39" -->
+  <!-- ISO (European standard) A3 media (paper) size: 11.69" x 16.54" -->
+  <!-- ISO (European standard) A4 media (paper) size: 8.27" x 11.69" -->
+  <!-- ISO (European standard) A5 media (paper) size: 5.83" x 8.27" -->
+  <!-- ISO (European standard) A6 media (paper) size: 4.13" x 5.83" -->
+  <!-- ISO (European standard) A7 media (paper) size: 2.91" x 4.13" -->
+  <!-- ISO (European standard) A8 media (paper) size: 2.05" x 2.91" -->
+  <!-- ISO (European standard) A9 media (paper) size: 1.46" x 2.05" -->
+  <!-- ISO (European standard) A10 media (paper) size: 1.02" x 1.46" -->
+  <!-- ISO (European standard) B0 media (paper) size: 39.37" x 55.67" -->
+  <!-- ISO (European standard) B1 media (paper) size: 27.83" x 39.37" -->
+  <!-- ISO (European standard) B2 media (paper) size - 19.69" x 27.83" -->
+  <!-- ISO (European standard) B3 media (paper) size: 13.90" x 19.69" -->
+  <!-- ISO (European standard) B4 media (paper) size: 9.84" x 13.90" -->
+  <!-- ISO (European standard) B5 media (paper) size: 6.93" x 9.84" -->
+  <!-- ISO (European standard) B6 media (paper) size: 4.92" x 6.93" -->
+  <!-- ISO (European standard) B7 media (paper) size: 3.46" x 4.92" -->
+  <!-- ISO (European standard) B8 media (paper) size: 2.44" x 3.46" -->
+  <!-- ISO (European standard) B9 media (paper) size: 1.73" x 2.44" -->
+  <!-- ISO (European standard) B10 media (paper) size: 1.22" x 1.73" -->
+  <!-- ISO (European standard) C0 media (paper) size: 36.10" x 51.06" -->
+  <!-- ISO (European standard) C1 media (paper) size: 25.51" x 36.10" -->
+  <!-- ISO (European standard) C2 media (paper) size: 18.03" x 25.51" -->
+  <!-- ISO (European standard) C3 media (paper) size: 12.76" x 18.03" -->
+  <!-- ISO (European standard) C4 media (paper) size: 9.02" x 12.76" -->
+  <!-- ISO (European standard) C5 media (paper) size: 6.38" x 9.02" -->
+  <!-- ISO (European standard) C6 media (paper) size: 4.49" x 6.38" -->
+  <!-- ISO (European standard) C7 media (paper) size: 3.19" x 4.49" -->
+  <!-- ISO ISO C8 media (paper) size: 2.24" x 3.19" -->
+  <!-- ISO ISO C9 media (paper) size: 1.57" x 2.24" -->
+  <!-- ISO (European standard) C10 media (paper) size: 1.10" x 1.57" -->
+  <!-- North America Letter media (paper) size: 8.5" × 11" (279mm x 216mm) -->
+  <!-- North America Government Letter media (paper) size: 8.0" × 10.5" (203mm x 267mm) -->
+  <!-- North America Legal media (paper) size: 8.5" × 14" (216mm x 356mm) -->
+  <!-- North America Junior Legal media (paper) size: 8.0" × 5.0" (203mm × 127mm) -->
+  <!-- North America Ledger media (paper) size: 17" × 11" (432mm × 279mm) -->
+  <!-- North America Tabloid media (paper) size: 11" × 17" (279mm × 432mm) -->
+  <!-- North America Index Card 3x5 media (paper) size: 3" x 5" (76mm x 127mm) -->
+  <!-- North America Index Card 4x6 media (paper) size: 4" x 6" (102mm x 152mm) -->
+  <!-- North America Index Card 5x8 media (paper) size: 5" x 8" (127mm x 203mm) -->
+  <!-- North America Monarch media (paper) size: 7.25" x 10.5" (184mm x 267mm) -->
+  <!-- North America Quarto media (paper) size: 8" x 10" (203mm x 254mm) -->
+  <!-- North America Foolscap media (paper) size: 8" x 13" (203mm x 330mm) -->
+  <!-- Chinese Roc 8k media (paper) size: 270mm x 390mm (10.629" x 15.3543") -->
+  <!-- Chinese Roc 16k media (paper) size: 195mm x 270mm (7.677" x 10.629") -->
+  <!-- Chinese PRC 1 media (paper) size: 102mm x 165mm (4.015" x 6.496") -->
+  <!-- Chinese PRC 2 media (paper) size: 102mm x 176mm (4.015" x 6.929") -->
+  <!-- Chinese PRC 3 media (paper) size: 125mm x 176mm (4.921" x 6.929") -->
+  <!-- Chinese PRC 4 media (paper) size: 110mm x 208mm (4.330" x 8.189") -->
+  <!-- Chinese PRC 5 media (paper) size: 110mm x 220mm (4.330" x 8.661") -->
+  <!-- Chinese PRC 6 media (paper) size: 120mm x 320mm (4.724" x 12.599") -->
+  <!-- Chinese PRC 7 media (paper) size: 160mm x 230mm (6.299" x 9.055") -->
+  <!-- Chinese PRC 8 media (paper) size: 120mm x 309mm (4.724" x 12.165") -->
+  <!-- Chinese PRC 9 media (paper) size: 229mm x 324mm (9.016" x 12.756") -->
+  <!-- Chinese PRC 10 media (paper) size: 324mm x 458mm (12.756" x 18.032") -->
+  <!-- Chinese RPC 16K media (paper) size: 146mm x 215mm (5.749" x 8.465") -->
+  <!-- Chinese Pa Kai media (paper) size: 146mm x 215mm (5.749" x 8.465") -->
+  <!-- Chinese Dai Pa Kai media (paper) size: 275mm x 395mm (10.827" x 15.551") -->
+  <!-- Chinese Jurro Ku Kai media (paper) size: 275mm x 395mm (10.827" x 15.551") -->
+  <!-- Japanese JIS B10 media (paper) size: 32mm x 45mm (1.259" x 1.772") -->
+  <!-- Japanese JIS B9 media (paper) size: 45mm x 64mm (1.772" x 2.52") -->
+  <!-- Japanese JIS B8 media (paper) size: 64mm x 91mm (2.52" x 3.583") -->
+  <!-- Japanese JIS B7 media (paper) size: 91mm x 128mm (3.583" x 5.049") -->
+  <!-- Japanese JIS B6 media (paper) size: 128mm x 182mm (5.049" x 7.165") -->
+  <!-- Japanese JIS B5 media (paper) size: 182mm x 257mm (7.165" x 10.118") -->
+  <!-- Japanese JIS B4 media (paper) size: 257mm x 364mm (10.118" x 14.331") -->
+  <!-- Japanese JIS B3 media (paper) size: 364mm x 515mm (14.331" x 20.276") -->
+  <!-- Japanese JIS B2 media (paper) size: 515mm x 728mm (20.276" x 28.661") -->
+  <!-- Japanese JIS B1 media (paper) size: 728mm x 1030mm (28.661" x 40.551") -->
+  <!-- Japanese JIS B0 media (paper) size: 1030mm x 1456mm (40.551" x 57.323") -->
+  <!-- Japanese JIS Exec media (paper) size: 216mm x 330mm (8.504" x 12.992") -->
+  <!-- Japanese Chou4 media (paper) size: 90mm x 205mm (3.543" x 8.071") -->
+  <!-- Japanese Chou3 media (paper) size: 120mm x 235mm (4.724" x 9.252") -->
+  <!-- Japanese Chou2 media (paper) size: 111.1mm x 146mm (4.374" x 5.748") -->
+  <!-- Japanese Hagaki media (paper) size: 100mm x 148mm (3.937" x 5.827") -->
+  <!-- Japanese Oufuku media (paper) size: 148mm x 200mm (5.827" x 7.874") -->
+  <!-- Japanese Kahu media (paper) size: 240mm x 322.1mm (9.449" x 12.681") -->
+  <!-- Japanese Kaku2 media (paper) size: 240mm x 332mm (9.449" x 13.071") -->
+  <!-- Japanese You4 media (paper) size: 105mm x 235mm (4.134" x 9.252") -->
+  <!-- Media (paper) size for specifying any paper size in portrait.-->
+  <!-- Media (paper) size for specifying any paper size in landscape.-->
+  <!-- Write fail reason: printing was cancelled.[CHAR LIMIT=none] -->
+  <!-- Write fail reason: couldn't write the printed content. [CHAR LIMIT=none] -->
+  <!-- Print fail reason: unknown. [CHAR LIMIT=25] -->
+  <!-- Print fail reason: the print service that has to process the print job is not available. [CHAR LIMIT=none] -->
+  <!-- Title for the notification that a print service was installed. [CHAR LIMIT=50] -->
+  <!-- Message for the notification that a print service was installed. [CHAR LIMIT=50] -->
+  <!-- PIN entry dialog title for entering the administrator PIN [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog label/hint for PIN [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog label/hint for incorrect PIN entry [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog label/hint for old PIN [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog label for new PIN [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog label for new PIN confirmation [CHAR LIMIT=none] -->
+  <!-- PIN creation dialog message [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog error when PINs are not the same [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog error when PIN is too short [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog countdown message for next chance to enter the PIN [CHAR LIMIT=none] -->
+  <!-- Phrase describing a time duration using seconds [CHAR LIMIT=none] -->
+  <!-- PIN entry dialog tells the user to not enter a PIN for a while. [CHAR LIMIT=none] -->
+  <!-- Cling help message title when hiding the navigation bar entering immersive mode [CHAR LIMIT=none] -->
+  <!-- Cling help message description when hiding the navigation bar entering immersive mode [CHAR LIMIT=none] -->
+  <!-- Cling help message confirmation button when hiding the navigation bar entering immersive mode [CHAR LIMIT=30] -->
+  <!-- Label for button to confirm chosen date or time [CHAR LIMIT=30] -->
+  <!--
+         Content description for the hour selector in the time picker, which displays
+         selectable hours of the day along the inside edge of a circle, as in an analog clock.
+         [CHAR LIMIT=50]
+    -->
+  <!--
+         Content description for the minute selector in the time picker, which displays
+         selectable five-minute intervals along the inside edge of a circle, as in an analog clock.
+         [CHAR LIMIT=50]
+    -->
+  <!-- Accessibility announcement for hour circular picker [CHAR LIMIT=NONE] -->
+  <!-- Accessibility announcement for minute circular picker [CHAR LIMIT=NONE] -->
+  <!-- Accessibility announcement for the day picker [CHAR LIMIT=NONE] -->
+  <!-- Accessibility announcement for the year picker [CHAR LIMIT=NONE] -->
+  <!-- Accessibility announcement when a number that had been typed in is deleted [CHAR_LIMIT=NONE] -->
+  <!--
+        Used to wrap a label for content description for a work profile, e.g. "Work Email" instead
+        of email when there are two email apps.
+        [CHAR LIMIT=20]
+     -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- DO NOT TRANSLATE -->
+  <!-- Notify use that they are in Lock-to-app -->
+  <!-- Notify use that they are in Lock-to-app in accessibility mode -->
+  <!-- Notify user that they are locked in lock-to-app mode -->
+  <!-- Starting lock-to-app indication. -->
+  <!-- Exting lock-to-app indication. -->
+  <!-- Lock-to-app unlock pin string -->
+  <!-- Lock-to-app unlock pattern string -->
+  <!-- Lock-to-app unlock password string -->
+  <!-- Notification shown when device owner silently installs a package [CHAR LIMIT=NONE] -->
+  <!-- Notification shown when device owner silently updates a package [CHAR LIMIT=NONE] -->
+  <!-- Notification shown when device owner silently deletes a package [CHAR LIMIT=NONE] -->
+  <!-- [CHAR_LIMIT=NONE] Battery saver: Feature description -->
+  <!-- Zen mode condition - summary: time duration in minutes. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - summary: time duration in minutes (short version). [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - summary: time duration in hours. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - summary: time duration in hours (short version). [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - line one: time duration in minutes. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - line one: time duration in minutes (short version). [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - line one: time duration in hours. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - line one: time duration in hours (short version). [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - line two: ending time. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition - line one: Until next alarm. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition: no exit criteria. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode condition: no exit criteria, includes the name of the feature for emphasis. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode active automatic rule name separator. [CHAR LIMIT=NONE] -->
+  <!-- Content description for the Toolbar icon used to collapse an expanded action mode. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode - feature name. [CHAR LIMIT=40] -->
+  <!-- Zen mode - downtime legacy feature name. [CHAR LIMIT=40] -->
+  <!-- Zen mode - name of default automatic schedule for weeknights. [CHAR LIMIT=40] -->
+  <!-- Zen mode - name of default automatic schedule for weekends. [CHAR LIMIT=40] -->
+  <!-- Zen mode - name of default automatic calendar event-based rule. [CHAR LIMIT=40] -->
+  <!-- Indication that the current volume and other effects (vibration) are being suppressed by a third party, such as a notification listener. [CHAR LIMIT=30] -->
+  <!-- Error message shown when there is a system error which can be solved by user performing factory reset. [CHAR LIMIT=NONE] -->
+  <!-- Error message shown when there is a system error which can be solved by the manufacturer. [CHAR LIMIT=NONE] -->
+  <!-- Displayed when the USSD/SS request is modified by STK CC to a
+    different request. This will be displayed in a toast. -->
+  <!-- Content description of the work profile icon in the notification. -->
+  <!-- User visible name for USB MIDI Peripheral port -->
+  <!-- Manufacturer name for USB MIDI Peripheral port -->
+  <!-- Product name for USB MIDI Peripheral port -->
+  <!-- Floating toolbar strings -->
+  <!-- Content description for the button that opens the floating toolbar overflow. [CHAR LIMIT=NONE] -->
+  <!-- Content description for the button that closes the floating toolbar overflow. [CHAR LIMIT=NONE] -->
+  <!-- Ellipsis character to appear in notification templates, e.g.
+         notification_template_material_inbox.xml.
+         DO NOT TRANSLATE -->
+  <!-- Label describing the number of selected items [CHAR LIMIT=48] -->
+  <!-- Used to replace a range of characters in text that is too wide
+         for the space allocated to it (three dots). -->
+  <!-- Used to replace a range of characters in text that is too wide
+         for the space allocated to it (two dots). -->
+</resources>
diff --git a/core/res/res/values-et-rEE/cm_strings.xml b/core/res/res/values-et-rEE/cm_strings.xml
index 3873fe7..99ceaa9 100644
--- a/core/res/res/values-et-rEE/cm_strings.xml
+++ b/core/res/res/values-et-rEE/cm_strings.xml
@@ -135,9 +135,7 @@
   <string name="app_ops_start_at_bootup">käivitada sisselülitamisel</string>
   <string name="app_ops_toast_window">näidata lühisõnumeid</string>
   <string name="app_ops_toggle_bluetooth">lülitada Bluetooth\'i</string>
-  <string name="app_ops_toggle_mobile_data">lülita mobiilne andmeside sisse-välja</string>
   <string name="app_ops_toggle_nfc">lülitada NFC</string>
-  <string name="app_ops_toggle_wifi">lülita Wi-Fi sisse-välja</string>
   <string name="app_ops_use_alarm_volume">muuta alarmi helitugevust</string>
   <string name="app_ops_use_audio_focus">muuta audio fookust</string>
   <string name="app_ops_use_bluetooth_volume">muuta Bluetooth heli tugevust</string>
@@ -150,21 +148,6 @@
   <string name="app_ops_use_voice_volume">muuta telefoni kõne helitugevust</string>
   <string name="app_ops_write_mms">kirjutada MMS sõnumit</string>
   <string name="app_ops_write_sms">kirjutada SMS sõnumit</string>
-  <string name="app_ops_use_fingerprint">kasuta sõrmejälge</string>
-  <string name="app_ops_add_voicemail">lisa kõnepost</string>
-  <string name="app_ops_read_phone_state">juurdepääs telefoni olekule</string>
-  <string name="app_ops_scan_wifi">otsida Wi-Fi võrke</string>
-  <string name="app_ops_change_wallpaper">muuta taustapilti</string>
-  <string name="app_ops_assist_structure">kasuta assisteeritud struktuuri</string>
-  <string name="app_ops_assist_screenshot">kuvatõmmise tegemine</string>
-  <string name="app_ops_use_body_sensors">kasutada biosensoreid</string>
-  <string name="app_ops_read_cell_broadcasts">lugeda võrguteateid</string>
-  <string name="app_ops_mock_location">teeskle asukohta</string>
-  <string name="app_ops_read_external_storage">lugeda väliselt andmekandjalt</string>
-  <string name="app_ops_write_external_storage">kirjutada välisele andmekandjale</string>
-  <string name="app_ops_turn_on_screen">lülitada ekraan sisse</string>
-  <string name="app_ops_get_accounts">lugeda seadme kasutajaid</string>
-  <string name="app_ops_wifi_change">muuta Wi-Fi olekut</string>
   <string name="app_ops_su">saada root ligipääsu</string>
   <!-- Notify user that they are in Lock-to-app (for devices without navbar) -->
   <string name="lock_to_app_toast_no_navbar">Selle ekraani vabastamiseks puudutage ja hoidke all Tagasi nuppu.</string>
@@ -176,11 +159,7 @@
   <!-- Sequence of characters used to separate carrier message strings in keyguard. Typically just vertical line
          with spaces on either side. [CHAR LIMIT=3] -->
   <!-- Protected Apps Notification -->
-  <string name="notify_package_component_protected_title">Tegevuse käivitamine blokeeriti</string>
-  <string name="notify_package_component_protected_text"><xliff:g id="app_name">%1$s</xliff:g> keelati käivitamast. Koputage rakenduse autentimiseks ja käivitamiseks.</string>
   <!-- Battery fully charged notification -->
-  <string name="notify_battery_fully_charged_title">Aku täis</string>
-  <string name="notify_battery_fully_charged_text">Ühenda telefon laadijast, et parandada aku eluiga.</string>
   <!-- [CHAR LIMIT=NONE] Title of an application permission, listed so the user can choose
          whether they want to allow the application to do this. -->
   <string name="permlab_resetBatteryStats">nullida aku statistikat</string>
@@ -188,6 +167,4 @@
          whether they want to allow the application to do this. -->
   <string name="permdesc_resetBatteryStats">Lubab rakendusel nullida aku praeguse madala-tasemelise kasutuse andmed.</string>
   <!-- Uicc hotswapped event configuration needed notification -->
-  <string name="uicc_hot_swapped_event_title">SIM-kaardid on muutunud</string>
-  <string name="uicc_hot_swapped_event_text">Koputa, et muuta SIM-kaardi vaikesätteid</string>
 </resources>
diff --git a/core/res/res/values-eu-rES/cm_strings.xml b/core/res/res/values-eu-rES/cm_strings.xml
index 847aafc..52d8b20 100644
--- a/core/res/res/values-eu-rES/cm_strings.xml
+++ b/core/res/res/values-eu-rES/cm_strings.xml
@@ -117,7 +117,7 @@
   <string name="app_ops_modify_call_log">dei erregistroa eguneratu</string>
   <string name="app_ops_modify_clipboard">arbela aldatu</string>
   <string name="app_ops_modify_contacts">zure kontaktuak eguneratu</string>
-  <string name="app_ops_modify_settings">eguneratu sistemaren ezarpenak</string>
+  <string name="app_ops_modify_settings">sistema ezarpenak aldatu</string>
   <string name="app_ops_mute_unmute_microphone">mikrofonoa mututu/desmututu</string>
   <string name="app_ops_play_audio">soinua erreproduzitu</string>
   <string name="app_ops_post_notification">jakinarazpen bat argitaratu</string>
diff --git a/core/res/res/values-in/cm_strings.xml b/core/res/res/values-in/cm_strings.xml
index c834a4f..4e84126 100644
--- a/core/res/res/values-in/cm_strings.xml
+++ b/core/res/res/values-in/cm_strings.xml
@@ -18,15 +18,15 @@
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <!-- label for item that screenshots in phone options dialog -->
-  <string name="global_action_screenshot">Tangkap layar</string>
+  <string name="global_action_screenshot">Cuplikan layar</string>
   <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
-  <string name="permlab_receiveProtectedSms">terima SMS yang dilindungi</string>
+  <string name="permlab_receiveProtectedSms">terima SMS yang diproteksi</string>
   <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
-  <string name="permdesc_receiveProtectedSms">Izinkan aplikasi untuk menerima SMS yang dilindungi.</string>
+  <string name="permdesc_receiveProtectedSms">Izinkan aplikasi menerima SMS yang diproteksi.</string>
   <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
-  <string name="permlab_modifyProtectedSmsList">modifikasi daftar SMS yang dilindungi</string>
+  <string name="permlab_modifyProtectedSmsList">Mengubah daftar SMS yang diamankan</string>
   <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
-  <string name="permdesc_modifyProtectedSmsList">Izinkan aplikasi untuk mengubah daftar alamat SMS yang dilindungi.</string>
+  <string name="permdesc_modifyProtectedSmsList">Izinkan aplikasi untuk mengubah daftar alamat SMS yang diamankan.</string>
   <!-- Title of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
   <string name="permgrouplab_security">Keamanan</string>
   <!-- Description of a category of application permissions, listed so the user can choose whether they want to allow the application to do this. -->
@@ -44,28 +44,28 @@
   <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
   <string name="permdesc_setKeyguardWallpaper">Izinkan aplikasi untuk mengubah gambar latar layar kunci.</string>
   <!-- label for item that reboots the phone in phone options dialog -->
-  <string name="global_action_reboot">Mulai ulang</string>
+  <string name="global_action_reboot">But ulang</string>
   <!-- label for current user in phone options dialog -->
   <string name="global_action_current_user">Saat ini</string>
   <!-- Reboot menu -->
   <!-- Button to reboot the phone, within the Reboot Options dialog -->
-  <string name="reboot_reboot">Mulai ulang</string>
+  <string name="reboot_reboot">But ulang</string>
   <!-- Button to reboot the phone into recovery, within the Reboot Options dialog -->
-  <string name="reboot_recovery">Recovery</string>
+  <string name="reboot_recovery">Pemulihan</string>
   <!-- Button to reboot the phone into bootloader, within the Reboot Options dialog -->
   <string name="reboot_bootloader">Bootloader</string>
   <!-- Button to reboot the phone into download, within the Reboot Options dialog -->
   <string name="reboot_download">Unduh</string>
   <!-- Button to soft reboot the device, within the Reboot Options dialog -->
-  <string name="reboot_soft">Mulai ulang cepat</string>
+  <string name="reboot_soft">But ulang cepat</string>
   <!-- Title of dialog to confirm rebooting. -->
-  <string name="reboot_title">Mulai ulang</string>
+  <string name="reboot_title">But ulang</string>
   <!-- Reboot Confirmation Dialog.  When the user chooses to reboot the device, there will
          be a confirmation dialog.  This is the message. -->
-  <string name="reboot_confirm" product="tablet">Tablet anda akan dimulai ulang.</string>
-  <string name="reboot_confirm" product="default">Ponsel anda akan mulai ulang.</string>
+  <string name="reboot_confirm" product="tablet">Tablet Anda akan dibut ulang.</string>
+  <string name="reboot_confirm" product="default">Ponsel Anda akan dibut ulang.</string>
   <!-- Reboot Progress Dialog. This is shown if the user chooses to reboot the phone. -->
-  <string name="reboot_progress">Memulai ulang\u2026</string>
+  <string name="reboot_progress">Membut ulang\u2026</string>
   <!-- Long-press back kill application -->
   <string name="app_killed_message">Aplikasi dimatikan</string>
   <!-- ADB over network notification -->
@@ -73,21 +73,21 @@
   <!-- ADB over USB and network notification -->
   <string name="adb_both_active_notification_title">ADB melalui USB &amp; jaringan diaktifkan</string>
   <!-- ADB notification message-->
-  <string name="adb_active_generic_notification_message">Sentuh untuk menonaktifkan debugging.</string>
+  <string name="adb_active_generic_notification_message">Sentuh untuk menonaktifkan perbaikan galat fungsi.</string>
   <!-- ADB custom tile -->
   <string name="adb_active_custom_tile">ADB - <xliff:g id="adb_type" example="USB">%1$s</xliff:g></string>
   <string name="adb_active_custom_tile_both">Jaringan &amp; USB</string>
   <string name="adb_active_custom_tile_usb">USB</string>
   <string name="adb_active_custom_tile_net">Jaringan</string>
   <!-- Title of an application permission, listed so the user can choose whether they want the application to do this. -->
-  <string name="permlab_interceptPackageLaunch">Mencegah memulai aplikasi</string>
+  <string name="permlab_interceptPackageLaunch">menghentikan memulai aplikasi</string>
   <!-- stylus gestures support -->
   <string name="stylus_app_not_installed">%s tidak terinstal</string>
   <!-- Zen mode buttons -->
   <string name="silent_mode_priority">Prioritas</string>
   <string name="silent_mode_none">Tidak ada</string>
   <!-- Wifi Hotspot disabled due to subscription change -->
-  <string name="subscription_change_disabled_wifi_ap">Wi-Fi hotspot dinonatifkan karena perubahan langganan SIM</string>
+  <string name="subscription_change_disabled_wifi_ap">Area bersinyal Wi-Fi dinonatifkan karena perubahan langganan SIM</string>
   <!-- WiFi turn off notification action text -->
   <string name="notify_turn_wifi_off_title">Nonaktifkan Wi-Fi</string>
   <!-- Privacy Guard -->
@@ -118,7 +118,7 @@
   <string name="app_ops_modify_clipboard">memodifikasi clipboard</string>
   <string name="app_ops_modify_contacts">memperbarui kontak Anda</string>
   <string name="app_ops_modify_settings">memperbarui pengaturan sistem</string>
-  <string name="app_ops_mute_unmute_microphone">diam/mengaktifkan suara mikrofon</string>
+  <string name="app_ops_mute_unmute_microphone">bungkam/bunyikan suara mikrofon</string>
   <string name="app_ops_play_audio">mainkan audio</string>
   <string name="app_ops_post_notification">mengirim pemberitahuan</string>
   <string name="app_ops_project_media">proyek media</string>
@@ -154,9 +154,9 @@
   <string name="app_ops_add_voicemail">menambahkan pesan suara</string>
   <string name="app_ops_read_phone_state">akses status ponsel</string>
   <string name="app_ops_scan_wifi">memindai jaringan Wi-Fi</string>
-  <string name="app_ops_change_wallpaper">mengubah wallpaper</string>
+  <string name="app_ops_change_wallpaper">mengubah gambar latar</string>
   <string name="app_ops_assist_structure">gunakan struktur bantuan</string>
-  <string name="app_ops_assist_screenshot">ambil tangkapan layar</string>
+  <string name="app_ops_assist_screenshot">ambil cuplikan layar</string>
   <string name="app_ops_use_body_sensors">menggunakan sensor badan</string>
   <string name="app_ops_read_cell_broadcasts">baca siaran seluler</string>
   <string name="app_ops_mock_location">memalsukan lokasi Anda</string>
@@ -165,7 +165,7 @@
   <string name="app_ops_turn_on_screen">aktifkan layar</string>
   <string name="app_ops_get_accounts">dapatkan akun perangkat</string>
   <string name="app_ops_wifi_change">ubah status Wi-Fi</string>
-  <string name="app_ops_su">dapatkan akses root</string>
+  <string name="app_ops_su">dapatkan akses punca (root)</string>
   <!-- Notify user that they are in Lock-to-app (for devices without navbar) -->
   <string name="lock_to_app_toast_no_navbar">Untuk melepas sematan layar ini, sentuh dan tahan tombol Kembali.</string>
   <!-- Template for showing cellular network operator name while LTE calling is enabled -->
@@ -180,7 +180,7 @@
   <string name="notify_package_component_protected_text"><xliff:g id="app_name">%1$s</xliff:g> dilindungi dari peluncuran. Ketuk untuk mengautentikasi dan meluncurkan aplikasi.</string>
   <!-- Battery fully charged notification -->
   <string name="notify_battery_fully_charged_title">Baterai telah terisi penuh</string>
-  <string name="notify_battery_fully_charged_text">Lepaskan perangkat dari pengisi daya agar meningkatkan umur baterai.</string>
+  <string name="notify_battery_fully_charged_text">Cabut pengisi daya dari perangkat Anda untuk meningkatkan umur baterai.</string>
   <!-- [CHAR LIMIT=NONE] Title of an application permission, listed so the user can choose
          whether they want to allow the application to do this. -->
   <string name="permlab_resetBatteryStats">set ulang statistik baterai</string>
diff --git a/core/res/res/values-pt-rBR/cm_strings.xml b/core/res/res/values-pt-rBR/cm_strings.xml
index 22be9bd..9957b78 100644
--- a/core/res/res/values-pt-rBR/cm_strings.xml
+++ b/core/res/res/values-pt-rBR/cm_strings.xml
@@ -161,7 +161,7 @@
   <string name="app_ops_read_cell_broadcasts">ler transmissões da rede de celular</string>
   <string name="app_ops_mock_location">simular a sua localização</string>
   <string name="app_ops_read_external_storage">ler o armazenamento externo</string>
-  <string name="app_ops_write_external_storage">escrever no armazenamento externo</string>
+  <string name="app_ops_write_external_storage">gravar no armazenamento externo</string>
   <string name="app_ops_turn_on_screen">ligar a tela</string>
   <string name="app_ops_get_accounts">obter as contas do dispositivo</string>
   <string name="app_ops_wifi_change">alterar o estado do Wi-Fi</string>
diff --git a/core/res/res/values-ru/cm_strings.xml b/core/res/res/values-ru/cm_strings.xml
index 136381b..38f6a59 100644
--- a/core/res/res/values-ru/cm_strings.xml
+++ b/core/res/res/values-ru/cm_strings.xml
@@ -3,10 +3,13 @@
 <!--
      Copyright (C) 2012-2015 The CyanogenMod Project
      Copyright (c) 2013, The Linux Foundation. All rights reserved.
+
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
+
           http://www.apache.org/licenses/LICENSE-2.0
+
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
diff --git a/core/res/res/values/attrs.xml b/core/res/res/values/attrs.xml
index 7abc5a5..e17b017 100644
--- a/core/res/res/values/attrs.xml
+++ b/core/res/res/values/attrs.xml
@@ -6792,11 +6792,6 @@ i
         <attr name="disableDependentsState" format="boolean" />
     </declare-styleable>
 
-    <!-- Base attributes available to SlimSeekBarPreference. -->
-    <declare-styleable name="SlimSeekBarPreference">
-        <!-- No added attributes at this time -->
-    </declare-styleable>
-
     <!-- Base attributes available to DialogPreference. -->
     <declare-styleable name="DialogPreference">
         <!-- The title in the dialog. -->
diff --git a/core/res/res/values/cm_arrays.xml b/core/res/res/values/cm_arrays.xml
index 8df8e20..f66cb06 100644
--- a/core/res/res/values/cm_arrays.xml
+++ b/core/res/res/values/cm_arrays.xml
@@ -29,7 +29,6 @@
         <item>@string/reboot_soft</item>
         <item>@string/reboot_recovery</item>
         <item>@string/reboot_bootloader</item>
-	<item>@string/reboot_systemui</item>
     </array>
 
     <!-- Do not translate. Defines the shutdown actions passed to the kernel.
@@ -39,7 +38,6 @@
         <item>soft_reboot</item>
         <item>recovery</item>
         <item>bootloader</item>
-	<item>systemui_reboot</item>
      </string-array>
 
     <!-- List of packages that should not be themed.
diff --git a/core/res/res/values/cm_strings.xml b/core/res/res/values/cm_strings.xml
index e92400b..a8fcbe5 100644
--- a/core/res/res/values/cm_strings.xml
+++ b/core/res/res/values/cm_strings.xml
@@ -19,8 +19,6 @@
 
     <!-- label for item that screenshots in phone options dialog -->
     <string name="global_action_screenshot">Screenshot</string>
-    <!-- label for item that screenrecord in phone options dialog -->
-    <string name="global_action_screenrecord">Screenrecord</string>
 
     <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
     <string name="permlab_receiveProtectedSms">receive protected SMS</string>
@@ -209,8 +207,7 @@
 
     <!-- Protected Apps Notification -->
     <string name="notify_package_component_protected_title">Activity launch blocked</string>
-
-    <string name="notify_package_component_protected_text"><xliff:g id="app_name">%1$s</xliff:g> is protected from being launched. Click to authenticate and launch the application.</string>
+    <string name="notify_package_component_protected_text"><xliff:g id="app_name">%1$s</xliff:g> is protected from being launched. Tap to authenticate and launch the application.</string>
 
     <!-- Battery fully charged notification -->
     <string name="notify_battery_fully_charged_title">Battery fully charged</string>
diff --git a/core/res/res/values/cm_symbols.xml b/core/res/res/values/cm_symbols.xml
index 3cd6cdd..81f33cb 100644
--- a/core/res/res/values/cm_symbols.xml
+++ b/core/res/res/values/cm_symbols.xml
@@ -101,9 +101,13 @@
     <!-- Advanced settings switch -->
     <java-symbol type="string" name="lock_to_app_toast_no_navbar" />
 
+    <!-- PlatLogo -->
+    <java-symbol type="drawable" name="platlogo_cm" />
+
     <!-- Automatic brightness enhancements -->
     <java-symbol type="integer" name="config_autoBrightnessBrighteningLightFastDebounce"/>
 
+
     <java-symbol type="string" name="high_definition_tag" />
 
     <java-symbol type="string" name="tethered_notification_no_device_message" />
@@ -127,11 +131,8 @@
     <!-- Restricted fingerprint config -->
     <java-symbol type="bool" name="config_fingerprintRestrictedToSystemAndOwner" />
 
-
-    <!-- Use alternative way to blur lockscreen -->
-    <java-symbol type="bool" name="config_use_stackblur" />
-
     <!-- Show battery fully charged notification -->
+    <java-symbol type="bool" name="config_showBatteryFullyChargedNotification" />
     <java-symbol type="string" name="notify_battery_fully_charged_title" />
     <java-symbol type="string" name="notify_battery_fully_charged_text" />
 
diff --git a/core/res/res/values/colors.xml b/core/res/res/values/colors.xml
index 5b19163..7f8c460 100644
--- a/core/res/res/values/colors.xml
+++ b/core/res/res/values/colors.xml
@@ -128,7 +128,7 @@
     <drawable name="notification_template_icon_bg">#3333B5E5</drawable>
     <drawable name="notification_template_icon_low_bg">#0cffffff</drawable>
     <drawable name="notification_template_divider">#29000000</drawable>
-    <drawable name="notification_template_divider_media">#40808080</drawable>
+    <drawable name="notification_template_divider_media">#29ffffff</drawable>
 
     <color name="notification_icon_bg_color">#ff9e9e9e</color>
     <color name="notification_action_color_filter">@color/secondary_text_material_light</color>
@@ -176,14 +176,4 @@
     <color name="Red_800">#ffb93221</color>
 
     <color name="chooser_service_row_background_color">#fff5f5f5</color>
-   <!-- 87% black -->
-    <color name="primary_text_default_material_light">#de000000</color>
-    <!-- 54% black -->
-    <color name="secondary_text_default_material_light">#8a000000</color>
-
-    <!-- 100% white -->
-    <color name="primary_text_default_material_dark">#ffffffff</color>
-    <!-- 70% white -->
-    <color name="secondary_text_default_material_dark">#b3ffffff</color>
-
 </resources>
diff --git a/core/res/res/values/colors_material.xml b/core/res/res/values/colors_material.xml
index f684b57..7399fa9 100644
--- a/core/res/res/values/colors_material.xml
+++ b/core/res/res/values/colors_material.xml
@@ -44,6 +44,16 @@
     <!-- Text & foreground colors -->
     <eat-comment />
 
+    <!-- 87% black -->
+    <color name="primary_text_default_material_light">#de000000</color>
+    <!-- 54% black -->
+    <color name="secondary_text_default_material_light">#8a000000</color>
+
+    <!-- 100% white -->
+    <color name="primary_text_default_material_dark">#ffffffff</color>
+    <!-- 70% white -->
+    <color name="secondary_text_default_material_dark">#b3ffffff</color>
+
     <item name="hint_alpha_material_dark" format="float" type="dimen">0.50</item>
     <item name="hint_alpha_material_light" format="float" type="dimen">0.54</item>
 
diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index d07a90a..79bf24e 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -35,7 +35,6 @@
        <item><xliff:g id="id">nfc</xliff:g></item>
        <item><xliff:g id="id">tty</xliff:g></item>
        <item><xliff:g id="id">speakerphone</xliff:g></item>
-       <item><xliff:g id="id">headset</xliff:g></item>
        <item><xliff:g id="id">zen</xliff:g></item>
        <item><xliff:g id="id">mute</xliff:g></item>
        <item><xliff:g id="id">volume</xliff:g></item>
@@ -96,12 +95,6 @@
     <integer name="config_activityShortDur">150</integer>
     <integer name="config_activityDefaultDur">220</integer>
 
-    <!-- The duration (in milliseconds) of recent app screen animation. -->
-    <integer name="config_recentDefaultDur">300</integer>
-
-    <!-- The duration (in milliseconds) of recent app screen exit animation. -->
-    <integer name="config_recentExitDur">450</integer>
-
     <!-- Duration for the dim animation behind a dialog.  This may be either
          a percentage, which is relative to the duration of the enter/open
          animation of the window being shown that is dimming behind, or it may
@@ -912,7 +905,7 @@
     <integer name="config_shutdownBatteryTemperature">680</integer>
 
     <!-- Display low battery warning when battery level dips to this value -->
-    <integer name="config_lowBatteryWarningLevel">0</integer>
+    <integer name="config_lowBatteryWarningLevel">15</integer>
 
     <!-- Close low battery warning when battery level reaches the lowBatteryWarningLevel
          plus this -->
@@ -2161,20 +2154,15 @@
          on the current state of the device.
          Each item must be one of the following strings:
          "power" = Power off
-         "reboot" = Reboot
-         "screenshot" = Take screenshot
-         "screenrecord" = Take screen recording
-         "profile" = Change phone's profile
-         "airplane" = Airplane mode toggle
-         "users" = list of users
          "settings" = An action to launch settings
-         "lockdown" = lock the phone down
+         "airplane" = Airplane mode toggle
          "bugreport" = Take bug report, if available
          "silent" = silent mode
+         "users" = list of users
          -->
     <string-array translatable="false" name="config_globalActionsList">
         <item>power</item>
-        <item>reboot</item>
+        <item>bugreport</item>
         <item>users</item>
     </string-array>
 
@@ -2511,7 +2499,7 @@
 
     <!-- Timeout in MS for how long you have to long-press the back key to
          kill the foreground app. -->
-    <integer name="config_backKillTimeout">750</integer>
+    <integer name="config_backKillTimeout">2000</integer>
 
     <!-- Setting to false will disable CM's IME switcher implementation for tablets -->
     <bool name="config_show_cmIMESwitcher">true</bool>
@@ -2556,14 +2544,10 @@
          is non-interactive. -->
     <bool name="config_cameraDoubleTapPowerGestureEnabled">true</bool>
 
-
     <!-- Support in Surfaceflinger for blur layers.
          NOTE: This requires additional hardware-specific code. -->
     <bool name="config_ui_blur_enabled">false</bool>
 
-    <!-- Sets whether IME switcher on statusbar should be shown or not. -->
-	<bool name="config_show_IMESwitcher">true</bool>
-
     <!-- When config_LTE_RSRP_threshold_type is set to "custom" -->
     <integer-array name="config_LTE_RSRP_custom_levels">
         <item>-140</item>
@@ -2574,7 +2558,6 @@
         <item>-44</item>
     </integer-array>
 
-
     <!-- Name of the component to handle network policy notifications. If present,
          disables NetworkPolicyManagerService's presentation of data-usage notifications. -->
     <string translatable="false" name="config_networkPolicyNotificationComponent"></string>
@@ -2583,17 +2566,13 @@
          automatically try to pair with it when the device exits tablet mode. -->
     <string translatable="false" name="config_packagedKeyboardName"></string>
 
-    <!-- Use alternative way to blur lockscreen -->
-    <bool name="config_use_stackblur">false</bool>
+    <!-- Show battery fully charged notification -->
+    <bool name="config_showBatteryFullyChargedNotification">false</bool>
 
     <!-- Older rotation sensors are not setting event.timestamp correctly. Setting to
          true will use SystemClock.elapsedRealtimeNanos() to set timestamp. -->
     <bool name="config_useSystemClockforRotationSensor">false</bool>
 
-     <!-- Older sensors are not setting event.timestamp correctly. Setting to
-         true will use SystemClock.elapsedRealtimeNanos() to set timestamp. -->
-    <bool name="config_useSystemClockforSensors">false</bool>
-
     <!-- Whether to persist the notification for when a usb drive device is plugged in -->
     <bool name="config_persistUsbDriveNotification">false</bool>
 </resources>
diff --git a/core/res/res/values/dimens.xml b/core/res/res/values/dimens.xml
index a376b49..aeb1568 100644
--- a/core/res/res/values/dimens.xml
+++ b/core/res/res/values/dimens.xml
@@ -402,16 +402,6 @@
     <item type="dimen" format="integer" name="time_picker_column_start_material">0</item>
     <item type="dimen" format="integer" name="time_picker_column_end_material">1</item>
 
-    <!-- EdgeGesture service: Distance a swipe must travel to be recognized as swipe. -->
-    <dimen name="edge_gesture_trigger_distance">12dp</dimen>
-
-    <!-- EdgeGesture service: This is the distance a swipe can travel orthogonally to its actual swipe
-         direction to be still recognized as swipe. -->
-    <dimen name="edge_gesture_perpendicular_distance">15dp</dimen>
-
-    <!-- EdgeGesture service: Thickness of the active trigger fields around the screen border -->
-    <dimen name="edge_gesture_trigger_thickness">12dp</dimen>
-
     <!-- Largest size an avatar might need to be drawn in the power menu user picker -->
     <dimen name="global_actions_avatar_size">40dp</dimen>
 </resources>
diff --git a/core/res/res/values/ids.xml b/core/res/res/values/ids.xml
index 1c25e9f..c96c57c 100644
--- a/core/res/res/values/ids.xml
+++ b/core/res/res/values/ids.xml
@@ -19,8 +19,6 @@
 <resources>
   <item type="id" name="background" />
   <item type="id" name="checkbox" />
-  <item type="id" name="monitor_box" />
-  <item type="id" name="seek_bar" />
   <item type="id" name="content" />
   <item type="id" name="empty" />
   <item type="id" name="hint" />
diff --git a/core/res/res/values/integers.xml b/core/res/res/values/integers.xml
index f5cf84d..8e27226 100644
--- a/core/res/res/values/integers.xml
+++ b/core/res/res/values/integers.xml
@@ -17,14 +17,6 @@
 */
 -->
 <resources>
-
-   <!-- SlimSeekBar ids -->
-   <java-symbol type="id" name="monitor_box" />
-   <java-symbol type="id" name="seek_bar" />
-
-   <java-symbol type="layout" name="slider_preference" />
-   <java-symbol type="string" name="default_string" />	
-	
     <integer name="kg_carousel_angle">75</integer>
     <integer name="kg_glowpad_rotation_offset">0</integer>
     <integer name="button_pressed_animation_duration">100</integer>
diff --git a/core/res/res/values/public.xml b/core/res/res/values/public.xml
index ebe0102..bc831da 100644
--- a/core/res/res/values/public.xml
+++ b/core/res/res/values/public.xml
@@ -6,13 +6,16 @@
      ***************************************************************
      IMPORTANT NOTE FOR ANYONE MODIFYING THIS FILE
      READ THIS BEFORE YOU MAKE ANY CHANGES
+
      This file defines the binary compatibility for resources.  As such,
      you must be very careful when making changes here, or you will
      completely break backwards compatibility with old applications.
+
      To avoid breaking compatibility, all new resources must be placed
      at the end of the list of resources of the same type.  Placing a resource
      in the middle of type will cause all following resources to be
      assigned new resource numbers, breaking compatibility.
+
      ***************************************************************
      *************************************************************** -->
 <resources>
@@ -2637,22 +2640,6 @@
     <public type="style" name="ThemeOverlay.Material.Dialog" id="0x010302d6" />
     <public type="style" name="ThemeOverlay.Material.Dialog.Alert" id="0x010302d7" />
 
-    <public type="style" name="Theme.Material.DayNight" />
-    <public type="style" name="Theme.Material.DayNight.DarkActionBar" />
-    <public type="style" name="Theme.Material.DayNight.Dialog" />
-    <public type="style" name="Theme.Material.DayNight.Dialog.Alert" />
-    <public type="style" name="Theme.Material.DayNight.Dialog.MinWidth" />
-    <public type="style" name="Theme.Material.DayNight.Dialog.NoActionBar" />
-    <public type="style" name="Theme.Material.DayNight.Dialog.NoActionBar.MinWidth" />
-    <public type="style" name="Theme.Material.DayNight.Dialog.Presentation" />
-    <public type="style" name="Theme.Material.DayNight.DialogWhenLarge" />
-    <public type="style" name="Theme.Material.DayNight.DialogWhenLarge.NoActionBar" />
-    <public type="style" name="Theme.Material.DayNight.NoActionBar" />
-    <public type="style" name="Theme.Material.DayNight.NoActionBar.Fullscreen" />
-    <public type="style" name="Theme.Material.DayNight.NoActionBar.Overscan" />
-    <public type="style" name="Theme.Material.DayNight.NoActionBar.TranslucentDecor" />
-    <public type="style" name="Theme.Material.DayNight.Panel" />
-
     <public type="id" name="pasteAsPlainText" id="0x01020031" />
     <public type="id" name="undo" id="0x01020032" />
     <public type="id" name="redo" id="0x01020033" />
diff --git a/core/res/res/values/strings.xml b/core/res/res/values/strings.xml
index 21ed82f..1fef7e7 100644
--- a/core/res/res/values/strings.xml
+++ b/core/res/res/values/strings.xml
@@ -2596,10 +2596,10 @@
       has violated its self-enforced StrictMode policy.</string>
 
     <!-- [CHAR LIMIT=40] Title of dialog that is shown when performing a system upgrade. -->
-    <string name="android_upgrading_title">ResurrectionRemix is upgrading\u2026</string>
+    <string name="android_upgrading_title">Android is upgrading\u2026</string>
 
     <!-- [CHAR LIMIT=40] Title of dialog that is shown when system is starting. -->
-    <string name="android_start_title">ResurrectionRemix is starting\u2026</string>
+    <string name="android_start_title">Android is starting\u2026</string>
 
     <!-- [CHAR LIMIT=NONE] Message shown in upgrading dialog when doing an fstrim. -->
     <string name="android_upgrading_fstrim">Optimizing storage.</string>
diff --git a/core/res/res/values/styles.xml b/core/res/res/values/styles.xml
index 4a876d3..4bad16d 100644
--- a/core/res/res/values/styles.xml
+++ b/core/res/res/values/styles.xml
@@ -159,76 +159,6 @@ please see styles_device_defaults.xml.
         <item name="windowExitAnimation">@anim/toast_exit</item>
     </style>
 
-    <style name="Animation.Toast.Fade">
-        <item name="windowEnterAnimation">@anim/fade_in</item>
-        <item name="windowExitAnimation">@anim/fade_out</item>
-    </style>
-
-    <style name="Animation.Toast.SlideRight">
-        <item name="windowEnterAnimation">@anim/slide_in_right</item>
-        <item name="windowExitAnimation">@anim/slide_out_right</item>
-    </style>
-
-    <style name="Animation.Toast.SlideLeft">
-        <item name="windowEnterAnimation">@anim/slide_in_left</item>
-        <item name="windowExitAnimation">@anim/slide_out_left</item>
-    </style>
-
-    <style name="Animation.Toast.SlideRightLeft">
-        <item name="windowEnterAnimation">@anim/slide_in_right</item>
-        <item name="windowExitAnimation">@anim/slide_out_left</item>
-    </style>
-
-    <style name="Animation.Toast.SlideLeftRight">
-        <item name="windowEnterAnimation">@anim/slide_in_left</item>
-        <item name="windowExitAnimation">@anim/slide_out_right</item>
-    </style>
-
-    <style name="Animation.Toast.Xylon">
-        <item name="windowEnterAnimation">@anim/xylon_toast_enter</item>
-        <item name="windowExitAnimation">@anim/xylon_toast_exit</item>
-    </style>
-
-    <style name="Animation.Toast.Toko">
-        <item name="windowEnterAnimation">@anim/toko_toast_enter</item>
-        <item name="windowExitAnimation">@anim/toko_toast_exit</item>
-    </style>
-
-    <style name="Animation.Toast.Tn">
-        <item name="windowEnterAnimation">@anim/tn_toast_enter</item>
-        <item name="windowExitAnimation">@anim/tn_toast_exit</item>
-    </style>
-
-    <style name="Animation.Toast.Honami">
-        <item name="windowEnterAnimation">@anim/honami_toast_enter</item>
-        <item name="windowExitAnimation">@anim/honami_toast_exit</item>
-    </style>
-
-    <style name="Animation.Toast.FastFade">
-        <item name="windowEnterAnimation">@anim/fast_fade_in</item>
-        <item name="windowExitAnimation">@anim/fast_fade_out</item>
-    </style>
-
-    <style name="Animation.Toast.GrowFade">
-        <item name="windowEnterAnimation">@anim/grow_fade_in</item>
-        <item name="windowExitAnimation">@anim/fast_fade_out</item>
-    </style>
-
-    <style name="Animation.Toast.GrowFadeCenter">
-        <item name="windowEnterAnimation">@anim/grow_fade_in_center</item>
-        <item name="windowExitAnimation">@anim/fast_fade_out</item>
-    </style>
-
-    <style name="Animation.Toast.GrowFadeBottom">
-        <item name="windowEnterAnimation">@anim/grow_fade_in_from_bottom</item>
-        <item name="windowExitAnimation">@anim/fast_fade_out</item>
-    </style>
-
-    <style name="Animation.Toast.Translucent">
-        <item name="windowEnterAnimation">@anim/translucent_enter</item>
-        <item name="windowExitAnimation">@anim/translucent_exit</item>
-    </style>
-
     <style name="Animation.DropDownDown">
         <item name="windowEnterAnimation">@anim/grow_fade_in</item>
         <item name="windowExitAnimation">@anim/shrink_fade_out</item>
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index 444300e..0989e20 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -1264,7 +1264,6 @@
   <java-symbol type="drawable" name="ic_corp_icon" />
   <java-symbol type="drawable" name="ic_corp_statusbar_icon" />
   <java-symbol type="drawable" name="emulator_circular_window_overlay" />
-  <java-symbol type="drawable" name="boot_logo" />
 
   <java-symbol type="drawable" name="sim_light_blue" />
   <java-symbol type="drawable" name="sim_light_green" />
@@ -1433,8 +1432,6 @@
   <java-symbol type="style" name="Theme.DeviceDefault.Dialog.NoFrame" />
   <java-symbol type="style" name="Theme.IconMenu" />
   <java-symbol type="style" name="Theme.DeviceDefault.VoiceInteractionSession" />
-  <java-symbol type="style" name="Theme.DeviceDefault.FloatingWindow" />
-  <java-symbol type="style" name="Theme.DeviceDefault.FloatingWindowLight" />
 
   <java-symbol type="attr" name="mediaRouteButtonStyle" />
   <java-symbol type="attr" name="externalRouteEnabledDrawable" />
@@ -2398,11 +2395,6 @@
   <java-symbol type="drawable" name="ic_lock_settings" />
   <java-symbol type="drawable" name="ic_lock_user" />
 
-  <!-- EdgeGesture service -->
-  <java-symbol type="dimen" name="edge_gesture_trigger_distance" />
-  <java-symbol type="dimen" name="edge_gesture_perpendicular_distance" />
-  <java-symbol type="dimen" name="edge_gesture_trigger_thickness" />
-
   <!-- Developer settings - Kill app back press -->
   <java-symbol type="string" name="app_killed_message" />
 
@@ -2426,6 +2418,4 @@
   <java-symbol type="string" name="config_packagedKeyboardName" />
 
   <java-symbol type="bool" name="config_useSystemClockforRotationSensor" />
-
-  <java-symbol type="bool" name="config_useSystemClockforSensors" />
 </resources>
diff --git a/core/res/res/values/themes_device_defaults.xml b/core/res/res/values/themes_device_defaults.xml
index afae2b4..def8659 100644
--- a/core/res/res/values/themes_device_defaults.xml
+++ b/core/res/res/values/themes_device_defaults.xml
@@ -555,28 +555,4 @@ easier.
         <item name="listPreferredItemPaddingEnd">?attr/dialogPreferredPadding</item>
     </style>
 
-    <style name="Theme.DeviceDefault.FloatingWindow">
-        <item name="android:windowIsFloating">false</item>
-        <item name="android:windowIsTranslucent">true</item>
-        <item name="android:windowFrame">@null</item>
-        <item name="android:windowContentOverlay">@null</item>
-        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
-        <item name="android:windowActionModeOverlay">true</item>
-        <item name="android:windowCloseOnTouchOutside">true</item>
-        <item name="android:windowFullscreen">false</item>
-        <item name="android:windowSoftInputMode">stateAlwaysHidden|adjustPan</item>
-    </style>
-
-    <style name="Theme.DeviceDefault.FloatingWindowLight" parent="Theme.Material.Light.Dialog">
-        <item name="android:windowIsFloating">false</item>
-        <item name="android:windowIsTranslucent">true</item>
-        <item name="android:windowFrame">@null</item>
-        <item name="android:windowContentOverlay">@null</item>
-        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
-        <item name="android:windowActionModeOverlay">true</item>
-        <item name="android:windowCloseOnTouchOutside">true</item>
-        <item name="android:windowFullscreen">false</item>
-        <item name="android:windowSoftInputMode">stateAlwaysHidden|adjustPan</item>
-    </style>
-
 </resources>
diff --git a/core/res/res/values/themes_material.xml b/core/res/res/values/themes_material.xml
index e406ae0..e88a4fb 100644
--- a/core/res/res/values/themes_material.xml
+++ b/core/res/res/values/themes_material.xml
@@ -1277,7 +1277,7 @@ please see themes_device_defaults.xml.
     </style>
 
     <!-- Default theme for Settings and activities launched from Settings. -->
-    <style name="Theme.Material.Settings" parent="Theme.Material.DayNight.DarkActionBar">
+    <style name="Theme.Material.Settings" parent="Theme.Material.Light.DarkActionBar">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
 
@@ -1287,7 +1287,7 @@ please see themes_device_defaults.xml.
     </style>
 
     <!-- Default theme for Settings and activities launched from Settings. -->
-    <style name="Theme.Material.Settings.NoActionBar" parent="Theme.Material.DayNight.NoActionBar">
+    <style name="Theme.Material.Settings.NoActionBar" parent="Theme.Material.Light.NoActionBar">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
 
@@ -1295,42 +1295,40 @@ please see themes_device_defaults.xml.
         <item name="searchDialogTheme">@style/Theme.Material.Settings.SearchBar</item>
         <item name="panelMenuListTheme">@style/Theme.Material.Settings.CompactMenu</item>
     </style>
-
-    <style name="Theme.Material.Settings.BaseDialog" parent="Theme.Material.DayNight.BaseDialog">
+    <style name="Theme.Material.Settings.BaseDialog" parent="Theme.Material.Light.BaseDialog">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
 
     <style name="Theme.Material.Settings.Dialog" parent="Theme.Material.Settings.BaseDialog" />
 
-    <style name="Theme.Material.Settings.Dialog.BaseAlert" parent="Theme.Material.DayNight.Dialog.BaseAlert">
+    <style name="Theme.Material.Settings.Dialog.BaseAlert" parent="Theme.Material.Light.Dialog.BaseAlert">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
 
     <style name="Theme.Material.Settings.Dialog.Alert" parent="Theme.Material.Settings.Dialog.BaseAlert" />
 
-    <style name="Theme.Material.Settings.DialogWhenLarge" parent="Theme.Material.DayNight.DialogWhenLarge.DarkActionBar">
+    <style name="Theme.Material.Settings.DialogWhenLarge" parent="Theme.Material.Light.DialogWhenLarge.DarkActionBar">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
 
-    <style name="Theme.Material.Settings.DialogWhenLarge.NoActionBar" parent="Theme.Material.DayNight.DialogWhenLarge.NoActionBar">
+    <style name="Theme.Material.Settings.DialogWhenLarge.NoActionBar" parent="Theme.Material.Light.DialogWhenLarge.NoActionBar">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
-
-    <style name="Theme.Material.Settings.Dialog.Presentation" parent="Theme.Material.DayNight.Dialog.Presentation">
+    <style name="Theme.Material.Settings.Dialog.Presentation" parent="Theme.Material.Light.Dialog.Presentation">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
 
-    <style name="Theme.Material.Settings.SearchBar" parent="Theme.Material.DayNight.SearchBar">
+    <style name="Theme.Material.Settings.SearchBar" parent="Theme.Material.Light.SearchBar">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
 
-    <style name="Theme.Material.Settings.CompactMenu" parent="Theme.Material.DayNight.CompactMenu">
+    <style name="Theme.Material.Settings.CompactMenu" parent="Theme.Material.Light.CompactMenu">
         <item name="colorPrimary">@color/material_blue_grey_900</item>
         <item name="colorPrimaryDark">@color/material_blue_grey_950</item>
     </style>
diff --git a/data/sounds/AllAudio.mk b/data/sounds/AllAudio.mk
index a96f288..e049098 100644
--- a/data/sounds/AllAudio.mk
+++ b/data/sounds/AllAudio.mk
@@ -313,7 +313,6 @@ PRODUCT_COPY_FILES += \
 endif
 
 PRODUCT_COPY_FILES += \
-    $(LOCAL_PATH)/alarms/material/ogg/Timer.ogg:system/media/audio/alarms/Timer.ogg \
     $(LOCAL_PATH)/effects/ogg/Dock.ogg:system/media/audio/ui/Dock.ogg \
     $(LOCAL_PATH)/effects/ogg/Effect_Tick_48k.ogg:system/media/audio/ui/Effect_Tick.ogg \
     $(LOCAL_PATH)/effects/ogg/KeypressDelete_120_48k.ogg:system/media/audio/ui/KeypressDelete.ogg \
diff --git a/libs/hwui/Caches.cpp b/libs/hwui/Caches.cpp
index 2763e89..8902534 100644
--- a/libs/hwui/Caches.cpp
+++ b/libs/hwui/Caches.cpp
@@ -87,16 +87,21 @@ void Caches::initFont() {
 }
 
 void Caches::initExtensions() {
+#ifndef MTK_HARDWARE
     if (mExtensions.hasDebugMarker()) {
         eventMark = glInsertEventMarkerEXT;
-
         startMark = glPushGroupMarkerEXT;
         endMark = glPopGroupMarkerEXT;
     } else {
-        eventMark = eventMarkNull;
-        startMark = startMarkNull;
-        endMark = endMarkNull;
+         eventMark = eventMarkNull;
+         startMark = startMarkNull;
+         endMark = endMarkNull;
     }
+#else
+         eventMark = eventMarkNull;
+         startMark = startMarkNull;
+         endMark = endMarkNull;
+#endif
 }
 
 void Caches::initConstraints() {
diff --git a/location/java/android/location/GpsStatus.java b/location/java/android/location/GpsStatus.java
index 323f326..7f7f5c0 100644
--- a/location/java/android/location/GpsStatus.java
+++ b/location/java/android/location/GpsStatus.java
@@ -167,6 +167,41 @@ public final class GpsStatus {
         }
     }
 
+      /**
+     * Used internally within {@link LocationManager} to copy GPS status
+     * data from the Location Manager Service to its cached GpsStatus instance.
+     * Is synchronized to ensure that GPS status updates are atomic.
+     *
+     * This is modified to become aware of explicit GNSS support of &gt;32
+     * satellites.
+     */
+    synchronized void setStatusFromGnss(int gnssSvCount, int[] prns, float[] snrs,
+            float[] elevations, float[] azimuths,
+            boolean[] ephemerisPresences,
+            boolean[] almanacPresences,
+            boolean[] usedInFix) {
+        clearSatellites();
+        for (int i = 0; i < gnssSvCount; i++) {
+            int prn = prns[i] - 1;
+
+            if (prn >= 0 && prn < NUM_SATELLITES) {
+                GpsSatellite satellite = mSatellites.get(prn);
+                if (satellite == null) {
+                    satellite = new GpsSatellite(prn);
+                    mSatellites.put(prn, satellite);
+                }
+
+                satellite.mValid = true;
+                satellite.mSnr = snrs[i];
+                satellite.mElevation = elevations[i];
+                satellite.mAzimuth = azimuths[i];
+                satellite.mHasEphemeris = ephemerisPresences[i];
+                satellite.mHasAlmanac = almanacPresences[i];
+                satellite.mUsedInFix = usedInFix[i];
+            }
+        }
+    }
+
     /**
      * Used by {@link LocationManager#getGpsStatus} to copy LocationManager's
      * cached GpsStatus instance to the client's copy.
diff --git a/location/java/android/location/IGpsStatusListener.aidl b/location/java/android/location/IGpsStatusListener.aidl
index 62b1c6b..52865b7 100644
--- a/location/java/android/location/IGpsStatusListener.aidl
+++ b/location/java/android/location/IGpsStatusListener.aidl
@@ -29,5 +29,10 @@ oneway interface IGpsStatusListener
     void onSvStatusChanged(int svCount, in int[] prns, in float[] snrs, 
             in float[] elevations, in float[] azimuths, 
             int ephemerisMask, int almanacMask, int usedInFixMask);
+    void onGnssSvStatusChanged(int gnssSvCount, in int[] prns, in float[] snrs,
+            in float[] elevations, in float[] azimuths,
+            in boolean[] ephemerisPresences,
+            in boolean[] almanacPresences,
+            in boolean[] usedInFix);
     void onNmeaReceived(long timestamp, String nmea);
 }
diff --git a/location/java/android/location/LocationManager.java b/location/java/android/location/LocationManager.java
index 4544814..3adf08e 100644
--- a/location/java/android/location/LocationManager.java
+++ b/location/java/android/location/LocationManager.java
@@ -1478,6 +1478,31 @@ public class LocationManager {
             }
         }
 
+          @Override
+        public void onGnssSvStatusChanged(int gnssSvCount, int[] prns, float[] snrs,
+                float[] elevations, float[] azimuths,
+                boolean[] ephemerisPresences,
+                boolean[] almanacPresences,
+                boolean[] usedInFix) {
+            if (mListener != null) {
+                mGpsStatus.setStatusFromGnss(
+                        gnssSvCount,
+                        prns,
+                        snrs,
+                        elevations,
+                        azimuths,
+                        ephemerisPresences,
+                        almanacPresences,
+                        usedInFix);
+
+                Message msg = Message.obtain();
+                msg.what = GpsStatus.GPS_EVENT_SATELLITE_STATUS;
+                // remove any SV status messages already in the queue
+                mGpsHandler.removeMessages(GpsStatus.GPS_EVENT_SATELLITE_STATUS);
+                mGpsHandler.sendMessage(msg);
+            }
+        }
+
         @Override
         public void onNmeaReceived(long timestamp, String nmea) {
             if (mNmeaListener != null) {
diff --git a/media/java/android/media/AudioManager.java b/media/java/android/media/AudioManager.java
index bcbb601..fc917f6 100644
--- a/media/java/android/media/AudioManager.java
+++ b/media/java/android/media/AudioManager.java
@@ -138,18 +138,6 @@ public class AudioManager {
     public static final String VOLUME_CHANGED_ACTION = "android.media.VOLUME_CHANGED_ACTION";
 
     /**
-     * @hide Broadcast intent when the number of volume steps changes
-     * Includes the stream and the new max volume index
-     * Notes:
-     *  - for internal platform use only, do not make public,
-     *
-     * @see #EXTRA_VOLUME_STREAM_TYPE
-     * @see #EXTRA_VOLUME_STEPS_MAX_INDEX
-     */
-    @SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
-    public static final String VOLUME_STEPS_CHANGED_ACTION = "android.media.VOLUME_STEPS_CHANGED_ACTION";
-
-    /**
      * @hide Broadcast intent when the devices for a particular stream type changes.
      * Includes the stream, the new devices and previous devices.
      * Notes:
@@ -991,40 +979,6 @@ public class AudioManager {
     }
 
     /**
-     * Sets the maximum volume index for a particular stream.
-     *
-     * @param streamType The stream type whose maximum volume index is set.
-     * @param maxVol The maximum volume to set range 7 - 45.
-     * @return The maximum valid volume index for the stream.
-     * @see #setStreamVolume(int)
-     */
-    public void setStreamMaxVolume(int streamType, int maxVol) {
-        IAudioService service = getService();
-        try {
-//            if (mUseMasterVolume) {
-//                // service.setMasterMaxVolume(maxVol);
-//            } else {
-                double previousMax = new Integer(getStreamMaxVolume(streamType)).doubleValue();
-                double previousVolume = new Integer(getStreamVolume(streamType)).doubleValue();
-                double newMax = new Integer(maxVol).doubleValue();
-                double newVolume = Math.floor((newMax / previousMax) * previousVolume);
-
-                service.setStreamMaxVolume(streamType, maxVol);
-
-                Log.i(TAG, "Volume steps for stream " + String.valueOf(streamType) + " set to " +
-                        String.valueOf(maxVol));
-
-                setStreamVolume(streamType, new Double(newVolume).intValue(), 0);
-
-                Log.i(TAG, "Volume adjusted from " + String.valueOf(previousVolume) + " to " +
-                        String.valueOf(newVolume));
-//            }
-        } catch (RemoteException e) {
-            Log.e(TAG, "Dead object in setStreamMaxVolume", e);
-        }
-    }
-
-    /**
      * Returns the current volume index for a particular stream.
      *
      * @param streamType The stream type whose volume index is returned.
diff --git a/media/java/android/media/CamcorderProfile.java b/media/java/android/media/CamcorderProfile.java
index f41624c..6785670 100644
--- a/media/java/android/media/CamcorderProfile.java
+++ b/media/java/android/media/CamcorderProfile.java
@@ -99,12 +99,6 @@ public class CamcorderProfile
     private static final int QUALITY_LIST_START = QUALITY_LOW;
     private static final int QUALITY_LIST_END = QUALITY_2160P;
 
-    /** @hide
-     * Quality level corresponding to 1440p resolution
-     */
-    public static final int QUALITY_1440P = 20;
-
-
     /**
      * Time lapse quality level corresponding to the lowest available resolution.
      */
@@ -154,12 +148,6 @@ public class CamcorderProfile
     private static final int QUALITY_TIME_LAPSE_LIST_START = QUALITY_TIME_LAPSE_LOW;
     private static final int QUALITY_TIME_LAPSE_LIST_END = QUALITY_TIME_LAPSE_2160P;
 
-    /** @hide
-     * Time lapse quality level corresponding to the 1440p resolution.
-     */
-    public static final int QUALITY_TIME_LAPSE_1440P = 1015;
-
-
     /**
      * High speed ( >= 100fps) quality level corresponding to the lowest available resolution.
      * <p>
diff --git a/media/java/android/media/ExifInterface.java b/media/java/android/media/ExifInterface.java
index 74bb55b..6bf5721 100644
--- a/media/java/android/media/ExifInterface.java
+++ b/media/java/android/media/ExifInterface.java
@@ -16,307 +16,85 @@
 
 package android.media;
 
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.util.Log;
-import android.util.Pair;
-
-import libcore.io.IoUtils;
-import libcore.io.Streams;
-
-import java.io.BufferedInputStream;
-import java.io.ByteArrayInputStream;
-import java.io.DataInputStream;
-import java.io.EOFException;
-import java.io.File;
-import java.io.FileDescriptor;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.FilterOutputStream;
 import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.nio.ByteBuffer;
-import java.nio.ByteOrder;
-import java.nio.charset.Charset;
 import java.text.ParsePosition;
 import java.text.SimpleDateFormat;
-import java.util.Arrays;
 import java.util.Date;
 import java.util.HashMap;
-import java.util.HashSet;
 import java.util.Map;
-import java.util.Set;
 import java.util.TimeZone;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
 
 /**
  * This is a class for reading and writing Exif tags in a JPEG file.
  */
 public class ExifInterface {
-    private static final String TAG = "ExifInterface";
-    private static final boolean DEBUG = false;
-
     // The Exif tag names
-    /** Type is String. @hide */
-    public static final String TAG_ARTIST = "Artist";
-    /** Type is int. @hide */
-    public static final String TAG_BITS_PER_SAMPLE = "BitsPerSample";
-    /** Type is int. @hide */
-    public static final String TAG_COMPRESSION = "Compression";
-    /** Type is String. @hide */
-    public static final String TAG_COPYRIGHT = "Copyright";
+    /** Type is int. */
+    public static final String TAG_ORIENTATION = "Orientation";
     /** Type is String. */
     public static final String TAG_DATETIME = "DateTime";
-    /** Type is String. @hide */
-    public static final String TAG_IMAGE_DESCRIPTION = "ImageDescription";
-    /** Type is int. */
-    public static final String TAG_IMAGE_LENGTH = "ImageLength";
-    /** Type is int. */
-    public static final String TAG_IMAGE_WIDTH = "ImageWidth";
-    /** Type is int. @hide */
-    public static final String TAG_JPEG_INTERCHANGE_FORMAT = "JPEGInterchangeFormat";
-    /** Type is int. @hide */
-    public static final String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH = "JPEGInterchangeFormatLength";
     /** Type is String. */
     public static final String TAG_MAKE = "Make";
     /** Type is String. */
     public static final String TAG_MODEL = "Model";
     /** Type is int. */
-    public static final String TAG_ORIENTATION = "Orientation";
-    /** Type is int. @hide */
-    public static final String TAG_PHOTOMETRIC_INTERPRETATION = "PhotometricInterpretation";
-    /** Type is int. @hide */
-    public static final String TAG_PLANAR_CONFIGURATION = "PlanarConfiguration";
-    /** Type is rational. @hide */
-    public static final String TAG_PRIMARY_CHROMATICITIES = "PrimaryChromaticities";
-    /** Type is rational. @hide */
-    public static final String TAG_REFERENCE_BLACK_WHITE = "ReferenceBlackWhite";
-    /** Type is int. @hide */
-    public static final String TAG_RESOLUTION_UNIT = "ResolutionUnit";
-    /** Type is int. @hide */
-    public static final String TAG_ROWS_PER_STRIP = "RowsPerStrip";
-    /** Type is int. @hide */
-    public static final String TAG_SAMPLES_PER_PIXEL = "SamplesPerPixel";
-    /** Type is String. @hide */
-    public static final String TAG_SOFTWARE = "Software";
-    /** Type is int. @hide */
-    public static final String TAG_STRIP_BYTE_COUNTS = "StripByteCounts";
-    /** Type is int. @hide */
-    public static final String TAG_STRIP_OFFSETS = "StripOffsets";
-    /** Type is int. @hide */
-    public static final String TAG_TRANSFER_FUNCTION = "TransferFunction";
-    /** Type is rational. @hide */
-    public static final String TAG_WHITE_POINT = "WhitePoint";
-    /** Type is rational. @hide */
-    public static final String TAG_X_RESOLUTION = "XResolution";
-    /** Type is rational. @hide */
-    public static final String TAG_Y_CB_CR_COEFFICIENTS = "YCbCrCoefficients";
-    /** Type is int. @hide */
-    public static final String TAG_Y_CB_CR_POSITIONING = "YCbCrPositioning";
-    /** Type is int. @hide */
-    public static final String TAG_Y_CB_CR_SUB_SAMPLING = "YCbCrSubSampling";
-    /** Type is rational. @hide */
-    public static final String TAG_Y_RESOLUTION = "YResolution";
-    /** Type is rational. @hide */
-    public static final String TAG_APERTURE_VALUE = "ApertureValue";
-    /** Type is rational. @hide */
-    public static final String TAG_BRIGHTNESS_VALUE = "BrightnessValue";
-    /** Type is String. @hide */
-    public static final String TAG_CFA_PATTERN = "CFAPattern";
-    /** Type is int. @hide */
-    public static final String TAG_COLOR_SPACE = "ColorSpace";
-    /** Type is String. @hide */
-    public static final String TAG_COMPONENTS_CONFIGURATION = "ComponentsConfiguration";
-    /** Type is rational. @hide */
-    public static final String TAG_COMPRESSED_BITS_PER_PIXEL = "CompressedBitsPerPixel";
-    /** Type is int. @hide */
-    public static final String TAG_CONTRAST = "Contrast";
-    /** Type is int. @hide */
-    public static final String TAG_CUSTOM_RENDERED = "CustomRendered";
+    public static final String TAG_FLASH = "Flash";
+    /** Type is int. */
+    public static final String TAG_IMAGE_WIDTH = "ImageWidth";
+    /** Type is int. */
+    public static final String TAG_IMAGE_LENGTH = "ImageLength";
+    /** String. Format is "num1/denom1,num2/denom2,num3/denom3". */
+    public static final String TAG_GPS_LATITUDE = "GPSLatitude";
+    /** String. Format is "num1/denom1,num2/denom2,num3/denom3". */
+    public static final String TAG_GPS_LONGITUDE = "GPSLongitude";
+    /** Type is String. */
+    public static final String TAG_GPS_LATITUDE_REF = "GPSLatitudeRef";
+    /** Type is String. */
+    public static final String TAG_GPS_LONGITUDE_REF = "GPSLongitudeRef";
     /** Type is String. */
-    public static final String TAG_DATETIME_DIGITIZED = "DateTimeDigitized";
-    /** Type is String. @hide */
-    public static final String TAG_DATETIME_ORIGINAL = "DateTimeOriginal";
-    /** Type is String. @hide */
-    public static final String TAG_DEVICE_SETTING_DESCRIPTION = "DeviceSettingDescription";
-    /** Type is double. @hide */
-    public static final String TAG_DIGITAL_ZOOM_RATIO = "DigitalZoomRatio";
-    /** Type is String. @hide */
-    public static final String TAG_EXIF_VERSION = "ExifVersion";
-    /** Type is double. @hide */
-    public static final String TAG_EXPOSURE_BIAS_VALUE = "ExposureBiasValue";
-    /** Type is rational. @hide */
-    public static final String TAG_EXPOSURE_INDEX = "ExposureIndex";
-    /** Type is int. @hide */
-    public static final String TAG_EXPOSURE_MODE = "ExposureMode";
-    /** Type is int. @hide */
-    public static final String TAG_EXPOSURE_PROGRAM = "ExposureProgram";
-    /** Type is double. */
     public static final String TAG_EXPOSURE_TIME = "ExposureTime";
-    /** Type is double. */
+    /** Type is String. */
     public static final String TAG_APERTURE = "FNumber";
-    /** Type is String. @hide */
-    public static final String TAG_FILE_SOURCE = "FileSource";
-    /** Type is int. */
-    public static final String TAG_FLASH = "Flash";
-    /** Type is rational. @hide */
-    public static final String TAG_FLASH_ENERGY = "FlashEnergy";
-    /** Type is String. @hide */
-    public static final String TAG_FLASHPIX_VERSION = "FlashpixVersion";
-    /** Type is rational. */
-    public static final String TAG_FOCAL_LENGTH = "FocalLength";
-    /** Type is int. @hide */
-    public static final String TAG_FOCAL_LENGTH_IN_35MM_FILM = "FocalLengthIn35mmFilm";
-    /** Type is int. @hide */
-    public static final String TAG_FOCAL_PLANE_RESOLUTION_UNIT = "FocalPlaneResolutionUnit";
-    /** Type is rational. @hide */
-    public static final String TAG_FOCAL_PLANE_X_RESOLUTION = "FocalPlaneXResolution";
-    /** Type is rational. @hide */
-    public static final String TAG_FOCAL_PLANE_Y_RESOLUTION = "FocalPlaneYResolution";
-    /** Type is int. @hide */
-    public static final String TAG_GAIN_CONTROL = "GainControl";
-    /** Type is int. */
+    /** Type is String. */
     public static final String TAG_ISO = "ISOSpeedRatings";
-    /** Type is String. @hide */
-    public static final String TAG_IMAGE_UNIQUE_ID = "ImageUniqueID";
-    /** Type is int. @hide */
-    public static final String TAG_LIGHT_SOURCE = "LightSource";
-    /** Type is String. @hide */
-    public static final String TAG_MAKER_NOTE = "MakerNote";
-    /** Type is rational. @hide */
-    public static final String TAG_MAX_APERTURE_VALUE = "MaxApertureValue";
-    /** Type is int. @hide */
-    public static final String TAG_METERING_MODE = "MeteringMode";
-    /** Type is String. @hide */
-    public static final String TAG_OECF = "OECF";
-    /** Type is int. @hide */
-    public static final String TAG_PIXEL_X_DIMENSION = "PixelXDimension";
-    /** Type is int. @hide */
-    public static final String TAG_PIXEL_Y_DIMENSION = "PixelYDimension";
-    /** Type is String. @hide */
-    public static final String TAG_RELATED_SOUND_FILE = "RelatedSoundFile";
-    /** Type is int. @hide */
-    public static final String TAG_SATURATION = "Saturation";
-    /** Type is int. @hide */
-    public static final String TAG_SCENE_CAPTURE_TYPE = "SceneCaptureType";
-    /** Type is String. @hide */
-    public static final String TAG_SCENE_TYPE = "SceneType";
-    /** Type is int. @hide */
-    public static final String TAG_SENSING_METHOD = "SensingMethod";
-    /** Type is int. @hide */
-    public static final String TAG_SHARPNESS = "Sharpness";
-    /** Type is rational. @hide */
-    public static final String TAG_SHUTTER_SPEED_VALUE = "ShutterSpeedValue";
-    /** Type is String. @hide */
-    public static final String TAG_SPATIAL_FREQUENCY_RESPONSE = "SpatialFrequencyResponse";
-    /** Type is String. @hide */
-    public static final String TAG_SPECTRAL_SENSITIVITY = "SpectralSensitivity";
     /** Type is String. */
+    public static final String TAG_DATETIME_DIGITIZED = "DateTimeDigitized";
+    /** Type is int. */
     public static final String TAG_SUBSEC_TIME = "SubSecTime";
-    /** Type is String. */
-    public static final String TAG_SUBSEC_TIME_DIG = "SubSecTimeDigitized";
-    /** Type is String. */
+    /** Type is int. */
     public static final String TAG_SUBSEC_TIME_ORIG = "SubSecTimeOriginal";
-    /** Type is int. @hide */
-    public static final String TAG_SUBJECT_AREA = "SubjectArea";
-    /** Type is double. @hide */
-    public static final String TAG_SUBJECT_DISTANCE = "SubjectDistance";
-    /** Type is int. @hide */
-    public static final String TAG_SUBJECT_DISTANCE_RANGE = "SubjectDistanceRange";
-    /** Type is int. @hide */
-    public static final String TAG_SUBJECT_LOCATION = "SubjectLocation";
-    /** Type is String. @hide */
-    public static final String TAG_USER_COMMENT = "UserComment";
     /** Type is int. */
-    public static final String TAG_WHITE_BALANCE = "WhiteBalance";
+    public static final String TAG_SUBSEC_TIME_DIG = "SubSecTimeDigitized";
+
+
+
+    /**
+     * @hide
+     */
+    public static final String TAG_SUBSECTIME = "SubSecTime";
+
     /**
      * The altitude (in meters) based on the reference in TAG_GPS_ALTITUDE_REF.
      * Type is rational.
      */
     public static final String TAG_GPS_ALTITUDE = "GPSAltitude";
+
     /**
      * 0 if the altitude is above sea level. 1 if the altitude is below sea
      * level. Type is int.
      */
     public static final String TAG_GPS_ALTITUDE_REF = "GPSAltitudeRef";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_AREA_INFORMATION = "GPSAreaInformation";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_DOP = "GPSDOP";
-    /** Type is String. */
-    public static final String TAG_GPS_DATESTAMP = "GPSDateStamp";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_DEST_BEARING = "GPSDestBearing";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_DEST_BEARING_REF = "GPSDestBearingRef";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_DEST_DISTANCE = "GPSDestDistance";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_DEST_DISTANCE_REF = "GPSDestDistanceRef";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_DEST_LATITUDE = "GPSDestLatitude";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_DEST_LATITUDE_REF = "GPSDestLatitudeRef";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_DEST_LONGITUDE = "GPSDestLongitude";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_DEST_LONGITUDE_REF = "GPSDestLongitudeRef";
-    /** Type is int. @hide */
-    public static final String TAG_GPS_DIFFERENTIAL = "GPSDifferential";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_IMG_DIRECTION = "GPSImgDirection";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_IMG_DIRECTION_REF = "GPSImgDirectionRef";
-    /** Type is rational. Format is "num1/denom1,num2/denom2,num3/denom3". */
-    public static final String TAG_GPS_LATITUDE = "GPSLatitude";
+
     /** Type is String. */
-    public static final String TAG_GPS_LATITUDE_REF = "GPSLatitudeRef";
-    /** Type is rational. Format is "num1/denom1,num2/denom2,num3/denom3". */
-    public static final String TAG_GPS_LONGITUDE = "GPSLongitude";
+    public static final String TAG_GPS_TIMESTAMP = "GPSTimeStamp";
     /** Type is String. */
-    public static final String TAG_GPS_LONGITUDE_REF = "GPSLongitudeRef";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_MAP_DATUM = "GPSMapDatum";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_MEASURE_MODE = "GPSMeasureMode";
+    public static final String TAG_GPS_DATESTAMP = "GPSDateStamp";
+    /** Type is int. */
+    public static final String TAG_WHITE_BALANCE = "WhiteBalance";
+    /** Type is rational. */
+    public static final String TAG_FOCAL_LENGTH = "FocalLength";
     /** Type is String. Name of GPS processing method used for location finding. */
     public static final String TAG_GPS_PROCESSING_METHOD = "GPSProcessingMethod";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_SATELLITES = "GPSSatellites";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_SPEED = "GPSSpeed";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_SPEED_REF = "GPSSpeedRef";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_STATUS = "GPSStatus";
-    /** Type is String. Format is "hh:mm:ss". */
-    public static final String TAG_GPS_TIMESTAMP = "GPSTimeStamp";
-    /** Type is rational. @hide */
-    public static final String TAG_GPS_TRACK = "GPSTrack";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_TRACK_REF = "GPSTrackRef";
-    /** Type is String. @hide */
-    public static final String TAG_GPS_VERSION_ID = "GPSVersionID";
-    /** Type is String. @hide */
-    public static final String TAG_INTEROPERABILITY_INDEX = "InteroperabilityIndex";
-    /** Type is int. @hide */
-    public static final String TAG_THUMBNAIL_IMAGE_LENGTH = "ThumbnailImageLength";
-    /** Type is int. @hide */
-    public static final String TAG_THUMBNAIL_IMAGE_WIDTH = "ThumbnailImageWidth";
-
-    // Private tags used for pointing the other IFD offset. The types of the following tags are int.
-    private static final String TAG_EXIF_IFD_POINTER = "ExifIFDPointer";
-    private static final String TAG_GPS_INFO_IFD_POINTER = "GPSInfoIFDPointer";
-    private static final String TAG_INTEROPERABILITY_IFD_POINTER = "InteroperabilityIFDPointer";
-
-    // Private tags used for thumbnail information.
-    private static final String TAG_HAS_THUMBNAIL = "HasThumbnail";
-    private static final String TAG_THUMBNAIL_OFFSET = "ThumbnailOffset";
-    private static final String TAG_THUMBNAIL_LENGTH = "ThumbnailLength";
-    private static final String TAG_THUMBNAIL_DATA = "ThumbnailData";
 
     // Constants used for the Orientation Exif tag.
     public static final int ORIENTATION_UNDEFINED = 0;
@@ -324,730 +102,34 @@ public class ExifInterface {
     public static final int ORIENTATION_FLIP_HORIZONTAL = 2;  // left right reversed mirror
     public static final int ORIENTATION_ROTATE_180 = 3;
     public static final int ORIENTATION_FLIP_VERTICAL = 4;  // upside down mirror
-    // flipped about top-left <--> bottom-right axis
-    public static final int ORIENTATION_TRANSPOSE = 5;
+    public static final int ORIENTATION_TRANSPOSE = 5;  // flipped about top-left <--> bottom-right axis
     public static final int ORIENTATION_ROTATE_90 = 6;  // rotate 90 cw to right it
-    // flipped about top-right <--> bottom-left axis
-    public static final int ORIENTATION_TRANSVERSE = 7;
+    public static final int ORIENTATION_TRANSVERSE = 7;  // flipped about top-right <--> bottom-left axis
     public static final int ORIENTATION_ROTATE_270 = 8;  // rotate 270 to right it
 
     // Constants used for white balance
     public static final int WHITEBALANCE_AUTO = 0;
     public static final int WHITEBALANCE_MANUAL = 1;
-
     private static SimpleDateFormat sFormatter;
 
-    // See Exchangeable image file format for digital still cameras: Exif version 2.2.
-    // The following values are for parsing EXIF data area. There are tag groups in EXIF data area.
-    // They are called "Image File Directory". They have multiple data formats to cover various
-    // image metadata from GPS longitude to camera model name.
-
-    // Types of Exif byte alignments (see JEITA CP-3451 page 10)
-    private static final short BYTE_ALIGN_II = 0x4949;  // II: Intel order
-    private static final short BYTE_ALIGN_MM = 0x4d4d;  // MM: Motorola order
-
-    // Formats for the value in IFD entry (See TIFF 6.0 spec Types page 15).
-    private static final int IFD_FORMAT_BYTE = 1;
-    private static final int IFD_FORMAT_STRING = 2;
-    private static final int IFD_FORMAT_USHORT = 3;
-    private static final int IFD_FORMAT_ULONG = 4;
-    private static final int IFD_FORMAT_URATIONAL = 5;
-    private static final int IFD_FORMAT_SBYTE = 6;
-    private static final int IFD_FORMAT_UNDEFINED = 7;
-    private static final int IFD_FORMAT_SSHORT = 8;
-    private static final int IFD_FORMAT_SLONG = 9;
-    private static final int IFD_FORMAT_SRATIONAL = 10;
-    private static final int IFD_FORMAT_SINGLE = 11;
-    private static final int IFD_FORMAT_DOUBLE = 12;
-    // Names for the data formats for debugging purpose.
-    private static final String[] IFD_FORMAT_NAMES = new String[] {
-            "", "BYTE", "STRING", "USHORT", "ULONG", "URATIONAL", "SBYTE", "UNDEFINED", "SSHORT",
-            "SLONG", "SRATIONAL", "SINGLE", "DOUBLE"
-    };
-    // Sizes of the components of each IFD value format
-    private static final int[] IFD_FORMAT_BYTES_PER_FORMAT = new int[] {
-            0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8
-    };
-    private static final byte[] EXIF_ASCII_PREFIX = new byte[] {
-            0x41, 0x53, 0x43, 0x49, 0x49, 0x0, 0x0, 0x0
-    };
-
-    // A class for indicating EXIF rational type.
-    private static class Rational {
-        public final long numerator;
-        public final long denominator;
-
-        private Rational(long numerator, long denominator) {
-            // Handle erroneous case
-            if (denominator == 0) {
-                this.numerator = 0;
-                this.denominator = 1;
-                return;
-            }
-            this.numerator = numerator;
-            this.denominator = denominator;
-        }
-
-        @Override
-        public String toString() {
-            return numerator + "/" + denominator;
-        }
-
-        public double calculate() {
-            return (double) numerator / denominator;
-        }
-    }
-
-    // A class for indicating EXIF attribute.
-    private static class ExifAttribute {
-        public final int format;
-        public final int numberOfComponents;
-        public final byte[] bytes;
-
-        private ExifAttribute(int format, int numberOfComponents, byte[] bytes) {
-            this.format = format;
-            this.numberOfComponents = numberOfComponents;
-            this.bytes = bytes;
-        }
-
-        public static ExifAttribute createUShort(int[] values, ByteOrder byteOrder) {
-            final ByteBuffer buffer = ByteBuffer.wrap(
-                    new byte[IFD_FORMAT_BYTES_PER_FORMAT[IFD_FORMAT_USHORT] * values.length]);
-            buffer.order(byteOrder);
-            for (int value : values) {
-                buffer.putShort((short) value);
-            }
-            return new ExifAttribute(IFD_FORMAT_USHORT, values.length, buffer.array());
-        }
-
-        public static ExifAttribute createUShort(int value, ByteOrder byteOrder) {
-            return createUShort(new int[] {value}, byteOrder);
-        }
-
-        public static ExifAttribute createULong(long[] values, ByteOrder byteOrder) {
-            final ByteBuffer buffer = ByteBuffer.wrap(
-                    new byte[IFD_FORMAT_BYTES_PER_FORMAT[IFD_FORMAT_ULONG] * values.length]);
-            buffer.order(byteOrder);
-            for (long value : values) {
-                buffer.putInt((int) value);
-            }
-            return new ExifAttribute(IFD_FORMAT_ULONG, values.length, buffer.array());
-        }
-
-        public static ExifAttribute createULong(long value, ByteOrder byteOrder) {
-            return createULong(new long[] {value}, byteOrder);
-        }
-
-        public static ExifAttribute createSLong(int[] values, ByteOrder byteOrder) {
-            final ByteBuffer buffer = ByteBuffer.wrap(
-                    new byte[IFD_FORMAT_BYTES_PER_FORMAT[IFD_FORMAT_SLONG] * values.length]);
-            buffer.order(byteOrder);
-            for (int value : values) {
-                buffer.putInt(value);
-            }
-            return new ExifAttribute(IFD_FORMAT_SLONG, values.length, buffer.array());
-        }
-
-        public static ExifAttribute createSLong(int value, ByteOrder byteOrder) {
-            return createSLong(new int[] {value}, byteOrder);
-        }
-
-        public static ExifAttribute createByte(String value) {
-            // Exception for GPSAltitudeRef tag
-            if (value.length() == 1 && value.charAt(0) >= '0' && value.charAt(0) <= '1') {
-                final byte[] bytes = new byte[] { (byte) (value.charAt(0) - '0') };
-                return new ExifAttribute(IFD_FORMAT_BYTE, bytes.length, bytes);
-            }
-            final byte[] ascii = value.getBytes(ASCII);
-            return new ExifAttribute(IFD_FORMAT_BYTE, ascii.length, ascii);
-        }
-
-        public static ExifAttribute createString(String value) {
-            final byte[] ascii = (value + '\0').getBytes(ASCII);
-            return new ExifAttribute(IFD_FORMAT_STRING, ascii.length, ascii);
-        }
-
-        public static ExifAttribute createURational(Rational[] values, ByteOrder byteOrder) {
-            final ByteBuffer buffer = ByteBuffer.wrap(
-                    new byte[IFD_FORMAT_BYTES_PER_FORMAT[IFD_FORMAT_URATIONAL] * values.length]);
-            buffer.order(byteOrder);
-            for (Rational value : values) {
-                buffer.putInt((int) value.numerator);
-                buffer.putInt((int) value.denominator);
-            }
-            return new ExifAttribute(IFD_FORMAT_URATIONAL, values.length, buffer.array());
-        }
-
-        public static ExifAttribute createURational(Rational value, ByteOrder byteOrder) {
-            return createURational(new Rational[] {value}, byteOrder);
-        }
-
-        public static ExifAttribute createSRational(Rational[] values, ByteOrder byteOrder) {
-            final ByteBuffer buffer = ByteBuffer.wrap(
-                    new byte[IFD_FORMAT_BYTES_PER_FORMAT[IFD_FORMAT_SRATIONAL] * values.length]);
-            buffer.order(byteOrder);
-            for (Rational value : values) {
-                buffer.putInt((int) value.numerator);
-                buffer.putInt((int) value.denominator);
-            }
-            return new ExifAttribute(IFD_FORMAT_SRATIONAL, values.length, buffer.array());
-        }
-
-        public static ExifAttribute createSRational(Rational value, ByteOrder byteOrder) {
-            return createSRational(new Rational[] {value}, byteOrder);
-        }
-
-        public static ExifAttribute createDouble(double[] values, ByteOrder byteOrder) {
-            final ByteBuffer buffer = ByteBuffer.wrap(
-                    new byte[IFD_FORMAT_BYTES_PER_FORMAT[IFD_FORMAT_DOUBLE] * values.length]);
-            buffer.order(byteOrder);
-            for (double value : values) {
-                buffer.putDouble(value);
-            }
-            return new ExifAttribute(IFD_FORMAT_DOUBLE, values.length, buffer.array());
-        }
-
-        public static ExifAttribute createDouble(double value, ByteOrder byteOrder) {
-            return createDouble(new double[] {value}, byteOrder);
-        }
-
-        @Override
-        public String toString() {
-            return "(" + IFD_FORMAT_NAMES[format] + ", data length:" + bytes.length + ")";
-        }
-
-        private Object getValue(ByteOrder byteOrder) {
-            try {
-                ByteOrderAwarenessDataInputStream inputStream =
-                        new ByteOrderAwarenessDataInputStream(bytes);
-                inputStream.setByteOrder(byteOrder);
-                switch (format) {
-                    case IFD_FORMAT_BYTE:
-                    case IFD_FORMAT_SBYTE: {
-                        // Exception for GPSAltitudeRef tag
-                        if (bytes.length == 1 && bytes[0] >= 0 && bytes[0] <= 1) {
-                            return new String(new char[] { (char) (bytes[0] + '0') });
-                        }
-                        return new String(bytes, ASCII);
-                    }
-                    case IFD_FORMAT_UNDEFINED:
-                    case IFD_FORMAT_STRING: {
-                        int index = 0;
-                        if (numberOfComponents >= EXIF_ASCII_PREFIX.length) {
-                            boolean same = true;
-                            for (int i = 0; i < EXIF_ASCII_PREFIX.length; ++i) {
-                                if (bytes[i] != EXIF_ASCII_PREFIX[i]) {
-                                    same = false;
-                                    break;
-                                }
-                            }
-                            if (same) {
-                                index = EXIF_ASCII_PREFIX.length;
-                            }
-                        }
-
-                        StringBuilder stringBuilder = new StringBuilder();
-                        while (index < numberOfComponents) {
-                            int ch = bytes[index];
-                            if (ch == 0) {
-                                break;
-                            }
-                            if (ch >= 32) {
-                                stringBuilder.append((char) ch);
-                            } else {
-                                stringBuilder.append('?');
-                            }
-                            ++index;
-                        }
-                        return stringBuilder.toString();
-                    }
-                    case IFD_FORMAT_USHORT: {
-                        final int[] values = new int[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            values[i] = inputStream.readUnsignedShort();
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_ULONG: {
-                        final long[] values = new long[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            values[i] = inputStream.readUnsignedInt();
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_URATIONAL: {
-                        final Rational[] values = new Rational[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            final long numerator = inputStream.readUnsignedInt();
-                            final long denominator = inputStream.readUnsignedInt();
-                            values[i] = new Rational(numerator, denominator);
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_SSHORT: {
-                        final int[] values = new int[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            values[i] = inputStream.readShort();
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_SLONG: {
-                        final int[] values = new int[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            values[i] = inputStream.readInt();
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_SRATIONAL: {
-                        final Rational[] values = new Rational[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            final long numerator = inputStream.readInt();
-                            final long denominator = inputStream.readInt();
-                            values[i] = new Rational(numerator, denominator);
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_SINGLE: {
-                        final double[] values = new double[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            values[i] = inputStream.readFloat();
-                        }
-                        return values;
-                    }
-                    case IFD_FORMAT_DOUBLE: {
-                        final double[] values = new double[numberOfComponents];
-                        for (int i = 0; i < numberOfComponents; ++i) {
-                            values[i] = inputStream.readDouble();
-                        }
-                        return values;
-                    }
-                    default:
-                        return null;
-                }
-            } catch (IOException e) {
-                Log.w(TAG, "IOException occurred during reading a value", e);
-                return null;
-            }
-        }
-
-        public double getDoubleValue(ByteOrder byteOrder) {
-            Object value = getValue(byteOrder);
-            if (value == null) {
-                throw new NumberFormatException("NULL can't be converted to a double value");
-            }
-            if (value instanceof String) {
-                return Double.parseDouble((String) value);
-            }
-            if (value instanceof long[]) {
-                long[] array = (long[]) value;
-                if (array.length == 1) {
-                    return array[0];
-                }
-                throw new NumberFormatException("There are more than one component");
-            }
-            if (value instanceof int[]) {
-                int[] array = (int[]) value;
-                if (array.length == 1) {
-                    return array[0];
-                }
-                throw new NumberFormatException("There are more than one component");
-            }
-            if (value instanceof double[]) {
-                double[] array = (double[]) value;
-                if (array.length == 1) {
-                    return array[0];
-                }
-                throw new NumberFormatException("There are more than one component");
-            }
-            if (value instanceof Rational[]) {
-                Rational[] array = (Rational[]) value;
-                if (array.length == 1) {
-                    return array[0].calculate();
-                }
-                throw new NumberFormatException("There are more than one component");
-            }
-            throw new NumberFormatException("Couldn't find a double value");
-        }
-
-        public int getIntValue(ByteOrder byteOrder) {
-            Object value = getValue(byteOrder);
-            if (value == null) {
-                throw new NumberFormatException("NULL can't be converted to a integer value");
-            }
-            if (value instanceof String) {
-                return Integer.parseInt((String) value);
-            }
-            if (value instanceof long[]) {
-                long[] array = (long[]) value;
-                if (array.length == 1) {
-                    return (int) array[0];
-                }
-                throw new NumberFormatException("There are more than one component");
-            }
-            if (value instanceof int[]) {
-                int[] array = (int[]) value;
-                if (array.length == 1) {
-                    return array[0];
-                }
-                throw new NumberFormatException("There are more than one component");
-            }
-            throw new NumberFormatException("Couldn't find a integer value");
-        }
-
-        public String getStringValue(ByteOrder byteOrder) {
-            Object value = getValue(byteOrder);
-            if (value == null) {
-                return null;
-            }
-            if (value instanceof String) {
-                return (String) value;
-            }
-
-            final StringBuilder stringBuilder = new StringBuilder();
-            if (value instanceof long[]) {
-                long[] array = (long[]) value;
-                for (int i = 0; i < array.length; ++i) {
-                    stringBuilder.append(array[i]);
-                    if (i + 1 != array.length) {
-                        stringBuilder.append(",");
-                    }
-                }
-                return stringBuilder.toString();
-            }
-            if (value instanceof int[]) {
-                int[] array = (int[]) value;
-                for (int i = 0; i < array.length; ++i) {
-                    stringBuilder.append(array[i]);
-                    if (i + 1 != array.length) {
-                        stringBuilder.append(",");
-                    }
-                }
-                return stringBuilder.toString();
-            }
-            if (value instanceof double[]) {
-                double[] array = (double[]) value;
-                for (int i = 0; i < array.length; ++i) {
-                    stringBuilder.append(array[i]);
-                    if (i + 1 != array.length) {
-                        stringBuilder.append(",");
-                    }
-                }
-                return stringBuilder.toString();
-            }
-            if (value instanceof Rational[]) {
-                Rational[] array = (Rational[]) value;
-                for (int i = 0; i < array.length; ++i) {
-                    stringBuilder.append(array[i].numerator);
-                    stringBuilder.append('/');
-                    stringBuilder.append(array[i].denominator);
-                    if (i + 1 != array.length) {
-                        stringBuilder.append(",");
-                    }
-                }
-                return stringBuilder.toString();
-            }
-            return null;
-        }
-
-        public int size() {
-            return IFD_FORMAT_BYTES_PER_FORMAT[format] * numberOfComponents;
-        }
-    }
-
-    // A class for indicating EXIF tag.
-    private static class ExifTag {
-        public final int number;
-        public final String name;
-        public final int primaryFormat;
-        public final int secondaryFormat;
-
-        private ExifTag(String name, int number, int format) {
-            this.name = name;
-            this.number = number;
-            this.primaryFormat = format;
-            this.secondaryFormat = -1;
-        }
-
-        private ExifTag(String name, int number, int primaryFormat, int secondaryFormat) {
-            this.name = name;
-            this.number = number;
-            this.primaryFormat = primaryFormat;
-            this.secondaryFormat = secondaryFormat;
-        }
-    }
-
-    // Primary image IFD TIFF tags (See JEITA CP-3451 Table 14. page 54).
-    private static final ExifTag[] IFD_TIFF_TAGS = new ExifTag[] {
-            new ExifTag(TAG_IMAGE_WIDTH, 256, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_IMAGE_LENGTH, 257, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_BITS_PER_SAMPLE, 258, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_COMPRESSION, 259, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_PHOTOMETRIC_INTERPRETATION, 262, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_IMAGE_DESCRIPTION, 270, IFD_FORMAT_STRING),
-            new ExifTag(TAG_MAKE, 271, IFD_FORMAT_STRING),
-            new ExifTag(TAG_MODEL, 272, IFD_FORMAT_STRING),
-            new ExifTag(TAG_STRIP_OFFSETS, 273, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_ORIENTATION, 274, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SAMPLES_PER_PIXEL, 277, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_ROWS_PER_STRIP, 278, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_STRIP_BYTE_COUNTS, 279, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_X_RESOLUTION, 282, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_Y_RESOLUTION, 283, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_PLANAR_CONFIGURATION, 284, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_RESOLUTION_UNIT, 296, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_TRANSFER_FUNCTION, 301, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SOFTWARE, 305, IFD_FORMAT_STRING),
-            new ExifTag(TAG_DATETIME, 306, IFD_FORMAT_STRING),
-            new ExifTag(TAG_ARTIST, 315, IFD_FORMAT_STRING),
-            new ExifTag(TAG_WHITE_POINT, 318, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_PRIMARY_CHROMATICITIES, 319, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_JPEG_INTERCHANGE_FORMAT, 513, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_JPEG_INTERCHANGE_FORMAT_LENGTH, 514, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_Y_CB_CR_COEFFICIENTS, 529, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_Y_CB_CR_SUB_SAMPLING, 530, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_Y_CB_CR_POSITIONING, 531, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_REFERENCE_BLACK_WHITE, 532, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_COPYRIGHT, 33432, IFD_FORMAT_STRING),
-            new ExifTag(TAG_EXIF_IFD_POINTER, 34665, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_GPS_INFO_IFD_POINTER, 34853, IFD_FORMAT_ULONG),
-    };
-
-    // Primary image IFD Exif Private tags (See JEITA CP-3451 Table 15. page 55).
-    private static final ExifTag[] IFD_EXIF_TAGS = new ExifTag[] {
-            new ExifTag(TAG_EXPOSURE_TIME, 33434, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_APERTURE, 33437, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_EXPOSURE_PROGRAM, 34850, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SPECTRAL_SENSITIVITY, 34852, IFD_FORMAT_STRING),
-            new ExifTag(TAG_ISO, 34855, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_OECF, 34856, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_EXIF_VERSION, 36864, IFD_FORMAT_STRING),
-            new ExifTag(TAG_DATETIME_ORIGINAL, 36867, IFD_FORMAT_STRING),
-            new ExifTag(TAG_DATETIME_DIGITIZED, 36868, IFD_FORMAT_STRING),
-            new ExifTag(TAG_COMPONENTS_CONFIGURATION, 37121, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_COMPRESSED_BITS_PER_PIXEL, 37122, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_SHUTTER_SPEED_VALUE, 37377, IFD_FORMAT_SRATIONAL),
-            new ExifTag(TAG_APERTURE_VALUE, 37378, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_BRIGHTNESS_VALUE, 37379, IFD_FORMAT_SRATIONAL),
-            new ExifTag(TAG_EXPOSURE_BIAS_VALUE, 37380, IFD_FORMAT_SRATIONAL),
-            new ExifTag(TAG_MAX_APERTURE_VALUE, 37381, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_SUBJECT_DISTANCE, 37382, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_METERING_MODE, 37383, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_LIGHT_SOURCE, 37384, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_FLASH, 37385, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_FOCAL_LENGTH, 37386, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_SUBJECT_AREA, 37396, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_MAKER_NOTE, 37500, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_USER_COMMENT, 37510, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_SUBSEC_TIME, 37520, IFD_FORMAT_STRING),
-            new ExifTag(TAG_SUBSEC_TIME_ORIG, 37521, IFD_FORMAT_STRING),
-            new ExifTag(TAG_SUBSEC_TIME_DIG, 37522, IFD_FORMAT_STRING),
-            new ExifTag(TAG_FLASHPIX_VERSION, 40960, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_COLOR_SPACE, 40961, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_PIXEL_X_DIMENSION, 40962, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_PIXEL_Y_DIMENSION, 40963, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_RELATED_SOUND_FILE, 40964, IFD_FORMAT_STRING),
-            new ExifTag(TAG_INTEROPERABILITY_IFD_POINTER, 40965, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_FLASH_ENERGY, 41483, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_SPATIAL_FREQUENCY_RESPONSE, 41484, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_FOCAL_PLANE_X_RESOLUTION, 41486, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_FOCAL_PLANE_Y_RESOLUTION, 41487, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_FOCAL_PLANE_RESOLUTION_UNIT, 41488, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SUBJECT_LOCATION, 41492, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_EXPOSURE_INDEX, 41493, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_SENSING_METHOD, 41495, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_FILE_SOURCE, 41728, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_SCENE_TYPE, 41729, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_CFA_PATTERN, 41730, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_CUSTOM_RENDERED, 41985, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_EXPOSURE_MODE, 41986, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_WHITE_BALANCE, 41987, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_DIGITAL_ZOOM_RATIO, 41988, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_FOCAL_LENGTH_IN_35MM_FILM, 41989, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SCENE_CAPTURE_TYPE, 41990, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_GAIN_CONTROL, 41991, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_CONTRAST, 41992, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SATURATION, 41993, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SHARPNESS, 41994, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_DEVICE_SETTING_DESCRIPTION, 41995, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_SUBJECT_DISTANCE_RANGE, 41996, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_IMAGE_UNIQUE_ID, 42016, IFD_FORMAT_STRING),
-    };
-
-    // Primary image IFD GPS Info tags (See JEITA CP-3451 Table 16. page 56).
-    private static final ExifTag[] IFD_GPS_TAGS = new ExifTag[] {
-            new ExifTag(TAG_GPS_VERSION_ID, 0, IFD_FORMAT_BYTE),
-            new ExifTag(TAG_GPS_LATITUDE_REF, 1, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_LATITUDE, 2, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_LONGITUDE_REF, 3, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_LONGITUDE, 4, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_ALTITUDE_REF, 5, IFD_FORMAT_BYTE),
-            new ExifTag(TAG_GPS_ALTITUDE, 6, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_TIMESTAMP, 7, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_SATELLITES, 8, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_STATUS, 9, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_MEASURE_MODE, 10, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DOP, 11, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_SPEED_REF, 12, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_SPEED, 13, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_TRACK_REF, 14, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_TRACK, 15, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_IMG_DIRECTION_REF, 16, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_IMG_DIRECTION, 17, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_MAP_DATUM, 18, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DEST_LATITUDE_REF, 19, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DEST_LATITUDE, 20, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_DEST_LONGITUDE_REF, 21, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DEST_LONGITUDE, 22, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_DEST_BEARING_REF, 23, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DEST_BEARING, 24, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_DEST_DISTANCE_REF, 25, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DEST_DISTANCE, 26, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_GPS_PROCESSING_METHOD, 27, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_GPS_AREA_INFORMATION, 28, IFD_FORMAT_UNDEFINED),
-            new ExifTag(TAG_GPS_DATESTAMP, 29, IFD_FORMAT_STRING),
-            new ExifTag(TAG_GPS_DIFFERENTIAL, 30, IFD_FORMAT_USHORT),
-    };
-    // Primary image IFD Interoperability tag (See JEITA CP-3451 Table 17. page 56).
-    private static final ExifTag[] IFD_INTEROPERABILITY_TAGS = new ExifTag[] {
-            new ExifTag(TAG_INTEROPERABILITY_INDEX, 1, IFD_FORMAT_STRING),
-    };
-    // IFD Thumbnail tags (See JEITA CP-3451 Table 18. page 57).
-    private static final ExifTag[] IFD_THUMBNAIL_TAGS = new ExifTag[] {
-            new ExifTag(TAG_THUMBNAIL_IMAGE_WIDTH, 256, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_THUMBNAIL_IMAGE_LENGTH, 257, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_BITS_PER_SAMPLE, 258, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_COMPRESSION, 259, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_PHOTOMETRIC_INTERPRETATION, 262, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_IMAGE_DESCRIPTION, 270, IFD_FORMAT_STRING),
-            new ExifTag(TAG_MAKE, 271, IFD_FORMAT_STRING),
-            new ExifTag(TAG_MODEL, 272, IFD_FORMAT_STRING),
-            new ExifTag(TAG_STRIP_OFFSETS, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_ORIENTATION, 274, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SAMPLES_PER_PIXEL, 277, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_ROWS_PER_STRIP, 278, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_STRIP_BYTE_COUNTS, 279, IFD_FORMAT_USHORT, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_X_RESOLUTION, 282, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_Y_RESOLUTION, 283, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_PLANAR_CONFIGURATION, 284, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_RESOLUTION_UNIT, 296, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_TRANSFER_FUNCTION, 301, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_SOFTWARE, 305, IFD_FORMAT_STRING),
-            new ExifTag(TAG_DATETIME, 306, IFD_FORMAT_STRING),
-            new ExifTag(TAG_ARTIST, 315, IFD_FORMAT_STRING),
-            new ExifTag(TAG_WHITE_POINT, 318, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_PRIMARY_CHROMATICITIES, 319, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_JPEG_INTERCHANGE_FORMAT, 513, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_JPEG_INTERCHANGE_FORMAT_LENGTH, 514, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_Y_CB_CR_COEFFICIENTS, 529, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_Y_CB_CR_SUB_SAMPLING, 530, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_Y_CB_CR_POSITIONING, 531, IFD_FORMAT_USHORT),
-            new ExifTag(TAG_REFERENCE_BLACK_WHITE, 532, IFD_FORMAT_URATIONAL),
-            new ExifTag(TAG_COPYRIGHT, 33432, IFD_FORMAT_STRING),
-            new ExifTag(TAG_EXIF_IFD_POINTER, 34665, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_GPS_INFO_IFD_POINTER, 34853, IFD_FORMAT_ULONG),
-    };
-
-    // See JEITA CP-3451 Figure 5. page 9.
-    // The following values are used for indicating pointers to the other Image File Directorys.
-
-    // Indices of Exif Ifd tag groups
-    private static final int IFD_TIFF_HINT = 0;
-    private static final int IFD_EXIF_HINT = 1;
-    private static final int IFD_GPS_HINT = 2;
-    private static final int IFD_INTEROPERABILITY_HINT = 3;
-    private static final int IFD_THUMBNAIL_HINT = 4;
-    // List of Exif tag groups
-    private static final ExifTag[][] EXIF_TAGS = new ExifTag[][] {
-            IFD_TIFF_TAGS, IFD_EXIF_TAGS, IFD_GPS_TAGS, IFD_INTEROPERABILITY_TAGS,
-            IFD_THUMBNAIL_TAGS
-    };
-    // List of tags for pointing to the other image file directory offset.
-    private static final ExifTag[] IFD_POINTER_TAGS = new ExifTag[] {
-            new ExifTag(TAG_EXIF_IFD_POINTER, 34665, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_GPS_INFO_IFD_POINTER, 34853, IFD_FORMAT_ULONG),
-            new ExifTag(TAG_INTEROPERABILITY_IFD_POINTER, 40965, IFD_FORMAT_ULONG),
-    };
-    // List of indices of the indicated tag groups according to the IFD_POINTER_TAGS
-    private static final int[] IFD_POINTER_TAG_HINTS = new int[] {
-            IFD_EXIF_HINT, IFD_GPS_HINT, IFD_INTEROPERABILITY_HINT
-    };
-    // Tags for indicating the thumbnail offset and length
-    private static final ExifTag JPEG_INTERCHANGE_FORMAT_TAG =
-            new ExifTag(TAG_JPEG_INTERCHANGE_FORMAT, 513, IFD_FORMAT_ULONG);
-    private static final ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG =
-            new ExifTag(TAG_JPEG_INTERCHANGE_FORMAT_LENGTH, 514, IFD_FORMAT_ULONG);
-
-    // Mappings from tag number to tag name and each item represents one IFD tag group.
-    private static final HashMap[] sExifTagMapsForReading = new HashMap[EXIF_TAGS.length];
-    // Mappings from tag name to tag number and each item represents one IFD tag group.
-    private static final HashMap[] sExifTagMapsForWriting = new HashMap[EXIF_TAGS.length];
-    private static final HashSet<String> sTagSetForCompatibility = new HashSet<>(Arrays.asList(
-            TAG_APERTURE, TAG_DIGITAL_ZOOM_RATIO, TAG_EXPOSURE_TIME, TAG_SUBJECT_DISTANCE,
-            TAG_GPS_TIMESTAMP));
-
-    // See JPEG File Interchange Format Version 1.02.
-    // The following values are defined for handling JPEG streams. In this implementation, we are
-    // not only getting information from EXIF but also from some JPEG special segments such as
-    // MARKER_COM for user comment and MARKER_SOFx for image width and height.
-
-    private static final Charset ASCII = Charset.forName("US-ASCII");
-    // Identifier for EXIF APP1 segment in JPEG
-    private static final byte[] IDENTIFIER_EXIF_APP1 = "Exif\0\0".getBytes(ASCII);
-    // JPEG segment markers, that each marker consumes two bytes beginning with 0xff and ending with
-    // the indicator. There is no SOF4, SOF8, SOF16 markers in JPEG and SOFx markers indicates start
-    // of frame(baseline DCT) and the image size info exists in its beginning part.
-    private static final byte MARKER = (byte) 0xff;
-    private static final byte MARKER_SOI = (byte) 0xd8;
-    private static final byte MARKER_SOF0 = (byte) 0xc0;
-    private static final byte MARKER_SOF1 = (byte) 0xc1;
-    private static final byte MARKER_SOF2 = (byte) 0xc2;
-    private static final byte MARKER_SOF3 = (byte) 0xc3;
-    private static final byte MARKER_SOF5 = (byte) 0xc5;
-    private static final byte MARKER_SOF6 = (byte) 0xc6;
-    private static final byte MARKER_SOF7 = (byte) 0xc7;
-    private static final byte MARKER_SOF9 = (byte) 0xc9;
-    private static final byte MARKER_SOF10 = (byte) 0xca;
-    private static final byte MARKER_SOF11 = (byte) 0xcb;
-    private static final byte MARKER_SOF13 = (byte) 0xcd;
-    private static final byte MARKER_SOF14 = (byte) 0xce;
-    private static final byte MARKER_SOF15 = (byte) 0xcf;
-    private static final byte MARKER_SOS = (byte) 0xda;
-    private static final byte MARKER_APP1 = (byte) 0xe1;
-    private static final byte MARKER_COM = (byte) 0xfe;
-    private static final byte MARKER_EOI = (byte) 0xd9;
-
     static {
+        System.loadLibrary("jhead_jni");
         sFormatter = new SimpleDateFormat("yyyy:MM:dd HH:mm:ss");
         sFormatter.setTimeZone(TimeZone.getTimeZone("UTC"));
-
-        // Build up the hash tables to look up Exif tags for reading Exif tags.
-        for (int hint = 0; hint < EXIF_TAGS.length; ++hint) {
-            sExifTagMapsForReading[hint] = new HashMap();
-            sExifTagMapsForWriting[hint] = new HashMap();
-            for (ExifTag tag : EXIF_TAGS[hint]) {
-                sExifTagMapsForReading[hint].put(tag.number, tag);
-                sExifTagMapsForWriting[hint].put(tag.name, tag);
-            }
-        }
     }
 
-    private final String mFilename;
-    private final HashMap[] mAttributes = new HashMap[EXIF_TAGS.length];
-    private ByteOrder mExifByteOrder = ByteOrder.BIG_ENDIAN;
+    private String mFilename;
+    private HashMap<String, String> mAttributes;
     private boolean mHasThumbnail;
-    // The following values used for indicating a thumbnail position.
-    private int mThumbnailOffset;
-    private int mThumbnailLength;
-    private byte[] mThumbnailBytes;
 
-    // Pattern to check non zero timestamp
-    private static final Pattern sNonZeroTimePattern = Pattern.compile(".*[1-9].*");
-    // Pattern to check gps timestamp
-    private static final Pattern sGpsTimestampPattern =
-            Pattern.compile("^([0-9][0-9]):([0-9][0-9]):([0-9][0-9])$");
+    // Because the underlying implementation (jhead) uses static variables,
+    // there can only be one user at a time for the native functions (and
+    // they cannot keep state in the native code across function calls). We
+    // use sLock to serialize the accesses.
+    private static final Object sLock = new Object();
 
     /**
-     * Reads Exif tags from the specified image file.
+     * Reads Exif tags from the specified JPEG file.
      */
     public ExifInterface(String filename) throws IOException {
         if (filename == null) {
@@ -1057,99 +139,53 @@ public class ExifInterface {
         loadAttributes();
     }
 
-
-    /**
-     * Returns the EXIF attribute of the specified tag or {@code null} if there is no such tag in
-     * the image file.
-     *
-     * @param tag the name of the tag.
-     */
-    private ExifAttribute getExifAttribute(String tag) {
-        // Retrieves all tag groups. The value from primary image tag group has a higher priority
-        // than the value from the thumbnail tag group if there are more than one candidates.
-        for (int i = 0; i < EXIF_TAGS.length; ++i) {
-            Object value = mAttributes[i].get(tag);
-            if (value != null) {
-                return (ExifAttribute) value;
-            }
-        }
-        return null;
-    }
-
     /**
      * Returns the value of the specified tag or {@code null} if there
-     * is no such tag in the image file.
+     * is no such tag in the JPEG file.
      *
      * @param tag the name of the tag.
      */
     public String getAttribute(String tag) {
-        ExifAttribute attribute = getExifAttribute(tag);
-        if (attribute != null) {
-            if (!sTagSetForCompatibility.contains(tag)) {
-                return attribute.getStringValue(mExifByteOrder);
-            }
-            if (tag.equals(TAG_GPS_TIMESTAMP)) {
-                // Convert the rational values to the custom formats for backwards compatibility.
-                if (attribute.format != IFD_FORMAT_URATIONAL
-                        && attribute.format != IFD_FORMAT_SRATIONAL) {
-                    return null;
-                }
-                Rational[] array = (Rational[]) attribute.getValue(mExifByteOrder);
-                if (array.length != 3) {
-                    return null;
-                }
-                return String.format("%02d:%02d:%02d",
-                        (int) ((float) array[0].numerator / array[0].denominator),
-                        (int) ((float) array[1].numerator / array[1].denominator),
-                        (int) ((float) array[2].numerator / array[2].denominator));
-            }
-            try {
-                return Double.toString(attribute.getDoubleValue(mExifByteOrder));
-            } catch (NumberFormatException e) {
-                return null;
-            }
-        }
-        return null;
+        return mAttributes.get(tag);
     }
 
     /**
      * Returns the integer value of the specified tag. If there is no such tag
-     * in the image file or the value cannot be parsed as integer, return
+     * in the JPEG file or the value cannot be parsed as integer, return
      * <var>defaultValue</var>.
      *
      * @param tag the name of the tag.
      * @param defaultValue the value to return if the tag is not available.
      */
     public int getAttributeInt(String tag, int defaultValue) {
-        ExifAttribute exifAttribute = getExifAttribute(tag);
-        if (exifAttribute == null) {
-            return defaultValue;
-        }
-
+        String value = mAttributes.get(tag);
+        if (value == null) return defaultValue;
         try {
-            return exifAttribute.getIntValue(mExifByteOrder);
-        } catch (NumberFormatException e) {
+            return Integer.valueOf(value);
+        } catch (NumberFormatException ex) {
             return defaultValue;
         }
     }
 
     /**
-     * Returns the double value of the tag that is specified as rational or contains a
-     * double-formatted value. If there is no such tag in the image file or the value cannot be
-     * parsed as double, return <var>defaultValue</var>.
+     * Returns the double value of the specified rational tag. If there is no
+     * such tag in the JPEG file or the value cannot be parsed as double, return
+     * <var>defaultValue</var>.
      *
      * @param tag the name of the tag.
      * @param defaultValue the value to return if the tag is not available.
      */
     public double getAttributeDouble(String tag, double defaultValue) {
-        ExifAttribute exifAttribute = getExifAttribute(tag);
-        if (exifAttribute == null) {
-            return defaultValue;
-        }
-
+        String value = mAttributes.get(tag);
+        if (value == null) return defaultValue;
         try {
-            return exifAttribute.getDoubleValue(mExifByteOrder);
-        } catch (NumberFormatException e) {
+            int index = value.indexOf("/");
+            if (index == -1) return defaultValue;
+            double denom = Double.parseDouble(value.substring(index + 1));
+            if (denom == 0) return defaultValue;
+            double num = Double.parseDouble(value.substring(0, index));
+            return num / denom;
+        } catch (NumberFormatException ex) {
             return defaultValue;
         }
     }
@@ -1161,283 +197,116 @@ public class ExifInterface {
      * @param value the value of the tag.
      */
     public void setAttribute(String tag, String value) {
-        // Convert the given value to rational values for backwards compatibility.
-        if (value != null && sTagSetForCompatibility.contains(tag)) {
-            if (tag.equals(TAG_GPS_TIMESTAMP)) {
-                Matcher m = sGpsTimestampPattern.matcher(value);
-                if (!m.find()) {
-                    Log.w(TAG, "Invalid value for " + tag + " : " + value);
-                    return;
-                }
-                value = Integer.parseInt(m.group(1)) + "/1," + Integer.parseInt(m.group(2)) + "/1,"
-                        + Integer.parseInt(m.group(3)) + "/1";
-            } else {
-                try {
-                    double doubleValue = Double.parseDouble(value);
-                    value = (long) (doubleValue * 10000L) + "/10000";
-                } catch (NumberFormatException e) {
-                    Log.w(TAG, "Invalid value for " + tag + " : " + value);
-                    return;
-                }
-            }
-        }
+        mAttributes.put(tag, value);
+    }
 
-        for (int i = 0 ; i < EXIF_TAGS.length; ++i) {
-            if (i == IFD_THUMBNAIL_HINT && !mHasThumbnail) {
-                continue;
-            }
-            final Object obj = sExifTagMapsForWriting[i].get(tag);
-            if (obj != null) {
-                if (value == null) {
-                    mAttributes[i].remove(tag);
-                    continue;
-                }
-                final ExifTag exifTag = (ExifTag) obj;
-                Pair<Integer, Integer> guess = guessDataFormat(value);
-                int dataFormat;
-                if (exifTag.primaryFormat == guess.first || exifTag.primaryFormat == guess.second) {
-                    dataFormat = exifTag.primaryFormat;
-                } else if (exifTag.secondaryFormat != -1 && (exifTag.secondaryFormat == guess.first
-                        || exifTag.secondaryFormat == guess.second)) {
-                    dataFormat = exifTag.secondaryFormat;
-                } else if (exifTag.primaryFormat == IFD_FORMAT_BYTE
-                        || exifTag.primaryFormat == IFD_FORMAT_UNDEFINED
-                        || exifTag.primaryFormat == IFD_FORMAT_STRING) {
-                    dataFormat = exifTag.primaryFormat;
-                } else {
-                    Log.w(TAG, "Given tag (" + tag + ") value didn't match with one of expected "
-                            + "formats: " + IFD_FORMAT_NAMES[exifTag.primaryFormat]
-                            + (exifTag.secondaryFormat == -1 ? "" : ", "
-                            + IFD_FORMAT_NAMES[exifTag.secondaryFormat]) + " (guess: "
-                            + IFD_FORMAT_NAMES[guess.first] + (guess.second == -1 ? "" : ", "
-                            + IFD_FORMAT_NAMES[guess.second]) + ")");
-                    continue;
-                }
-                switch (dataFormat) {
-                    case IFD_FORMAT_BYTE: {
-                        mAttributes[i].put(tag, ExifAttribute.createByte(value));
-                        break;
-                    }
-                    case IFD_FORMAT_UNDEFINED:
-                    case IFD_FORMAT_STRING: {
-                        mAttributes[i].put(tag, ExifAttribute.createString(value));
-                        break;
-                    }
-                    case IFD_FORMAT_USHORT: {
-                        final String[] values = value.split(",");
-                        final int[] intArray = new int[values.length];
-                        for (int j = 0; j < values.length; ++j) {
-                            intArray[j] = Integer.parseInt(values[j]);
-                        }
-                        mAttributes[i].put(tag,
-                                ExifAttribute.createUShort(intArray, mExifByteOrder));
-                        break;
-                    }
-                    case IFD_FORMAT_SLONG: {
-                        final String[] values = value.split(",");
-                        final int[] intArray = new int[values.length];
-                        for (int j = 0; j < values.length; ++j) {
-                            intArray[j] = Integer.parseInt(values[j]);
-                        }
-                        mAttributes[i].put(tag,
-                                ExifAttribute.createSLong(intArray, mExifByteOrder));
-                        break;
-                    }
-                    case IFD_FORMAT_ULONG: {
-                        final String[] values = value.split(",");
-                        final long[] longArray = new long[values.length];
-                        for (int j = 0; j < values.length; ++j) {
-                            longArray[j] = Long.parseLong(values[j]);
-                        }
-                        mAttributes[i].put(tag,
-                                ExifAttribute.createULong(longArray, mExifByteOrder));
-                        break;
-                    }
-                    case IFD_FORMAT_URATIONAL: {
-                        final String[] values = value.split(",");
-                        final Rational[] rationalArray = new Rational[values.length];
-                        for (int j = 0; j < values.length; ++j) {
-                            final String[] numbers = values[j].split("/");
-                            rationalArray[j] = new Rational(Long.parseLong(numbers[0]),
-                                    Long.parseLong(numbers[1]));
-                        }
-                        mAttributes[i].put(tag,
-                                ExifAttribute.createURational(rationalArray, mExifByteOrder));
-                        break;
-                    }
-                    case IFD_FORMAT_SRATIONAL: {
-                        final String[] values = value.split(",");
-                        final Rational[] rationalArray = new Rational[values.length];
-                        for (int j = 0; j < values.length; ++j) {
-                            final String[] numbers = values[j].split("/");
-                            rationalArray[j] = new Rational(Long.parseLong(numbers[0]),
-                                    Long.parseLong(numbers[1]));
-                        }
-                        mAttributes[i].put(tag,
-                                ExifAttribute.createSRational(rationalArray, mExifByteOrder));
-                        break;
-                    }
-                    case IFD_FORMAT_DOUBLE: {
-                        final String[] values = value.split(",");
-                        final double[] doubleArray = new double[values.length];
-                        for (int j = 0; j < values.length; ++j) {
-                            doubleArray[j] = Double.parseDouble(values[j]);
-                        }
-                        mAttributes[i].put(tag,
-                                ExifAttribute.createDouble(doubleArray, mExifByteOrder));
-                        break;
-                    }
-                    default:
-                        Log.w(TAG, "Data format isn't one of expected formats: " + dataFormat);
-                        continue;
-                }
+    /**
+     * Initialize mAttributes with the attributes from the file mFilename.
+     *
+     * mAttributes is a HashMap which stores the Exif attributes of the file.
+     * The key is the standard tag name and the value is the tag's value: e.g.
+     * Model -> Nikon. Numeric values are stored as strings.
+     *
+     * This function also initialize mHasThumbnail to indicate whether the
+     * file has a thumbnail inside.
+     */
+    private void loadAttributes() throws IOException {
+        // format of string passed from native C code:
+        // "attrCnt attr1=valueLen value1attr2=value2Len value2..."
+        // example:
+        // "4 attrPtr ImageLength=4 1024Model=6 FooImageWidth=4 1280Make=3 FOO"
+        mAttributes = new HashMap<String, String>();
+
+        String attrStr;
+        synchronized (sLock) {
+            attrStr = getAttributesNative(mFilename);
+        }
+
+        // get count
+        int ptr = attrStr.indexOf(' ');
+        int count = Integer.parseInt(attrStr.substring(0, ptr));
+        // skip past the space between item count and the rest of the attributes
+        ++ptr;
+
+        for (int i = 0; i < count; i++) {
+            // extract the attribute name
+            int equalPos = attrStr.indexOf('=', ptr);
+            String attrName = attrStr.substring(ptr, equalPos);
+            ptr = equalPos + 1;     // skip past =
+
+            // extract the attribute value length
+            int lenPos = attrStr.indexOf(' ', ptr);
+            int attrLen = Integer.parseInt(attrStr.substring(ptr, lenPos));
+            ptr = lenPos + 1;       // skip pas the space
+
+            // extract the attribute value
+            String attrValue = attrStr.substring(ptr, ptr + attrLen);
+            ptr += attrLen;
+
+            if (attrName.equals("hasThumbnail")) {
+                mHasThumbnail = attrValue.equalsIgnoreCase("true");
+            } else {
+                mAttributes.put(attrName, attrValue);
             }
         }
     }
 
     /**
-     * Update the values of the tags in the tag groups if any value for the tag already was stored.
-     *
-     * @param tag the name of the tag.
-     * @param value the value of the tag in a form of {@link ExifAttribute}.
-     * @return Returns {@code true} if updating is placed.
+     * Save the tag data into the JPEG file. This is expensive because it involves
+     * copying all the JPG data from one file to another and deleting the old file
+     * and renaming the other. It's best to use {@link #setAttribute(String,String)}
+     * to set all attributes to write and make a single call rather than multiple
+     * calls for each attribute.
      */
-    private boolean updateAttribute(String tag, ExifAttribute value) {
-        boolean updated = false;
-        for (int i = 0 ; i < EXIF_TAGS.length; ++i) {
-            if (mAttributes[i].containsKey(tag)) {
-                mAttributes[i].put(tag, value);
-                updated = true;
+    public void saveAttributes() throws IOException {
+        // format of string passed to native C code:
+        // "attrCnt attr1=valueLen value1attr2=value2Len value2..."
+        // example:
+        // "4 attrPtr ImageLength=4 1024Model=6 FooImageWidth=4 1280Make=3 FOO"
+        StringBuilder sb = new StringBuilder();
+        int size = mAttributes.size();
+        if (mAttributes.containsKey("hasThumbnail")) {
+            --size;
+        }
+        sb.append(size + " ");
+        for (Map.Entry<String, String> iter : mAttributes.entrySet()) {
+            String key = iter.getKey();
+            if (key.equals("hasThumbnail")) {
+                // this is a fake attribute not saved as an exif tag
+                continue;
             }
+            String val = iter.getValue();
+            sb.append(key + "=");
+            sb.append(val.length() + " ");
+            sb.append(val);
+        }
+        String s = sb.toString();
+        synchronized (sLock) {
+            saveAttributesNative(mFilename, s);
+            commitChangesNative(mFilename);
         }
-        return updated;
     }
 
     /**
-     * Remove any values of the specified tag.
-     *
-     * @param tag the name of the tag.
+     * Returns true if the JPEG file has a thumbnail.
      */
-    private void removeAttribute(String tag) {
-        for (int i = 0 ; i < EXIF_TAGS.length; ++i) {
-            mAttributes[i].remove(tag);
-        }
+    public boolean hasThumbnail() {
+        return mHasThumbnail;
     }
 
     /**
-     * This function decides which parser to read the image data according to the given input stream
-     * type and the content of the input stream. In each case, it reads the first three bytes to
-     * determine whether the image data format is JPEG or not.
+     * Returns the thumbnail inside the JPEG file, or {@code null} if there is no thumbnail.
+     * The returned data is in JPEG format and can be decoded using
+     * {@link android.graphics.BitmapFactory#decodeByteArray(byte[],int,int)}
      */
-    private void loadAttributes() throws IOException {
-        // Initialize mAttributes.
-        for (int i = 0; i < EXIF_TAGS.length; ++i) {
-            mAttributes[i] = new HashMap();
-        }
-        try {
-            InputStream in = new FileInputStream(mFilename);
-            getJpegAttributes(in);
-        } catch (IOException e) {
-            // Ignore exceptions in order to keep the compatibility with the old versions of
-            // ExifInterface.
-            Log.w(TAG, "Invalid image.", e);
-        } finally {
-            addDefaultValuesForCompatibility();
-            if (DEBUG) {
-                printAttributes();
-            }
+    public byte[] getThumbnail() {
+        synchronized (sLock) {
+            return getThumbnailNative(mFilename);
         }
     }
 
-    // Prints out attributes for debugging.
-    private void printAttributes() {
-        for (int i = 0; i < mAttributes.length; ++i) {
-            Log.d(TAG, "The size of tag group[" + i + "]: " + mAttributes[i].size());
-            for (Map.Entry entry : (Set<Map.Entry>) mAttributes[i].entrySet()) {
-                final ExifAttribute tagValue = (ExifAttribute) entry.getValue();
-                Log.d(TAG, "tagName: " + entry.getKey() + ", tagType: " + tagValue.toString()
-                        + ", tagValue: '" + tagValue.getStringValue(mExifByteOrder) + "'");
-            }
-        }
-    }
-
-    /**
-     * Save the tag data into the original image file. This is expensive because it involves
-     * copying all the data from one file to another and deleting the old file and renaming the
-     * other. It's best to use {@link #setAttribute(String,String)} to set all attributes to write
-     * and make a single call rather than multiple calls for each attribute.
-     */
-    public void saveAttributes() throws IOException {
-        // Keep the thumbnail in memory
-        mThumbnailBytes = getThumbnail();
-
-        File tempFile = null;
-        // Move the original file to temporary file.
-        tempFile = new File(mFilename + ".tmp");
-        File originalFile = new File(mFilename);
-        if (!originalFile.renameTo(tempFile)) {
-            throw new IOException("Could'nt rename to " + tempFile.getAbsolutePath());
-        }
-
-        FileInputStream in = null;
-        FileOutputStream out = null;
-        try {
-            // Save the new file.
-            in = new FileInputStream(tempFile);
-            out = new FileOutputStream(mFilename);
-            saveJpegAttributes(in, out);
-        } finally {
-            IoUtils.closeQuietly(in);
-            IoUtils.closeQuietly(out);
-            tempFile.delete();
-        }
-
-        // Discard the thumbnail in memory
-        mThumbnailBytes = null;
-    }
-
-    /**
-     * Returns true if the image file has a thumbnail.
-     */
-    public boolean hasThumbnail() {
-        return mHasThumbnail;
-    }
-
     /**
-     * Returns the thumbnail inside the image file, or {@code null} if there is no thumbnail.
-     * The returned data is in JPEG format and can be decoded using
-     * {@link android.graphics.BitmapFactory#decodeByteArray(byte[],int,int)}
-     */
-    public byte[] getThumbnail() {
-        if (!mHasThumbnail) {
-            return null;
-        }
-        if (mThumbnailBytes != null) {
-            return mThumbnailBytes;
-        }
-
-        // Read the thumbnail.
-        FileInputStream in = null;
-        try {
-            in = new FileInputStream(mFilename);
-            if (in.skip(mThumbnailOffset) != mThumbnailOffset) {
-                throw new IOException("Corrupted image");
-            }
-            byte[] buffer = new byte[mThumbnailLength];
-            if (in.read(buffer) != mThumbnailLength) {
-                throw new IOException("Corrupted image");
-            }
-            return buffer;
-        } catch (IOException e) {
-            // Couldn't get a thumbnail image.
-        } finally {
-            IoUtils.closeQuietly(in);
-        }
-        return null;
-    }
-
-    /**
-     * Returns the offset and length of thumbnail inside the image file, or
+     * Returns the offset and length of thumbnail inside the JPEG file, or
      * {@code null} if there is no thumbnail.
      *
      * @return two-element array, the offset in the first value, and length in
@@ -1445,15 +314,9 @@ public class ExifInterface {
      * @hide
      */
     public long[] getThumbnailRange() {
-        if (!mHasThumbnail) {
-            return null;
+        synchronized (sLock) {
+            return getThumbnailRangeNative(mFilename);
         }
-
-        long[] range = new long[2];
-        range[0] = mThumbnailOffset;
-        range[1] = mThumbnailLength;
-
-        return range;
     }
 
     /**
@@ -1462,10 +325,10 @@ public class ExifInterface {
      * Exif tags are not available.
      */
     public boolean getLatLong(float output[]) {
-        String latValue = getAttribute(TAG_GPS_LATITUDE);
-        String latRef = getAttribute(TAG_GPS_LATITUDE_REF);
-        String lngValue = getAttribute(TAG_GPS_LONGITUDE);
-        String lngRef = getAttribute(TAG_GPS_LONGITUDE_REF);
+        String latValue = mAttributes.get(ExifInterface.TAG_GPS_LATITUDE);
+        String latRef = mAttributes.get(ExifInterface.TAG_GPS_LATITUDE_REF);
+        String lngValue = mAttributes.get(ExifInterface.TAG_GPS_LONGITUDE);
+        String lngRef = mAttributes.get(ExifInterface.TAG_GPS_LONGITUDE_REF);
 
         if (latValue != null && latRef != null && lngValue != null && lngRef != null) {
             try {
@@ -1491,7 +354,7 @@ public class ExifInterface {
         int ref = getAttributeInt(TAG_GPS_ALTITUDE_REF, -1);
 
         if (altitude >= 0 && ref >= 0) {
-            return (altitude * ((ref == 1) ? -1 : 1));
+            return (double) (altitude * ((ref == 1) ? -1 : 1));
         } else {
             return defaultValue;
         }
@@ -1503,9 +366,8 @@ public class ExifInterface {
      * @hide
      */
     public long getDateTime() {
-        String dateTimeString = getAttribute(TAG_DATETIME);
-        if (dateTimeString == null
-                || !sNonZeroTimePattern.matcher(dateTimeString).matches()) return -1;
+        String dateTimeString = mAttributes.get(TAG_DATETIME);
+        if (dateTimeString == null) return -1;
 
         ParsePosition pos = new ParsePosition(0);
         try {
@@ -1515,7 +377,7 @@ public class ExifInterface {
             if (datetime == null) return -1;
             long msecs = datetime.getTime();
 
-            String subSecs = getAttribute(TAG_SUBSEC_TIME);
+            String subSecs = mAttributes.get(TAG_SUBSECTIME);
             if (subSecs != null) {
                 try {
                     long sub = Long.valueOf(subSecs);
@@ -1524,11 +386,10 @@ public class ExifInterface {
                     }
                     msecs += sub;
                 } catch (NumberFormatException e) {
-                    // Ignored
                 }
             }
             return msecs;
-        } catch (IllegalArgumentException e) {
+        } catch (IllegalArgumentException ex) {
             return -1;
         }
     }
@@ -1539,13 +400,9 @@ public class ExifInterface {
      * @hide
      */
     public long getGpsDateTime() {
-        String date = getAttribute(TAG_GPS_DATESTAMP);
-        String time = getAttribute(TAG_GPS_TIMESTAMP);
-        if (date == null || time == null
-                || (!sNonZeroTimePattern.matcher(date).matches()
-                && !sNonZeroTimePattern.matcher(time).matches())) {
-            return -1;
-        }
+        String date = mAttributes.get(TAG_GPS_DATESTAMP);
+        String time = mAttributes.get(TAG_GPS_TIMESTAMP);
+        if (date == null || time == null) return -1;
 
         String dateTimeString = date + ' ' + time;
 
@@ -1554,12 +411,13 @@ public class ExifInterface {
             Date datetime = sFormatter.parse(dateTimeString, pos);
             if (datetime == null) return -1;
             return datetime.getTime();
-        } catch (IllegalArgumentException e) {
+        } catch (IllegalArgumentException ex) {
             return -1;
         }
     }
 
-    private static float convertRationalLatLonToFloat(String rationalString, String ref) {
+    private static float convertRationalLatLonToFloat(
+            String rationalString, String ref) {
         try {
             String [] parts = rationalString.split(",");
 
@@ -1581,949 +439,26 @@ public class ExifInterface {
                 return (float) -result;
             }
             return (float) result;
-        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
-            // Not valid
-            throw new IllegalArgumentException();
-        }
-    }
-
-    // Loads EXIF attributes from a JPEG input stream.
-    private void getJpegAttributes(InputStream inputStream) throws IOException {
-        // See JPEG File Interchange Format Specification page 5.
-        if (DEBUG) {
-            Log.d(TAG, "getJpegAttributes starting with: " + inputStream);
-        }
-        DataInputStream dataInputStream = new DataInputStream(inputStream);
-        byte marker;
-        int bytesRead = 0;
-        if ((marker = dataInputStream.readByte()) != MARKER) {
-            throw new IOException("Invalid marker: " + Integer.toHexString(marker & 0xff));
-        }
-        ++bytesRead;
-        if (dataInputStream.readByte() != MARKER_SOI) {
-            throw new IOException("Invalid marker: " + Integer.toHexString(marker & 0xff));
-        }
-        ++bytesRead;
-        while (true) {
-            marker = dataInputStream.readByte();
-            if (marker != MARKER) {
-                throw new IOException("Invalid marker:" + Integer.toHexString(marker & 0xff));
-            }
-            ++bytesRead;
-            marker = dataInputStream.readByte();
-            if (DEBUG) {
-                Log.d(TAG, "Found JPEG segment indicator: " + Integer.toHexString(marker & 0xff));
-            }
-            ++bytesRead;
-
-            // EOI indicates the end of an image and in case of SOS, JPEG image stream starts and
-            // the image data will terminate right after.
-            if (marker == MARKER_EOI || marker == MARKER_SOS) {
-                break;
-            }
-            int length = dataInputStream.readUnsignedShort() - 2;
-            bytesRead += 2;
-            if (DEBUG) {
-                Log.d(TAG, "JPEG segment: " + Integer.toHexString(marker & 0xff) + " (length: "
-                        + (length + 2) + ")");
-            }
-            if (length < 0) {
-                throw new IOException("Invalid length");
-            }
-            switch (marker) {
-                case MARKER_APP1: {
-                    if (DEBUG) {
-                        Log.d(TAG, "MARKER_APP1");
-                    }
-                    if (length < 6) {
-                        // Skip if it's not an EXIF APP1 segment.
-                        break;
-                    }
-                    byte[] identifier = new byte[6];
-                    if (inputStream.read(identifier) != 6) {
-                        throw new IOException("Invalid exif");
-                    }
-                    bytesRead += 6;
-                    length -= 6;
-                    if (!Arrays.equals(identifier, IDENTIFIER_EXIF_APP1)) {
-                        // Skip if it's not an EXIF APP1 segment.
-                        break;
-                    }
-                    if (length <= 0) {
-                        throw new IOException("Invalid exif");
-                    }
-                    if (DEBUG) {
-                        Log.d(TAG, "readExifSegment with a byte array (length: " + length + ")");
-                    }
-                    byte[] bytes = new byte[length];
-                    if (dataInputStream.read(bytes) != length) {
-                        throw new IOException("Invalid exif");
-                    }
-                    readExifSegment(bytes, bytesRead);
-                    bytesRead += length;
-                    length = 0;
-                    break;
-                }
-
-                case MARKER_COM: {
-                    byte[] bytes = new byte[length];
-                    if (dataInputStream.read(bytes) != length) {
-                        throw new IOException("Invalid exif");
-                    }
-                    length = 0;
-                    if (getAttribute(TAG_USER_COMMENT) == null) {
-                        mAttributes[IFD_EXIF_HINT].put(TAG_USER_COMMENT, ExifAttribute.createString(
-                                new String(bytes, ASCII)));
-                    }
-                    break;
-                }
-
-                case MARKER_SOF0:
-                case MARKER_SOF1:
-                case MARKER_SOF2:
-                case MARKER_SOF3:
-                case MARKER_SOF5:
-                case MARKER_SOF6:
-                case MARKER_SOF7:
-                case MARKER_SOF9:
-                case MARKER_SOF10:
-                case MARKER_SOF11:
-                case MARKER_SOF13:
-                case MARKER_SOF14:
-                case MARKER_SOF15: {
-                    if (dataInputStream.skipBytes(1) != 1) {
-                        throw new IOException("Invalid SOFx");
-                    }
-                    mAttributes[IFD_TIFF_HINT].put(TAG_IMAGE_LENGTH, ExifAttribute.createULong(
-                            dataInputStream.readUnsignedShort(), mExifByteOrder));
-                    mAttributes[IFD_TIFF_HINT].put(TAG_IMAGE_WIDTH, ExifAttribute.createULong(
-                            dataInputStream.readUnsignedShort(), mExifByteOrder));
-                    length -= 5;
-                    break;
-                }
-
-                default: {
-                    break;
-                }
-            }
-            if (length < 0) {
-                throw new IOException("Invalid length");
-            }
-            if (dataInputStream.skipBytes(length) != length) {
-                throw new IOException("Invalid JPEG segment");
-            }
-            bytesRead += length;
-        }
-    }
-
-    // Stores a new JPEG image with EXIF attributes into a given output stream.
-    private void saveJpegAttributes(InputStream inputStream, OutputStream outputStream)
-            throws IOException {
-        // See JPEG File Interchange Format Specification page 5.
-        if (DEBUG) {
-            Log.d(TAG, "saveJpegAttributes starting with (inputStream: " + inputStream
-                    + ", outputStream: " + outputStream + ")");
-        }
-        DataInputStream dataInputStream = new DataInputStream(inputStream);
-        ByteOrderAwarenessDataOutputStream dataOutputStream =
-                new ByteOrderAwarenessDataOutputStream(outputStream, ByteOrder.BIG_ENDIAN);
-        if (dataInputStream.readByte() != MARKER) {
-            throw new IOException("Invalid marker");
-        }
-        dataOutputStream.writeByte(MARKER);
-        if (dataInputStream.readByte() != MARKER_SOI) {
-            throw new IOException("Invalid marker");
-        }
-        dataOutputStream.writeByte(MARKER_SOI);
-
-        // Write EXIF APP1 segment
-        dataOutputStream.writeByte(MARKER);
-        dataOutputStream.writeByte(MARKER_APP1);
-        writeExifSegment(dataOutputStream, 6);
-
-        byte[] bytes = new byte[4096];
-
-        while (true) {
-            byte marker = dataInputStream.readByte();
-            if (marker != MARKER) {
-                throw new IOException("Invalid marker");
-            }
-            marker = dataInputStream.readByte();
-            switch (marker) {
-                case MARKER_APP1: {
-                    int length = dataInputStream.readUnsignedShort() - 2;
-                    if (length < 0) {
-                        throw new IOException("Invalid length");
-                    }
-                    byte[] identifier = new byte[6];
-                    if (length >= 6) {
-                        if (dataInputStream.read(identifier) != 6) {
-                            throw new IOException("Invalid exif");
-                        }
-                        if (Arrays.equals(identifier, IDENTIFIER_EXIF_APP1)) {
-                            // Skip the original EXIF APP1 segment.
-                            if (dataInputStream.skip(length - 6) != length - 6) {
-                                throw new IOException("Invalid length");
-                            }
-                            break;
-                        }
-                    }
-                    // Copy non-EXIF APP1 segment.
-                    dataOutputStream.writeByte(MARKER);
-                    dataOutputStream.writeByte(marker);
-                    dataOutputStream.writeUnsignedShort(length + 2);
-                    if (length >= 6) {
-                        length -= 6;
-                        dataOutputStream.write(identifier);
-                    }
-                    int read;
-                    while (length > 0 && (read = dataInputStream.read(
-                            bytes, 0, Math.min(length, bytes.length))) >= 0) {
-                        dataOutputStream.write(bytes, 0, read);
-                        length -= read;
-                    }
-                    break;
-                }
-                case MARKER_EOI:
-                case MARKER_SOS: {
-                    dataOutputStream.writeByte(MARKER);
-                    dataOutputStream.writeByte(marker);
-                    // Copy all the remaining data
-                    Streams.copy(dataInputStream, dataOutputStream);
-                    return;
-                }
-                default: {
-                    // Copy JPEG segment
-                    dataOutputStream.writeByte(MARKER);
-                    dataOutputStream.writeByte(marker);
-                    int length = dataInputStream.readUnsignedShort();
-                    dataOutputStream.writeUnsignedShort(length);
-                    length -= 2;
-                    if (length < 0) {
-                        throw new IOException("Invalid length");
-                    }
-                    int read;
-                    while (length > 0 && (read = dataInputStream.read(
-                            bytes, 0, Math.min(length, bytes.length))) >= 0) {
-                        dataOutputStream.write(bytes, 0, read);
-                        length -= read;
-                    }
-                    break;
-                }
-            }
-        }
-    }
-
-    // Reads the given EXIF byte area and save its tag data into attributes.
-    private void readExifSegment(byte[] exifBytes, int exifOffsetFromBeginning) throws IOException {
-        // Parse TIFF Headers. See JEITA CP-3451C Table 1. page 10.
-        ByteOrderAwarenessDataInputStream dataInputStream =
-                new ByteOrderAwarenessDataInputStream(exifBytes);
-
-        // Read byte align
-        short byteOrder = dataInputStream.readShort();
-        switch (byteOrder) {
-            case BYTE_ALIGN_II:
-                if (DEBUG) {
-                    Log.d(TAG, "readExifSegment: Byte Align II");
-                }
-                mExifByteOrder = ByteOrder.LITTLE_ENDIAN;
-                break;
-            case BYTE_ALIGN_MM:
-                if (DEBUG) {
-                    Log.d(TAG, "readExifSegment: Byte Align MM");
-                }
-                mExifByteOrder = ByteOrder.BIG_ENDIAN;
-                break;
-            default:
-                throw new IOException("Invalid byte order: " + Integer.toHexString(byteOrder));
-        }
-
-        // Set byte order.
-        dataInputStream.setByteOrder(mExifByteOrder);
-
-        int startCode = dataInputStream.readUnsignedShort();
-        if (startCode != 0x2a) {
-            throw new IOException("Invalid exif start: " + Integer.toHexString(startCode));
-        }
-
-        // Read first ifd offset
-        long firstIfdOffset = dataInputStream.readUnsignedInt();
-        if (firstIfdOffset < 8 || firstIfdOffset >= exifBytes.length) {
-            throw new IOException("Invalid first Ifd offset: " + firstIfdOffset);
-        }
-        firstIfdOffset -= 8;
-        if (firstIfdOffset > 0) {
-            if (dataInputStream.skip(firstIfdOffset) != firstIfdOffset) {
-                throw new IOException("Couldn't jump to first Ifd: " + firstIfdOffset);
-            }
-        }
-
-        // Read primary image TIFF image file directory.
-        readImageFileDirectory(dataInputStream, IFD_TIFF_HINT);
-
-        // Process thumbnail.
-        String jpegInterchangeFormatString = getAttribute(JPEG_INTERCHANGE_FORMAT_TAG.name);
-        String jpegInterchangeFormatLengthString =
-                getAttribute(JPEG_INTERCHANGE_FORMAT_LENGTH_TAG.name);
-        if (jpegInterchangeFormatString != null && jpegInterchangeFormatLengthString != null) {
-            try {
-                int jpegInterchangeFormat = Integer.parseInt(jpegInterchangeFormatString);
-                int jpegInterchangeFormatLength = Integer
-                        .parseInt(jpegInterchangeFormatLengthString);
-                // The following code limits the size of thumbnail size not to overflow EXIF data area.
-                jpegInterchangeFormatLength = Math.min(jpegInterchangeFormat
-                        + jpegInterchangeFormatLength, exifBytes.length) - jpegInterchangeFormat;
-                if (jpegInterchangeFormat > 0 && jpegInterchangeFormatLength > 0) {
-                    mHasThumbnail = true;
-                    mThumbnailOffset = exifOffsetFromBeginning + jpegInterchangeFormat;
-                    mThumbnailLength = jpegInterchangeFormatLength;
-                }
-            } catch (NumberFormatException e) {
-                // Ignored the corrupted image.
-            }
-        }
-    }
-
-    private void addDefaultValuesForCompatibility() {
-        // The value of DATETIME tag has the same value of DATETIME_ORIGINAL tag.
-        String valueOfDateTimeOriginal = getAttribute(TAG_DATETIME_ORIGINAL);
-        if (valueOfDateTimeOriginal != null) {
-            mAttributes[IFD_TIFF_HINT].put(TAG_DATETIME,
-                    ExifAttribute.createString(valueOfDateTimeOriginal));
-        }
-
-        // Add the default value.
-        if (getAttribute(TAG_IMAGE_WIDTH) == null) {
-            mAttributes[IFD_TIFF_HINT].put(TAG_IMAGE_WIDTH,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-        if (getAttribute(TAG_IMAGE_LENGTH) == null) {
-            mAttributes[IFD_TIFF_HINT].put(TAG_IMAGE_LENGTH,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-        if (getAttribute(TAG_ORIENTATION) == null) {
-            mAttributes[IFD_TIFF_HINT].put(TAG_ORIENTATION,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-        if (getAttribute(TAG_LIGHT_SOURCE) == null) {
-            mAttributes[IFD_EXIF_HINT].put(TAG_LIGHT_SOURCE,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-    }
-
-    // Reads image file directory, which is a tag group in EXIF.
-    private void readImageFileDirectory(ByteOrderAwarenessDataInputStream dataInputStream, int hint)
-            throws IOException {
-        if (dataInputStream.peek() + 2 > dataInputStream.mLength) {
-            // Return if there is no data from the offset.
-            return;
-        }
-        // See JEITA CP-3451 Figure 5. page 9.
-        short numberOfDirectoryEntry = dataInputStream.readShort();
-        if (dataInputStream.peek() + 12 * numberOfDirectoryEntry > dataInputStream.mLength) {
-            // Return if the size of entries is too big.
-            return;
-        }
-
-        if (DEBUG) {
-            Log.d(TAG, "numberOfDirectoryEntry: " + numberOfDirectoryEntry);
-        }
-
-        for (short i = 0; i < numberOfDirectoryEntry; ++i) {
-            int tagNumber = dataInputStream.readUnsignedShort();
-            int dataFormat = dataInputStream.readUnsignedShort();
-            int numberOfComponents = dataInputStream.readInt();
-            long nextEntryOffset = dataInputStream.peek() + 4;  // next four bytes is for data
-                                                                // offset or value.
-            // Look up a corresponding tag from tag number
-            final ExifTag tag = (ExifTag) sExifTagMapsForReading[hint].get(tagNumber);
-
-            if (DEBUG) {
-                Log.d(TAG, String.format("hint: %d, tagNumber: %d, tagName: %s, dataFormat: %d, " +
-                        "numberOfComponents: %d", hint, tagNumber, tag != null ? tag.name : null,
-                        dataFormat, numberOfComponents));
-            }
-
-            if (tag == null || dataFormat <= 0 ||
-                    dataFormat >= IFD_FORMAT_BYTES_PER_FORMAT.length) {
-                // Skip if the parsed tag number is not defined or invalid data format.
-                if (tag == null) {
-                    Log.w(TAG, "Skip the tag entry since tag number is not defined: " + tagNumber);
-                } else {
-                    Log.w(TAG, "Skip the tag entry since data format is invalid: " + dataFormat);
-                }
-                dataInputStream.seek(nextEntryOffset);
-                continue;
-            }
-
-            // Read a value from data field or seek to the value offset which is stored in data
-            // field if the size of the entry value is bigger than 4.
-            int byteCount = numberOfComponents * IFD_FORMAT_BYTES_PER_FORMAT[dataFormat];
-            if (byteCount > 4) {
-                long offset = dataInputStream.readUnsignedInt();
-                if (DEBUG) {
-                    Log.d(TAG, "seek to data offset: " + offset);
-                }
-                if (offset + byteCount <= dataInputStream.mLength) {
-                    dataInputStream.seek(offset);
-                } else {
-                     // Skip if invalid data offset.
-                    Log.w(TAG, "Skip the tag entry since data offset is invalid: " + offset);
-                    dataInputStream.seek(nextEntryOffset);
-                    continue;
-                }
-            }
-
-            // Recursively parse IFD when a IFD pointer tag appears.
-            int innerIfdHint = getIfdHintFromTagNumber(tagNumber);
-            if (DEBUG) {
-                Log.d(TAG, "innerIfdHint: " + innerIfdHint + " byteCount: " + byteCount);
-            }
-
-            if (innerIfdHint >= 0) {
-                long offset = -1L;
-                // Get offset from data field
-                switch (dataFormat) {
-                    case IFD_FORMAT_USHORT: {
-                        offset = dataInputStream.readUnsignedShort();
-                        break;
-                    }
-                    case IFD_FORMAT_SSHORT: {
-                        offset = dataInputStream.readShort();
-                        break;
-                    }
-                    case IFD_FORMAT_ULONG: {
-                        offset = dataInputStream.readUnsignedInt();
-                        break;
-                    }
-                    case IFD_FORMAT_SLONG: {
-                        offset = dataInputStream.readInt();
-                        break;
-                    }
-                    default: {
-                        // Nothing to do
-                        break;
-                    }
-                }
-                if (DEBUG) {
-                    Log.d(TAG, String.format("Offset: %d, tagName: %s", offset, tag.name));
-                }
-                if (offset > 0L && offset < dataInputStream.mLength) {
-                    dataInputStream.seek(offset);
-                    readImageFileDirectory(dataInputStream, innerIfdHint);
-                } else {
-                    Log.w(TAG, "Skip jump into the IFD since its offset is invalid: " + offset);
-                }
-
-                dataInputStream.seek(nextEntryOffset);
-                continue;
-            }
-
-            byte[] bytes = new byte[numberOfComponents * IFD_FORMAT_BYTES_PER_FORMAT[dataFormat]];
-            dataInputStream.readFully(bytes);
-            mAttributes[hint].put(
-                    tag.name, new ExifAttribute(dataFormat, numberOfComponents, bytes));
-            if (dataInputStream.peek() != nextEntryOffset) {
-                dataInputStream.seek(nextEntryOffset);
-            }
-        }
-
-        if (dataInputStream.peek() + 4 <= dataInputStream.mLength) {
-            long nextIfdOffset = dataInputStream.readUnsignedInt();
-            if (DEBUG) {
-                Log.d(TAG, String.format("nextIfdOffset: %d", nextIfdOffset));
-            }
-            // The next IFD offset needs to be bigger than 8
-            // since the first IFD offset is at least 8.
-            if (nextIfdOffset > 8 && nextIfdOffset < dataInputStream.mLength) {
-                dataInputStream.seek(nextIfdOffset);
-                readImageFileDirectory(dataInputStream, IFD_THUMBNAIL_HINT);
-            }
-        }
-    }
-
-    // Gets the corresponding IFD group index of the given tag number for writing Exif Tags.
-    private static int getIfdHintFromTagNumber(int tagNumber) {
-        for (int i = 0; i < IFD_POINTER_TAG_HINTS.length; ++i) {
-            if (IFD_POINTER_TAGS[i].number == tagNumber) {
-                return IFD_POINTER_TAG_HINTS[i];
-            }
-        }
-        return -1;
-    }
-
-    // Writes an Exif segment into the given output stream.
-    private int writeExifSegment(ByteOrderAwarenessDataOutputStream dataOutputStream,
-            int exifOffsetFromBeginning) throws IOException {
-        // The following variables are for calculating each IFD tag group size in bytes.
-        int[] ifdOffsets = new int[EXIF_TAGS.length];
-        int[] ifdDataSizes = new int[EXIF_TAGS.length];
-
-        // Remove IFD pointer tags (we'll re-add it later.)
-        for (ExifTag tag : IFD_POINTER_TAGS) {
-            removeAttribute(tag.name);
-        }
-        // Remove old thumbnail data
-        removeAttribute(JPEG_INTERCHANGE_FORMAT_TAG.name);
-        removeAttribute(JPEG_INTERCHANGE_FORMAT_LENGTH_TAG.name);
-
-        // Remove null value tags.
-        for (int hint = 0; hint < EXIF_TAGS.length; ++hint) {
-            for (Object obj : mAttributes[hint].entrySet().toArray()) {
-                final Map.Entry entry = (Map.Entry) obj;
-                if (entry.getValue() == null) {
-                    mAttributes[hint].remove(entry.getKey());
-                }
-            }
-        }
-
-        // Add IFD pointer tags. The next offset of primary image TIFF IFD will have thumbnail IFD
-        // offset when there is one or more tags in the thumbnail IFD.
-        if (!mAttributes[IFD_INTEROPERABILITY_HINT].isEmpty()) {
-            mAttributes[IFD_EXIF_HINT].put(IFD_POINTER_TAGS[2].name,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-        if (!mAttributes[IFD_EXIF_HINT].isEmpty()) {
-            mAttributes[IFD_TIFF_HINT].put(IFD_POINTER_TAGS[0].name,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-        if (!mAttributes[IFD_GPS_HINT].isEmpty()) {
-            mAttributes[IFD_TIFF_HINT].put(IFD_POINTER_TAGS[1].name,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-        }
-        if (mHasThumbnail) {
-            mAttributes[IFD_TIFF_HINT].put(JPEG_INTERCHANGE_FORMAT_TAG.name,
-                    ExifAttribute.createULong(0, mExifByteOrder));
-            mAttributes[IFD_TIFF_HINT].put(JPEG_INTERCHANGE_FORMAT_LENGTH_TAG.name,
-                    ExifAttribute.createULong(mThumbnailLength, mExifByteOrder));
-        }
-
-        // Calculate IFD group data area sizes. IFD group data area is assigned to save the entry
-        // value which has a bigger size than 4 bytes.
-        for (int i = 0; i < EXIF_TAGS.length; ++i) {
-            int sum = 0;
-            for (Map.Entry entry : (Set<Map.Entry>) mAttributes[i].entrySet()) {
-                final ExifAttribute exifAttribute = (ExifAttribute) entry.getValue();
-                final int size = exifAttribute.size();
-                if (size > 4) {
-                    sum += size;
-                }
-            }
-            ifdDataSizes[i] += sum;
-        }
-
-        // Calculate IFD offsets.
-        int position = 8;
-        for (int hint = 0; hint < EXIF_TAGS.length; ++hint) {
-            if (!mAttributes[hint].isEmpty()) {
-                ifdOffsets[hint] = position;
-                position += 2 + mAttributes[hint].size() * 12 + 4 + ifdDataSizes[hint];
-            }
-        }
-        if (mHasThumbnail) {
-            int thumbnailOffset = position;
-            mAttributes[IFD_TIFF_HINT].put(JPEG_INTERCHANGE_FORMAT_TAG.name,
-                    ExifAttribute.createULong(thumbnailOffset, mExifByteOrder));
-            mThumbnailOffset = exifOffsetFromBeginning + thumbnailOffset;
-            position += mThumbnailLength;
-        }
-
-        // Calculate the total size
-        int totalSize = position + 8;  // eight bytes is for header part.
-        if (DEBUG) {
-            Log.d(TAG, "totalSize length: " + totalSize);
-            for (int i = 0; i < EXIF_TAGS.length; ++i) {
-                Log.d(TAG, String.format("index: %d, offsets: %d, tag count: %d, data sizes: %d",
-                        i, ifdOffsets[i], mAttributes[i].size(), ifdDataSizes[i]));
-            }
-        }
-
-        // Update IFD pointer tags with the calculated offsets.
-        if (!mAttributes[IFD_EXIF_HINT].isEmpty()) {
-            mAttributes[IFD_TIFF_HINT].put(IFD_POINTER_TAGS[0].name,
-                    ExifAttribute.createULong(ifdOffsets[IFD_EXIF_HINT], mExifByteOrder));
-        }
-        if (!mAttributes[IFD_GPS_HINT].isEmpty()) {
-            mAttributes[IFD_TIFF_HINT].put(IFD_POINTER_TAGS[1].name,
-                    ExifAttribute.createULong(ifdOffsets[IFD_GPS_HINT], mExifByteOrder));
-        }
-        if (!mAttributes[IFD_INTEROPERABILITY_HINT].isEmpty()) {
-            mAttributes[IFD_EXIF_HINT].put(IFD_POINTER_TAGS[2].name, ExifAttribute.createULong(
-                    ifdOffsets[IFD_INTEROPERABILITY_HINT], mExifByteOrder));
-        }
-
-        // Write TIFF Headers. See JEITA CP-3451C Table 1. page 10.
-        dataOutputStream.writeUnsignedShort(totalSize);
-        dataOutputStream.write(IDENTIFIER_EXIF_APP1);
-        dataOutputStream.writeShort(mExifByteOrder == ByteOrder.BIG_ENDIAN
-                ? BYTE_ALIGN_MM : BYTE_ALIGN_II);
-        dataOutputStream.setByteOrder(mExifByteOrder);
-        dataOutputStream.writeUnsignedShort(0x2a);
-        dataOutputStream.writeUnsignedInt(8);
-
-        // Write IFD groups. See JEITA CP-3451C Figure 7. page 12.
-        for (int hint = 0; hint < EXIF_TAGS.length; ++hint) {
-            if (!mAttributes[hint].isEmpty()) {
-                // See JEITA CP-3451C 4.6.2 IFD structure. page 13.
-                // Write entry count
-                dataOutputStream.writeUnsignedShort(mAttributes[hint].size());
-
-                // Write entry info
-                int dataOffset = ifdOffsets[hint] + 2 + mAttributes[hint].size() * 12 + 4;
-                for (Map.Entry entry : (Set<Map.Entry>) mAttributes[hint].entrySet()) {
-                    // Convert tag name to tag number.
-                    final ExifTag tag = (ExifTag) sExifTagMapsForWriting[hint].get(entry.getKey());
-                    final int tagNumber = tag.number;
-                    final ExifAttribute attribute = (ExifAttribute) entry.getValue();
-                    final int size = attribute.size();
-
-                    dataOutputStream.writeUnsignedShort(tagNumber);
-                    dataOutputStream.writeUnsignedShort(attribute.format);
-                    dataOutputStream.writeInt(attribute.numberOfComponents);
-                    if (size > 4) {
-                        dataOutputStream.writeUnsignedInt(dataOffset);
-                        dataOffset += size;
-                    } else {
-                        dataOutputStream.write(attribute.bytes);
-                        // Fill zero up to 4 bytes
-                        if (size < 4) {
-                            for (int i = size; i < 4; ++i) {
-                                dataOutputStream.writeByte(0);
-                            }
-                        }
-                    }
-                }
-
-                // Write the next offset. It writes the offset of thumbnail IFD if there is one or
-                // more tags in the thumbnail IFD when the current IFD is the primary image TIFF
-                // IFD; Otherwise 0.
-                if (hint == 0 && !mAttributes[IFD_THUMBNAIL_HINT].isEmpty()) {
-                    dataOutputStream.writeUnsignedInt(ifdOffsets[IFD_THUMBNAIL_HINT]);
-                } else {
-                    dataOutputStream.writeUnsignedInt(0);
-                }
-
-                // Write values of data field exceeding 4 bytes after the next offset.
-                for (Map.Entry entry : (Set<Map.Entry>) mAttributes[hint].entrySet()) {
-                    ExifAttribute attribute = (ExifAttribute) entry.getValue();
-
-                    if (attribute.bytes.length > 4) {
-                        dataOutputStream.write(attribute.bytes, 0, attribute.bytes.length);
-                    }
-                }
-            }
-        }
-
-        // Write thumbnail
-        if (mHasThumbnail) {
-            dataOutputStream.write(getThumbnail());
-        }
-
-        // Reset the byte order to big endian in order to write remaining parts of the JPEG file.
-        dataOutputStream.setByteOrder(ByteOrder.BIG_ENDIAN);
-
-        return totalSize;
-    }
-
-    /**
-     * Determines the data format of EXIF entry value.
-     *
-     * @param entryValue The value to be determined.
-     * @return Returns two data formats gussed as a pair in integer. If there is no two candidate
-               data formats for the given entry value, returns {@code -1} in the second of the pair.
-     */
-    private static Pair<Integer, Integer> guessDataFormat(String entryValue) {
-        // See TIFF 6.0 spec Types. page 15.
-        // Take the first component if there are more than one component.
-        if (entryValue.contains(",")) {
-            String[] entryValues = entryValue.split(",");
-            Pair<Integer, Integer> dataFormat = guessDataFormat(entryValues[0]);
-            if (dataFormat.first == IFD_FORMAT_STRING) {
-                return dataFormat;
-            }
-            for (int i = 1; i < entryValues.length; ++i) {
-                final Pair<Integer, Integer> guessDataFormat = guessDataFormat(entryValues[i]);
-                int first = -1, second = -1;
-                if (guessDataFormat.first == dataFormat.first
-                        || guessDataFormat.second == dataFormat.first) {
-                    first = dataFormat.first;
-                }
-                if (dataFormat.second != -1 && (guessDataFormat.first == dataFormat.second
-                        || guessDataFormat.second == dataFormat.second)) {
-                    second = dataFormat.second;
-                }
-                if (first == -1 && second == -1) {
-                    return new Pair<>(IFD_FORMAT_STRING, -1);
-                }
-                if (first == -1) {
-                    dataFormat = new Pair<>(second, -1);
-                    continue;
-                }
-                if (second == -1) {
-                    dataFormat = new Pair<>(first, -1);
-                    continue;
-                }
-            }
-            return dataFormat;
-        }
-
-        if (entryValue.contains("/")) {
-            String[] rationalNumber = entryValue.split("/");
-            if (rationalNumber.length == 2) {
-                try {
-                    long numerator = Long.parseLong(rationalNumber[0]);
-                    long denominator = Long.parseLong(rationalNumber[1]);
-                    if (numerator < 0L || denominator < 0L) {
-                        return new Pair<>(IFD_FORMAT_SRATIONAL, - 1);
-                    }
-                    if (numerator > Integer.MAX_VALUE || denominator > Integer.MAX_VALUE) {
-                        return new Pair<>(IFD_FORMAT_URATIONAL, -1);
-                    }
-                    return new Pair<>(IFD_FORMAT_SRATIONAL, IFD_FORMAT_URATIONAL);
-                } catch (NumberFormatException e)  {
-                    // Ignored
-                }
-            }
-            return new Pair<>(IFD_FORMAT_STRING, -1);
-        }
-        try {
-            Long longValue = Long.parseLong(entryValue);
-            if (longValue >= 0 && longValue <= 65535) {
-                return new Pair<>(IFD_FORMAT_USHORT, IFD_FORMAT_ULONG);
-            }
-            if (longValue < 0) {
-                return new Pair<>(IFD_FORMAT_SLONG, -1);
-            }
-            return new Pair<>(IFD_FORMAT_ULONG, -1);
         } catch (NumberFormatException e) {
-            // Ignored
-        }
-        try {
-            Double.parseDouble(entryValue);
-            return new Pair<>(IFD_FORMAT_DOUBLE, -1);
-        } catch (NumberFormatException e) {
-            // Ignored
-        }
-        return new Pair<>(IFD_FORMAT_STRING, -1);
-    }
-
-    // An input stream to parse EXIF data area, which can be written in either little or big endian
-    // order.
-    private static class ByteOrderAwarenessDataInputStream extends ByteArrayInputStream {
-        private static final ByteOrder LITTLE_ENDIAN = ByteOrder.LITTLE_ENDIAN;
-        private static final ByteOrder BIG_ENDIAN = ByteOrder.BIG_ENDIAN;
-
-        private ByteOrder mByteOrder = ByteOrder.BIG_ENDIAN;
-        private final long mLength;
-        private long mPosition;
-
-        public ByteOrderAwarenessDataInputStream(byte[] bytes) {
-            super(bytes);
-            mLength = bytes.length;
-            mPosition = 0L;
-        }
-
-        public void setByteOrder(ByteOrder byteOrder) {
-            mByteOrder = byteOrder;
-        }
-
-        public void seek(long byteCount) throws IOException {
-            mPosition = 0L;
-            reset();
-            if (skip(byteCount) != byteCount) {
-                throw new IOException("Couldn't seek up to the byteCount");
-            }
-        }
-
-        public long peek() {
-            return mPosition;
-        }
-
-        public void readFully(byte[] buffer) throws IOException {
-            mPosition += buffer.length;
-            if (mPosition > mLength) {
-                throw new EOFException();
-            }
-            if (super.read(buffer, 0, buffer.length) != buffer.length) {
-                throw new IOException("Couldn't read up to the length of buffer");
-            }
-        }
-
-        public byte readByte() throws IOException {
-            ++mPosition;
-            if (mPosition > mLength) {
-                throw new EOFException();
-            }
-            int ch = super.read();
-            if (ch < 0) {
-                throw new EOFException();
-            }
-            return (byte) ch;
-        }
-
-        public short readShort() throws IOException {
-            mPosition += 2;
-            if (mPosition > mLength) {
-                throw new EOFException();
-            }
-            int ch1 = super.read();
-            int ch2 = super.read();
-            if ((ch1 | ch2) < 0) {
-                throw new EOFException();
-            }
-            if (mByteOrder == LITTLE_ENDIAN) {
-                return (short) ((ch2 << 8) + (ch1));
-            } else if (mByteOrder == BIG_ENDIAN) {
-                return (short) ((ch1 << 8) + (ch2));
-            }
-            throw new IOException("Invalid byte order: " + mByteOrder);
-        }
-
-        public int readInt() throws IOException {
-            mPosition += 4;
-            if (mPosition > mLength) {
-                throw new EOFException();
-            }
-            int ch1 = super.read();
-            int ch2 = super.read();
-            int ch3 = super.read();
-            int ch4 = super.read();
-            if ((ch1 | ch2 | ch3 | ch4) < 0) {
-                throw new EOFException();
-            }
-            if (mByteOrder == LITTLE_ENDIAN) {
-                return ((ch4 << 24) + (ch3 << 16) + (ch2 << 8) + ch1);
-            } else if (mByteOrder == BIG_ENDIAN) {
-                return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + ch4);
-            }
-            throw new IOException("Invalid byte order: " + mByteOrder);
-        }
-
-        @Override
-        public long skip(long byteCount) {
-            long skipped = super.skip(Math.min(byteCount, mLength - mPosition));
-            mPosition += skipped;
-            return skipped;
-        }
-
-        public int readUnsignedShort() throws IOException {
-            mPosition += 2;
-            if (mPosition > mLength) {
-                throw new EOFException();
-            }
-            int ch1 = super.read();
-            int ch2 = super.read();
-            if ((ch1 | ch2) < 0) {
-                throw new EOFException();
-            }
-            if (mByteOrder == LITTLE_ENDIAN) {
-                return ((ch2 << 8) + (ch1));
-            } else if (mByteOrder == BIG_ENDIAN) {
-                return ((ch1 << 8) + (ch2));
-            }
-            throw new IOException("Invalid byte order: " + mByteOrder);
-        }
-
-        public long readUnsignedInt() throws IOException {
-            return readInt() & 0xffffffffL;
-        }
-
-        public long readLong() throws IOException {
-            mPosition += 8;
-            if (mPosition > mLength) {
-                throw new EOFException();
-            }
-            int ch1 = super.read();
-            int ch2 = super.read();
-            int ch3 = super.read();
-            int ch4 = super.read();
-            int ch5 = super.read();
-            int ch6 = super.read();
-            int ch7 = super.read();
-            int ch8 = super.read();
-            if ((ch1 | ch2 | ch3 | ch4 | ch5 | ch6 | ch7 | ch8) < 0) {
-                throw new EOFException();
-            }
-            if (mByteOrder == LITTLE_ENDIAN) {
-                return (((long) ch8 << 56) + ((long) ch7 << 48) + ((long) ch6 << 40)
-                        + ((long) ch5 << 32) + ((long) ch4 << 24) + ((long) ch3 << 16)
-                        + ((long) ch2 << 8) + ch1);
-            } else if (mByteOrder == BIG_ENDIAN) {
-                return (((long) ch1 << 56) + ((long) ch2 << 48) + ((long) ch3 << 40)
-                        + ((long) ch4 << 32) + ((long) ch5 << 24) + ((long) ch6 << 16)
-                        + ((long) ch7 << 8) + ch8);
-            }
-            throw new IOException("Invalid byte order: " + mByteOrder);
-        }
-
-        public float readFloat() throws IOException {
-            return Float.intBitsToFloat(readInt());
-        }
-
-        public double readDouble() throws IOException {
-            return Double.longBitsToDouble(readLong());
+            // Some of the nubmers are not valid
+            throw new IllegalArgumentException();
+        } catch (ArrayIndexOutOfBoundsException e) {
+            // Some of the rational does not follow the correct format
+            throw new IllegalArgumentException();
         }
     }
 
-    // An output stream to write EXIF data area, which can be written in either little or big endian
-    // order.
-    private static class ByteOrderAwarenessDataOutputStream extends FilterOutputStream {
-        private final OutputStream mOutputStream;
-        private ByteOrder mByteOrder;
-
-        public ByteOrderAwarenessDataOutputStream(OutputStream out, ByteOrder byteOrder) {
-            super(out);
-            mOutputStream = out;
-            mByteOrder = byteOrder;
-        }
-
-        public void setByteOrder(ByteOrder byteOrder) {
-            mByteOrder = byteOrder;
-        }
-
-        public void write(byte[] bytes) throws IOException {
-            mOutputStream.write(bytes);
-        }
-
-        public void write(byte[] bytes, int offset, int length) throws IOException {
-            mOutputStream.write(bytes, offset, length);
-        }
+    private native boolean appendThumbnailNative(String fileName,
+            String thumbnailFileName);
 
-        public void writeByte(int val) throws IOException {
-            mOutputStream.write(val);
-        }
+    private native void saveAttributesNative(String fileName,
+            String compressedAttributes);
 
-        public void writeShort(short val) throws IOException {
-            if (mByteOrder == ByteOrder.LITTLE_ENDIAN) {
-                mOutputStream.write((val >>> 0) & 0xFF);
-                mOutputStream.write((val >>> 8) & 0xFF);
-            } else if (mByteOrder == ByteOrder.BIG_ENDIAN) {
-                mOutputStream.write((val >>> 8) & 0xFF);
-                mOutputStream.write((val >>> 0) & 0xFF);
-            }
-        }
+    private native String getAttributesNative(String fileName);
 
-        public void writeInt(int val) throws IOException {
-            if (mByteOrder == ByteOrder.LITTLE_ENDIAN) {
-                mOutputStream.write((val >>> 0) & 0xFF);
-                mOutputStream.write((val >>> 8) & 0xFF);
-                mOutputStream.write((val >>> 16) & 0xFF);
-                mOutputStream.write((val >>> 24) & 0xFF);
-            } else if (mByteOrder == ByteOrder.BIG_ENDIAN) {
-                mOutputStream.write((val >>> 24) & 0xFF);
-                mOutputStream.write((val >>> 16) & 0xFF);
-                mOutputStream.write((val >>> 8) & 0xFF);
-                mOutputStream.write((val >>> 0) & 0xFF);
-            }
-        }
+    private native void commitChangesNative(String fileName);
 
-        public void writeUnsignedShort(int val) throws IOException {
-            writeShort((short) val);
-        }
+    private native byte[] getThumbnailNative(String fileName);
 
-        public void writeUnsignedInt(long val) throws IOException {
-            writeInt((int) val);
-        }
-    }
+    private native long[] getThumbnailRangeNative(String fileName);
 }
diff --git a/media/java/android/media/IAudioService.aidl b/media/java/android/media/IAudioService.aidl
index acbf967..cdcd83c 100644
--- a/media/java/android/media/IAudioService.aidl
+++ b/media/java/android/media/IAudioService.aidl
@@ -63,8 +63,6 @@ interface IAudioService {
 
     int getStreamMaxVolume(int streamType);
 
-    void setStreamMaxVolume(int streamType, int maxVol);
-
     int getLastAudibleStreamVolume(int streamType);
 
     void setMicrophoneMute(boolean on, String callingPackage, int userId);
@@ -234,14 +232,4 @@ interface IAudioService {
 
     String getCurrentHotwordInputPackageName();
 
-    /**
-     * Internal TeamEos api to protect Pulse
-     * @hide
-     */
-    void setVisualizerLocked(boolean doLock);
-
-    /**
-     * @hide
-     */
-    boolean isVisualizerLocked(String callingPackage);
 }
diff --git a/media/java/android/media/MediaActionSound.java b/media/java/android/media/MediaActionSound.java
index e9bffe2..1fee587 100644
--- a/media/java/android/media/MediaActionSound.java
+++ b/media/java/android/media/MediaActionSound.java
@@ -18,7 +18,6 @@ package android.media;
 
 import android.media.AudioManager;
 import android.media.SoundPool;
-import android.os.SystemProperties;
 import android.util.Log;
 
 /**
@@ -91,8 +90,6 @@ public class MediaActionSound {
 
     private static final int SOUND_NOT_LOADED = -1;
 
-    private static final String PROP_CAMERA_SOUND = "persist.sys.camera-sound";
-
     /**
      * Construct a new MediaActionSound instance. Only a single instance is
      * needed for playing any platform media action sound; you do not need a
@@ -163,17 +160,15 @@ public class MediaActionSound {
      * @see #STOP_VIDEO_RECORDING
      */
     public synchronized void play(int soundName) {
-        if (SystemProperties.getBoolean(PROP_CAMERA_SOUND, true)) {
-            if (soundName < 0 || soundName >= SOUND_FILES.length) {
-             throw new RuntimeException("Unknown sound requested: " + soundName);
-            }
-            if (mSoundIds[soundName] == SOUND_NOT_LOADED) {
-                mSoundIdToPlay =
-                        mSoundPool.load(SOUND_FILES[soundName], 1);
-                mSoundIds[soundName] = mSoundIdToPlay;
-            } else {
-                mSoundPool.play(mSoundIds[soundName], 1.0f, 1.0f, 0, 0, 1.0f);
-            }
+        if (soundName < 0 || soundName >= SOUND_FILES.length) {
+            throw new RuntimeException("Unknown sound requested: " + soundName);
+        }
+        if (mSoundIds[soundName] == SOUND_NOT_LOADED) {
+            mSoundIdToPlay =
+                    mSoundPool.load(SOUND_FILES[soundName], 1);
+            mSoundIds[soundName] = mSoundIdToPlay;
+        } else {
+            mSoundPool.play(mSoundIds[soundName], 1.0f, 1.0f, 0, 0, 1.0f);
         }
     }
 
diff --git a/media/java/android/media/audiofx/Visualizer.java b/media/java/android/media/audiofx/Visualizer.java
index 033f5f0..0fe7246 100644
--- a/media/java/android/media/audiofx/Visualizer.java
+++ b/media/java/android/media/audiofx/Visualizer.java
@@ -17,18 +17,11 @@
 package android.media.audiofx;
 
 import android.app.ActivityThread;
-import android.content.Context;
 import android.util.Log;
 import java.lang.ref.WeakReference;
-
-import android.media.IAudioService;
-import android.os.Binder;
 import android.os.Handler;
-import android.os.IBinder;
 import android.os.Looper;
 import android.os.Message;
-import android.os.RemoteException;
-import android.os.ServiceManager;
 
 /**
  * The Visualizer class enables application to retrieve part of the currently playing audio for
@@ -213,29 +206,6 @@ public class Visualizer {
 
         synchronized (mStateLock) {
             mState = STATE_UNINITIALIZED;
-
-            // if audio service locks us out, stay uninitialized
-            // throw UnsupportedOperationException as caller is required
-            // to catch and handle it
-            boolean isLocked = false;
-            String packageName = "";
-            try {
-                IBinder b = ServiceManager.getService(Context.AUDIO_SERVICE);
-                IAudioService audioService = IAudioService.Stub.asInterface(b);
-                packageName = ActivityThread.currentPackageName();
-                if (packageName == null && android.os.Process.SYSTEM_UID == Binder.getCallingUid()) {
-                    packageName = "android";
-                }
-                isLocked = audioService.isVisualizerLocked(packageName);
-            } catch (RemoteException e) {
-                Log.e(TAG,
-                        "Error checking visualizer lock in AudioManager, disabling visualizer lock");
-            }
-            if (isLocked) {
-                throw (new UnsupportedOperationException(packageName
-                        + " is locked out from Visualizer by Pulse"));
-            }
-
             // native initialization
             int result = native_setup(new WeakReference<Visualizer>(this), audioSession, id,
                     ActivityThread.currentOpPackageName());
diff --git a/media/jni/Android.mk b/media/jni/Android.mk
index 241df15..79557bc 100644
--- a/media/jni/Android.mk
+++ b/media/jni/Android.mk
@@ -42,9 +42,13 @@ LOCAL_SHARED_LIBRARIES := \
     libcamera_client \
     libmtp \
     libusbhost \
+    libjhead \
     libexif \
     libstagefright_amrnb_common
 
+LOCAL_REQUIRED_MODULES := \
+    libjhead_jni
+
 LOCAL_STATIC_LIBRARIES := \
     libstagefright_amrnbenc
 
diff --git a/packages/BackupRestoreConfirmation/res/values-csb-rPL/strings.xml b/packages/BackupRestoreConfirmation/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..803e4a8
--- /dev/null
+++ b/packages/BackupRestoreConfirmation/res/values-csb-rPL/strings.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2011 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+  
+          http://www.apache.org/licenses/LICENSE-2.0
+  
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Title of the activity when a full backup has been requested and must be confirmed -->
+  <!-- Title of the activity when a full restore has been requested and must be confirmed -->
+  <!-- Text for message to user that a full backup has been requested, and must be confirmed. -->
+  <!-- Button to allow a requested full backup to occur -->
+  <!-- Button to refuse to allow the requested full backup -->
+  <!-- Text for message to user that a full restore has been requested, and must be confirmed. -->
+  <!-- Button to allow a requested full restore to occur -->
+  <!-- Button to refuse to allow the requested full restore -->
+  <!-- Text for message to user that they must enter their predefined backup password in order to perform this operation. -->
+  <!-- Text for message to user that they must enter their device encryption password in order to perform this restore operation. -->
+  <!-- Text for message to user that they must enter their device encryption password in order to perform this backup operation. -->
+  <!-- Text for message to user that they must enter an encryption password to use for the full backup operation. -->
+  <!-- Text for message to user that they may optionally supply an encryption password to use for a full backup operation. -->
+  <!-- Text for message to user that they must supply an encryption password to use for a full backup operation because their phone is locked. -->
+  <!-- Text for message to user when performing a full restore operation, explaining that they must enter the password originally used to encrypt the full backup data. -->
+  <!-- Text of a toast telling the user that a full backup operation has begun -->
+  <!-- Text of a toast telling the user that a full backup operation has ended -->
+  <!-- Text of a toast telling the user that a full restore operation has begun -->
+  <!-- Text of a toast telling the user that a full restore operation has ended -->
+  <!-- Text of a toast telling the user that the operation has timed out -->
+</resources>
diff --git a/packages/DefaultContainerService/res/values-csb-rPL/strings.xml b/packages/DefaultContainerService/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..e75a0d0
--- /dev/null
+++ b/packages/DefaultContainerService/res/values-csb-rPL/strings.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/*
+**
+** Copyright 2008, The Android Open Source Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- service name [CHAR LIMIT=25]  -->
+</resources>
diff --git a/packages/DocumentsUI/res/drawable/item_doc_list_background.xml b/packages/DocumentsUI/res/drawable/item_doc_list_background.xml
index 4ee60e0..13910bb 100644
--- a/packages/DocumentsUI/res/drawable/item_doc_list_background.xml
+++ b/packages/DocumentsUI/res/drawable/item_doc_list_background.xml
@@ -16,5 +16,5 @@
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
        android:shape="rectangle">
-    <solid android:color="?android:attr/colorBackground" />
+    <solid android:color="@color/item_doc_list_background_activated" />
 </shape>
diff --git a/packages/DocumentsUI/res/layout/activity.xml b/packages/DocumentsUI/res/layout/activity.xml
index efd5d72..8c35e54 100644
--- a/packages/DocumentsUI/res/layout/activity.xml
+++ b/packages/DocumentsUI/res/layout/activity.xml
@@ -51,7 +51,7 @@
             android:id="@+id/container_save"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:background="?android:attr/colorBackground"
+            android:background="@color/material_grey_50"
             android:elevation="8dp" />
 
     </LinearLayout>
diff --git a/packages/DocumentsUI/res/layout/item_doc_list.xml b/packages/DocumentsUI/res/layout/item_doc_list.xml
index 0bc7811..c576669 100644
--- a/packages/DocumentsUI/res/layout/item_doc_list.xml
+++ b/packages/DocumentsUI/res/layout/item_doc_list.xml
@@ -131,11 +131,4 @@
 
     </LinearLayout>
 
-    <ImageView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:src="@drawable/item_doc_grid_overlay"
-        android:contentDescription="@null"
-        android:duplicateParentState="true" />
-
 </FrameLayout>
diff --git a/packages/DocumentsUI/res/values-csb-rPL/strings.xml b/packages/DocumentsUI/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..1d6f5fa
--- /dev/null
+++ b/packages/DocumentsUI/res/values-csb-rPL/strings.xml
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2013 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Title of the documents application [CHAR LIMIT=32] -->
+  <!-- Action bar title prompting user to choose a location to open a document from [CHAR LIMIT=32] -->
+  <!-- Action bar title prompting user to choose a location to save a document to [CHAR LIMIT=32] -->
+  <!-- Menu item that creates a new directory/folder at the current location [CHAR LIMIT=24] -->
+  <!-- Menu item that switches view to show documents as a large-format grid of thumbnails [CHAR LIMIT=24] -->
+  <!-- Menu item that switches view to show documents as a list [CHAR LIMIT=24] -->
+  <!-- Menu item that switches the criteria with which documents are sorted [CHAR LIMIT=24] -->
+  <!-- Menu item that enters a mode to search for documents [CHAR LIMIT=24] -->
+  <!-- Menu item that enters activity to change settings [CHAR LIMIT=24] -->
+  <!-- Menu item title that opens the selected documents [CHAR LIMIT=24] -->
+  <!-- Menu item title that saves the current document [CHAR LIMIT=24] -->
+  <!-- Menu item title that shares the selected documents [CHAR LIMIT=24] -->
+  <!-- Menu item title that deletes the selected documents [CHAR LIMIT=24] -->
+  <!-- Menu item title that selects all documents in the current directory [CHAR LIMIT=24] -->
+  <!-- Menu item title that copies the selected documents [CHAR LIMIT=24] -->
+  <!-- Menu item that reveals internal storage built into the device [CHAR LIMIT=24] -->
+  <!-- Menu item that reveals SD cards built into the device [CHAR LIMIT=24] -->
+  <!-- Menu item that hides internal storage built into the device [CHAR LIMIT=24] -->
+  <!-- Menu item that hides SD cards built into the device [CHAR LIMIT=24] -->
+  <!-- Menu item that reveals the sizes of displayed files [CHAR LIMIT=24] -->
+  <!-- Menu item that hides the sizes of displayed files [CHAR LIMIT=24] -->
+  <!-- Button label that select the current directory [CHAR LIMIT=24] -->
+  <!-- Button label that copies files to the current directory [CHAR LIMIT=24] -->
+  <!-- Mode that sorts documents by their display name alphabetically [CHAR LIMIT=24] -->
+  <!-- Mode that sorts documents by their last modified time in descending order; most recent first [CHAR LIMIT=24] -->
+  <!-- Mode that sorts documents by their file size in descending order; largest first [CHAR LIMIT=24] -->
+  <!-- Accessibility title to open the drawer showing all roots where documents can be stored [CHAR LIMIT=32] -->
+  <!-- Accessibility title to close the drawer showing all roots where documents can be stored [CHAR LIMIT=32] -->
+  <!-- Toast shown when saving a document failed with an error [CHAR LIMIT=48] -->
+  <!-- Toast shown when creating a folder failed with an error [CHAR LIMIT=48] -->
+  <!-- Error message shown when querying for a list of documents failed [CHAR LIMIT=48] -->
+  <!-- Title of storage root location that contains recently modified or used documents [CHAR LIMIT=24] -->
+  <!-- Subtitle of storage root indicating the total free space available, in bytes [CHAR LIMIT=24] -->
+  <!-- Header title for list of storage roots that contains cloud services [CHAR LIMIT=24] -->
+  <!-- Header title for list of storage roots that contains shortcuts to documents that may be available elsewhere [CHAR LIMIT=24] -->
+  <!-- Header title for list of storage roots that contains physical devices [CHAR LIMIT=24] -->
+  <!-- Header title for list of additional apps that can provide documents [CHAR LIMIT=24] -->
+  <!-- Text shown when a directory of documents is empty [CHAR LIMIT=24] -->
+  <!-- Toast shown when no app can be found to open the selected document [CHAR LIMIT=48] -->
+  <!-- Toast shown when some of the selected documents failed to be deleted [CHAR LIMIT=48] -->
+  <!-- Title of dialog when prompting user to select an app to share documents with [CHAR LIMIT=32] -->
+  <!-- Title of the copy notification [CHAR LIMIT=24] -->
+  <!-- Text shown on the copy notification to indicate remaining time, in minutes [CHAR LIMIT=24] -->
+  <!-- Toast shown when a file copy is kicked off -->
+  <!-- Text shown on the copy notification while DocumentsUI performs setup in preparation for copying files [CHAR LIMIT=32] -->
+  <!-- Title of the copy error notification [CHAR LIMIT=48] -->
+  <!-- Second line for notifications saying that more information will be shown after touching [CHAR LIMIT=48] -->
+  <!-- Label of a dialog button for retrying a failed operation [CHAR LIMIT=24] -->
+  <!-- Contents of the copying failure alert dialog. [CHAR LIMIT=48] -->
+</resources>
diff --git a/packages/DocumentsUI/res/values-sw720dp/styles.xml b/packages/DocumentsUI/res/values-sw720dp/styles.xml
index 0b03a94..d7c031e 100644
--- a/packages/DocumentsUI/res/values-sw720dp/styles.xml
+++ b/packages/DocumentsUI/res/values-sw720dp/styles.xml
@@ -16,7 +16,7 @@
 
 <resources xmlns:android="http://schemas.android.com/apk/res/android">
 
-    <style name="DialogWhenReallyLarge" parent="@*android:style/Theme.Material.DayNight.Dialog">
+    <style name="DialogWhenReallyLarge" parent="@*android:style/Theme.DeviceDefault.Light.Dialog">
         <!-- We do not specify width of window here because the max size of
              floating window specified by windowFixedWidthis is limited. -->
         <item name="*android:windowFixedHeightMajor">80%</item>
diff --git a/packages/DocumentsUI/res/values/styles.xml b/packages/DocumentsUI/res/values/styles.xml
index 1ed6a80..8c4b777 100644
--- a/packages/DocumentsUI/res/values/styles.xml
+++ b/packages/DocumentsUI/res/values/styles.xml
@@ -16,12 +16,12 @@
 
 <resources xmlns:android="http://schemas.android.com/apk/res/android">
 
-    <style name="DialogWhenReallyLarge" parent="@android:style/Theme.Material.DayNight.DarkActionBar" />
+    <style name="DialogWhenReallyLarge" parent="@android:style/Theme.DeviceDefault.Light.DarkActionBar" />
 
     <style name="DocumentsTheme" parent="@style/DialogWhenReallyLarge">
         <item name="android:actionBarWidgetTheme">@null</item>
         <item name="android:actionBarTheme">@*android:style/ThemeOverlay.Material.Dark.ActionBar</item>
-        <item name="android:actionModeBackground">@drawable/actionmode_background</item>
+        <item name="android:actionBarPopupTheme">@*android:style/ThemeOverlay.Material.Light</item>
 
         <item name="android:colorPrimaryDark">@*android:color/material_blue_grey_900</item>
         <item name="android:colorPrimary">@*android:color/material_blue_grey_800</item>
@@ -35,4 +35,5 @@
 
         <item name="android:windowSoftInputMode">stateUnspecified|adjustUnspecified</item>
     </style>
+
 </resources>
diff --git a/packages/DocumentsUI/src/com/android/documentsui/LocalPreferences.java b/packages/DocumentsUI/src/com/android/documentsui/LocalPreferences.java
index 2e28500..e6c5ae2 100644
--- a/packages/DocumentsUI/src/com/android/documentsui/LocalPreferences.java
+++ b/packages/DocumentsUI/src/com/android/documentsui/LocalPreferences.java
@@ -24,15 +24,13 @@ public class LocalPreferences {
     private static final String KEY_FILE_SIZE = "fileSize";
 
     public static boolean getDisplayAdvancedDevices(Context context) {
-        boolean defaultAdvanced = context.getResources()
-                .getBoolean(R.bool.config_defaultAdvancedDevices);
         return PreferenceManager.getDefaultSharedPreferences(context)
-                .getBoolean(KEY_ADVANCED_DEVICES, true);
+                .getBoolean(KEY_ADVANCED_DEVICES, false);
     }
 
     public static boolean getDisplayFileSize(Context context) {
         return PreferenceManager.getDefaultSharedPreferences(context)
-                .getBoolean(KEY_FILE_SIZE, true);
+                .getBoolean(KEY_FILE_SIZE, false);
     }
 
     public static void setDisplayAdvancedDevices(Context context, boolean display) {
diff --git a/packages/ExternalStorageProvider/res/values-csb-rPL/strings.xml b/packages/ExternalStorageProvider/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..62b79f8
--- /dev/null
+++ b/packages/ExternalStorageProvider/res/values-csb-rPL/strings.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2013 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+  <!-- Title of the external storage application [CHAR LIMIT=32] -->
+  <!-- Title for documents backend that offers internal storage. [CHAR LIMIT=24] -->
+  <!-- Title for documents backend that offers documents. [CHAR LIMIT=24] -->
+</resources>
diff --git a/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java b/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java
index 982e589..46b73d8 100644
--- a/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java
+++ b/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java
@@ -388,7 +388,7 @@ public class ExternalStorageProvider extends DocumentsProvider {
 
     @Override
     public void deleteDocument(String docId) throws FileNotFoundException {
-        final File file = getFileForDocId(docId,true);
+        final File file = getFileForDocId(docId);
         final boolean isDirectory = file.isDirectory();
         if (isDirectory) {
             FileUtils.deleteContents(file);
diff --git a/packages/FusedLocation/res/values-csb-rPL/strings.xml b/packages/FusedLocation/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..19fd84c
--- /dev/null
+++ b/packages/FusedLocation/res/values-csb-rPL/strings.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<resources>
+  <!-- Name of the application. [CHAR LIMIT=35] -->
+</resources>
diff --git a/packages/InputDevices/res/values-csb-rPL/strings.xml b/packages/InputDevices/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..1f992a5
--- /dev/null
+++ b/packages/InputDevices/res/values-csb-rPL/strings.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<resources>
+  <!-- Name of the application. [CHAR LIMIT=35] -->
+  <!-- Keyboard layouts label, used to describe the set of all built-in layouts in the UI. [CHAR LIMIT=35] -->
+  <!-- UK English keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- US English keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- US English (International style) keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- US English (Colemak style) keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- US English (Dvorak style) keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- German keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- French keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Canadian French keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Russian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Russian (Mac style) keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Spanish keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Swiss French keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Swiss German keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Belgian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Bulgarian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Italian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Danish keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Norwegian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Swedish keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Finnish keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Croatian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Czech keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Estonian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Hungarian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Icelandic keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Brazilian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Portuguese keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Slovak keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Slovenian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Turkish keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Ukrainian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Arabic keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Greek keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Hebrew keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Lithuanian keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Spanish (Latin) keyboard layout label. [CHAR LIMIT=35] -->
+  <!-- Latvian keyboard layout label. [CHAR LIMIT=35] -->
+</resources>
diff --git a/packages/Keyguard/AndroidManifest.xml b/packages/Keyguard/AndroidManifest.xml
index 19eb01c..e19246c 100644
--- a/packages/Keyguard/AndroidManifest.xml
+++ b/packages/Keyguard/AndroidManifest.xml
@@ -41,8 +41,6 @@
     <uses-permission android:name="android.permission.ACCESS_KEYGUARD_SECURE_STORAGE" />
     <uses-permission android:name="android.permission.TRUST_LISTENER" />
     <uses-permission android:name="android.permission.USE_FINGERPRINT" />
-    <uses-permission android:name="com.cyanogenmod.lockclock.permission.READ_WEATHER" />
-    <uses-permission android:name="android.permission.CONTROL_KEYGUARD" />	
 
     <application android:label="@string/app_name"
         android:process="com.android.systemui"
diff --git a/packages/Keyguard/res/layout/keyguard_status_view.xml b/packages/Keyguard/res/layout/keyguard_status_view.xml
index e8b5cbf..e957f6a 100644
--- a/packages/Keyguard/res/layout/keyguard_status_view.xml
+++ b/packages/Keyguard/res/layout/keyguard_status_view.xml
@@ -34,6 +34,7 @@
         android:layout_height="wrap_content"
         android:layout_gravity="center_horizontal|top"
         android:orientation="vertical" >
+
         <TextClock
             android:id="@+id/clock_view"
             android:layout_width="wrap_content"
@@ -47,7 +48,19 @@
             android:layout_marginBottom="@dimen/bottom_text_spacing_digital" />
 
         <include layout="@layout/keyguard_status_area" />
-        <include layout="@layout/keyguard_weather_view" />
+
+        <TextView android:id="@+id/weather_info"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:textColor="@color/clock_white"
+            style="@style/widget_label"
+            android:textAllCaps="true"
+            android:letterSpacing="0.15"
+            android:gravity="center"
+            android:singleLine="true"
+            android:visibility="gone"/>
+
         <TextView
             android:id="@+id/owner_info"
             android:layout_marginLeft="16dp"
@@ -62,10 +75,5 @@
             android:ellipsize="marquee"
             android:singleLine="true" />
 
-        <include layout="@layout/keyguard_shortcuts"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"/>
-
     </LinearLayout>
 </com.android.keyguard.KeyguardStatusView>
diff --git a/packages/Keyguard/res/values-csb-rPL/cm_strings.xml b/packages/Keyguard/res/values-csb-rPL/cm_strings.xml
new file mode 100644
index 0000000..0ba09aa
--- /dev/null
+++ b/packages/Keyguard/res/values-csb-rPL/cm_strings.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+     Copyright (C) 2012-2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- When the user inserts a sim card with some personalization enabled -->
+  <!-- Shown in the lock screen when there is SIM card IO error. -->
+  <!-- Instructions telling the user remaining times when enter SIM PIN view.  -->
+  <!-- Shown in the KeyguardSimPinView when entry length is too short. -->
+</resources>
diff --git a/packages/Keyguard/res/values-csb-rPL/strings.xml b/packages/Keyguard/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..b53b53e
--- /dev/null
+++ b/packages/Keyguard/res/values-csb-rPL/strings.xml
@@ -0,0 +1,142 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/* //device/apps/common/assets/res/any/strings.xml
+**
+** Copyright 2006, The Android Open Source Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- App label in the manifest  -->
+  <!-- Instructions telling the user to enter their SIM PIN to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user to enter their SIM PUK to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Prompt to enter SIM PUK in Edit Text Box in unlock screen -->
+  <!-- Prompt to enter New SIM PIN in Edit Text Box in unlock screen -->
+  <!-- Displayed as hint in passwordEntry EditText on PasswordUnlockScreen [CHAR LIMIT=30]-->
+  <!-- Instructions telling the user to enter their text password to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user to enter their PIN password to unlock the keyguard.
+         Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user that they entered the wrong pin while trying
+         to unlock the keyguard.  Displayed in one line in a large font.  -->
+  <!-- When the lock screen is showing, the phone is plugged in and the battery is fully
+         charged, say that it is charged. -->
+  <!-- When the lock screen is showing and the phone plugged in, and the battery
+         is not fully charged, say that it's charging.  -->
+  <!-- When the lock screen is showing and the phone plugged in, and the battery
+         is not fully charged, and it's plugged into a fast charger, say that it's charging fast.  -->
+  <!-- When the lock screen is showing and the phone plugged in, and the battery
+         is not fully charged, and it's plugged into a slow charger, say that it's charging slowly.  -->
+  <!-- When the lock screen is showing and the battery is low, warn user to plug
+         in the phone soon. -->
+  <!-- On the keyguard screen, when pattern lock is disabled, only tell them to press menu to unlock.  This is shown in small font at the bottom. -->
+  <!-- SIM messages -->
+  <!-- When the user inserts a sim card from an unsupported network, it becomes network locked -->
+  <!-- Shown when there is no SIM card. -->
+  <!-- Shown when there is no SIM card. -->
+  <!-- Shown when there is no SIM card. -->
+  <!-- Shown to ask the user to insert a SIM card. -->
+  <!-- Shown to ask the user to insert a SIM card when sim is missing or not readable. -->
+  <!-- Shown when SIM card is permanently disabled. -->
+  <!-- Shown to inform the user to SIM card is permanently disabled. -->
+  <!-- Shown to tell the user that their SIM is locked and they must unlock it. -->
+  <!-- When the user enters a wrong sim pin too many times, it becomes PUK locked (Pin Unlock Kode) -->
+  <!-- For the unlock screen, When the user enters a sim unlock code, it takes a little while to check
+         whether it is valid, and to unlock the sim if it is valid.  we display a
+         progress dialog in the meantime.  this is the emssage. -->
+  <!-- Time format strings for fall-back clock widget -->
+  <!-- Time format strings for fall-back clock widget -->
+  <!-- Accessibility description of the pin lock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the password lock. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the unlock pattern area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the unlock slide area. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the PIN password view. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the SIM PIN password view. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description of the SIM PUK password view. [CHAR_LIMIT=none] -->
+  <!-- Accessibility description for the text view that indicates when the next alarm is set (not shown on screen). [CHAR_LIMIT=none] -->
+  <!-- KeyguardPinView - accessibility support -->
+  <!-- Description of the Delete button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Description of the Enter button in a KeyboardView. [CHAR LIMIT=NONE] -->
+  <!-- Message shown in pattern unlock after some number of unsuccessful attempts -->
+  <!-- Message shown when user enters wrong pattern -->
+  <!-- Message shown when user enters wrong password -->
+  <!-- Message shown when user enters wrong PIN -->
+  <!-- Countdown message shown after too many failed unlock attempts -->
+  <!-- Instructions for using the pattern unlock screen -->
+  <!-- Instructions for using the SIM PIN unlock screen -->
+  <!-- Instructions for using the SIM PIN unlock screen when there's more than one SIM -->
+  <!-- Instructions for using the PIN unlock screen -->
+  <!-- Instructions for using the password unlock screen -->
+  <!-- Hint shown in the PUK screen that asks the user to enter the PUK code given to them by their provider -->
+  <!-- Hint shown when there are multiple SIMs in the device to ask the user to enter the PUK code given to them by their provider -->
+  <!-- Hint shown in the PUK unlock screen PIN TextView -->
+  <!-- Message shown when the user needs to confirm the PIN they just entered in the PUK screen -->
+  <!-- Message shown in dialog while the device is unlocking the SIM card -->
+  <!-- Message shown when the user enters an invalid SIM pin password in PUK screen -->
+  <!-- Message shown when the user enters an invalid PUK code in the PUK screen -->
+  <!-- Message shown when the user enters an invalid PUK code -->
+  <!-- String shown in PUK screen when PIN codes don't match -->
+  <!-- Message shown when the user exceeds the maximum number of pattern attempts -->
+  <!-- Message shown in dialog when max number of attempts are reached for PIN screen of keyguard -->
+  <!-- Message shown in dialog when max number of attempts are reached for password screen of keyguard -->
+  <!-- Message shown when user is almost at the limit of password attempts where the device will be wiped. [CHAR LIMIT=none] -->
+  <!-- Message shown when user is almost at the limit of password attempts where the device will be wiped. [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped [CHAR LIMIT=none] -->
+  <!-- Message shown when user is almost at the limit of password attempts where the user will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown when user is almost at the limit of password attempts where the user will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the user will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the user will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown when user is almost at the limit of password attempts where the profile will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown when user is almost at the limit of password attempts where the profile will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the profile will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user has exceeded the maximum attempts and the profile will be removed. [CHAR LIMIT=none] -->
+  <!-- Message shown in dialog when user is almost at the limit where they will be
+    locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- Message shown in dialog when user is almost at the limit where they will be
+    locked out and may have to enter an alternate username/password to unlock the phone -->
+  <!-- Instructions telling the user that they entered the wrong SIM PIN for the last time.
+         Displayed in a dialog box.  -->
+  <!-- Instructions telling the user that they entered the wrong SIM PIN while trying
+         to unlock the keyguard.  Displayed in a dialog box.  -->
+  <!-- Instructions telling the user that they have exhausted SIM PUK retries and the SIM is now unusable.
+         Displayed in a dialog box.  -->
+  <!-- Instructions telling the user that they entered the wrong puk while trying
+         to unlock the keyguard.  Displayed in a dialog box.  -->
+  <!-- Instructions telling the user that the operation to unlock the keyguard
+         with SIM PIN failed. Displayed in one line in a large font.  -->
+  <!-- Instructions telling the user that the operation to unlock the keyguard
+         with PUK failed. Displayed in one line in a large font.  -->
+  <!-- Notification telling the user that the PIN1 they entered is valid -->
+  <!-- On the keyguard screen, it shows the carrier the phone is connected to.
+        This is displayed if the phone is not connected to a carrier.-->
+  <!-- Content description of the switch input method button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Description of airplane mode -->
+  <!-- An explanation text that the pattern needs to be solved since the device has just been restarted. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the pin needs to be entered since the device has just been restarted. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the password needs to be entered since the device has just been restarted. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the pattern needs to be solved since the user hasn't used strong authentication since quite some time. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the pin needs to be entered since the user hasn't used strong authentication since quite some time. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the password needs to be entered since the user hasn't used strong authentication since quite some time. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the pattern needs to be solved since profiles have just been switched. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the pin needs to be entered since profiles have just been switched. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the password needs to be entered since profiles have just been switched. [CHAR LIMIT=80] -->
+  <!-- An explanation text that the pattern needs to be solved since it hasn't been solved in a while. [CHAR LIMIT=80]-->
+  <!-- An explanation text that the pin needs to be entered since it hasn't been entered in a while. [CHAR LIMIT=80]-->
+  <!-- An explanation text that the password needs to be entered since it hasn't been entered in a while. [CHAR LIMIT=80]-->
+  <!-- Fingerprint hint message when finger was not recognized.-->
+</resources>
diff --git a/packages/Keyguard/res/values-et-rEE/cm_strings.xml b/packages/Keyguard/res/values-et-rEE/cm_strings.xml
index 3a284d7..b3636d7 100644
--- a/packages/Keyguard/res/values-et-rEE/cm_strings.xml
+++ b/packages/Keyguard/res/values-et-rEE/cm_strings.xml
@@ -17,10 +17,8 @@
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <!-- When the user inserts a sim card with some personalization enabled -->
-  <string name="keyguard_perso_locked_message">SIM/RUIM on Perso lukustatud</string>
   <!-- Shown in the lock screen when there is SIM card IO error. -->
   <string name="lockscreen_sim_error_message_short">Kehtetu kaart.</string>
   <!-- Instructions telling the user remaining times when enter SIM PIN view.  -->
   <!-- Shown in the KeyguardSimPinView when entry length is too short. -->
-  <string name="kg_invalid_sim_length">Viga: PIN liiga lühike</string>
 </resources>
diff --git a/packages/Keyguard/res/values-in/cm_strings.xml b/packages/Keyguard/res/values-in/cm_strings.xml
index 425e877..17626e1 100644
--- a/packages/Keyguard/res/values-in/cm_strings.xml
+++ b/packages/Keyguard/res/values-in/cm_strings.xml
@@ -17,9 +17,13 @@
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <!-- When the user inserts a sim card with some personalization enabled -->
-  <string name="keyguard_perso_locked_message">Kartu SIM terkunci operator seluler lain</string>
+  <string name="keyguard_perso_locked_message">Perangkat/Kartu SIM terkunci ke operator seluler lain</string>
   <!-- Shown in the lock screen when there is SIM card IO error. -->
+  <string name="lockscreen_sim_error_message_short">Kartu tidak valid.</string>
   <!-- Instructions telling the user remaining times when enter SIM PIN view.  -->
+  <plurals name="kg_password_default_pin_message">
+    <item quantity="other">Masukkan PIN SIM, Anda memiliki <xliff:g id="number">%d</xliff:g> upaya tersisa.</item>
+  </plurals>
   <!-- Shown in the KeyguardSimPinView when entry length is too short. -->
-  <string name="kg_invalid_sim_length">Kesalahan: Masukan lebih pendek dari panjang minimum</string>
+  <string name="kg_invalid_sim_length">Kekeliruan: Pemasukan lebih pendek daripada panjang minimum</string>
 </resources>
diff --git a/packages/Keyguard/res/values-sw600dp-land/dimens.xml b/packages/Keyguard/res/values-sw600dp-land/dimens.xml
index 38bf512..a487644 100644
--- a/packages/Keyguard/res/values-sw600dp-land/dimens.xml
+++ b/packages/Keyguard/res/values-sw600dp-land/dimens.xml
@@ -20,5 +20,5 @@
 <resources>
 
     <!-- Overload default clock widget parameters -->
-    <dimen name="widget_big_font_size">80dp</dimen>
-</resources>
+    <dimen name="widget_big_font_size">100dp</dimen>
+</resources>
\ No newline at end of file
diff --git a/packages/Keyguard/res/values-sw600dp/dimens.xml b/packages/Keyguard/res/values-sw600dp/dimens.xml
index 4c16dc9..b181682 100644
--- a/packages/Keyguard/res/values-sw600dp/dimens.xml
+++ b/packages/Keyguard/res/values-sw600dp/dimens.xml
@@ -26,9 +26,9 @@
     <dimen name="keyguard_security_view_margin">12dp</dimen>
 
     <!-- Overload default clock widget parameters -->
-    <dimen name="widget_big_font_size">90dp</dimen>
-    <dimen name="widget_label_font_size">14sp</dimen>
-    <dimen name="bottom_text_spacing_digital">-14dp</dimen>
+    <dimen name="widget_big_font_size">125dp</dimen>
+    <dimen name="widget_label_font_size">16sp</dimen>
+    <dimen name="bottom_text_spacing_digital">-16dp</dimen>
 
     <!-- EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
          Should be 0 on devices with plenty of room (e.g. tablets) -->
diff --git a/packages/Keyguard/res/values-sw720dp/dimens.xml b/packages/Keyguard/res/values-sw720dp/dimens.xml
index dbb2040..08ab791 100644
--- a/packages/Keyguard/res/values-sw720dp/dimens.xml
+++ b/packages/Keyguard/res/values-sw720dp/dimens.xml
@@ -24,5 +24,5 @@
     <!-- Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) -->
     <dimen name="keyguard_security_height">420dp</dimen>
 
-    <dimen name="widget_big_font_size">95dp</dimen>
+    <dimen name="widget_big_font_size">138dp</dimen>
 </resources>
diff --git a/packages/Keyguard/res/values/dimens.xml b/packages/Keyguard/res/values/dimens.xml
index 856ec4e..18d893a 100644
--- a/packages/Keyguard/res/values/dimens.xml
+++ b/packages/Keyguard/res/values/dimens.xml
@@ -20,7 +20,7 @@
 <resources>
 
     <!-- Size of the generic status lines keyguard's status view  -->
-    <dimen name="kg_status_line_font_size">11sp</dimen>
+    <dimen name="kg_status_line_font_size">14sp</dimen>
 
     <!-- Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) -->
     <dimen name="keyguard_security_width">320dp</dimen>
@@ -39,9 +39,9 @@
     <dimen name="eca_overlap">-10dip</dimen>
 
     <!-- Default clock parameters -->
-    <dimen name="bottom_text_spacing_digital">-9dp</dimen>
+    <dimen name="bottom_text_spacing_digital">-10dp</dimen>
     <dimen name="widget_label_font_size">14sp</dimen>
-    <dimen name="widget_big_font_size">70dp</dimen>
+    <dimen name="widget_big_font_size">88dp</dimen>
 
     <!-- The y translation to apply at the start in appear animations. -->
     <dimen name="appear_y_translation_start">32dp</dimen>
@@ -57,15 +57,4 @@
 
     <!-- The translation for disappearing security views after having solved them. -->
     <dimen name="disappear_y_translation">-32dp</dimen>
-
-    <!-- For SIM card detection info text max width in SIM card changed dialog -->
-    <dimen name="sim_card_name_maxwidth">100dip</dimen>
-    <!-- For SIM card name padding in SIM pin/puk unlock and SIM card changed dialog -->
-    <dimen name="sim_card_name_padding">6dip</dimen>
-
-    <!-- The seperater between the shorcuts. -->
-    <dimen name="shortcut_seperater_width">8dp</dimen>
-
-    <!-- Top margin for shortcuts. -->
-    <dimen name="shortcut_margin_top">25dp</dimen>
 </resources>
diff --git a/packages/Keyguard/src/com/android/keyguard/CarrierText.java b/packages/Keyguard/src/com/android/keyguard/CarrierText.java
index 3139ab2..f21ce7f 100644
--- a/packages/Keyguard/src/com/android/keyguard/CarrierText.java
+++ b/packages/Keyguard/src/com/android/keyguard/CarrierText.java
@@ -215,7 +215,9 @@ public class CarrierText extends TextView {
                 // "No SIM card"
                 // Grab the first subscripton, because they all should contain the emergency text,
                 // described above.
-                displayText =  null;
+                displayText =  makeCarrierStringOnEmergencyCapable(
+                        getContext().getText(R.string.keyguard_missing_sim_message_short),
+                        subs.get(0).getCarrierName());
             } else {
                 // We don't have a SubscriptionInfo to get the emergency calls only from.
                 // Grab it from the old sticky broadcast if possible instead. We can use it
@@ -241,7 +243,8 @@ public class CarrierText extends TextView {
                         text = concatenate(plmn, spn);
                     }
                 }
-                displayText =  null;
+                displayText =  makeCarrierStringOnEmergencyCapable(
+                        getContext().getText(R.string.keyguard_missing_sim_message_short), text);
             }
         }
 
diff --git a/packages/Keyguard/src/com/android/keyguard/KeyguardPINView.java b/packages/Keyguard/src/com/android/keyguard/KeyguardPINView.java
index 9051be0..b909a60 100644
--- a/packages/Keyguard/src/com/android/keyguard/KeyguardPINView.java
+++ b/packages/Keyguard/src/com/android/keyguard/KeyguardPINView.java
@@ -33,8 +33,6 @@ import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 
-import com.android.internal.widget.LockPatternUtils.RequestThrottledException;
-import com.android.keyguard.PasswordTextView.QuickUnlockListener;
 import com.android.settingslib.animation.AppearAnimationUtils;
 import com.android.settingslib.animation.DisappearAnimationUtils;
 
@@ -58,8 +56,6 @@ public class KeyguardPINView extends KeyguardPinBasedInputView {
 
     private static List<Integer> sNumbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 0);
 
-    private final int userId = KeyguardUpdateMonitor.getCurrentUser();
-
     public KeyguardPINView(Context context) {
         this(context, null);
     }
@@ -118,12 +114,9 @@ public class KeyguardPINView extends KeyguardPinBasedInputView {
                         null, mEcaView, null
                 }};
 
-
-        boolean quickUnlock = (Settings.System.getInt(getContext().getContentResolver(),
-                Settings.System.LOCKSCREEN_QUICK_UNLOCK_CONTROL, 0) == 1);
-
         boolean scramblePin = (CMSettings.System.getInt(getContext().getContentResolver(),
                 CMSettings.System.LOCKSCREEN_PIN_SCRAMBLE_LAYOUT, 0) == 1);
+
         if (scramblePin) {
             Collections.shuffle(sNumbers);
             // get all children who are NumPadKey's
@@ -147,16 +140,6 @@ public class KeyguardPINView extends KeyguardPinBasedInputView {
                 view.setDigit(sNumbers.get(i));
             }
         }
-
-        if (quickUnlock) {
-            mPasswordEntry.setQuickUnlockListener(new QuickUnlockListener() {
-                public void onValidateQuickUnlock(String password) {
-                    validateQuickUnlock(password);
-                }
-            });
-        } else {
-            mPasswordEntry.setQuickUnlockListener(null);
-        }
     }
 
     @Override
@@ -216,24 +199,4 @@ public class KeyguardPINView extends KeyguardPinBasedInputView {
     public boolean hasOverlappingRendering() {
         return false;
     }
-
-    private void validateQuickUnlock(String password) {
-        if (password != null) {
-            if (password.length() > MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT
-                    && kpvCheckPassword(password)) {
-                mPasswordEntry.setEnabled(false);
-                mCallback.reportUnlockAttempt(true, userId);
-                mCallback.dismiss(true);
-                resetPasswordText(true);
-            }
-        }
-    }
-
-    private boolean kpvCheckPassword(String password) {
-        try {
-            return mLockPatternUtils.checkPassword(password, userId);
-        } catch (RequestThrottledException ex) {
-            return false;
-        }
-    }
 }
diff --git a/packages/Keyguard/src/com/android/keyguard/KeyguardPasswordView.java b/packages/Keyguard/src/com/android/keyguard/KeyguardPasswordView.java
index 38be61d..3a7e6d0 100644
--- a/packages/Keyguard/src/com/android/keyguard/KeyguardPasswordView.java
+++ b/packages/Keyguard/src/com/android/keyguard/KeyguardPasswordView.java
@@ -18,7 +18,6 @@ package com.android.keyguard;
 
 import android.content.Context;
 import android.graphics.Rect;
-import android.provider.Settings;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextUtils;
@@ -36,7 +35,6 @@ import android.view.inputmethod.InputMethodSubtype;
 import android.widget.TextView;
 import android.widget.TextView.OnEditorActionListener;
 
-import com.android.internal.widget.LockPatternUtils.RequestThrottledException;
 import com.android.internal.widget.TextViewInputDisabler;
 
 import java.util.List;
@@ -58,10 +56,6 @@ public class KeyguardPasswordView extends KeyguardAbsKeyInputView
     private Interpolator mLinearOutSlowInInterpolator;
     private Interpolator mFastOutLinearInInterpolator;
 
-    private final boolean quickUnlock = (Settings.System.getInt(getContext().getContentResolver(),
-            Settings.System.LOCKSCREEN_QUICK_UNLOCK_CONTROL, 0) == 1);
-    private final int userId = KeyguardUpdateMonitor.getCurrentUser();
-
     public KeyguardPasswordView(Context context) {
         this(context, null);
     }
@@ -317,15 +311,6 @@ public class KeyguardPasswordView extends KeyguardAbsKeyInputView
         // is from the user.
         if (!TextUtils.isEmpty(s)) {
             onUserInput();
-            if (quickUnlock) {
-                String entry = getPasswordText();
-                if (entry.length() > MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT
-                        && kpvCheckPassword(entry)) {
-                    mCallback.reportUnlockAttempt(true, userId);
-                    mCallback.dismiss(true);
-                    resetPasswordText(true);
-                }
-            }
         }
     }
 
@@ -345,12 +330,4 @@ public class KeyguardPasswordView extends KeyguardAbsKeyInputView
         }
         return false;
     }
-
-    private boolean kpvCheckPassword(String entry) {
-        try {
-            return mLockPatternUtils.checkPassword(entry, userId);
-        } catch (RequestThrottledException ex) {
-            return false;
-        }
-    }
 }
diff --git a/packages/Keyguard/src/com/android/keyguard/KeyguardSimPinView.java b/packages/Keyguard/src/com/android/keyguard/KeyguardSimPinView.java
index 4ee90f7..0d74184 100644
--- a/packages/Keyguard/src/com/android/keyguard/KeyguardSimPinView.java
+++ b/packages/Keyguard/src/com/android/keyguard/KeyguardSimPinView.java
@@ -131,7 +131,6 @@ public class KeyguardSimPinView extends KeyguardPinBasedInputView {
             ((EmergencyCarrierArea) mEcaView).setCarrierTextVisible(true);
         }
         mSimImageView = (ImageView) findViewById(R.id.keyguard_sim);
-        mPasswordEntry.setQuickUnlockListener(null);
     }
 
     @Override
diff --git a/packages/Keyguard/src/com/android/keyguard/KeyguardSimPukView.java b/packages/Keyguard/src/com/android/keyguard/KeyguardSimPukView.java
index a5e123d..7ba952b 100644
--- a/packages/Keyguard/src/com/android/keyguard/KeyguardSimPukView.java
+++ b/packages/Keyguard/src/com/android/keyguard/KeyguardSimPukView.java
@@ -192,7 +192,6 @@ public class KeyguardSimPukView extends KeyguardPinBasedInputView {
             ((EmergencyCarrierArea) mEcaView).setCarrierTextVisible(true);
         }
         mSimImageView = (ImageView) findViewById(R.id.keyguard_sim);
-        mPasswordEntry.setQuickUnlockListener(null);
     }
 
     @Override
diff --git a/packages/Keyguard/src/com/android/keyguard/KeyguardStatusView.java b/packages/Keyguard/src/com/android/keyguard/KeyguardStatusView.java
index ab17e34..adb5ae9 100644
--- a/packages/Keyguard/src/com/android/keyguard/KeyguardStatusView.java
+++ b/packages/Keyguard/src/com/android/keyguard/KeyguardStatusView.java
@@ -23,15 +23,9 @@ import android.app.ActivityManager;
 import android.app.AlarmManager;
 import android.content.ContentResolver;
 import android.content.Context;
-import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.content.res.Resources;
-import android.graphics.Bitmap;
-import android.graphics.drawable.Drawable;
-import android.graphics.PorterDuff.Mode;
-import android.graphics.Typeface;
 import android.os.UserHandle;
-import android.provider.AlarmClock;
 import android.provider.Settings;
 import android.text.TextUtils;
 import android.text.format.DateFormat;
@@ -41,20 +35,14 @@ import android.util.Slog;
 import android.util.TypedValue;
 import android.view.View;
 import android.widget.GridLayout;
-import android.widget.ImageView;
 import android.widget.TextClock;
 import android.widget.TextView;
 
-import com.android.internal.util.cm.WeatherController;
-import com.android.internal.util.cm.WeatherControllerImpl;
 import com.android.internal.widget.LockPatternUtils;
-import com.android.internal.util.rr.ImageHelper;
 
-import java.util.Date;
 import java.util.Locale;
 
-public class KeyguardStatusView extends GridLayout implements
-        WeatherController.Callback  {
+public class KeyguardStatusView extends GridLayout {
     private static final boolean DEBUG = KeyguardConstants.DEBUG;
     private static final String TAG = "KeyguardStatusView";
 
@@ -65,32 +53,12 @@ public class KeyguardStatusView extends GridLayout implements
     private TextClock mDateView;
     private TextClock mClockView;
     private TextView mOwnerInfo;
-    //On the first boot, keygard will start to receiver TIME_TICK intent.
-    //And onScreenTurnedOff will not get called if power off when keyguard is not started.
-    //Set initial value to false to skip the above case.
-    private boolean mEnableRefresh = false;
-
-    private View mWeatherView;
-    private TextView mWeatherCity;
-    private ImageView mWeatherConditionImage;
-    private Drawable mWeatherConditionDrawable;
-    private TextView mWeatherCurrentTemp;
-    private TextView mWeatherConditionText;
-    private boolean mShowWeather;
-    private int mIconNameValue = 0;
-    private int mPrimaryTextColor;
-    private int mIconColor;
-
-    private WeatherController mWeatherController;
 
     private KeyguardUpdateMonitorCallback mInfoCallback = new KeyguardUpdateMonitorCallback() {
 
         @Override
         public void onTimeChanged() {
-            if (mEnableRefresh) {
-                refresh();
-            }
-
+            refresh();
         }
 
         @Override
@@ -105,14 +73,11 @@ public class KeyguardStatusView extends GridLayout implements
         @Override
         public void onStartedWakingUp() {
             setEnableMarquee(true);
-            mEnableRefresh = true;
-            refresh();
         }
 
         @Override
         public void onFinishedGoingToSleep(int why) {
             setEnableMarquee(false);
-            mEnableRefresh = false;
         }
 
         @Override
@@ -134,7 +99,6 @@ public class KeyguardStatusView extends GridLayout implements
         super(context, attrs, defStyle);
         mAlarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
         mLockPatternUtils = new LockPatternUtils(getContext());
-        mWeatherController = new WeatherControllerImpl(mContext);
     }
 
     private void setEnableMarquee(boolean enabled) {
@@ -152,16 +116,12 @@ public class KeyguardStatusView extends GridLayout implements
         mDateView.setShowCurrentUserTime(true);
         mClockView.setShowCurrentUserTime(true);
         mOwnerInfo = (TextView) findViewById(R.id.owner_info);
-        mWeatherView = findViewById(R.id.keyguard_weather_view);
-        mWeatherCity = (TextView) findViewById(R.id.city);
-        mWeatherConditionImage = (ImageView) findViewById(R.id.weather_image);
-        mWeatherCurrentTemp = (TextView) findViewById(R.id.current_temp);
-        mWeatherConditionText = (TextView) findViewById(R.id.condition);
 
         boolean shouldMarquee = KeyguardUpdateMonitor.getInstance(mContext).isDeviceInteractive();
         setEnableMarquee(shouldMarquee);
         refresh();
         updateOwnerInfo();
+
         // Disable elegant text height because our fancy colon makes the ymin value huge for no
         // reason.
         mClockView.setElegantTextHeight(false);
@@ -172,11 +132,8 @@ public class KeyguardStatusView extends GridLayout implements
         super.onConfigurationChanged(newConfig);
         mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                 getResources().getDimensionPixelSize(R.dimen.widget_big_font_size));
-        mClockView.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-        
         mDateView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                 getResources().getDimensionPixelSize(R.dimen.widget_label_font_size));
-        mDateView.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
         mOwnerInfo.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                 getResources().getDimensionPixelSize(R.dimen.widget_label_font_size));
     }
@@ -196,7 +153,6 @@ public class KeyguardStatusView extends GridLayout implements
 
         refreshTime();
         refreshAlarmStatus(nextAlarm);
-        updateSettings(false);
     }
 
     void refreshAlarmStatus(AlarmManager.AlarmClockInfo nextAlarm) {
@@ -237,15 +193,12 @@ public class KeyguardStatusView extends GridLayout implements
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
         KeyguardUpdateMonitor.getInstance(mContext).registerCallback(mInfoCallback);
-        updateSettings(false);
-        mWeatherController.addCallback(this);
     }
 
     @Override
     protected void onDetachedFromWindow() {
         super.onDetachedFromWindow();
         KeyguardUpdateMonitor.getInstance(mContext).removeCallback(mInfoCallback);
-        mWeatherController.removeCallback(this);
     }
 
     private String getOwnerInfo() {
@@ -264,361 +217,6 @@ public class KeyguardStatusView extends GridLayout implements
         return false;
     }
 
-    @Override
-    public void onWeatherChanged(WeatherController.WeatherInfo info) {
-        if (info.temp == null || info.condition == null) {
-            mWeatherCity.setText("--");
-            mWeatherConditionDrawable = null;
-            mWeatherCurrentTemp.setText(null);
-            mWeatherConditionText.setText(null);
-            mWeatherView.setVisibility(View.GONE);
-            updateSettings(true);
-        } else {
-            mWeatherConditionDrawable = info.conditionDrawable;
-
-            if (mWeatherCity != null) {
-                mWeatherCity.setText(info.city);
-            }
-            if (mWeatherCurrentTemp != null) {
-                mWeatherCurrentTemp.setText(info.temp);
-            }
-            if (mWeatherConditionText != null) {
-                mWeatherConditionText.setText(info.condition);
-            }
-            if (mWeatherView != null) {
-                mWeatherView.setVisibility(mShowWeather ? View.VISIBLE : View.GONE);
-            }
-            updateSettings(false);
-        }
-     }   
-        
-    private String getCurrentDate() {
-        Date now = new Date();
-        long nowMillis = now.getTime();
-        StringBuilder sb = new StringBuilder();
-        sb.append(DateFormat.format("E", nowMillis));
-        sb.append(" ");
-        sb.append(DateFormat.getTimeFormat(getContext()).format(nowMillis));
-        return sb.toString();
-    }
-
-    private void  updateSettings(boolean forceHide) {
-        final ContentResolver resolver = getContext().getContentResolver();
-        final Resources res = getContext().getResources();
-        View weatherPanel = findViewById(R.id.weather_panel);
-        TextView noWeatherInfo = (TextView) findViewById(R.id.no_weather_info_text);
-        AlarmManager.AlarmClockInfo nextAlarm =
-                mAlarmManager.getNextAlarmClock(UserHandle.USER_CURRENT); 
-        mShowWeather = Settings.System.getInt(resolver,
-                Settings.System.LOCK_SCREEN_SHOW_WEATHER, 0) == 1;
-	mIconColor = Settings.System.getInt(resolver,
-                Settings.System.LOCK_SCREEN_WEATHER_ICON_COLOR, -2);
-        mPrimaryTextColor = Settings.System.getInt(resolver,
-                Settings.System.LOCK_SCREEN_WEATHER_TEXT_COLOR, -2);
-        boolean showLocation = Settings.System.getInt(resolver,
-                Settings.System.LOCK_SCREEN_SHOW_WEATHER_LOCATION, 1) == 1;
-        int iconNameValue = Settings.System.getInt(resolver,
-                Settings.System.LOCK_SCREEN_WEATHER_CONDITION_ICON, 0);	
-        boolean showAlarm = Settings.System.getIntForUser(resolver,
-                Settings.System.HIDE_LOCKSCREEN_ALARM, 1, UserHandle.USER_CURRENT) == 1;
-        boolean showClock = Settings.System.getIntForUser(resolver,
-                Settings.System.HIDE_LOCKSCREEN_CLOCK, 1, UserHandle.USER_CURRENT) == 1;
-        boolean showDate = Settings.System.getIntForUser(resolver,
-                Settings.System.HIDE_LOCKSCREEN_DATE, 1, UserHandle.USER_CURRENT) == 1;
-        int clockColor = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_CLOCK_COLOR, 0xFFFFFFFF);
-        int clockDateColor = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_CLOCK_DATE_COLOR, 0xFFFFFFFF);
-        int  mClockFontSize = Settings.System.getIntForUser(resolver,
-                Settings.System.LOCKCLOCK_FONT_SIZE, 0,
-                UserHandle.USER_CURRENT);        
-       int  mDateFontSize = Settings.System.getIntForUser(resolver,
-                Settings.System.LOCKDATE_FONT_SIZE, 0,
-                UserHandle.USER_CURRENT); 
-	
-        int primaryTextColor =
-                res.getColor(R.color.keyguard_default_primary_text_color);
-        // primaryTextColor with a transparency of 70%
-        int secondaryTextColor = (179 << 24) | (primaryTextColor & 0x00ffffff);
-        // primaryTextColor with a transparency of 50%
-        int alarmTextAndIconColor = (128 << 24) | (primaryTextColor & 0x00ffffff);
-        int maxAllowedNotifications = 6;
-        int currentVisibleNotifications = Settings.System.getInt(resolver,
-                Settings.System.LOCK_SCREEN_VISIBLE_NOTIFICATIONS, 0);
-        int hideMode = Settings.System.getInt(resolver,
-                    Settings.System.LOCK_SCREEN_WEATHER_HIDE_PANEL, 0);
-        int numberOfNotificationsToHide = Settings.System.getInt(resolver,
-                       Settings.System.LOCK_SCREEN_WEATHER_NUMBER_OF_NOTIFICATIONS, 4);
-        boolean forceHideByNumberOfNotifications = false;
-
-        int lockClockFont = Settings.System.getIntForUser(resolver,
-                Settings.System.LOCK_CLOCK_FONTS, 4, UserHandle.USER_CURRENT);
-                
-        int dateFont = Settings.System.getIntForUser(resolver,
-                Settings.System.LOCK_DATE_FONTS, 4, UserHandle.USER_CURRENT);
-
-        int ownerInfoColor = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_OWNER_INFO_COLOR, 0xFFFFFFFF);
-        int alarmColor = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_ALARM_COLOR, 0xFFFFFFFF);
-
-
-        if (hideMode == 0) {
-            if (currentVisibleNotifications > maxAllowedNotifications) {
-                forceHideByNumberOfNotifications = true;
-            }
-        } else if (hideMode == 1) {
-            if (currentVisibleNotifications >= numberOfNotificationsToHide) {
-                forceHideByNumberOfNotifications = true;
-            }
-        }
-        mWeatherView.setVisibility(
-                (mShowWeather && !forceHideByNumberOfNotifications) ? View.VISIBLE : View.GONE);
-        if (forceHide) {
-	    noWeatherInfo.setVisibility(View.VISIBLE);
-	    weatherPanel.setVisibility(View.GONE);
-        } else {
-         if (weatherPanel != null) {
-		noWeatherInfo.setVisibility(View.GONE);
-		weatherPanel.setVisibility(View.VISIBLE);  }
-	  
-        }
-        if (mWeatherCity != null) {
-            mWeatherCity.setVisibility(showLocation ? View.VISIBLE : View.INVISIBLE);
-        }
-        if (mWeatherCity != null) {
-            mWeatherCity.setTextColor(mPrimaryTextColor);
-        }
-        if (mWeatherConditionText != null) {
-            mWeatherConditionText.setTextColor(mPrimaryTextColor);
-        }
-        if (mWeatherCurrentTemp != null) {
-            mWeatherCurrentTemp.setTextColor(mPrimaryTextColor);
-        }
-
-
-        if (showClock) {
-            mClockView = (TextClock) findViewById(R.id.clock_view);
-            mClockView.setVisibility(View.VISIBLE);
-        } else {
-            mClockView = (TextClock) findViewById(R.id.clock_view);
-            mClockView.setVisibility(View.GONE);
-        }
-        if (showDate) {
-            mDateView = (TextClock) findViewById(R.id.date_view);
-            mDateView.setVisibility(View.VISIBLE);
-        } else {
-            mDateView = (TextClock) findViewById(R.id.date_view);
-            mDateView.setVisibility(View.GONE);
-        }
-        if (showAlarm && nextAlarm != null) {
-            mAlarmStatusView = (TextView) findViewById(R.id.alarm_status);
-            mAlarmStatusView.setVisibility(View.VISIBLE);
-        } else {
-            mAlarmStatusView = (TextView) findViewById(R.id.alarm_status);
-            mAlarmStatusView.setVisibility(View.GONE);
-        }
-       
-        if (lockClockFont == 0) {
-            mClockView.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-        }
-        if (lockClockFont == 1) {
-            mClockView.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-        }
-        if (lockClockFont == 2) {
-            mClockView.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-        }
-        if (lockClockFont == 3) {
-            mClockView.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-        }
-        if (lockClockFont == 4) {
-            mClockView.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-        }
-        if (lockClockFont == 5) {
-            mClockView.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-        }
-        if (lockClockFont == 6) {
-            mClockView.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-        }
-        if (lockClockFont == 7) {
-            mClockView.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-        }
-        if (lockClockFont == 8) {
-            mClockView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-        }
-        if (lockClockFont == 9) {
-            mClockView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-        }
-        if (lockClockFont == 10) {
-            mClockView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-        }
-        if (lockClockFont == 11) {
-            mClockView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-        }
-        if (lockClockFont == 12) {
-            mClockView.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-        }
-        if (lockClockFont == 13) {
-            mClockView.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-        }
-        if (lockClockFont == 14) {
-            mClockView.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-        }
-        if (lockClockFont == 15) {
-            mClockView.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-        }
-        if (lockClockFont == 16) {
-            mClockView.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-        }
-        if (lockClockFont == 17) {
-            mClockView.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-        }
-        if (lockClockFont == 18) {
-            mClockView.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-        }
-        if (lockClockFont == 19) {
-            mClockView.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-        }
-        if (lockClockFont == 20) {
-            mClockView.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-        }
-        if (lockClockFont == 21) {
-            mClockView.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-        }
-        if (lockClockFont == 22) {
-            mClockView.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-        }
-        if (lockClockFont == 23) {
-            mClockView.setTypeface(Typeface.create("serif", Typeface.BOLD));
-        }
-        if (lockClockFont == 24) {
-            mClockView.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-        }
-        
-	if (dateFont == 0) {
-            mDateView.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-        }
-        if (dateFont == 1) {
-            mDateView.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-        }
-        if (dateFont == 2) {
-            mDateView.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-        }
-        if (dateFont == 3) {
-            mDateView.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-        }
-        if (dateFont == 4) {
-            mDateView.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-        }
-        if (dateFont == 5) {
-            mDateView.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-        }
-        if (dateFont == 6) {
-            mDateView.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-        }
-        if (dateFont == 7) {
-            mDateView.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-        }
-        if (dateFont == 8) {
-            mDateView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-        }
-        if (dateFont == 9) {
-            mDateView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-        }
-        if (dateFont == 10) {
-            mDateView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-        }
-        if (dateFont == 11) {
-            mDateView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-        }
-        if (dateFont == 12) {
-            mDateView.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-        }
-        if (dateFont == 13) {
-            mDateView.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-        }
-        if (dateFont == 14) {
-            mDateView.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-        }
-        if (dateFont == 15) {
-            mDateView.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-        }
-        if (dateFont == 16) {
-            mDateView.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-        }
-        if (dateFont == 17) {
-            mDateView.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-        }
-        if (dateFont == 18) {
-            mDateView.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-        }
-        if (dateFont == 19) {
-            mDateView.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-        }
-        if (dateFont == 20) {
-            mDateView.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-        }
-        if (dateFont == 21) {
-            mDateView.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-        }
-        if (dateFont == 22) {
-            mDateView.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-        }
-        if (dateFont == 23) {
-            mDateView.setTypeface(Typeface.create("serif", Typeface.BOLD));
-        }
-        if (dateFont == 24) {
-            mDateView.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-        }
-
-        if (mClockView != null) {
-              mClockView.setTextColor(clockColor);
-              setclockfontsize(mClockFontSize);            
-        }
-
-        if (mDateView != null) {
-            mDateView.setTextColor(clockDateColor);
-            if (mDateFontSize == 0) {
-		mDateView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.widget_label_font_size));
-            } else {
-		mDateView.setTextSize(mDateFontSize);
-            }
-        }
-
-        if (mOwnerInfo != null) {
-            mOwnerInfo.setTextColor(ownerInfoColor);
-        }
-
-        if (mAlarmStatusView != null) {
-            mAlarmStatusView.setTextColor(alarmColor);
-        }
-
-     if (mIconNameValue != iconNameValue) {
-            mIconNameValue = iconNameValue;
-            mWeatherController.updateWeather();
-        }
-
-        if (mWeatherConditionImage != null) {
-            mWeatherConditionImage.setImageDrawable(null);
-        }
-
-        Drawable weatherIcon = mWeatherConditionDrawable;
-        if (mIconColor == -2) {
-            if (mWeatherConditionImage != null) {
-                mWeatherConditionImage.setImageDrawable(weatherIcon);
-            }
-        } else {
-            Bitmap coloredWeatherIcon =
-                    ImageHelper.getColoredBitmap(weatherIcon, mIconColor);
-            if (mWeatherConditionImage != null) {
-                mWeatherConditionImage.setImageBitmap(coloredWeatherIcon);
-            }
-        }
-
-    }
-
-
     // DateFormat.getBestDateTimePattern is extremely expensive, and refresh is called often.
     // This is an optimization to ensure we only recompute the patterns when the inputs change.
     private static final class Patterns {
@@ -630,10 +228,7 @@ public class KeyguardStatusView extends GridLayout implements
         static void update(Context context, boolean hasAlarm) {
             final Locale locale = Locale.getDefault();
             final Resources res = context.getResources();
-            final ContentResolver resolver = context.getContentResolver();
-           final boolean showAlarm = Settings.System.getIntForUser(resolver,
-                    Settings.System.HIDE_LOCKSCREEN_ALARM, 1, UserHandle.USER_CURRENT) == 1;
-            final String dateViewSkel = res.getString(hasAlarm && showAlarm
+            final String dateViewSkel = res.getString(hasAlarm
                     ? R.string.abbrev_wday_month_day_no_year_alarm
                     : R.string.abbrev_wday_month_day_no_year);
             final String clockView12Skel = res.getString(R.string.clock_12hr_format);
@@ -668,71 +263,4 @@ public class KeyguardStatusView extends GridLayout implements
 
         }
     }
-    
-    void setclockfontsize(int size) {
-		if (size == 0) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.widget_big_font_size));
-		} else if (size == 1) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_1));
-		} else if (size == 2) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_2));
-		} else if (size == 3) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_3));
-		} else if (size == 4) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_4));
-		} else if (size == 5) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_5));
-		} else if (size == 6) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_6));
-		} else if (size == 7) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_7));
-		} else if (size == 8) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_8));
-		} else if (size == 9) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_9));
-		} else if (size == 10) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_10));
-		} else if (size == 11) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_11));
-		} else if (size == 12) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_12));
-		} else if (size == 13) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_13));
-		} else if (size == 14) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_14));
-		}  else if (size == 15) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_15));
-		} else if (size == 16) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_16));
-		} else if (size == 17) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_17));
-		 } else if (size == 18) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_18));
-		} else if (size == 19) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_19));
-		 } else if (size == 20) {
-		mClockView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                getResources().getDimensionPixelSize(R.dimen.lock_clock_font_size_20));
-		  }
-	}
 }
diff --git a/packages/Keyguard/src/com/android/keyguard/KeyguardUpdateMonitor.java b/packages/Keyguard/src/com/android/keyguard/KeyguardUpdateMonitor.java
index d6e88f4..f608f13 100644
--- a/packages/Keyguard/src/com/android/keyguard/KeyguardUpdateMonitor.java
+++ b/packages/Keyguard/src/com/android/keyguard/KeyguardUpdateMonitor.java
@@ -69,6 +69,8 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map.Entry;
 
+import cyanogenmod.providers.CMSettings;
+
 import static android.os.BatteryManager.BATTERY_HEALTH_UNKNOWN;
 import static android.os.BatteryManager.BATTERY_STATUS_FULL;
 import static android.os.BatteryManager.BATTERY_STATUS_UNKNOWN;
@@ -1125,8 +1127,8 @@ public class KeyguardUpdateMonitor implements TrustManager.TrustListener {
     }
 
     private boolean isDeviceProvisionedInSettingsDb() {
-        return Settings.Global.getInt(mContext.getContentResolver(),
-                Settings.Global.DEVICE_PROVISIONED, 0) != 0;
+        return CMSettings.Secure.getInt(mContext.getContentResolver(),
+                CMSettings.Secure.CM_SETUP_WIZARD_COMPLETED, 0) != 0;
     }
 
     private void watchForDeviceProvisioning() {
@@ -1143,7 +1145,7 @@ public class KeyguardUpdateMonitor implements TrustManager.TrustListener {
         };
 
         mContext.getContentResolver().registerContentObserver(
-                Settings.Global.getUriFor(Settings.Global.DEVICE_PROVISIONED),
+                CMSettings.Secure.getUriFor(CMSettings.Secure.CM_SETUP_WIZARD_COMPLETED),
                 false, mDeviceProvisionedObserver);
 
         // prevent a race condition between where we check the flag and where we register the
diff --git a/packages/Keyguard/src/com/android/keyguard/PasswordTextView.java b/packages/Keyguard/src/com/android/keyguard/PasswordTextView.java
index da30364..50e7ecb 100644
--- a/packages/Keyguard/src/com/android/keyguard/PasswordTextView.java
+++ b/packages/Keyguard/src/com/android/keyguard/PasswordTextView.java
@@ -93,25 +93,11 @@ public class PasswordTextView extends View {
     private Interpolator mFastOutSlowInInterpolator;
     private boolean mShowPassword;
     private UserActivityListener mUserActivityListener;
-    protected QuickUnlockListener mQuickUnlockListener;
 
     public interface UserActivityListener {
         void onUserActivity();
     }
 
-    /* Quick unlock management for PIN view. */
-    public interface QuickUnlockListener {
-        /**
-         * Validate current password and prepare callback if verified.
-         * @param password The password string to be verified.
-         */
-        void onValidateQuickUnlock(String password);
-    }
-
-    public void setQuickUnlockListener(QuickUnlockListener listener) {
-        mQuickUnlockListener = listener;
-    }
-
     public PasswordTextView(Context context) {
         this(context, null);
     }
@@ -223,10 +209,6 @@ public class PasswordTextView extends View {
         }
         userActivity();
         sendAccessibilityEventTypeViewTextChanged(textbefore, textbefore.length(), 0, 1);
-
-        if (mQuickUnlockListener != null) {
-            mQuickUnlockListener.onValidateQuickUnlock(mText);
-        }
     }
 
     public void setUserActivityListener(UserActivityListener userActivitiListener) {
diff --git a/packages/PrintSpooler/res/values-csb-rPL/strings.xml b/packages/PrintSpooler/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..52d0bc0
--- /dev/null
+++ b/packages/PrintSpooler/res/values-csb-rPL/strings.xml
@@ -0,0 +1,93 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2013 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Title of the PrintSpooler application. [CHAR LIMIT=50] -->
+  <!-- Label of the print dialog's button for more print options. [CHAR LIMIT=25] -->
+  <!-- Label of the destination widget. [CHAR LIMIT=20] -->
+  <!-- Label of the copies count widget. [CHAR LIMIT=20] -->
+  <!-- Label of the copies count for the print options summary. [CHAR LIMIT=20] -->
+  <!-- Label of the paper size widget. [CHAR LIMIT=20] -->
+  <!-- Label of the paper size for the print options summary. [CHAR LIMIT=20] -->
+  <!-- Label of the color mode widget. [CHAR LIMIT=20] -->
+  <!-- Label of the printer mode to print on both sides of paper. [CHAR LIMIT=20] -->
+  <!-- Label of the orientation widget. [CHAR LIMIT=20] -->
+  <!-- Label of the page selection widget. [CHAR LIMIT=20] -->
+  <!-- Template for the all pages option in the page selection widget. [CHAR LIMIT=20] -->
+  <!-- Template for the page range option in the page selection widget. [CHAR LIMIT=20] -->
+  <!-- Page range exmple used as a hint of how to specify such. [CHAR LIMIT=20] -->
+  <!-- Title for the pring preview button .[CHAR LIMIT=30] -->
+  <!-- Title for the pring preview button if there is no PDF viewer isntalled. [CHAR LIMIT=50] -->
+  <!-- Title of the message that the printing application crashed. [CHAR LIMIT=50] -->
+  <!-- Title for the temporary dialog show while an app is generating a print job. [CHAR LIMIT=30] -->
+  <!-- Title for the save as PDF option in the printer list. [CHAR LIMIT=30] -->
+  <!-- Title for the open all printers UI option in the printer list. [CHAR LIMIT=30] -->
+  <!-- Title for the print dialog announced to the user for accessibility. Not shown in the UI. [CHAR LIMIT=none] -->
+  <!-- Template for the message that shows the current page out of the total number of pages [CHAR LIMIT=none] -->
+  <!-- Description of the current page - spoken to the user [CHAR LIMIT=none] -->
+  <!-- Template for the message to announce the print options summary - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Description for the handle to expand all print options - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Description for the handle to collapse all print options - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Description for the print button - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Description for the save to PDF button - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Message to announce print options are expanded - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Message to announce print options are collapsed - spoken to the user. [CHAR LIMIT=none] -->
+  <!-- Select printer activity -->
+  <!-- Title for the share action bar menu item. [CHAR LIMIT=20] -->
+  <!-- Title for the select printer activity. [CHAR LIMIT=30] -->
+  <!-- Title of the button to install a print service. [CHAR LIMIT=25] -->
+  <!-- Utterance to announce that the search box is shown. This is spoken to a blind user. [CHAR LIMIT=none] -->
+  <!-- Utterance to announce that the search box is hidden. This is spoken to a blind user. [CHAR LIMIT=none] -->
+  <!-- Title of the action bar button to got to add a printer. [CHAR LIMIT=25] -->
+  <!-- Title of the menu item to select a printer. [CHAR LIMIT=25] -->
+  <!-- Title of the menu item to forget a printer. [CHAR LIMIT=25] -->
+  <!-- Utterance to announce a change in the number of matches during a search. This is spoken to a blind user. [CHAR LIMIT=none] -->
+  <!-- Add printer dialog  -->
+  <!-- Title for the alert dialog for selecting a print service. [CHAR LIMIT=50] -->
+  <!-- Title for the prompt shown as a placeholder if no printers are found while not searching. [CHAR LIMIT=50] -->
+  <!-- Title for the prompt shown as a placeholder if there are no printers while searching. [CHAR LIMIT=50] -->
+  <!-- Notifications -->
+  <!-- Template for the notification label for a printing print job. [CHAR LIMIT=25] -->
+  <!-- Template for the notification label for a cancelling print job. [CHAR LIMIT=25] -->
+  <!-- Template for the notification label for a failed print job. [CHAR LIMIT=25] -->
+  <!-- Template for the notification label for a blocked print job. [CHAR LIMIT=25] -->
+  <!-- Template for the notification label for a composite (multiple items) print jobs notification. [CHAR LIMIT=25] -->
+  <!-- Label for the notification button for cancelling a print job. [CHAR LIMIT=25] -->
+  <!-- Label for the notification button for restarting a filed print job. [CHAR LIMIT=25] -->
+  <!-- Message that there is no connection to a printer. [CHAR LIMIT=40] -->
+  <!-- Label for an unknown reason for failed or blocked print job. [CHAR LIMIT=25] -->
+  <!-- Label for a printer that is not available. [CHAR LIMIT=25] -->
+  <!-- Arrays -->
+  <!-- Color mode labels. -->
+  <!-- Duplex mode labels. -->
+  <!-- Orientation labels. -->
+  <!-- Permissions -->
+  <!-- Title of an application permission, listed so the user can choose whether they want
+         to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether
+         they want to allow the application to do this. -->
+  <!-- Title of an application permission, listed so the user can choose whether they want
+         to allow the application to do this. -->
+  <!-- Description of an application permission, listed so the user can choose whether they
+         want to allow the application to do this. -->
+  <!-- Error messages -->
+  <!-- Message for an error when trying to print to a PDF file. [CHAR LIMIT=50] -->
+  <!-- Default message for an error while generating a print job. [CHAR LIMIT=50] -->
+  <!-- Label for the retry button in the error message. [CHAR LIMIT=50] -->
+  <!-- Message for the currently selected printer being unavailable. [CHAR LIMIT=100] -->
+  <!-- Long running operations -->
+  <!-- Message long running operation when preparing print preview. [CHAR LIMIT=50] -->
+</resources>
diff --git a/packages/PrintSpooler/res/values/themes.xml b/packages/PrintSpooler/res/values/themes.xml
index 05de5b7..11fa991 100644
--- a/packages/PrintSpooler/res/values/themes.xml
+++ b/packages/PrintSpooler/res/values/themes.xml
@@ -17,6 +17,9 @@
 <resources>
 
     <style name="PrintActivity" parent="@android:style/Theme.DeviceDefault">
+        <item name="android:colorPrimary">@*android:color/material_blue_grey_900</item>
+        <item name="android:colorPrimaryDark">@*android:color/material_blue_grey_950</item>
+        <item name="android:colorAccent">@*android:color/material_deep_teal_500</item>
         <item name="android:windowIsTranslucent">true</item>
         <item name="android:windowBackground">@android:color/transparent</item>
         <item name="android:windowContentOverlay">@null</item>
diff --git a/packages/SettingsLib/res/values-csb-rPL/arrays.xml b/packages/SettingsLib/res/values-csb-rPL/arrays.xml
new file mode 100644
index 0000000..c46bb71
--- /dev/null
+++ b/packages/SettingsLib/res/values-csb-rPL/arrays.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/*
+**
+** Copyright 2015 The Android Open Source Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Wi-Fi settings -->
+  <!-- Match this with the order of NetworkInfo.DetailedState. -->
+  <!-- Wi-Fi settings. The status messages when the network is unknown. -->
+  <!-- Match this with the order of NetworkInfo.DetailedState. -->
+  <!-- Wi-Fi settings. The status messages when the network is known. -->
+</resources>
diff --git a/packages/SettingsLib/res/values-csb-rPL/strings.xml b/packages/SettingsLib/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..710bdcf
--- /dev/null
+++ b/packages/SettingsLib/res/values-csb-rPL/strings.xml
@@ -0,0 +1,122 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/*
+**
+** Copyright 2015 The Android Open Source Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Toast message when Wi-Fi cannot scan for networks -->
+  <!-- Do not translate.  Concise terminology for wifi with WEP security -->
+  <!-- Do not translate.  Concise terminology for wifi with WPA security -->
+  <!-- Do not translate.  Concise terminology for wifi with WPA2 security -->
+  <!-- Do not translate.  Concise terminology for wifi with both WPA/WPA2 security -->
+  <!-- Do not translate.  Concise terminology for wifi with unknown PSK type -->
+  <!-- Do not translate.  Concise terminology for wifi with 802.1x EAP security -->
+  <!-- Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. -->
+  <!-- Do not translate.  Terminology for wifi with WEP security -->
+  <!-- Do not translate.  Terminology for wifi with WPA security -->
+  <!-- Do not translate.  Terminology for wifi with WPA2 security -->
+  <!-- Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown -->
+  <!-- Do not translate.  Terminology for wifi with unknown PSK type -->
+  <!-- Do not translate.  Concise terminology for wifi with 802.1x EAP security -->
+  <!-- Do not translate.  Concise terminology for Passpoint network -->
+  <!-- Summary for the remembered network. -->
+  <!-- Status for networks disabled for unknown reason -->
+  <!-- Status for networked disabled from a DNS or DHCP failure -->
+  <!-- Status for networked disabled from a wifi association failure -->
+  <!-- Status for networks disabled from authentication failure (wrong password
+         or certificate). -->
+  <!-- Summary for the remembered network but currently not in range. -->
+  <!-- Summary for the remembered network but no internet connection was detected. -->
+  <!-- Summary for saved networks -->
+  <!-- Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] -->
+  <!-- Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] -->
+  <!-- Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] -->
+  <!-- Package name for Settings app-->
+  <!-- Package name for Certinstaller app-->
+  <!-- Summary for Connected wifi network without internet -->
+  <!-- Bluetooth settings.  Message when a device is disconnected -->
+  <!-- Bluetooth settings.  Message when disconnecting from a device -->
+  <!-- Bluetooth settings.  Message when connecting to a device -->
+  <!-- Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] -->
+  <!--Bluetooth settings screen, summary text under individual Bluetooth devices when pairing -->
+  <!-- Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. -->
+  <!-- Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. -->
+  <!-- Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the map profile. -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). -->
+  <!-- Bluetooth settings. The user-visible string that is used whenever referring to the dun profile. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. -->
+  <!-- Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. -->
+  <!-- Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]-->
+  <!-- Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]-->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the DUN checkbox preference when DUN is connected. -->
+  <!-- Bluetooth settings. Connection options screen. The summary
+         for the PAN checkbox preference that describes how checking it
+         will set the PAN profile as preferred. -->
+  <!-- Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. -->
+  <!-- Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. -->
+  <!-- Bluetooth settings. Connection options screen. The summary
+         for the HID checkbox preference that describes how checking it
+         will set the HID profile as preferred. -->
+  <!-- Bluetooth settings. Connection options screen.  The summary for the dun checkbox preference that describes how checking it will set the dun profile as preferred. -->
+  <!-- Button text for accepting an incoming pairing request. [CHAR LIMIT=20] -->
+  <!-- Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] -->
+  <!-- Button text for declining an incoming pairing request. [CHAR LIMIT=20] -->
+  <!-- Message in pairing dialogs.  [CHAR LIMIT=NONE] -->
+  <!-- Message for the error dialog when BT pairing fails generically. -->
+  <!-- Message for the error dialog when BT pairing fails because the PIN /
+    Passkey entered is incorrect. -->
+  <!-- Message for the error dialog when BT pairing fails because the other device is down. -->
+  <!-- Message for the error dialog when BT pairing fails because the other device rejected the pairing. -->
+  <!-- Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Label for kernel threads in battery usage -->
+  <!-- Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] -->
+  <!-- Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] -->
+  <!-- Tethering controls, item title to go into the tethering settings -->
+  <!-- Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]-->
+  <!-- Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]-->
+  <!-- Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]-->
+  <!-- Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]-->
+  <!-- Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]-->
+  <!-- Title for a work profile. [CHAR LIMIT=25] -->
+  <!-- Title for Guest user [CHAR LIMIT=35] -->
+  <!-- Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.-->
+  <!-- [CHAR LIMIT=NONE] Label of a running process that represents another user -->
+</resources>
diff --git a/packages/SettingsLib/res/values-in/cm_strings.xml b/packages/SettingsLib/res/values-in/cm_strings.xml
new file mode 100644
index 0000000..f34381c
--- /dev/null
+++ b/packages/SettingsLib/res/values-in/cm_strings.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/*
+**
+** Copyright 2015 The CyanogenMod Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <string name="profile_applist_title">Aplikasi</string>
+  <string name="picker_activities">Kegiatan</string>
+  <string name="select_custom_app_title">Pilih aplikasi khusus</string>
+  <string name="select_custom_activity_title">Pilih aktivitas khusus</string>
+  <string name="lockscreen_targets_message">Pintasan kunci layar</string>
+</resources>
diff --git a/packages/SettingsLib/res/values-pt-rBR/cm_strings.xml b/packages/SettingsLib/res/values-pt-rBR/cm_strings.xml
index cb2d235..02b6e96 100644
--- a/packages/SettingsLib/res/values-pt-rBR/cm_strings.xml
+++ b/packages/SettingsLib/res/values-pt-rBR/cm_strings.xml
@@ -21,7 +21,7 @@
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="profile_applist_title">Aplicativos</string>
   <string name="picker_activities">Atividades</string>
-  <string name="select_custom_app_title">Selecione o app personalizado</string>
+  <string name="select_custom_app_title">Selecione aplicativo personalizado</string>
   <string name="select_custom_activity_title">Selecione a atividade personalizada</string>
   <string name="lockscreen_targets_message">Atalhos da tela de bloqueio</string>
 </resources>
diff --git a/packages/SettingsLib/src/com/android/settingslib/bluetooth/BluetoothEventManager.java b/packages/SettingsLib/src/com/android/settingslib/bluetooth/BluetoothEventManager.java
index 2b9794f..8dc48b3 100755
--- a/packages/SettingsLib/src/com/android/settingslib/bluetooth/BluetoothEventManager.java
+++ b/packages/SettingsLib/src/com/android/settingslib/bluetooth/BluetoothEventManager.java
@@ -120,12 +120,6 @@ public final class BluetoothEventManager {
         registerProfileIntentReceiver();
     }
 
-    public void setDefaultReceiverHandler() {
-        mContext.unregisterReceiver(mBroadcastReceiver);
-        mContext.registerReceiver(mBroadcastReceiver, mAdapterIntentFilter, null, mReceiverHandler);
-        registerProfileIntentReceiver();
-    }
-
     /** Register to start receiving callbacks for Bluetooth events. */
     public void registerCallback(BluetoothCallback callback) {
         synchronized (mCallbacks) {
diff --git a/packages/SettingsLib/src/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java b/packages/SettingsLib/src/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java
index a134519..3876468 100644
--- a/packages/SettingsLib/src/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java
+++ b/packages/SettingsLib/src/com/android/settingslib/bluetooth/LocalBluetoothProfileManager.java
@@ -198,7 +198,7 @@ public final class LocalBluetoothProfileManager {
         } else if (mOppProfile != null) {
             Log.w(TAG, "Warning: OPP profile was previously added but the UUID is now missing.");
         }
-        mEventManager.setDefaultReceiverHandler();
+        mEventManager.registerProfileIntentReceiver();
 
         // There is no local SDP record for HID and Settings app doesn't control PBAP
     }
diff --git a/packages/SettingsProvider/AndroidManifest.xml b/packages/SettingsProvider/AndroidManifest.xml
index 5cb3ce9..71aefad 100644
--- a/packages/SettingsProvider/AndroidManifest.xml
+++ b/packages/SettingsProvider/AndroidManifest.xml
@@ -3,16 +3,13 @@
         coreApp="true"
         android:sharedUserId="android.uid.system">
 
-    <!-- ActivityManager -->
-    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS_FULL" />
-
     <application android:allowClearUserData="false"
                  android:label="@string/app_label"
                  android:process="system"
                  android:backupAgent="SettingsBackupAgent"
                  android:killAfterRestore="false"
                  android:icon="@mipmap/ic_launcher_settings">
-
+                 
     <!-- todo add: android:neverEncrypt="true" -->
 
         <provider android:name="SettingsProvider" android:authorities="settings"
diff --git a/packages/SettingsProvider/res/values-csb-rPL/strings.xml b/packages/SettingsProvider/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..ce94a95
--- /dev/null
+++ b/packages/SettingsProvider/res/values-csb-rPL/strings.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/**
+ * Copyright (c) 2007, The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); 
+ * you may not use this file except in compliance with the License. 
+ * You may obtain a copy of the License at 
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0 
+ *
+ * Unless required by applicable law or agreed to in writing, software 
+ * distributed under the License is distributed on an "AS IS" BASIS, 
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
+ * See the License for the specific language governing permissions and 
+ * limitations under the License.
+ */
+-->
+<resources>
+  <!-- Name of the activity for Settings storage. -->
+</resources>
diff --git a/packages/SettingsProvider/res/values/defaults.xml b/packages/SettingsProvider/res/values/defaults.xml
index 8101198..9ecbfdd 100644
--- a/packages/SettingsProvider/res/values/defaults.xml
+++ b/packages/SettingsProvider/res/values/defaults.xml
@@ -46,8 +46,8 @@
 
     <bool name="def_bluetooth_on">false</bool>
     <bool name="def_wifi_display_on">false</bool>
-    <bool name="def_install_non_market_apps">true</bool>
-    <bool name="def_package_verifier_enable">false</bool>
+    <bool name="def_install_non_market_apps">false</bool>
+    <bool name="def_package_verifier_enable">true</bool>
     <!-- Comma-separated list of location providers.
          Network location is off by default because it requires
          user opt-in via Setup Wizard or Settings.
@@ -61,7 +61,7 @@
     <integer name="def_wifi_sleep_policy">2</integer>
     <bool name="def_networks_available_notification_on">true</bool>
 
-    <bool name="def_backup_enabled">true</bool>
+    <bool name="def_backup_enabled">false</bool>
     <string name="def_backup_transport" translatable="false">android/com.android.internal.backup.LocalTransport</string>
 
     <!-- Default value for whether or not to pulse the notification LED when there is a
@@ -86,6 +86,7 @@
     <string name="def_unlock_sound" translatable="false">/system/media/audio/ui/Unlock.ogg</string>
     <string name="def_trusted_sound" translatable="false">/system/media/audio/ui/Trusted.ogg</string>
     <string name="def_wireless_charging_started_sound" translatable="false">/system/media/audio/ui/WirelessChargingStarted.ogg</string>
+    <bool name="def_volume_adjust_sounds_enabled">true</bool>
 
     <bool name="def_lockscreen_disabled">false</bool>
     <bool name="def_device_provisioned">false</bool>
diff --git a/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java b/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java
index 2c8d47d..e4b2409 100644
--- a/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java
+++ b/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java
@@ -740,7 +740,7 @@ class DatabaseHelper extends SQLiteOpenHelper {
                    Secure.LOCK_PATTERN_ENABLED,
                    Secure.LOCK_PATTERN_VISIBLE,
                    Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED,
-                   Secure.LOCK_PASS_TO_SECURITY_VIEW,
+                   CMSettings.Secure.LOCK_PASS_TO_SECURITY_VIEW,
                    Secure.LOCK_PATTERN_SIZE,
                    Secure.LOCK_DOTS_VISIBLE,
                    Secure.LOCK_SHOW_ERROR_PATH,
@@ -2087,6 +2087,7 @@ class DatabaseHelper extends SQLiteOpenHelper {
             }
 
             String[] systemToSecure = new String[] {
+                    CMSettings.Global.DEV_FORCE_SHOW_NAVBAR,
                     CMSettings.Secure.KEYBOARD_BRIGHTNESS,
                     CMSettings.Secure.BUTTON_BRIGHTNESS,
                     CMSettings.Secure.BUTTON_BACKLIGHT_TIMEOUT
@@ -2635,6 +2636,8 @@ class DatabaseHelper extends SQLiteOpenHelper {
                 R.bool.def_sound_effects_enabled);
         loadBooleanSetting(stmt, Settings.System.HAPTIC_FEEDBACK_ENABLED,
                 R.bool.def_haptic_feedback);
+        loadBooleanSetting(stmt, CMSettings.System.VOLUME_ADJUST_SOUNDS_ENABLED,
+                R.bool.def_volume_adjust_sounds_enabled);
 
         loadIntegerSetting(stmt, Settings.System.LOCKSCREEN_SOUNDS_ENABLED,
             R.integer.def_lockscreen_sounds_enabled);
diff --git a/packages/Shell/AndroidManifest.xml b/packages/Shell/AndroidManifest.xml
index 7c3a67f..61504b3 100644
--- a/packages/Shell/AndroidManifest.xml
+++ b/packages/Shell/AndroidManifest.xml
@@ -135,7 +135,7 @@
 
         <activity
             android:name=".BugreportWarningActivity"
-            android:theme="@*android:style/Theme.Material.DayNight.Dialog.Alert"
+            android:theme="@*android:style/Theme.DeviceDefault.Light.Dialog.Alert"
             android:finishOnCloseSystemDialogs="true"
             android:excludeFromRecents="true"
             android:exported="false" />
diff --git a/packages/Shell/res/values-csb-rPL/strings.xml b/packages/Shell/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..a4de2af
--- /dev/null
+++ b/packages/Shell/res/values-csb-rPL/strings.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2013 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+  
+          http://www.apache.org/licenses/LICENSE-2.0
+  
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+  <!-- Title of notification indicating a bugreport has been successfully captured. [CHAR LIMIT=50] -->
+  <!-- Text of notification indicating that swipe left will share the captured bugreport. [CHAR LIMIT=100] -->
+  <!-- Text of notification indicating that touching will share the captured bugreport. [CHAR LIMIT=100] -->
+  <!-- Body of dialog informing user about contents of a bugreport. [CHAR LIMIT=NONE] -->
+  <!-- Checkbox that indicates this dialog should be shown again when the next bugreport is taken. [CHAR LIMIT=50] -->
+  <!-- Title for documents backend that offers bugreports. -->
+</resources>
diff --git a/packages/SystemUI/Android.mk b/packages/SystemUI/Android.mk
index 22999d1..b614975 100644
--- a/packages/SystemUI/Android.mk
+++ b/packages/SystemUI/Android.mk
@@ -6,19 +6,13 @@ LOCAL_MODULE_TAGS := optional
 LOCAL_SRC_FILES := $(call all-java-files-under, src) \
     src/com/android/systemui/EventLogTags.logtags
 
-LOCAL_SRC_FILES += $(call all-java-files-under, ../../../../packages/apps/DUI/src)
-
 LOCAL_STATIC_JAVA_LIBRARIES := Keyguard \
     org.cyanogenmod.platform.internal \
     android-support-v7-palette \
     android-support-v4 \
-    android-opt-cards \
-    trail-drawing \
-    rebound \
-    android-visualizer \
     uicommon
 
-LOCAL_JAVA_LIBRARIES := telephony-common org.dirtyunicorns.utils
+LOCAL_JAVA_LIBRARIES := telephony-common
 LOCAL_FULL_LIBS_MANIFEST_FILES := $(LOCAL_PATH)/AndroidManifest_cm.xml
 
 LOCAL_PACKAGE_NAME := SystemUI
@@ -29,12 +23,8 @@ LOCAL_PROGUARD_FLAG_FILES := proguard.flags
 
 LOCAL_RESOURCE_DIR := \
     frameworks/base/packages/Keyguard/res \
-    $(LOCAL_PATH)/res \
-    $(LOCAL_PATH)/../../../../frameworks/opt/cards/res \
-    packages/apps/DUI/res
-
+    $(LOCAL_PATH)/res
 LOCAL_AAPT_FLAGS := --auto-add-overlay --extra-packages com.android.keyguard
-LOCAL_AAPT_FLAGS += --extra-packages com.android.cards
 
 ifneq ($(SYSTEM_UI_INCREMENTAL_BUILDS),)
     LOCAL_PROGUARD_ENABLED := disabled
diff --git a/packages/SystemUI/AndroidManifest.xml b/packages/SystemUI/AndroidManifest.xml
index e3881d3..d45b52b 100644
--- a/packages/SystemUI/AndroidManifest.xml
+++ b/packages/SystemUI/AndroidManifest.xml
@@ -22,7 +22,6 @@
         android:sharedUserId="android.uid.systemui"
         coreApp="true">
 
-    <uses-permission android:name="android.permission.CLEAR_APP_USER_DATA" />
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
@@ -45,9 +44,6 @@
     <uses-permission android:name="android.permission.WRITE_SECURE_SETTINGS" />
     <uses-permission android:name="android.permission.GET_APP_OPS_STATS" />
 
-    <!-- Screen recording -->
-    <uses-permission android:name="android.permission.ACCESS_SURFACE_FLINGER" />
-
     <!-- Networking and telephony -->
     <uses-permission android:name="android.permission.BLUETOOTH" />
     <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
@@ -56,7 +52,6 @@
     <uses-permission android:name="android.permission.ACCESS_BLUETOOTH_AVRCP_CT_DATA" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
     <uses-permission android:name="android.permission.READ_PRIVILEGED_PHONE_STATE" />
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
     <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
@@ -140,46 +135,9 @@
             android:protectionLevel="signature" />
     <uses-permission android:name="com.android.systemui.permission.SELF" />
 
-    <!-- LiveDisplay -->
-    <uses-permission android:name="android.permission.HARDWARE_ABSTRACTION_ACCESS" />
-
-    <!-- Weather -->
-    <uses-permission android:name="com.cyanogenmod.lockclock.permission.READ_WEATHER" />
-
-    <!-- Action target -->
-    <uses-permission android:name="android.permission.FORCE_STOP_PACKAGES" />
-
-    <!-- Kill app permission -->
-    <uses-permission android:name="android.permission.FORCE_STOP_PACKAGES" />
-
     <!-- blur surface -->
     <uses-permission android:name="android.permission.ACCESS_SURFACE_FLINGER" />
 
-    <!-- headset icon -->
-    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
-
-    <!-- Reboot -->
-    <uses-permission android:name="android.permission.REBOOT" />
-    <uses-permission android:name="android.permission.RECOVERY" />
-
-    <!-- Themes tile -->
-    <uses-permission android:name="cyanogenmod.permission.ACCESS_THEME_MANAGER" />
-    <uses-permission android:name="cyanogenmod.permission.READ_THEMES" />
-    <uses-permission android:name="cyanogenmod.permission.WRITE_THEMES" />
-
-    <!-- Visualizer -->
-    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
-    <uses-permission android:name="android.permission.RECORD_AUDIO" />
-
-    <!-- Action target -->
-    <uses-permission android:name="android.permission.FORCE_STOP_PACKAGES" />
-
-    <!-- Halo -->
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-
-    <!-- Images in navbar -->
-    <uses-permission android:name="android.permission.MANAGE_DOCUMENTS" />
-
     <application
         android:name=".SystemUIApplication"
         android:persistent="true"
@@ -209,28 +167,9 @@
             android:process=":screenshot"
             android:exported="false" />
 
-        <receiver android:name=".screenshot.TrashScreenshot"
-                android:exported="true" />
-
- 	<!-- started from PhoneWindowManager
-             TODO: Should have an android:permission attribute -->
-        <service android:name=".rr.onthego.OnTheGoService"
-            android:process=":onthego"
-            android:exported="false" />
-
-
-        <!-- started from PhoneWindowManager
-             TODO: Should have an android:permission attribute -->
-        <service android:name=".omni.screenrecord.TakeScreenrecordService"
-            android:process=":screenrecord"
-            android:exported="false" />
-
         <service android:name=".LoadAverageService"
                 android:exported="true" />
 
-        <service android:name=".CPUInfoService"
-                android:exported="true" />
-
         <service android:name=".ImageWallpaper"
                 android:permission="android.permission.BIND_WALLPAPER"
                 android:exported="true" />
@@ -245,30 +184,20 @@
                   android:label="@*android:string/usb_storage_activity_title"
                   android:excludeFromRecents="true">
         </activity>
-	
-	      <activity android:name=".tuner.QsActivity"
-                  android:enabled="true"
-                  android:theme="@android:style/Theme.Material.Settings"
-                  android:label="@string/systemui_tuner_qs_title"
-                  android:process=":tuner"
-                  android:parentActivityName="com.android.settings.Settings$MainSettingsActivity"
-                  android:exported="true">
-            <intent-filter>
-                <action android:name="com.android.settings.action.EXTRA_SETTINGS" />
-                <category android:name="android.intent.category.DEFAULT" />
-            </intent-filter>
-        </activity>
 
         <activity android:name=".tuner.TunerActivity"
-                  android:enabled="true"
+                  android:enabled="false"
+                  android:icon="@drawable/tuner"
                   android:theme="@android:style/Theme.Material.Settings"
-                  android:label="@string/status_bar_tuner"
+                  android:label="@string/system_ui_tuner"
                   android:process=":tuner"
                   android:exported="true">
             <intent-filter>
                 <action android:name="com.android.settings.action.EXTRA_SETTINGS" />
                 <category android:name="android.intent.category.DEFAULT" />
             </intent-filter>
+            <meta-data android:name="com.android.settings.category"
+                    android:value="com.android.settings.category.system" />
         </activity>
 
         <!-- Alternate Recents -->
@@ -279,7 +208,7 @@
                   android:excludeFromRecents="true"
                   android:stateNotNeeded="true"
                   android:resumeWhilePausing="true"
-                  android:screenOrientation="fullUser"
+                  android:screenOrientation="behind"
                   android:theme="@style/config_recents_activity_theme">
             <intent-filter>
                 <action android:name="com.android.systemui.recents.TOGGLE_RECENTS" />
@@ -478,19 +407,6 @@
             </intent-filter>
         </activity>
 
-        <!-- App picker activity -->
-        <activity
-            android:name=".rr.apppicker.AppPickerActivity"
-            android:theme="@android:style/Theme.DeviceDefault.NoActionBar"
-            android:label="@string/accessibility_app_picker"
-            android:enabled="true"
-            android:excludeFromRecents="true" >
-            <intent-filter>
-                <action android:name=".rr.apppicker.AppPickerActivity" />
-                <category android:name="android.intent.category.DEFAULT" />
-            </intent-filter>
-        </activity>
-
         <!-- Doze with notifications, run in main sysui process for every user  -->
         <service
             android:name=".doze.DozeService"
@@ -506,356 +422,5 @@
             </intent-filter>
         </receiver>
 
-       <activity android:name=".DaylightHeaderDefault"
-                android:label="Default - time based" >
-            <intent-filter>
-                <action android:name="org.omnirom.DaylightHeaderPack" />
-                <category android:name="android.intent.category.DEFAULT" />
-            </intent-filter>
-        </activity>
-
-		<activity
-			android:name=".nature"
-			android:label="Nature - time based" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-
-		<activity
-			android:name=".poly"
-			android:label="Poly - time based" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".naturerandom"
-			android:label="Nature - random" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".n"
-			android:label="Splash" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".n1"
-			android:label="Google pixels" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".n3"
-			android:label="Google colors" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".n2"
-			android:label="Dots" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".color_layer_header_base"
-			android:label="Colors texture - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".colorz"
-			android:label="Pixels full" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture2"
-			android:label="Pixels full v2" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".rrs"
-			android:label="Resurrection Remix - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".rrs1"
-			android:label="Resurrection Remix 1 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".pb"
-			android:label="PitchBlack - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".pbs_tm"
-			android:label="PitchBlack 1 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".pbs_notm"
-			android:label="PitchBlack 2 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".getr_base"
-			android:label="Get resurrected - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".getr_base1"
-			android:label="Get resurrected 2 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".getr_smart"
-			android:label="Get resurrected 3 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".paper1"
-			android:label="Paper" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".magic"
-			android:label="Magic" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".camo"
-			android:label="Camouflage" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".NT"
-			android:label="Color with texture - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture"
-			android:label="Texture - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture1"
-			android:label="Texture1 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture3"
-			android:label="Texture3 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture4"
-			android:label="Texture4 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture5"
-			android:label="Texture5 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture6"
-			android:label="Texture6 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".texture7"
-			android:label="Texture7 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".lines"
-			android:label="Texture8 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		 <activity
-			android:name=".dots_smart"
-			android:label="Texture9 - smart" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".rr1"
-			android:label="PitchBlack" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".rr"
-			android:label="RR-1" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".rr2"
-			android:label="RR-2" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".rr3"
-			android:label="RR-3" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".rr4"
-			android:label="RR-4" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".rr5"
-			android:label="RR-5" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
-		<activity
-			android:name=".orioles1"
-			android:label="Orioles" >
-			<intent-filter>
-				<action android:name="org.omnirom.DaylightHeaderPack1" />
-
-				<category android:name="android.intent.category.DEFAULT" />
-			</intent-filter>
-		</activity>
     </application>
 </manifest>
diff --git a/packages/SystemUI/AndroidManifest_cm.xml b/packages/SystemUI/AndroidManifest_cm.xml
index 29b9e93..bb1c70d 100644
--- a/packages/SystemUI/AndroidManifest_cm.xml
+++ b/packages/SystemUI/AndroidManifest_cm.xml
@@ -47,8 +47,6 @@
     <!-- Live lock screen manager -->
     <uses-permission android:name="cyanogenmod.permission.LIVE_LOCK_SCREEN_MANAGER_ACCESS_PRIVATE" />
 
-    <!-- LiveDisplay tile -->
-    <uses-permission android:name="cyanogenmod.permission.MANAGE_LIVEDISPLAY" />
      <!-- Weather Provider -->
     <uses-permission android:name="cyanogenmod.permission.READ_WEATHER" />
 
diff --git a/packages/SystemUI/proguard.flags b/packages/SystemUI/proguard.flags
index f019ddd..d6944a5 100644
--- a/packages/SystemUI/proguard.flags
+++ b/packages/SystemUI/proguard.flags
@@ -1,4 +1,3 @@
--dontwarn
 -keep class com.android.systemui.statusbar.policy.KeyButtonView {
   public float getDrawingAlpha();
   public void setDrawingAlpha(float);
@@ -11,21 +10,8 @@
   public void setGlowScale(float);
 }
 
--keep class com.android.systemui.statusbar.halo.HaloProperties {
-  public int getHaloX();
-  public int getHaloY();
-  public int getHaloContentY();
-  public float getHaloContentAlpha();
-  public void setHaloX(int);
-  public void setHaloY(int);
-  public void setHaloContentY(int);
-  public void setHaloContentAlpha(float);
-}
-
 -keep class com.android.systemui.statusbar.phone.PhoneStatusBar
 -keep class com.android.systemui.statusbar.tv.TvStatusBar
 -keep class com.android.systemui.recents.*
 
-# org.dirtyunicorns.navigation trail-drawaing library fix
--dontwarn com.google.common.annotations.VisibleForTesting
 -dontwarn com.cyngn.**
diff --git a/packages/SystemUI/res/drawable-hdpi/ic_mini_settings.png b/packages/SystemUI/res/drawable-hdpi/ic_mini_settings.png
new file mode 100755
index 0000000000000000000000000000000000000000..4759a1c07deecf2d7480e706d9bf6bd2ebecae89
GIT binary patch
literal 192
zcmeAS@N?(olHy`uVBq!ia0vp^oFL4>1|%O$WD@{V?Vc`<Arj$JFBoPyF$%Oi%->-6
zfKx{&_syC|rY7N>9qa-JS4*rH)V7xP=3c+R_r`|<>}FkgTi^WSF%~Wl4z1-W^eM`V
z&z!dE*8x%QGaC;v-Bp<`b}ONW(dx%x&fhBWD_6<!nJ09c?laumxHxR3<)4H}DdC~>
qe;n00`Av7}^LcT8*S~#SvAmwc+D^v*p<Xu7NerH@elF{r5}E*P{75|j

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_qs_brightness_auto_off_alpha.png b/packages/SystemUI/res/drawable-hdpi/ic_qs_brightness_auto_off_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..0a29157fbc5cc76278572315d75581f2d7d1a3c5
GIT binary patch
literal 2215
zcmZ`*c{tPy7ycp3WhlD#JzK7AW-Ma~sRm=;LL^4U5@Tt`wTu`Q)h%QYqimT$_L3!g
z*%A@ivJA4#*q0Hx8sGH&_x<rb=XuZjocBEMIe(t>$j-)$ms^Y*003Tu`4tBygMWjI
zgPC1ee?DN+DL)fy699Of!gGvdXVxqj2eV5+<$wf@S;*Wpcd!P4Xhi_P-v@vrri7;g
zKsa;Csuuw0X90k4=!-`C3(N+Gx24$?;N*AYw-l!_l|MqwuVI*M{$H5(1{whXX9VJk
ziIYF2CEMen$EaXW+zQ1YTO{m>Vz;-o)3*4?KSf^q@Uz;7b|v}j#?o|aS!YkT(uBJ^
z@Io%`bIz*Vts@hq{&qo@@DV4iGm;9i@UD_HG3_*E;=6<6f2+r{YX(}Ch{WdxGoceJ
zn=M9+z>V628@N38Y5-1Xt1DM$`RAobV`YIQXs+;>*o_n)(&NHwhl*Bzn6!O8E1g*P
z^CPhqw3uua6`x>!UM&ze6kElE*302wH$D@JNEj_f=zpS26||uDmr6e^UGwCpq(HA}
zz7d`TT#lcTPRr+rPPS~>A>8k>oYd95*aW5R*rm68;domfJKVmJN;g2r6>R;zwl*n;
zh&aXIU-&t6l>6kjJ5J~Mu5#I|R*IBH!1SaAPCg)$ltHk`q?>j(>3zzzrD?^3$ktgt
zHr^Y3>k&Luma_OZHiHV=5tppO_%;?}mSl+3tkN@LztowPcnyITVq(zC1JS4abZB8S
zCJda<WvW{5HwnNCo7%6L1V6uZ)y)^G#A*n)@7I^$6pQb`_u)0-2l3LNtb0<tTc}7*
zk=|bd%^PG8y>KLxei?6%Py&qEb=cA{Vl1V+egX}=4P1x(huxrWe8=M;tc)5?5kHQv
z$J_S%b4Cg%_p6`cgGrK;I+5+tL4VqC*Z|Ie8F0d?gPP#GE*~CrX-2|1tvQ_#{ew|U
zGEk_vmHp(~qNg(Lpj$4@Ugu*(4ouwh=9t}j4^U4RnY%N5ivDOZtr11RaW}9XX5SjF
zU>%VE%!v=1GxRc>GZtzPZs_*OjF(RPB|Qh4oBGqRX7CXe;`vn?W@`nDWWe6nJXV;I
zp-B@I#V_b9)A9(xT5c;%6-fE(;|qI}(r*fWfZZ}HXnc%k7je0zIrX4$4YuWdp@lGp
zJ5=sPuty>}F7M+-T(SV>c`_-YCTZn;`<^A@tZZ<T=tKXQX`<4T@udq{v<WdhZ2lI7
ze#vjD8Cy(}Wa-yISSBr>L*Qx<u*~moan>A)829{d$i_j(41>?yk*Opec{KPm{qDuM
zwlQiZLQEWp3GU45{ovD732hF^z@{MGoixvbdL76yig%NcvWO`KHONs@Ioj=>@JdUc
zk2*y19pxcS?JB?BqRIf7(5m_26$ku4bf$!4TTv0fn->^Hv9(ep=;-KnzmD+}SyOTJ
z?fgmjn?vIY+(q=W;AJ3Bd|qXsN;AbEF(<Kt!>F=KLAiE<wVd6k*rI{ki(5o<5>vhz
zw%vt#5x6g+ys|6jKUH0>9V8iOCQzZOw<^}5GbiAsa#cVF{^@}XxwAuEeb4=C0*%65
z4zWUaaFIGImoy5}NkO}Eb4y>;OM~c7*}?578++s9HY*DmGw-IG!6u%qv(S8TbG>BE
z@Dc~=mT)_esb`U)keP^NyXq>)k5OUUD$Yx44|%n+{uqG}BRPpCVj#;<qq^t}+HUJ`
z^>oODuRv=IUt}x;Op`eC=+4U=^nPHwQK{TYepgEIzgE5@^GEKa2G5WQi|>YnRlUKY
z>igknHT4dMAI+sX|0V<x#YwtbJSLl%f+{W0Om%s%!^hO`kdQyN|Jqiq?z!-_AXcJT
zE0P*7dp~urvAo8b(`knSQN@9#$`ZB3`=Xtr%SmhUh80-2fZ04m+wbY#w-F0%zq%9@
zMH&Vg7cF8;HGv|{Mw8bIv`bf|dXgGCkAx6MWwq9U!Sjm+$_x7)pSy_3FekDwyu@Js
zAeMJ$N>g4^DIh{IrfHb{nUa_7slny2=YvYpuauk=5_`&WJA1KGe!q6cLVomBfyI7m
zBg^Z}-S|PRZo|0uPm8KkhptNk6?Wm-ec{tmuO<8iM%x`dJm2ES<MSM6&qnLKGXg5v
zDRn=(Na#4VQ2qVOzeECD?j&H<*pyGAxOJ2MN|L3<o^6n!j=iXyyB86Qlm(L+&Bju^
zC+7pAgsL{*Mdt3eE_G|B_U=N_`Z$6*-9GngW6_b|k(^0><{hEDoiFNS?12#?Fx|!#
z;_E(E*X`d5&5fkaqTgiDV&uKEExDo&RaqE89rZcb;ypbY#-20s0k&}2;AS(=uUzco
z`l(nA1u~bJFOrJum*3XpDRhj_FpYb&?|FKiJRj^IhXG30KBzy^6pPT^R^E4~64FDH
zzQmo@m&;8@>nH7Pvf9XdSPQ}J&(Ccix9wQ^<-NRUCw9n6J@2vcF0<JB)xF&(`(M1Q
z0&Z-=0n>$D$tCqtrxtYM1s>{c{NUR=96n*oQd^S?h?!O|y!f|s3hryKhVgZVls1Zg
z^XzG*CM(6Fj{U9>&>rJ($mLDOA`v{_nvO+fz12t<?Q+RF6kK*8v~nHC**j)~*9jGN
zDcQTm2?`?-TcfLOqpmqas<0cx@{=huBiNiX0>(aAd-Wuy5h4;A=V~LTrnoR>!YiUH
zIN+>O5=Z6_5RM(69FX1U-eK#qW0-}3<FxUs9oLgOCwt<Xc<GUBXi-$dH2X=}dq(1f
z-~$GAgLuHvXsXBK+n&$C#~oU?YfR8hP)i~X7cp<K0v7Iy^+94$`ZsT*m;^w<5KT3(
zt{POw39P3Nh3Z3e)xa=)F!<%CIj{dQphJ8De53xq;cKSrG}9pZdxK+$FE#>s8wHs7
hgm|N55NM<y$^nJ+i3;mQ{eBn#1l;CI<t4AX{{fa&1*QN1

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_qs_brightness_auto_on_alpha.png b/packages/SystemUI/res/drawable-hdpi/ic_qs_brightness_auto_on_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..9c1d8ef1c12781c6f6329bb4b791e264f4630c44
GIT binary patch
literal 2082
zcmZ`)c|6mP8~@A@!&fS5l-xCy?`$U4A?2F;u1Ge_k!wswa!jFylp|NU64sDN3e$2$
z?#W%VA`+S$$sGHw-+#Y9ey`{Ce%`O=ct7typS#wU#u5-&2mk;Q7!w0qKEwY)M3|p1
z3T!0sNzhB*LLUHLq=;?dg!naxXlr~PsO&vB$1fDzO>8Xy;D#Ci#M}k|F25D?9RRNL
zul&FQ06Gf*_7fh}+nnYPgx$=H4FKNXD4>_7@jIdflgmUtoBS6>oxW%JTgw;&eS2>f
zJ;$Ql#ctpG=uOt<Gw<}@wIUSqb0u}30X1_GSp(ZCSxsds9LKzk{i-ay2xubU=Mq7x
zii!`oCf>0}*9N#puZnIDlQ`RQk7`+$Ns~kteSPiBDP7&!1^RC%UhTS*@AI0U7Tx-3
z(<u@SB#^CXjfU^AuJF<Wp8c%fu>tfyF=yBaY$x~Mm+OxU1NWT;Pb585-kS&CD_Vhz
z3>@Da@6R0cDPemFUa_s-Y)h3HBO+H%E=JXS2qkJiY+g~CLbXLyN)z7YszjccWA=00
zkC<>(jxJHxzJ+upzc1<F54}gX4Z);y%nPaQ&7<4e!>`Oz<waKB`}Ic2MQASP`3h}~
zdp4(xZ7Vwu5LGNLxsGUH#*g@97n`a0_ss+(HX8d>sNXL{iCWI64C@7OBnrS+gc^4(
z)M^gM;bg$i!CnGp{`d0tPPNy74fK{22C{#29Hd*3lM2#c-)<cd7P7T=yGu@FKQ>}W
zhjL`GDW+5HD_HBSbS7glD`1zUK!8A$aFpN<NDW*Nmu=hR{JE<7jIX;pENSyoTz2zH
zOk8R&xL5cUC?R2-T;-HN-i+}jZ!<V09d!&TyWQN2^_<n7P<75q+qicF0Ys1|pb3yA
zP?c(nc4XQ|L_+;3gESi_Qb*HVPFLeZmA$6~)d(~a0$Y-f1J^5WK*UWipvSJEvUjEf
zy|Qu``HWz;q=LhS!ISuGzXeHla{q`HyTWG%v;`?IA&g5iPz)=m1?y2DvcC~`Kvvub
z{VN#hbShTVd_1y-YxUU+k%KcQ_{TrxJ?c1Ds-P9unJ?GUd;fO?z2{Jk7-mFbPEy0&
z7`PfIhS9P$y=~^%5Y<sGC@*N)wNUdc+?<!H6#Uwy!9QAL;Q-dirk$!5q54gC5Cem`
z-J?yWYq>IIF)3pZ@rJJhTJqG<&}f!UEVS*=nBrVei?-|2%X<c=2JNSjZ>TR(qdSo|
zZJ8OMKd9772q%-)9UcD#+EVAv9j%fXu%$z1l2dmO&F->Ix-08LxxsogW?|%hmY5jQ
zk9a&9+Ro}m*|}vD)0H7X^%CTZc1%)g(+jWJ=sxjq4$3csO?0N4Gk^MBpU=r{R>aKi
zx;i49gDQ;9rUc&6sjGam@Hw9PZ?SgubeaFI&i#xv8Pu~TJgunj6ho4cMW2-M-U=5V
z1vftKshFC8i=RAD;(6y<aXKYU$F9gXHWXThYhlrFQkFn~q*k4rm6h=;4<aq6>t=!y
z`CuYs9qY)`kEd9py>lZMNSH+AimqEpur>2bcajW->o2&ILVX)%Ey_ByNL5^%oZ1lk
zk$hH6<*}j<)uq(gwK)9jlxBxyp5q*&*0exr0rRAd=j?m2EGi)o>b7e+Zv0@Fg=UIw
z-@}6I6KcbvOBrLTbFGZ9yy7_2NaMMauFN{<^JhXiTE{JG3>A$jbE}<<28JUW!2h^1
z>;2Q(8P?Q4Gq%~nm}IQW1pOXencU~<l9hH?=&IcA<UM#wB*TO5dkLAzK|MjLRAjEE
zQubi#-0)jJd$au<NDk%C^f>l5>|j^tv|k_a<_F@};;C<Ml<wRrmlE}#uk$+Rc9m%z
zsQ$H?ra?8Yjbyz?HP+=W+);(L!}M}ZOD~A8gInL$%K-cFK@*wm>rY&<ocRS-;TEIM
z_td<=WaY0rr(N0&$$^Q>v~r1b*!7GrV=}c#f1=o;;QnrtXwW}4Q8{@M-Co?#^dkGI
zSJ4Q9qtR5gJdhW1++k?GNgm8Oye2`Bd_aTwqHBpMHQ$Eb3NJ}jsdYG38cZ6~rF4d_
zVWkcAyRxTi^8;ST!~BMO?lv~45i?-ee(p%Q6}buwkYtk+kTLH26bHHzk_i$u#~g?r
zr&FL7$NDSQ!_N#H+3hI$-FkFJX9;15sLfR>;k*pbx3T}YjQ)PKXI8!tKByhHq5<xG
zTE<M4dw9X#e&)wb2B{Qhj)AqsjtEdb>OMaou}Y<#eA5{QUwX3{vjU?uz@8SzJTdeM
z5T6HYl=}-fshdV<gfVZUMfS6Y>eO8cRTkXE=)?FguYIaNC7phWq)4_NS{|J!N&3bU
z7P`_YTm>DqF1&qf5~~%kxf4{~7sl17Z<JptUnW0r3RQ2Cy|<mO`dP|ywXR%mr*&U+
z+~p&4rEp%x2QA#I+#4$!v*v%qQXiI;w-y$q@1e=2sdpW-tZAM35VjqtxBNz6-L&3}
z9v;=bo)3YXKD3-~lKAU2sRYvfN2{kuIvw_6g13iFoOcG9_s`4KEbCFGHfW%9z3#R9
zmw19pW#qiFf<+_wUQ#dbnsr^9hECG^p}ZTF1+;0T7o^+%UADl%k2_!&g)Z>B?+#f0
z8&nN3ycFVr3&Eq^gYkR<5O7W83AoM)gtk3g7mYxmHFZwFPom-Qq7Ur<75E2w_;`l@
zf5BkprB8eZ=wAoBK+g~oE*KB!djz`S6)^rdFT5=t=Mf&%iU0en0gR!gLFIXD?0*2=
CW#1bB

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..aa9f6d43b5d0a554997174c685f1a65cd230170a
GIT binary patch
literal 1412
zcmZ9Mdo<Ju6vuyg%owj$$SWslJj!ckG~TT7$c*u0jFGnZF)z<$(3FzbkWez~49Z|j
zSQ|-+Qd^$Mq%E3uqntGBkvzs&c4d^Y<LqC%_nv#d=iYlh_x^W_NP&JDs)nin0B8{K
zK4iJ>+YS|&Jcmv9vE-r@g9C8@aEGh*m8vYSP3U+s2mtBk0FZMI05;^UoKFC75(NPB
zQ2^j_1pxGts~-lt$p<hR(a#6i+V*RY8+q~$oJ|0I;U82KwNUWj?h7>eemcPiM>*R6
z_y~wU{+)j288o`4=>|JkoO6mU#``KXjIed}YVw<Hi`A5MZ>k(dwS*EYOW)Zxsl9rW
zPr6e_YCLwEjAO%eQ}jvgm?>+%e+RAj5=cv+(Kp3XNTR|0CUMnKPxJH4<1Z^UXP2a1
z5`<UT)81ar9)A-UNg(k{TvygJSZ58$WF9yZpQ@Z(@sE;l__P9{ZFXyXiO1R9qnQEw
zskVn(jX$JP`2A;gi-JF(CORBt^-(zrK5Bl?+?+35;C#ygmBN_^opQ{2e(C54)pjUi
z;kSTf(@yPGRZ+@=@a!@1+H5DJ=s`UfI9Vu)7a1-a_7XOj;jNOTCEI|Ypbvx1guupC
z2V=ET)ygMncnL1qXuPFAzC#8<P*UN=i^TeqQ0x7Q(quSj>e=fYkdB$~yFb2}78Vw!
z1-Uo8p8L%SMkYjY^7d<araxFPo2y*N6b6Cd`xgR%Q^6<}1VOYL36CuKL54|lkD9t=
zG536ENc}XntF4VZFq(&7MwXx^;zYGq<*ci#tJ$2rz5VZWI-M37d6h&Wi5Apwys`0d
zo@YmddFBC>-Q}#9m>6nm>I#&e{t%f-Bod1=6tj%f2#7$DDXOnNd$1uAf-1tfGl=NB
zZ!I>3LLt@9Xb)nM!gz0!S0nX1GBe@5aiFv7O8xNA5Sd$2a>3Zx*efebR%+v{V^*)1
zjCAyz)?PlJal5l~U7yQqKi1OJ(qiLqMZzKB@o_5mjc`#HXJkWbYxkHZPOOH7C(KFb
z=bMC6e=e8lib@5gv5ASHmgWAqT2iddZlYD;qd_k{Pf(!v=!tusb;9(3)in%`hbIzw
zA32;ITCWM69+&w$nM#$~N{fqJ2+-5KVfIH1e6NOvhJU$#!;Y8gnwtFJFI&{Z9l7c^
zybogU8cs%rdbet4+-z<ABKx_$osxfiPy?2il$3M}F;m$#;ET<3F>l^Clk>D&P+nGc
zE-<$lgTa`-i1oVuDwZ;}R@BtgWaUsLe%m|BEyKQXerBiLGrSTF@1q?>Di{X`1#vN0
zEVe>e9{*Hsk*8&xcvX9}@u;@Qq5?b38@o+VG7X7{0PPaUWb(_vfPk;LI$6GqPp-Sx
zd(xj9o0J;u=CJa?+?`5)m4BX`q^%IcA!wpODwX;zo)z|b#LpGVlrM~JEG$Cn$n{T4
zOBI5io3vA>9HcW0I(;g%pdW2XjGK3ceho@F)E)eH1EhoAwX*-ZL8gzv-n~ItggJ@C
zao>pgsz8+(XR+W7xiw$XM|hC>G7m(Agm`Cv&4XHpt7~c!J<nTXm;yT%n$<t@v5+T<
zFXnQI_8E1S*4D^wB!xm@)NQ8S9p14seI#2f7SF~+M=P!4i!Bk(mDSaIYP-51eM7@t
zJRa|vT_eA$>O?_70gE4C?w&;~FW;b03fvkN=I1T>FsJkFM^@YA8!p)*oDB>V9Gnd!
zfg)0Ny_pW#QT~C<*uF>E3@V%HLQiGN1;C)tSR0g+4a%N^c67mFT<p;{C`T6*Y8DN?
z`wx)FV#GzC`5$n|$pz*3FVJ$e@SYqn*uD_Lie{%#Q<(sc!J;uu2#M4fCYecPoJo1c
Q+<uJ!!8g$7mRD5nKU)Q7<NyEw

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_back_ime.png
new file mode 100644
index 0000000000000000000000000000000000000000..151caea27a2897420951d7e380bf84e62733a497
GIT binary patch
literal 1468
zcmV;t1w;CYP)<h;3K|Lk000e1NJLTq001EX001Ef1^@s6SLDKP00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u?5YlW9r2qf~n@L1LR9M69S6fKrRTw{K
zTz5^{2`R0F^&xx^?~EptAdHtD3Mqtb=}7`X+|m~>Jybpz`{0G45Znh}w2dGM?_s8b
zq7~v6IEqM0;iZ{z?lU^;UHg5*IkTtP+1b@*dZ`0H&VSDN|G)1$zw`UPbB3}1o6^qD
z&m}a#m45*m=`%P0F7R+NdW(J3mojhzxD7M_^-%!Xtr33we*FQQot<%j`a}%g2abV#
z{C)uVB8UfMSJ=N#{)Au7#2&HJ)6<*i4}d>_4ZsF?0Cxo75%xBO{X_V>CD^#a+-`S_
z)9GZZtE+{Wuwrl<uv@Lx{)L5wJ4U0?u(-I`aaqv!WM^k*=UcK%_Q?<VbGcl8|E#gG
zkqdFen9b%dMdUWG*ZX~Pa`JN+zaAeSPrde{h>MHUYBU;peiqJ#MG$U_#d44Qk>94K
zCeHHn^8><cZEe*Z931?P=RX13!#Y7(tVpYiB369=KHwv}hlht7ot>SpN?{fh6fkyj
zaw0RtpSvq7E1#hELNF%u>zGfGHH5Ye)P_yN?(S~3ySp1$7^r^%wv2#<?5?e?-I4ad
z)Wa05udipr!^1o+EsbSlWV{IKe#9i{!wcM{7h%L7<ni%w*dV~9tOYTm{|wj#EPH!<
zzm}Jmr?j`Xv$?rBUR_=N_adUQF)=Z56Dx4wc?+PvSQ;kgFc-EMQNSYoGR4+z<Jmnw
zKVKzTQ2hql=;$abD=U))<f_SJx+g?RVwzI+m!ChTqEc|=Tq%BE3mXo*-Toa3l-{eY
zt>w@~Xex_}iUJ1O+S+swkre43@S#dGISUSewn~|QO9Ze5_ALGV{cnV2K{lJs7E+`D
ziF8dZx4~zO5FtN0IwG+@gWt2V;B9Vh-o-2a^CBrJi46@6g+F9aH`u_y08dX(XIWWU
zFL^wkM?^|Nid6?#2x6&DuxHxe-~X+pr6q&36iCS@wNN63QB|b+Aoa5#c2Wdu#GYq)
zdHExC8)j!`pBx0Wsi`SeTwJV*^ea`QSXC@i%zyZh1FTjJ>I=b|6)euBrluxkW@eJ`
zc|}FV(*+>e$j!}FMVc2R(hq{zke8I##MW(5iqFi<+)`Pf8gii~)vt*3Q&psxzaeS?
z&2!LB@6!3;B;b7b2A^M}Z%ax_{93zIqYnoM2f0qCV>vlFB+{Q0k#>nyUKRa&VtgAJ
zvenz$`?}OhLPEmj0thA2$;rugRgvOZFW7h<zkdOC#QD&s-kcs=n4Y#xPfv#usSA!t
zq|?IL$KsSU`+PoQO-;=!OG`_n0j}5U|5*UC6&4l-MB35OAw_BuDQf_h>42h?#3_4Q
z6=P3NPh^4!-WG_oS)7b?U2}=7aXK81AMhGofLK>o7q6<SicA2qH8eC(x#f9zc`Q3S
zn?(9EIYufHE8D0YcGQA5B@2m(iIEK;6dNNWBk!Pen?*+W*4NiR$26U^9M?jI?1+32
z)W*lh)qvs*2E*HQnZ<>u4vt@@!M?seR$5vbod9HOZf>Rnj*X3tajjN+4MW#~_{z%4
z82JuTG`c}ZCV~#GsQ!KY@3g-Fa-AFO2%AGw0000bbVXQnWMOn=I%9HWVRU5xGB7bU
zEigDOFf&v!H##*kIx{gXFgH3dFy}E%+5i9mC3HntbYx+4WjbwdWNBu305UK!H7zhW
zEif}wF*iCiI65&lEigAaFfhkLgPZ^W02y>eSaefwW^{L9a%BKPWN%_+AW3auXJt}l
WVPtu6$z?nM0000<MNUMnLSTYGhmLOm

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_back_side.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_back_side.png
new file mode 100644
index 0000000000000000000000000000000000000000..0d1263705681f3292d3b8fd6f9444ebaf850991f
GIT binary patch
literal 1300
zcmV+v1?&2WP)<h;3K|Lk000e1NJLTq002h-002k`1ONa44(}jA00009a7bBm000XU
z000XU0RWnu7ytkR7->U8P*7-ZbZ>KLZ*U+<Lqi~Na&Km7Y-Iodc-muNV4mRU;^fLC
zz`#&YR8r&~<QN$d8KuB}o`H>lnSp_Ufq@}0xwybFAi#%#fq@|}KQEO56)-X|e7nZL
z$iTqBa9P*U#mSX{G{Bl%P*lRez;J+pfx##xwK$o9f#C}S14DXwNkIt%17i#W1A|CX
zc0maP17iUL1A|C*NRTrF17iyV0~1e4YDEbH0|SF|enDkXW_m`6f}y3QrGjHhep0GJ
zaAk2xYHqQDXI^rCQ9*uDVo7QW0|Nup4h9AW240u^5(W3f%sd4n162kpgNVo|1qcff
zJ_s=cNG>fZg9jx8g8+j9g8_pBLjXe}Lp{R+hNBE`7{wV~7)u#fFy3PlV+vxLz;uCG
zm^qSpA@ds+OO_6nTdaDlt*rOhEZL^9ePa)2-_4=K(Z%tFGm-NGmm}8}ZcXk5JW@PU
zd4+f<@d@)y<Co!IETAK>L(o<5icqT158+-B6_LH7;i6x}CW#w~Uy-Pgl#@Irl`kzV
zeL|*8R$ca%T%Wv){2zs_iiJvgN^h0dsuZZ2sQy$tsNSU!s;Q*;LF<6_B%M@UD?LHI
zSNcZ`78uqV#TeU~$eS{ozBIdFzSClf<pirb>s*^S+dw;4dus<{M;#|MXC)T}S9v!D
zcV!QCPhBq)ZyO(X-(bH4|NMaZz==UigLj2o41F2S6d@OB6%`R(5i>J(Puzn9wnW{e
zu;hl6HK{k#IWjCVGqdJqU(99Cv(K+6*i`tgSi2;vbXD1#3jNBGs$DgVwO(~o>mN4i
zHPtkqZIx>)Y(Ls5-Br|mx>vQYvH$Kwn@O`L|D75??eGkZnf<fA&q<hjdcOIBrHe!s
zw=Vg%EOYt2l_9H6uW?zsZ@uM)ZJSIsZ`o?HZTk+Zo%?sY?m4?JZ2yCUIfs58X+I`@
ze8oxYQ|HbkpZ#@y(nak{N3SGa{daxNO`BVH@6_K@zJKCj-ea*R`=4dL5P5m<b^crV
zcNac1eKP(0>g$5<;Xeg_o%+-I&+-3%01W^SH2RkDT>t<8AY({UO#lFTB>(_`g8%^e
z{{R4h=>PzAFaQARU;qF*m;eA5Z<1fdMgRZ-c1c7*RCwC#*)d4NKokbxKW(hhDpo-h
zLBYBSj;?OS!NIMQi&H1Tse_J!ql=4!SP_b25eG#FM;9l@fI1Wekz@#hU^TycY2i*h
zsqnwI9e3o*<?dZbJffE(198L=M;vj)5l0+x#1Tgval{el|8hL^W3X2^<EY^RB`4EE
z+syHlWSzsr@2CBcJ(3L$xxm<Ss%-Jf&CC#lZ}nu?u!R_BSTI`1DIz=}akX})+2kuj
zzSA_`c*hOq%&*~Dd>hQ7iftq~K@$T8_nE~UN|?nlD)?}*vpnuIWzAy53>zfZT`lE+
zb&?14jYkyu!b|qK+UR4vA-QV|@_Ee%PMGz!ugWnhxJ4PO#;YMk2A)}G{|ALU#4-wK
z8TOvUJVL~-4hg#~@Q~!Dn=;rf0xTgw+SWRXB37`7a~!!lLObOYqmE_plaJith?_Fl
zJ@P0ckFU1Y1QG7>Z1p0gKQ`isBaS%Yh$D_T;)o-TIO6<Sd=CJU3EoA)Gj4SN0000<
KMNUMnLSTYz-8Xpv

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_home.png
new file mode 100644
index 0000000000000000000000000000000000000000..613afce784f1ff6baed8761ef0ca6b3dbbbf0b78
GIT binary patch
literal 1777
zcmV<N1`hd&P)<h;3K|Lk000e1NJLTq001EX001Ef1^@s6SLDKP00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u>I4Xmw!2kdS&`Cr=R9M5cSX)S(M--la
zf3q|V4UweYs#XiJViE`#8qgp%4?Yw$v=$#4LLpGp1=E+7Jf<~G+w@gM3oQW^K_5iC
zmD)m0RnkO_1SMXAMkQW0Q8&6?qA}X<ThDBMH|u3hJ8+o&XU_S~H)qbA8C7bRZGC;+
zDmI7-39^VO<6gc0r1>~D#F^pG$#!~sCgcNZ`Vb0%BtgzWvZPOvajTxW73o03u0wnT
z@&%*@@&NJ}G6z|Z{;`bLh~5!D7`r3mLx8;<;(*+z!?m@w8T6APPI2zkV=})W`VO(T
z;_W&DI{eX)I>-`a0`dsrf;@Tt{Q1EA{QN(&v$HqZ^PA(4r=m9@c6EYd#r03dPXvxZ
zdKhY~?jfD8uC6{D8XEeww6yf|jEsz=;Nai{!!X`Ibm-8r^z`&3jt>qF{sO%r>Wkf+
z;2hgFB7O)&LAnKKg#FmqSXFLr?pdfG4i69C59fCL-UkU{&u@-%J|`#V!}0O)Dn>=y
z3tse=M4;#ysHmvWA*+`a5MZXgz5P3=g`PZl(q3I%ZE9nGeN9b`dE&$g5)8d_=gw7(
zO$!e38mwDFzrK;slb2*K8Oo=3@7}!%l>@!Ky<64@e|dH9-aSU>Kv!2+zU0Y6!M$Yl
z=QRW)gRCHLOI9<fTnK3;R1PwH{r&waEG%rtBgXm2$Vk=Q-R%iG?Xi`WvL(d5Pe0<%
zvnbyv<jC=Qw7k4LTwGlIfi754QBeUEJL>Dm5r=qkY8J%L%V<1%_ROmcW-K&3=TE`@
zXH9^hRaI31k*KV!)RFOE3m&&+8h&auHpnTpw6tU_E-os!+Z~2Up7jY9oQ{r;b2^h_
zVqyX!pd0P<NdR63aHj?T!NS5q7<@Abh5{3lY(V4;CRuDIS5{UA3JMCMnwy(xY~<zT
z?TG~KIy*a!mX;P(R8$lV+y_!sAJZTG(!Y`$k0d_UcL3P6WM*dWzjEb@YHe*bPMtcn
zClZN?iK?xw&A5L3y1IDr;(p+^={pDhK9NWVc}bx3eujRYr5DP703+!1>C*~l-PjWY
zX}53RHj<N*`7?;PQrhRm-)0gnm+MoB1n-5v3kwVFb#--WbaeE!NYK8qu~C(jl-PmW
zq9Y;xHb@{WCXz&rjEtOp@#4i3*|Xl^;o-xRlap#{YRcH_ql9*}Cl2tB0Jo3$^h1C2
zOaBU$(1z;9avKY#gOa_|_?-$-xQt8~?TG~KfMF5`Ntr6AW1JUUeSLjwPfw3R5wxlD
z@^T$+6Z`ZVl%^nV82sdW{RSEZtG(d4iH~ydyV|(;R9RV>p+ZALy=NIA`dSpn_(}rf
z7_I^<+WA4^hXCy)n(xZ1i@0v_<MA635~5Ume7wS*8GU_y3bo-VGFU4!NlSF{>~wkg
ziGY6aD#0P%81a$xN0A0<Vq(HLe*E}`VM<Dhx4aGv41CKYgzycEp~FIC%eSJ>%gkmW
z;E;zA@#Y2J<Bxv5Ejv3~;hkVaL`10A*x0a{nVDvJ(2PpG&#|n|Tz~nB_7&@#z7RDI
zPNnN+TwGi@S6^FOYtZkeRY>nK&d<+JLS64?5(xk!!VBmf3mJcr(9R=7-!1l2#JhIw
zTC(+0d}V9r=H|Ra(AjYPeuVw&mzC(P;Sv53at0D?IXR|$bNmO<(_7#o4)KVq321+>
zG$f{XPw~0$^5x5^vNbH{;{Y9()5G)L3;7GuD1EPtyG75VOMBuFPv;c<Y};^GY$B47
zkZ=@l%<pm37?oM6{d^%g;f&kG_W^5*Q^q+zOMTkW-b#S@yK1~*_1-xg4i=SzSy@?0
zw{G3~1}pm$=YCL}x+HP=5OQ*y^VFk0?P#xa#q)p(q*;>&k6j!7w%`l;Et}2u-ud(A
zQ*Ye3aiO81;mf9`rmt|(<?);2oTnc3Y3C0w;6`Jo)9H;&T3Q+-W5?eaZ=mPj8E;bL
z+s=8ta&7m&G@q*Y+W!Lh7dg;z{+{;UE&u=kC3HntbYx+4WjbSWWnpw>05UK!H7zhW
zEif}wF*iCjGCDIcEigAaFfivaP1*ne03~!qSaf7zbY(hiZ)9m^c>ppnF*PkPI4v+U
zR53R?G&edmHZ3qWIxsM@1J>&R000?uMObuGZ)S9NVRB^vL1b@YWgtmyVP|DhWnpA_
Tami&o00000NkvXXu0mjfECNL_

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_ime_left.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_ime_left.png
old mode 100644
new mode 100755
diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_ime_right.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_ime_right.png
old mode 100644
new mode 100755
diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_menu.png
new file mode 100644
index 0000000000000000000000000000000000000000..72b2b21772eaa9730be2e3a443c972c776897749
GIT binary patch
literal 857
zcmV-f1E&0mP)<h;3K|Lk000e1NJLTq000XB001Be1^@s6#K(fu0009ZNkl<Zc$|Gy
zJxo(k6u!58t!*Ev^igQTAPG<sFa%>YA%PGaBoHEm!PTKGjj=kIm^3;`SQwbA34<Xq
zk;uS;g9AZWTu3TIfz)XIX&aGZOKE9o!S6iZeeKi4mwY|v-S^#d&pqEcW$Wwf?EL&(
zMY&w&u#yJz#>R&JO?|{mrBWdxft{Y7igg~3$Bi2bg#s@YiwtP4R;zb`FgDy2r2YMU
zJ+c}N5nLd>g<k=RK(16O-O)Cf=mc`iv~YZU9E2?cpMcN6Pi&4xA`w}n#I(z>Y&QD@
zws3ZKM#S$x6683@E%js*y{xUR-N45m@H0fDQw|RgUm#O!E|=r_1^fE?B$&p{&CL+f
zd5_D*lF8)Da5#LG$g8WXCRX>DTrSr|SWjzf>t$>vQkyKxZimBRBf`kYNR4f?*`%JH
z9;YNpO?Ykcdc8__ceforr|)L7Sx-Z?cDtPq4Gl@7qoWdt>e28iP))&DEGAT<%bHLT
zwWO#s|DW9KFL3lrO>X)@$+*@?R}l3X@EU9Pc6N5GTCZ>sS*>#_mFfg(Pm`KzT|pW%
zBE57v&2$Bij*cE`M3VapkVf>qg@pyBUO}}t4h{|;3Aur<M8-Y#W@l%c>&a@qi;IhX
z<opqSo|*_KLB)AwDq*upugKWgm<6T*N8Up2uh0{3qS5F~Z*OlK)-OPIUN1L?VzR|z
zQQ%(!d_W6Ypixm23q|ek@BhQ>>grPaV_;ywf!<IcZIj>cceb~;(}}f?qi1k%kcC1a
z=J9yg`1rVaYHCUv9v(Ic(X3XhQNiWqWhO2nYKxgPsA`awY$B1cU~1&KxjA*((fCHP
z_J2YBaU0R!!H>a45ZSBOxL)o|CUXr08mnJG3aFwdo(nRapv#@l=O2@T+GKwd1G}`e
z<o-u)G|GM06HV>}sffrQ0)c?bAUD-A7z}nII^}z!NuJ%_-hMz6B~n!%s6*53oSvS(
zzO}XWba!`mer07PfHf}$);=*YVU*kLcFUN-78+Ip=e!wmD-eVNF`v(8l)Iy&!-l4E
jPEJlbp=yIh)T90e4lW3S&VN`300000NkvXXu0mjf^q-OX

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_recent.png
new file mode 100644
index 0000000000000000000000000000000000000000..eb8042609d90524b1f48620781c6c534af8c9084
GIT binary patch
literal 803
zcmeAS@N?(olHy`uVBq!ia0vp^iXhCv1|-9u9Lfh$Ea{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUl(+I8PGT?PgwCQlc~kch)?r=Rs=3Y2K;4;FkI&GAml$-uSX>9w#@
z(Y1S+S?k4=D%c;ot(aRP%ymgWLOk)Yipf*?6&j1b?Y(SiG&!hePSlZ_4@So)e*YPF
zF7O9ma$fDqpEY_<6g8)v-?XEr*j9Vz=9_1<`Xf%S3H`HFZd%LkCB>IyU(PB~cDz2P
z{M^s9{Y$4zQ`R_V@2$R7)$944MHW)G{W4}9`}A`UN6C5K^D4fJ4qQIyK0n7S`&(?t
z+OXt>0UX{(4SJ&I#b{4Io&K@nkHu84xoVS73NLTsuPdmSVD{rhbKQ&GE4-E-YC5=p
zqj7U~@T2Kfd*u#Xb5)us`z!DE$_LHzG9M~BtiL$gfBCC-#M)<V*y|1V-*1jvzkJQ-
z{sxdK9p%RrLqcuel<i(~`Q;i>Cc7U83!Qf;-Vw;-FmI85bl%Biw(tIRuX9YKazC9s
zJrQW)oKmNR6_t`aY`-U;Z0SAzcxxF*6XW~il}Z8}9Rk~v)HCEdF5Yr~&0O`)QuO=J
z0~_D8SVk_Kuj{fkDs^LoPfNuE<7KBVpBAdH`e>M}bur_LoYM5ux^8v93}Y`{R@gh~
zo(h*u^AGW)C;B2>-##Bc{j%hgQ0I}r#TR!-@wNMxOzYpoBDdqg;`5jGDo;MCbM0Y4
zMYmksr2pbip4M!>^m0qB`VZC<AuB^}EeMa^#JcW<;_q2M?O!o#CNI73C#}K`OdzTy
zt`Q|Ei6yC4$wjF^iowXh&{WsJLf61J#L(Qz)X2)%P}jiR%D~{cq3<me4Y~O#nQ4`1
z8cZy#jLab#-tX!^4b&hBvLQG>t)x7$D3!r6B|j-u!8128JvAsbF{QHbWGX1-GI+ZB
KxvX<aXaWE@GE*Y}

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_recent_side.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_recent_side.png
new file mode 100644
index 0000000000000000000000000000000000000000..24ad42695ed79e7784c66e1416560374bf1db1a2
GIT binary patch
literal 1226
zcmeAS@N?(olHy`uVBq!ia0vp^?m+Cp!2%@t-YYl)Db50q$YKTtZeb8+WSBKaf`Nfq
zBGcJ9ARr^ZB)>Q#zd*s$*;%2WC_gPTCzXMr;#P7(!n_AB9z8jwa^OHfKuFLNxhE2m
zf|5%Q)Xi(`ZJgN%0*Zz^cN{QOIM5Da>)Y#3WfV0qGN{>o?7)cw2M!cOUcY$s<kUu!
z1G8cRLJk218X6l9YN&3t0P23o&CKjvRq5%-$;_P0!_3_55mW|dGlJM<9utg#;y^XR
z{+?N`KsC(G#dVIUfoWB4olOguE?wG`>{S=E%Bdi=&@(G<V^exuQC*;8U0{-D78g+Q
z6+Si~h@1XLi1quCGd8Ts%%N;r%^fE+SUI=_?KlisJoI$6n%PyEn;Dv!ni-p!of({!
zoNW&?wJqk!mpCdJE8#5}Zg4MID48p1)`617$QhQCDiuFVi+NAun-;yMYR%d;-*4#L
zT(+?`nLqvh*@Z_g9{t#AJn=Krbmi+}dA{#hZGvoqD_bknKXQKdeLVePyv_pU4bB%r
zKXe7Gy1@T1PEd5>-bD`=#UD}Yl<th5xMIST$u??J^>uY?otF88#eSO>Gk;I_ANkg`
zU9DbKUink6uM$}?YsJ41>lOEw3a(nY<fr57hHol!Lt?dU9ruR+a_13~xF&T};`Xc)
zvyEo&GufT6?{ZS-Q<l|MuVZFg+;*@Iug+#qc9&H*O;;6X4X-q3El=ey^^esT&X<-i
zzn`$5<^P|CUk5rJy_?HhV|Z#M&xt6CXNrmn#tIr6m-*jmX4&R)cgcn)ZBtBFnqRgw
z(lIjL{46d0OzQc~=hti82>G!tVz<iblF*y8x&EG-v?|uLXKP$(@N0RqSEg4@=I2h$
z*3PlNrFl2>O6{)jt?M`bf9EpWbF=#Yxl;CTKk)R<{JVMIdCwWuRr`K6E$wy@+phO>
zn@;i1y;Bue`>ijG+?~JoX<P1WAG7?MS(|cy^R1ryyL|UM%ia1p|C^gF+w0^q?bYgP
zj(WZhetu46{@>ENORjId-Pfzc{VlIO=Q}&P{QZ^t!TahTCEiQksQ!C?>OO(W$`7Ug
zqJNf)+nLlF{r&Umb<_KY_N;Yte_j4{{^S3823`h!lV8(5#sV{rLb6AYF9SoBDg#49
zGXulV|3LaB14F3+1H-EX1_rAc3=HD=lj4uMF)%Rdc)B=-RNQ)V)6mPsP~h0d`kwUy
zIy#~{Us$+q>m)s7b<x&;$h)Uut=P7#&2z(V_}vh`al0d9v-X;dn#5$~r0t*Q_3e2y
zyNYSQ;!ID4g%_4aILH(p5p+i(UOMUgOUlg&@KG@S{8Xm+z;4ZAw<nXN<Ih>$-ZRrc
zbT!Xj^Vd_lcS;9vq<oY3@bIjpv00j(AV>ZAn@PQY7JsTdZf=mo<ud=A)x(aY)xsWE
zzU=&*{pASvb043pYJ4vvXYICCpI~V`e+F;apXHx6S#DnRqxe>w>qhH2M{I-N?@aC&
z-0f3ivHsbaU)3rqayC}01#UjSdE>?GEBp9+RKs?drKe~8w#hrZ^U<|3(K=tvikxGd
jzc!+ILGbzgN5u?EnwI~>Qn$zf!<fO-)z4*}Q$iB}?9>r)

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_search.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_search.png
new file mode 100644
index 0000000000000000000000000000000000000000..b31c2c7af31fb63377e263356cdb9690f92dbf8b
GIT binary patch
literal 1042
zcmeAS@N?(olHy`uVBq!ia0vp^6+rC4!3HF4<qYeAlw^r(L`iUdT1k0gQ7VIDN`6wR
zf@f}GdTLN=VoGJ<$y6H#2IeiEE{-7;x8BS;>o4pmacuW(rLDOFIiXBS3T!K?0{s85
zZfTpRAn@)N`wL%Q&Z2J#4}1<uT4ZZ2|5Vt(EU@p=jTRPx-etZaQrGJ8YU5|B-gaAX
zMWX!r^XWD>&%HU*ayR|{&GPgOH-WCf1rFTt2-~~CX`z8bJA>wr*_YpYBzjI-maySx
zPpY%K$Mw@0{~Etc>ft+_P(0)GF}rmOUR%tx;c4dWS+z<zC1~Q#_V)JM8zXYmq<ZtR
zOY8RUU%Pkj-rH}>wokQ@dAv!7|8~R26HkjAjb1EP)7l>&8!Njgc<z$fNxSk??ka5D
zD66fl?R>}YzW(g9c1P}-JkW8uxO<6tc}a<h%U4|$`ID}zlq@~OU2b}3JuOpJ(~q?L
zXrj6@Br8C^_4Vu5`Yv1IR8FdwOg{Rvt+%)L`LBO3OR5CQuR2`x7PMG6)A{`!%T?Jz
zfmLBDUWcBjxdx_fHT?ARPs`Lr5oW*d=WoBgd+VWl_wGqs)hPdcu;=BPC9|ifsg{?Q
z-<RXpIBhdemQA`@t5$KMN6xg&cZHvPgC2eS@htQ4p$GLQw)%Q{V!CNRYV7(>{HdJ$
zVb`u*KAv+AYhB*5QhCSf)vqV-dsDRYlPFK{hYFj@)$90Am~lV+T4k;M(tYCn#H%`2
zzOc#5$ehXAKi4lkp7o-7;FIrJttm#9)qUj_JpZ~kaB8I<D2`%Hy;Aq<Ol8SD#~rq*
z=eBSC^zUC?3ty!6%$zg}$yNT#FQ49Zv@64G_TFf}^t|J5OS@%Ght&G^baR+7%#qQY
z;@ki7RhA6jaTCe1SL=l4KQFrzw>mmH`mt-@lpi&lSi(+-{ha;v)VXu#Ha~mzY~Q5f
z=p~wkS9Ul{2^?24n(3n>)cJ*-sgZ@p?3(F^Ny)Y||4i|D_xJF}Z7=rT@xS<2Hh4?n
zB;9#o`?qb`vWKtz@Zm3de}nwo^R{o;@WCr^N^WgS@Fp`~wd)E;4dV`ldS|KreE$6T
z{3DM)X8!e?sJ8C;=WUDsK8ik=@PRQuWXhJ=fuUEws72?#pParVYf}4@ZL)9w-|}9!
zSz(fK+`N#MRn7|oE<btlM50#s_5aJs-jkN(9qIch7iD(UbC-%;wN$H=N4V?W;B-5A
z{mCc4dnw;cTR2x$d-mH4C+iNK`Fi@vym|9}&pNp>L`zAI#pj~fLA^!0!+hTFvHp6q
zYzu4VEpDcx@6+R!o#E6x6eB8_vv+0eZgZ_Xb{x6ogZzi!21W)C$rHTqe=dmzsq%F7
Kb6Mw<&;$VdbmOi7

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-ldrtl-hdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-hdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..2fcfdde08164d7c2bdbf11e09ed5df501fe48532
GIT binary patch
literal 1535
zcmV<b1pxYqP)<h;3K|Lk000e1NJLTq0015U001Hg1^@s6NQh~4000HXNkl<Zc$~FX
zZAe>J7{1AEvZ%4ijn<D@vDS~amRZ5-k5yY&EiE!ir_dkker#^Tq5C<D$ecr{Fl0Zr
z;+QZQOvi8x!EP{GP>Rs>Yls_E(b;V^eso5o@w--=J<s*rTQ@S3XnWx0B<Gxap7-N<
z-}6cmhR^3y<<X-@(vv4o3~Os^`r6FQjPzWF1~5B2%h|ZTzOKzit}iYws{79k7?w(d
zgM-ri{Je2>byZqkUgo+C1q|95u0K=YzP>&UyaIC<=1<}76ah%f<)x)1UCC$S0dcXk
zu&{6p^BiObvH-acYd@Hqo3mn1f+9R;92ptW!LMAovLj$w#JCLeEaU;i1sR7d!g?n_
z&jG|xTU$%7=<%mOv7G^rjg7r6fJbpTfu{xdB*crgAHe!70cgN~8UOY8lOx*#cDY>d
zVD`|}<KyGs+`M`7;^W7Uf7g@|AsC0XjbM5l_EhWn{q*#-?*6W>uF!xHI}O<DcDujC
zmbJ37G7sxt0f3fI2?fZ5ez^ZV<oF9rL%N>A`^fyDtoH|uxHVzRa`^D!Xw30VO--)>
z<Y%$}5HbOo2S7J0FWTg8<L2~ZAqocgU2*XoSbUjlb#--?^z?K)jzyVFrsQkauDy@^
z{zX_lD!kwU;MXfFD+jdr^G^KN74VyWTLCkDl9Q8-d3kx^iHV6099Ieo3SR2(@BakW
z{3+s2B6>N)+7D5Hl+F2%u=!8FK)`qI+~G09!Gj0o6DLkY?Af!23Pe{`RlPDXG0}!I
zZo&L9;r?DIbzyXLRK~vQenCPN9Et@8+}_?UMMOkM@$vDh0=c=lrmU<iTV!OU!uYqf
zwY`qZt_$lK`@eYyz<xyhU)J1D@>#7`>FU+1lE>o-4BXw_z1cew096Ifo;_<8@mEq(
zQqrAH=S493-lp{9U2XtgM!b{AbP{i9Xec;~dwP2Q#R-GKAnn_?PyHPe6Jvz?!xIt`
zXnoZA^XGGihlf80z_{=L6=3;&0Ht2l?gU3d2iAtgVv*|W>s4K{v$J>Q<m5!|-o0B*
zzv}AhlOWaiBKCg?=Kl)sh4Ia&<vRi{EG$&rkIH3eZf-W!)YPzu$c>GS*^`r#-!a|*
zWbK~<;qEmwG}yJ6hYU=zX$(b~rS`H&9g;=?K&|g-iRJ9Yn(NlBTW?Y+5YDJFI}~88
z8_}v1#q0G-5Hl`+gQ>)n5~;;Bb0ej`MIkzg&+Q<g<<Ox+!ISIw@#8umNMaCHs+EZ;
z1Hhkr8`VrJr!!2k*4EYwfJm_0?F#CE6~B!~j~<oM($WG0-?(u@1r*k*fJ_ah2o(6j
zw^25yHMfF1zu}vz)YQ}iWcvR7`yE9^MHZ4UE-vnA`3wYn_wHT&^<f`|7RbuZ1bg>|
zl`NSathty<B_$;}xYn_E?_MQ8KR;Yi6q%r<rKKt%gDsgdz>Hw2)Y;j|w)Y%6609$Z
zI5J(Pr>3SlE?v5G2G_;fY_=%4GZM0kfXH>fS>YELZq<QBT(j7L_%<E`g0Vn&an9M%
z(NTtL63u3_l9`!lgOz3iqNYm@hr>VU7Qmlz4c5L0z(xV2rN;~iHQ3wR`*B7_1}W;m
z3#P}BccPyEKcF9Ay%7L#Gg$c+eh-NBP~Tp5BJ4=Y%F2%6)9BdP*eJeOct99O3Cxvb
zSq=>92UsicE@9zAAs%)h>_qTM97<ypUnq1aCR&-4lq69?8X7R(&vF98su9Sj7Dsj*
z>^#_k;CK{@fc?~|Q)(Rf%<1V7>d?yF?c2A{0MILPl4b4>b{gzBa7<wb!cGKWYE#Ge
znJ?A0hi~JJWnh$nfq{>ZN>0?^7QQf8i)P2cII;twl{^myZy)eK!+<U$3>Mfir+^@_
zROHB!BQ|y%+^2<f?K2x%jL=OOPoF*=hM!@0Un7c(i`6)?<Jfi_0}aGioy*J1rIwZ!
lLq$b}8a!CMvp8-s{sClLE735@tkwVk002ovPDHLkV1g(${Xzf$

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-ldrtl-mdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-mdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..48708a5099a83badc09ffec99fe22ebfa443ba5e
GIT binary patch
literal 965
zcmV;$13LVPP)<h;3K|Lk000e1NJLTq000&M000;W1^@s6{=N-M000AwNkl<Zc$}S-
zUr19?9LLYScX!LmQjwTh*+V0J5XSH?fj$(j-V%Hg5uqO3L#POmAQ`^8{KN1e5+8ag
z|DX>_dkUps+LH^+h{XhDx%sa-H+61qeSf!mhC*)B1BZLgx#xU-zw`b5&X0vcAr_Cv
zl^%=5MCyLOKe2Z1#sT~L`vRbRE*>2niTvNr&d%AvbO?t90swX!@FEUGmktjP1wMB=
zo#}(4(Wn@SMA+``?oAy2f$oEW*WqwjkAGYqDG&%S7$M_nOCgar>+9<^`0k*4(c^&q
z1lSS`1}_{O93=GT-jg$Ffn6@w1AK!B=4YSJ_nyY+M}W-&Vm=mN2?i7LY;A3&1wP!{
z+Z)4jmfdcD3L_4zMbLL4!8;fzA}J^)WB_s{45S2O^Ej4;jEoFzWo4ydVPWAFfG$-Y
z55QfJCI|aSZ$<yr)l~+EC|*gyW2zUL#>Pf1w&+@0Tg!2H2#^icz&Ah|5Ks+*uE=vd
zJ;6!}rfUk5lardNswx=<t_%+kKgQ#+V||bI0{9UI?(zL=Yio=i96hk4;O_2juAwkE
zI7o0!c6RplnVFeqki!}O*Z#o38>He5k^-I!siY7_Mn;%Ur(;H=G4Udso14kN#nRH!
zyNip9F9CI9J&f;{`T2R->-93EsE`yqF)?u>;<%=Sd>4Crds$ak*HxT(0WS$0!VSJ!
zES5{;%+k_Qa`5!@G*h3t5`FS!V`D=EtQPZmiX-|qv>mfrttFIAbS|Y79*;**|0@Lw
zX=lQB9P@p;KC)sK9yS1zV>X-Rl9Cd!y1JSb78WK?HyorYM>Qf3Un|xq-C~%3pPQR|
zehUpyxxKwz%M01|_V(!ygzJjRmjR%K>IQ`$<KJ$#+lKr$QhwLh*K1)!$zOxP!1D9+
z|NB7h)APl~52~&YsZL-VMGtIlZcg;|^_g+xa&2v`>~J_V+=0Bjyp&Hmgur|P{4I^i
z5Y-C=@d>tG%gxP|DWCbZi;Ig>SGVQm<wx+)ua?ai0`-gPL`6l#9n!I_t&Mb4u3c7E
z#$;JO9jbyA>!YKiMbMXujdx{bWvHd4rJU=Chah!!cCxIjES8y>nH<O)>Ht%7Pt)Ju
zUtzP^YB0W1P*9+uI>B{35twvZPfri)=;&ZgO-*85T^$(^1_lN+{3a%o>1;sW=<w9k
n6t4vW2kP~DCP~uyplE*q5<Mxjx#BEl00000NkvXXu0mjf0`0={

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-ldrtl-xhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-xhdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..3d731840a93f6ae3743b05956d8dbfc84e132564
GIT binary patch
literal 2084
zcmV+<2;29GP)<h;3K|Lk000e1NJLTq001Tc001lq1^@s638u=(000N;Nkl<Zc%03c
zdq|ac7{}l9p5yU&_Z)A>bF?fiVr){I33I_5+hE9&#e^tjY>a~C=nqq9GgfJ<KSrZL
zFcvZll2v1rEO3nxOv#qC*~O-*Id3OB9xumR+4b!Eef|CH&2rvrKlt(9&ilTf^E}_@
zd4A8UDF4^t^Z697*Q;$uM@J10A3ij4-oJm}aO>7B?Ke38e842s-Me=cPI(Sf6;ru-
z^{RI6nT~t+?iu*f;o;#xSZf337Mxow;CM|P85vQ|oH?U(baXr$Kxv((rlueOox;8s
zvj_7!j(7I;^;va*#@n}VkKeP<V4AC-r)+EoFgwM(i8+i}1HI)`R#vKK&z@BtJa|A2
zY8I}ls?q=t95}EbU`9S1uKEJoegSnuY}+w=F$V$j)15na(heRxXvodYC7{YFtq1t|
z1@m}3CO#N0+bP^gAeV6GO#roF+aavk1(<K(&IB18xUTl}^eF4suh#%uTU+M`tiHZp
z0|Vf0VKG9u;o2GmK#Kr!0ia!2lJ2dCg+3h|9JCD#49MV7+uGXZPk#*!4H{T?cXtsj
zCM+~`@#4i@`}Xa77nb}P#~xY`*E)oI-NL=UBfVtG;9&kEB%j;Z*r>F$w9MUN6TzCB
zn~QMS=I`&n?DXl=pTL5D2v^_K0rm;tGUzWwpI&5ua9+4@VfJ8dx4THZSOaspTsv?%
zG$A1&9$QCNR@N(*E?p{yMH=Z|y!eKIqb3I_0qE~b<icnM0^t}O?d|Q_duE)VCjlFV
z=C<RqVdct|!EteMQIV06u>{P|&wmThrFdzVE{fYkdZByk0QMmO127q_TJ`Af@1L3e
zCIjp3?cL7vd3kw$27|#IA0HnY6BA>{Elxi_zr}|SAKr)>TOsc8h~S`$yM;x6fqT>C
zduTlz8zk72fK!28zI@pTD6kn!__-xII@$^gI<apL4h~*kU0q#(I$JB;*`))Nz$MUU
zqSPM&rT+di_e}<dXw<;)FIA=l4x`biVq*#n3=Bw0O0tE9hB^qCnVFe-?b@~dc<Ddl
z8B%{Pk#3p*@j23qmCusyJ#yrTQdd{Uz<bhyQ-L9wsuOOa^;AqhL~IbO86yClMMXvL
zK$|~`bkd`%9&X`YmbWat)9>85bL07s&)>9Z)8lZ{vDnk}pwX$S5xf3~+_0#qC_A*r
z09kzU<jIdA{3?-7x^?dLh?Mjb^53hv^kSqXWpI?0mCYVZ4~U@wIvkGhh=>Tn*;lPv
zm5ltg0|0eGe>VhRr_6_N{a4W65($WCe-ycM1(O5%W5zdyhld9)TC^xKBqW6Hjor3w
z+v}*G--)D5Yf1M~heMbRaBnUWx~aCdmTN-8oLo7X^{`=p_(6BUv9Yn#A1xS<rO|uH
zWv2k<6)tt@^fwB<<x9&UNahzz4rq^nbgu>avqFEg9<of_vJ)pxe1!D!rvP#Z?Xk?&
z<66+XyHY=n9z8nFxNhA#b8>QW5cUI5JtE7?%Qr$-=S3oR3C$6#xwyF4x*%Zu-HH_}
zw0*qXAnw(YDTMtpj*t7s7M@HcE}=V?vJqS_#%<=UTelkV?)d|g|CDVX!ynP8wSSln
zMBg5qWAbG!?G!*1zZbu6L6Y4KJ;vcNfvKsfM(u%f1;c#`vc81URuuflsG|Wm-V6xp
ziHplFUAka?b8|6(r2IA>6JxX4qL8pH*q>WeaycWd<kR(^oQSYDSj2r}<)}wIQx^C>
zB-39@OG`K4F$qX3_N7ag#sDf1$Hstw0A*HS+-H5mee4qyu3Dvz;I`#B{$2w39+f2O
zs2|bz7doqg)vH&(h(|fX!or-WxmN7^6H26;nS)7-h~9D>2>Hnd7k-9)_6Yhc&#3Fi
zwN@;(_pe>MHkClA4i2Z&83m3&)?870A9u-g!P3&wG$<}v*jrw?az#O3ph8F4ICoy^
zh!zs!*6Jk2ap))muZp)=ET~$JXv|<7`-#=c1fpqz!Th{g1EjDE3k#J)hYlH_qcj#{
zVWD1~j<l5oN=xOjW5+(gt%;biSjRaa@G#*v)$oLgW(X!MHs0K_r(|y_tV3~khz5qo
zUI71HQ&Urzo}T^^9&e}H5)%_`CX<P(Hi?=#^_U6_5GJf<m7$>_8+%Eds~2w5>&T1W
zb)Z;(o1LBg8ZCrnINcVBrH}?h9Zd^pDliCI1KYcIugcz$J*04(Tc;zY0uR8;OG--K
z$K&Dv0$n@pNSGlwHp5br>u45WBUp*%VJVUffFFd0`gA}He=mE@ii(OYcuW%V5F^cD
zwOTbDag8>mj%Em^B|^BZ8W7igV{0atfMOXLU~kDDlf5P$;lR=+4yy>djY-lZRu^*{
zIxzX|LVi@CmE=d2PLYqgSVq`e5{SJfbQEPao4I;0E7OU#=?>kui#@&xpP_`fwRJjs
zNcNKKDRG;VJtlii0;x37d;!UUzEJx<hRnR#_vkZJrwIQ+_KfTu*+b&zcJ`F)EwOK5
zuQ~5Pa^&RXFlx*h85v8E5`Gg_^T2H_ST%gjo{>Oo(b!9}r&PxB(ages7Q+CSFdK)j
zS+nK^^m}>ezIPQA6ugOZaR70!cVrJK>zXo~@So|xdYl_0Dm@Eo1ok7vv_sr6>>07|
z&mMBY-1f9VeIW^I%>#0f1^r-1N=ix?#2pNGJ-HltPD8d|MzMWvK>q^nKcOg3e;GOe
O0000<MNUMnLSTZHSMMJH

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..786935d5d185c4d4b71659f4a9c868d24d5b0bc2
GIT binary patch
literal 1358
zcmV-U1+n^xP)<h;3K|Lk000e1NJLTq001}u002S=1^@s60zVbG000FQNkl<Zc%1E;
zT}V|~6vy{9%d`(IYMRDAw5AV*dhB6hf(eP4hN&J3%y;Y6hRL@}4?XpuAeApc8X_no
z5}KIMi;hpBh6pP6!3R-MMEpR-Z)g4QIs105UeDS4xX(HJf*bzi?c5{#=UV^0*52nZ
zwm0_1-q;&HkI>rM+AkX$8x^D~Qt|ZkbY{?#QZYi%`ucjs=H}+u77fz>|HHo%@H}0Q
zl)1UNUlYK^MA7`Zyu5sqB_Sv#o4T^H^4bp20@^q;GjpCL5o8MK00Dj!0pwa;U41@0
zJe<We2aQILl)kjI)FcDQ{YihALZ)%rVp97_M-~?sn_U3%wEd#1KcneM%3N4ja1F>s
zC8k0*e{#Sq0{oO{(oIcGPe(>ZKFFl4PX2TRtgWqmOxN?v%F6ChbUsU@?N{>kT^4ZK
z#sKH%=Mw@pG&DS->pzn&lk!?xT8e4n-y}dA$=}z4f^-CIZEbx(*Rx6INEb<03JMBt
z^!N9_BF{x+{24^rIs$ffcK%7%kCRT2PLr^RAfi`GN=j~zj*eDK`tu3%F>M_IySlo5
zr|XAFhe$_F(4R;-q)Vi{nwpv-y8k~JfBIEc907ZKd+*TogUqOx_-+OXJB%MlXGj-F
zS4jEo?d^Zdq%Ae^RbH1BQNT3PK2xdYXG9gL`y;cYE%&EP{q(Y|I0E+d_1!VQlfu5I
z6hINtbhbThWB!yWE1Mp*eX@Xjgv`&W?0eeo=ug?QV)18SfOen>{n_2!9hNOCD*U-y
zKn`gIwe_cLSs~EpY!_*(0&pv+qd&{b%m0#X`^cYvxB*oOXayDWXGcfJGq2k|F97X8
zxB1g$+xJqmtau5?A%*;jvNAb2*&yRjk+#okz^$Nm{&d~;*`=*tfL2hUvLe~`4bINa
zUQYz+H((-A+p;n=H1t-`m(|S3kT}So06C=6w$J=Maq|ok&<bi>R!U1tZ_xtuuK-}W
z`Fmnf)B$iO&_m&H`0V)j_zRH~#jz*dbA%aD)DqANxsT>kL@VT=p#LKE_4U6oBl2-+
zsvRJ960{L+6fG0<{cn|(m1yI#bp{M!=YSoAC>WwPFfj0n?!8LNC7og#rf3KcSg~V3
zEfa;qjszvdghTDbVswldM=NoqBFH)z!VUqQh$t9J1rDI;-aKY>J~_;&oq)sYt3{az
zp|!%!Kokr+4s<qjZ$2|R9YhVC&q-$ZF5LnbSfLML2O#S+>@+Oth{BIf2T?=kbJ(0)
zY9ctl0Hf)M&R^DN=wK{hIn3}H8USn5wzX$|0!Ej88J}S%fgJ^l_n8$egE>Ua55VZM
zFXJ<$;|@N<P9swm%qu|avM&S%3HU5+3z+Xm7TjlrGCsqyFX=PslQkvBhNjQH$SnIR
zedZOQtM&>9z)Z2vR02lRL_vF{)MqLH`O~EoMeUVRpX~~eKR%n9nz}Btje*aao11a0
z=UY0u0*pi=4`~s3BjYm{%f4sB5l}`h+AGhW(<=c~-Ck(}=v8~A1)!Jhl_!9-O1=|a
z_I2}_-G~9UwYA-MTK0AIncaxJPD#q1n3#B<$Y*}HS1L#Bg;-`ByXDr^)fJA7jaB1W
zT~AL>I2n9qH~7O39Jk?#DN+t+j7UL5>oPN5z&p=0_L<YbUmuf2ssR#_#3}I^^It?v
zYo9p{{yYGXh$PY#Fqx+CIVr)cBlggP8KC^dy94IWTKi09SYI08N?NG@0m4@3-Rs?&
QU;qFB07*qoM6N<$f?X4iuK)l5

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_mini_settings.png b/packages/SystemUI/res/drawable-mdpi/ic_mini_settings.png
new file mode 100755
index 0000000000000000000000000000000000000000..878169bbf5ecbd416b6f5b019004d323afea0953
GIT binary patch
literal 133
zcmeAS@N?(olHy`uVBq!ia0vp^Y#_`5A|IT2?*XKIJY5_^IHGIMF63=+5MjRXy*)v|
zMowq(f*FiQH6lK|`Fb*zkJB{w@)lm+nU>;`g6>bxyxEYbBd2~%=*y0cTR!zYG_P2$
grn1iJYw16Rcc*3BwRr-U0nKIbboFyt=akR{0ABqraR2}S

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_qs_brightness_auto_off_alpha.png b/packages/SystemUI/res/drawable-mdpi/ic_qs_brightness_auto_off_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..74df151e76b0a9885056923cc34ac5081da7d35e
GIT binary patch
literal 1374
zcmZ`(c~BB~6#gk{%BHrP4MeS0i`RIBR~{)!N`j^(sAHNa31TLg0h%|dwPSg#<ZYzO
zl4y?Svfdf(&Z>D(p?T!dHCb4ODdw)2F7AK($IhGYee;g*egD1OGydMXPy`eJpo_<O
z5mbC=2ijVy%uGp9s7Ql`@xuVnTKLT-SyNT3F$vx$K$GO4Y-ckHNALq6#RLFO4gedf
z7Uw+xY!m>CkpQ@q0|2{pyF0*DHPAZm>+J=$ccSLL@Rq8ha|w5rsbbu}IQi%zT4iUA
z_re5*{J|^piwVaX3}mhw(+N1A+!_P=*WWwM2=o%`*l|Bt)=lUQn}#@zgjal4K#oTd
z!-s7&$WJU`!$M;mF<~&DUk+ih*ZSc;cdvWIqUTe)GGTIeIWJYY!dSdYj+QuYGZ)^B
zR8-^{B6Fcb+}P81EoXv*8&>ulT+{rq-Z0^3<jwBmm6&Hx${nheqJy)4-MwW@V-QmN
z4yr)n)44w>3IygId*v;H?%`M5xFI-lZE5^$hg7~H3T638R~ORj_0p;Hb%KTkp7pd@
z@jVPhORqcguv3qPj8B`tR9}_k_&yw!_@up!AyM{xT(_3T+r4*NNcsMXM)^nEE&Q8_
zt8QvztorE)Pr`BQjqIzH+3&ECh`)3@bvL#1LTTcMYZl9HEs<Nd#1<0=Q1J%vj{8E+
zJC1(7Zy$8Hx-_Ot5Ju{6B&2&vKezZ5KOblu(@h<2FDfqKm1Q%AYS{QHM)hxTAyRWZ
zlbexLVHZE;Ld%~P>0Tp_>kTm^W7^e4B82+l-qjbStjE2sgGA*WHp=AbJ$miF`NTaq
z1Xocj(9Aws<!-q97}DW>Zy3WdD{Z!X_|ws;g(nd2r@T3?Nm_Afpum%BSR#6zL7X9S
z8{y14WJFt`j?!{ui=bWEJu_*gbRFrv!IjYZNl6cy{5?pq%~>}B($HqUJh9Svcav)L
zxIZJbEg8L$2f-z8o<glOg;vCkem(cBm^Fc1DpHW(Q~TMU@=g(yi8meRCdJoh*tC9L
zxEXel$#3X+K%Oy|nL7~XfIpbzU{>|j8^kNyaB*Aft~n#o(%vsYz6He4+Zs(yB@Bf9
z!baGnv+6LTGvnD>Ej^;O`C#2$IDGkY$QQ%f^mD-<KK2<Nac!R3W<g1IiOz$U*N;A@
z9ft{sC`*|Y-cId`q)oPG)X%M4r|Pg&nC}cTv5lHZ-6w~zS3InCQ<??X>`CMNifyd9
zbd?Y`@vxkwZ+UXyOVA*sUeFUM73)rB`np6<<MA)*%Zm{UJdwmEil6_8Tlo5o*Pl7X
zcY+e?C&#-#6Z+sqind{#(+gqX$N_V=h<x;SR5Fm+_kvlCPY_?Rk@(w}oFEwIY@}X@
zy&NoSEu$L;bV^4dkJSqyp5lO)rZuJ1>2`hYS8f6BxoHHP8|~>D$jcJRe_cGsQpPbe
z4+EXkZI;8*?%5)i5V>ut(A?B<#h4bo6-SVAZB2FsbN*g-kC9`PGz0Y??A*~+QqGnp
zx^_*{L+6bwm05;akfp%`#P;m82}EE@R~k~bi%oK<V+&0ywKs*vqX)7DTO{<ozGzvh
z!-)@sF1fKJysvc;&J)eE#7nhoBMLdyhygBK^qDCc>vAusOtM?%liog9CZmOCHm{ep
z&QVIL$F_mmkxqm?e<fD+LX2715Eg~ZqPj#~rm6_oqHOG}P)=61#{yB#F1EHVHcnP3
zM;8=|KlC#4KLUC@<wA7w{|m;-LS|Kh{W}iC_-IxV`7#w?DDmg1hwyYVjY^=BDai?s
Rs5^fS;IaN*O(!C={sGFzZ=?VK

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_qs_brightness_auto_on_alpha.png b/packages/SystemUI/res/drawable-mdpi/ic_qs_brightness_auto_on_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..56add9210c7f3552ad55db321853d5d1751a9eb8
GIT binary patch
literal 1334
zcmZ`(Yc$(;82*J&*SfUYQ>Ar=wpO*jxK&PR8Im+uOH4#$LjLJARY6jby5w|W+PXEm
zs21(W*s_+o&21^AL>NZtjg+3wElnjY)mE9szU{-#d!F|>@AJOTdA_|DPXuF(4J-`+
z0LD11Ux<cnHle4h>B(H~vWAeSe1d!cs4FmBqv~j8L~;nm7t{<{Eo@%KVnc!e;O+x}
z#|L0lBk|?|U_$^Xq5(i(17Ih!wC&^(%|bT@kMRQ=n{`W4U8GU;nb?SA4P*aBfQ;d-
ziPOdT`4EWRKNJsKCWo2!W;V}VIS{L-?Hz-xoTvR{W)anMW^CNCA;-3l_w)U%Urp;}
zUmJbY-ri8?Xy=49R+t8a8+6?Y@VQ`UZ!lzQwp~giv)(Tk`)7_vr7I`Ac32Hb*b25-
zK`0A#*0OWf728<j2w_c(yhKYu#YGV`8)0&(DX_iLI(O;VOqBcRhC6d;qm~#4vCN0D
zCb>x5HbEhaFdCP+WwB6HCH*nxbz^FwYh5VZ-7A{grs$dzY_)t}vU-;`St^2G25(2{
z_8zwV++}fP<Ecp5CR!4Z^dF-Zxm{&$s<Q*)Y=@gx<|+qibJ_gj$|Q0TNr{1$_M6w}
z2ktNb4b#0!5^z(UOZcv(M+y)sa8$bkaTFwH-JftUb4jor`2!(!Q~@=_wED1b#H8gY
z+0}mGlDy>(cYZ9b*c4SmbQg$!f5q(R^6%Utn|a+Or+ze0i=~fyNPUb*UE$OEt?zs(
zv^3&}TcX`=?Tqu@LQcUWjw2_5NawVqpe%pEHpag&Vwyg&I(MR!`Kq%%(L$}GZudef
zbK^;~x$MUKI{m^xJgIQGT-0RtCRg6UxHn-hpH(#*UZ>urTN^&|G`+AS%bRe!Xwfn^
zxKtt9xwfv%;VbQ0>z(QmiCRNr4^S^NLOPB`U0uG?krKDOpg&o1+hw;YdySCysp72!
zZi`?aoXQqSdL<Em3Yo{(%TMAI?B>aZdx02CT)x&)-CXLl)AXK9ZE~OvJ}b8hmc9x1
z&Ndz%#yzt%A7D-$?=Pvgmnh#5x@xbv?~m<!R-a!!bUSS%FrFQ$gx=pIq<?QXDZ382
z7OnL_pPhc|G_9vDkh_GHuH)L(p)bo3LY|42kk?K5^q|qxh)C~7=Mzs=E45Rw*Na)f
zqx8BWd|dNR!Hw>5RrNc(j;abC!au8=G%*jg-BphnJ)Kl$Cz);17W|E6)MW&Xu2*?d
z)HU=T2jxbqzW*1*KrK>m1sm5vI%!RI8Ei`>$#QyprPDKh-|0Bigt6hKhA+v&x>7ch
zAmd^CFgz9SMyI9PP;JNDyM7s4I%70)sgim}Yf8%m@kyRj4l<CIVPWGG><W%cmMh$&
z?4n#=fBPiMZtn|2g-4r2*qUI22xV7_#p;1<QC`gY@LzTP?GxW{qAglHQV(#@ol~7N
zW2@(#=Ubia1K_lbAihsz=kBc!#~U*&IAe^B9Y?4fZ&;}}R(rM<ze-t;G*+xE^RoDv
z$422Lo4BN_`H5dOa43VLcg}iP3-hJn`@GK7y3Id7N1vw*ZYTnp#qzgLFp){&{DU=9
z)@>2S^3bB%Ss#y;s1KQYsv+V8{yCKqySKU-@YB=P)8vO-&1<k{`4d?*Dho!(Cczp4
zD9G965Onwu%AEjtqERTc^Wj5~2O5GZ`lqA+V~9_n#nDs$-|(=QIH@u0+Dr&dptDk_
kNiguCCB(osxOnO*I0UBBQWItH=KlgX|6sow-{=ef0Im98YXATM

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..34a11df8a5873e7900c0ccd2670c6e2ba28d0429
GIT binary patch
literal 1077
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUmkJ#c?l5(5LXh^LEVh{fr-Q{z2u1&SPhA1b-{q(-Wu^hGzPYMCQl
zQ>E8Dmn-4#PIyyVU83-M<#bQ}ubZYHyybi}F34k%&WeRXA!pQBnj;r<)+-1Lt$C^B
zd$#s`{(kNK6EjO6oZh>C{`b1N=X0vhP2H#+wKOQui??vr{JC=rJ2+#-S4>)HlHasz
z;q6bx`}wBq37%ZOG^o?Y*imkewiDmRbqkN19tu0T@LsFkLrZSa1tRknzbx7H^u>#g
zr$v@^k_(L9NHgp?DAB03eEIT=Z{NNxtdKwWyFf!E%TI0cn+FdX;!Sh(?@c{<dGB7^
z<!95X-;`L*e(4O<D#X`*zWH@atv}yy^N>?%o9m{Z{>l}-MOaukr@VYS>;B2d|2Ipw
z{0(b~)e(Cf9UU$2qZT~-ZeIGz5U<jTiW5x-6LL3f`X<1~-tf#{alTT{@e?Ob2v=xc
z)v-G;ecH5;-@kwNB$yujSrhkUvK#Xk$y0(Mf@Q)>Prv^9Y358x&3cPkzX{w2xil(&
z^?u@5-#mNv?DxNa{krw|<Blz9$;r*zw{6>W?wsGX+qboI*Kzl`Ew0JU?cI6zo!S)t
z343hq?D*EKUvICh@ytf7d!_P3j&_M>J;&M-7GI3`T9ul5wCO{A(!Aw&l0J%0xmCOK
z&J_0B5;{G*jz0dl;orZ1WioxT_l|4**J<=M>xr^T2(+}=(Pp`>>ywA_+<zZF6qGAX
z{L#fLxhVM$<4o6*Rwu{ib*tZRj9b6H%FfjEXsz9Rj;GJQeEHJtqxN{}`xYApy%&N9
z8IykO*q5huqN=JY!ri_7%R&c*1JkEZ-+3@0p*&&r>ebgKPo5lKRCS4=H~ETk>h=|#
z96fq_eyqEYwUvj#jr&ZRal3d-i@k}-mxA>4=gNG>n)M1CAFOvZ9EojATg5B3?DET1
zpD$hveE0qL(WI|8Zrmu|vW5GBeG%(Yj-H?^f#%m(xfd6SY}>Kp#PjFRkE*@BbLUR>
zl;`D5i-qr&y!dkX(4j+5|GToWv)?>$fZ_G4S4k__vZPkp=!$vYe)8mr_v)*^63WV^
zS<3XCc5clyne|HM=d>dI`=-yoh=>1^zpJzI`deU@Q7v(eC`m~yNwrEYN(E93Mh1qa
zx&{`y2F4+V=2oUgR>p?92If`<2G0$BZ=q<&%}>cpt3=aaVqs-q4$-i7e#bVT21$?&
s!TD(=<%vb942~)JNvR5+xryniL8*x;m4zo$L3x?M)78&qol`;+0PP*+BLDyZ

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_ime.png
new file mode 100644
index 0000000000000000000000000000000000000000..1c1e78cb0a7c3a5679ab88b18bc06b2efa31fdb4
GIT binary patch
literal 1037
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUl(;8G6%QU(U5H=ZtzAr`0ChQ@mYCyLmAxAJKDnr{1L!wQF%j+TTe
z+~2M_`<r#MDRnh=*tXcYUG&y>5@@y+oygB-*<@K;azbuRC*PbI)i<~7<Sj7~Hhw<m
z_w!$KU;n*U%5!@WxBb5N^WM+7Z)?53cwgYk5GBz|^-YJuJ*!gId|o-}j$tx$!Lk62
zIp>~#E^SP<2zzSbwJt)(Xx4{EEc+M}6PEh5T#b1C@L{5`!<5rcGwSQ__e_`J+xOUZ
z(%H1+uMNo-(<~2^&bC~+etrL~+qb{&-n~1%U`D5l(qWC;Pw(BkCmpu>Yn8jZd*}zr
z-y7b)diBb?&v$8%-Hoq*|NeFP;l=#Qg`1oEd*CEni<X4lORjm@IT|Q_V^!$5@#WH`
zOU`<_*P~8GSmfsA)g6dp`WS8M!S23N>PJuQgWt1~w{6>I*U2X-BQs^n*-xJ~*_fNV
z3kwUcWoKtMyiuq4pik<CK>zW~<mBcL!Jb=BzN!*_&40z@;n%ACRwu=%=;+C(ZC9-8
zGUl6?sLK?WQr1;3#c|5^Tvzs~2aj^DU%wvTd1>a^XZD*9%-*=s@MPNN!0_<vksOw%
zpD0u=dRdse|1*1zj>Im7jP1Ae`+9mN9Dh8qk9S7JN&%yzdpU25PV7|+wtevY8&~_`
z{-f+$V~(HL>AQ;Kr`zO}C%$RUfBWW5g}|*7ANksywL*9E9r5R7YwnsbdGh47cm9Yv
z8AWaAPwc5bcmDi+R?F@v+uNrmaVQ$<oNt|=kP~w9e&M#0DWCT4sMxi8_y4-ejm?)|
zPO-AK=45<6;q02IN$w4tw{5qiTzOj-|M_RlmK{4Z)P*{4t#g>`7cOQbz+v-XWz%2n
zocSA{Ex!1I`)$g#nyZ^0A2`qucA`IG^BmoI3~I0cT(}_6+u!ePIytNL%kRIRu3Qo6
z?dyxXd+**n-{qIJjg5`J8_n!7s&!ku@t-}L;De%_E0!;B_feaCF=^wL11gy=>-x7C
zeV+Wm-@mxHxUzrZ)Md+;t42;cnP3nQ9eulV<9<e+C6cehUrRUvvw~`gYeY#(Vo9o1
za#1RfVlXl=G}Se*&^0g)F*LU_HL@}`)HN`-GB9{<=z9xALvDUbW?Chh1``V_Lo<km
z<4(<UfEpx0HU#IVm6RtIr7}3C<R_&nc;+Uirv{}arc@T5Oa<jp22WQ%mvv4FO#q^i
B%q#!^

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_side.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_side.png
new file mode 100644
index 0000000000000000000000000000000000000000..5854b3823ebbfbbfa1ffbf13df073010964adc67
GIT binary patch
literal 1177
zcmV;K1ZMk*P)<h;3K|Lk000e1NJLTq001ul001xu1ONa4E3WHl00009a7bBm000XU
z000XU0RWnu7ytkR7->U8P*7-ZbZ>KLZ*U+<Lqi~Na&Km7Y-Iodc-muNV4mRU;^fLC
zz`#&YR8r&~<QN$d8KuB}o`H>lnSp_Ufq@}0xwybFAi#%#fq@|}KQEO56)-X|e7nZL
z$iTqBa9P*U#mSX{G{Bl%P*lRez;J+pfx##xwK$o9f#C}S14DXwNkIt%17i#W1A|CX
zc0maP17iUL1A|C*NRTrF17iyV0~1e4YDEbH0|SF|enDkXW_m`6f}y3QrGjHhep0GJ
zaAk2xYHqQDXI^rCQ9*uDVo7QW0|Nup4h9AW240u^5(W3f%sd4n162kpgNVo|1qcff
zJ_s=cNG>fZg9jx8g8+j9g8_pBLjXe}Lp{R+hNBE`7{wV~7)u#fFy3PlV+vxLz;uCG
zm^qSpA@ds+OO_6nTdaDlt*rOhEZL^9ePa)2-_4=K(Z%tFGm-NGmm}8}ZcXk5JW@PU
zd4+f<@d@)y<Co!IETAK>L(o<5icqT158+-B6_LH7;i6x}CW#w~Uy-Pgl#@Irl`kzV
zeL|*8R$ca%T%Wv){2zs_iiJvgN^h0dsuZZ2sQy$tsNSU!s;Q*;LF<6_B%M@UD?LHI
zSNcZ`78uqV#TeU~$eS{ozBIdFzSClf<pirb>s*^S+dw;4dus<{M;#|MXC)T}S9v!D
zcV!QCPhBq)ZyO(X-(bH4|NMaZz==UigLj2o41F2S6d@OB6%`R(5i>J(Puzn9wnW{e
zu;hl6HK{k#IWjCVGqdJqU(99Cv(K+6*i`tgSi2;vbXD1#3jNBGs$DgVwO(~o>mN4i
zHPtkqZIx>)Y(Ls5-Br|mx>vQYvH$Kwn@O`L|D75??eGkZnf<fA&q<hjdcOIBrHe!s
zw=Vg%EOYt2l_9H6uW?zsZ@uM)ZJSIsZ`o?HZTk+Zo%?sY?m4?JZ2yCUIfs58X+I`@
ze8oxYQ|HbkpZ#@y(nak{N3SGa{daxNO`BVH@6_K@zJKCj-ea*R`=4dL5P5m<b^crV
zcNac1eKP(0>g$5<;Xeg_o%+-I&+-3%01W^SH2RkDT>t<8AY({UO#lFTB>(_`g8%^e
z{{R4h=>PzAFaQARU;qF*m;eA5Z<1fdMgRZ+`$<GWRCwC#)-g-MK^VvJ@5w(@_zRIV
z2riD*5N#nylP^GOX{p^oo7x(E1@<C(1+5YE63QV2R~sBe2O;9uVou)u@g#_N?pY3=
z;{*5HbH_RHn<Izu#v5<E@y7oLKF<MZ9G_&a*x`X)E|^F8%8GjpR26ZNWR&HWE83)-
ztjRjQ_+T6YT<{}O;~B@863)Bkk-I?Qf}6|fQd3>4sPdZF)4rN|Q{OLS*Y8FXodxm@
z4ONNfQBO~PKsCMVa2p<#RPg57dQ}?NIX`2znjLY>=jzx}PC2LRKiXu&Yf`7fY}rSS
r1tVI##5ShAn8q7#yz$2W1^#;g3F!`0D~ar{00000NkvXXu0mjfxl99!

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_home.png
new file mode 100644
index 0000000000000000000000000000000000000000..7c25fc510d5b124dc9b6460fdee3a58b02b90095
GIT binary patch
literal 1169
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIQ4DLaTY@K?Vlq0#6sm5R22Tq23<RfdX@<9|<dYs3sT{5PeA}<c{dC
zgTB{ww>;RC;1&Lk<?*sD0wPOh^}6l4IF<Wos{+dr{aB99trt@k|4^L2OhLu0bAQb&
zmt?EwmGQr7W_>%9nV0@-j&=FFGm|~GdM%wKWz`m!9PF&0bZT4l^l2rPm7YxH63>!0
z{$M!}cOzy0w-5DQUH944Zv8Cp6--TG*$^+hkB#^F`W@eX%@M6z>%%jBUD&z+4VOzV
zx9}g3GqZ5%2`yMR-8DG)PhHBNv?YE0{rmNFbxS{1<(SQuXS$)Ur&o6HxM61D3H4sK
z%=Q2MI@Gpp+t&8O$?Z;7Qj$~9DKk5}b#Hoa-@ffEBP~AXdzS83P2V1YO*d}e{=H_-
zo3h<YKYuRnG@jmQo6{A4WEtyr&yzC$B|gZn3zvUYR#mktC_Fs8d&(TY<$fo(?Atfb
zM=kj0LD6{K^^+%077hGtr<k+AN6q<7!;bbq4z}j}hc;GLMmu8kq$DJET%7gy?_U#Z
zYwwdOL4IBZTrb4x9;}MdbDwhlx#sM%c1g)^9zA;0e*Ss(lh=V7B9|Us@Z#QAV6o=*
z{rl?s@89RpGl@9O<ojrr;tNf=hVS>6EnmJ`Tuf|2tIPk$njKsA?C~)+Hop46i8<=R
z6ys;R?3yS3F6@o}m8T%k;QOg+uc)iJnb{MGBTdYDCJR*4WqREv#u{7KZB(u(D=X8V
z>h(}8=;%-J=2nR#M$hebF-g^QKa0?Dds1N0F?(N||Ic&hY_7lR{lPco_?AoMtcD$_
z=dyXYvMYA)-ksgn-oEnAg-(}4ic!b5Zr;53%l0Lr;l5fmyF65ym}4Gr@kUOrI8-uw
z_G}Y-`}?QV|B1*;&Ccrj;^e}6)KAHbS<k*oJB#0UQ-sdbmydm_TMH&_eqm{2<Dz}<
zgv8pif`SI0Y60$Z@80FDH!8g_h1uHLdg?W!58C}5f@dFe^@Q^X+xv(fZm@m4bcfv}
zk7i~)mNj9ouP#3RxKPq;wy)s&xcK=02ljSs5;=NZ`#=FVOUv30P#`Foh}c#>JY_S_
z#L7zR`UKxeck}Ac3IAwyzoH*y$eqA1UDM&HV*v`y>(}nwky*QL-K85hW<2>=G3CwI
z+}vD#Hg@)SA79^6A3wh`kZKMGkm|?RuHL)nr>m=*Vj}f%Q_#z4`%|-|lLWZ=cD(w^
z{-C0LP1?gfalq`TTH+c}l9E`GYL#4+3Zxi}3=B<m4J>pGj6)2~txS!qj16@S%&iOz
zo*Vk!LeY?$pOTqYiKf8>sK*SVVH5MU*FX)DARB`7(@M${i&7aJQ}UBi6+Ckj(^G>|
W6H_V+Po{#(2?kGBKbLh*2~7Z^cJfC6

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_ime_left.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_ime_left.png
old mode 100644
new mode 100755
diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_ime_right.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_ime_right.png
old mode 100644
new mode 100755
diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_menu.png
new file mode 100644
index 0000000000000000000000000000000000000000..35e7af45033225f886c2779d956d7d26e36844e2
GIT binary patch
literal 588
zcmV-S0<-;zP)<h;3K|Lk000e1NJLTq000R9000;W1^@s6C>z%<0006LNkl<Zc$|$=
zORG{*6kgkVJoj=_FLa}zfpQxZ2{{QA5*&!)%t6g+CN{}YL6boH1A>hM=Qa?ec{mVf
zil8`%20rqUiulO)vu_>sXrnstopsJ$-(G8f-(D1t$7#FWDws~EVzF3=;c%#~DbL}D
zlZaxo*$|-V_xrS5E@?iW?})u#k0z4|jmKjd@d{DQW;5z^Iy(Ya;Dv6tdj}Q1qFQaW
zT7BGi5RFDdX(#Q^^A2$h;!mL8Y&IY7i5h;L@lUy2eu+2*exv%2SS)4)kp_c-P!;HO
zy4#sd=0m++|B^@~USNqk2&>gfluRZSqS0uSB}ux4<dt5pzciUllHG16i^X!ZfOkQ*
zHkZq3*Xy+eAylbUj$ZxqffB){jYgw$e21|!1q)ssl+|iAQq{r4*N7XS3vvr;AAn3~
zeYBv}YP~^R0&OIIrPJw0Y%;niB)&6pxm@?F)oK)NGudqR?ZE=4)A`r&w7@lR!?pou
zYNp+8s}{iJ3%}ogna}5CpU+1QheNr1)hE9B6VFaJlQJ(Xvrs4q9M}hCpP}m6p*kP_
z)Pm=Tb6^JIcUW+j2|P;bsNhQ8?=7f+)GHQ?Pf%HzQq_V`DD)7A{DwrMR4RRfrVADp
z4u^LN-EOzwMYGv_<MDW&8VrVe?2~FiG#Vw$4+Vokjm>70*)OlxD@P&`kxHc~5D5I=
a5c~mywcgDJmZZ7>0000<MNUMnLSTZNxC@a0

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent.png
new file mode 100644
index 0000000000000000000000000000000000000000..1ee9cf5f352d990d0a86b199ed9ac7b1ea655cf0
GIT binary patch
literal 703
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUl(+I8PGT?Pimd7dtgAr`0KPPNZI6d-bRerE|U>q2kq9XralhGf{g
z?)tL$N9CHOK>-U(F5h+ac-bBx6SC#!YTM_9@f~YdZrt4H?DNiYfBEDGwOPCGuIllc
z@YjFprZw{~Y>D`?pnUVq7dGdn>^tXFxvxRWbJ86d<usMqn>JnGGHKekfPsr!Yr+|h
zxnVxvwfd5!S8Lt>{=VRF|DqSgMl<*LF2DR;Y0-4aw37<mKB6p*vTX}zoqxVv!%bt~
zqpNd6S6?kYy-DWJJ?(2R7D5!A5!n-=!{N8#R`(vMYy*iWbtXWma3fC1oe4J6*!qtr
z?~YqPJ!|W&xQ%Z7dnf&rp7VCc?YGa$&fE%=oqs_61K$qC2Yn5vcjSBin7$-Ttib(1
zudG3eRo}w&%O7*hPQRUDdU<0?lF^Av32PQu$LUS~J|}2~pWGLfXU#B2{ww|J^Wtk&
z`0A^#nA=R*yGr6+zO0-0_1E8jPYW!r_&l}nvzk2n?6cC{ck6PtM(KSC2+%V=Gt1FG
ztt|W2MZ@UJ_x8NrwesX=o4xN7BWC}7zo2J&<YC3n(zCwrxIN*b)Dd9hsg}4#l%yn<
zq*^5xr2;7iBLhQIT>}eU1LF`wb1PFLD`P`l19K|_gXf06w@@_X=BH$)RibGyv9K~S
zhiG`etN%1mgCxj?;QX|b^2DN42FH~Aq*MjZ+{E<Mpwz^a%EFVWpj5@+>FVdQ&MBb@
E04ozLMF0Q*

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent_side.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent_side.png
new file mode 100644
index 0000000000000000000000000000000000000000..286bd0034d3eda0ff15efdbe37b3e9bd135ba9d4
GIT binary patch
literal 1151
zcmV-_1c3XAP)<h;3K|Lk000e1NJLTq001ul001xu1ONa4E3WHl00009a7bBm000XU
z000XU0RWnu7ytkR7->U8P*7-ZbZ>KLZ*U+<Lqi~Na&Km7Y-Iodc-muNV4mRU;^fLC
zz`#&YR8r&~<QN$d8KuB}o`H>lnSp_Ufq@}0xwybFAi#%#fq@|}KQEO56)-X|e7nZL
z$iTqBa9P*U#mSX{G{Bl%P*lRez;J+pfx##xwK$o9f#C}S14DXwNkIt%17i#W1A|CX
zc0maP17iUL1A|C*NRTrF17iyV0~1e4YDEbH0|SF|enDkXW_m`6f}y3QrGjHhep0GJ
zaAk2xYHqQDXI^rCQ9*uDVo7QW0|Nup4h9AW240u^5(W3f%sd4n162kpgNVo|1qcff
zJ_s=cNG>fZg9jx8g8+j9g8_pBLjXe}Lp{R+hNBE`7{wV~7)u#fFy3PlV+vxLz;uCG
zm^qSpA@ds+OO_6nTdaDlt*rOhEZL^9ePa)2-_4=K(Z%tFGm-NGmm}8}ZcXk5JW@PU
zd4+f<@d@)y<Co!IETAK>L(o<5icqT158+-B6_LH7;i6x}CW#w~Uy-Pgl#@Irl`kzV
zeL|*8R$ca%T%Wv){2zs_iiJvgN^h0dsuZZ2sQy$tsNSU!s;Q*;LF<6_B%M@UD?LHI
zSNcZ`78uqV#TeU~$eS{ozBIdFzSClf<pirb>s*^S+dw;4dus<{M;#|MXC)T}S9v!D
zcV!QCPhBq)ZyO(X-(bH4|NMaZz==UigLj2o41F2S6d@OB6%`R(5i>J(Puzn9wnW{e
zu;hl6HK{k#IWjCVGqdJqU(99Cv(K+6*i`tgSi2;vbXD1#3jNBGs$DgVwO(~o>mN4i
zHPtkqZIx>)Y(Ls5-Br|mx>vQYvH$Kwn@O`L|D75??eGkZnf<fA&q<hjdcOIBrHe!s
zw=Vg%EOYt2l_9H6uW?zsZ@uM)ZJSIsZ`o?HZTk+Zo%?sY?m4?JZ2yCUIfs58X+I`@
ze8oxYQ|HbkpZ#@y(nak{N3SGa{daxNO`BVH@6_K@zJKCj-ea*R`=4dL5P5m<b^crV
zcNac1eKP(0>g$5<;Xeg_o%+-I&+-3%01W^SH2RkDT>t<8AY({UO#lFTB>(_`g8%^e
z{{R4h=>PzAFaQARU;qF*m;eA5Z<1fdMgRZ+;Ymb6RCwC#);|iuFcin}Z`!D!g9qrU
zi{8LR1P8s22k;Kgx_JOcuOK)$J2;3SE`rcOYyUZPZK^Z~9bVR7_~i8^Ayp~=91g+@
zFTC)=3tx3!|2VIKhxy%%xf0p%JvKzS3#4d5#$0Up0|Ut6HPB&YYH~5J=+Xip$@zFi
z%8ffN391ZVV~vMzs4d20!Mw=OU$=C|mU?a$u%u~wavu1`?1=&tbyIU3tDBLbAt%DJ
z)xQd|3_UaDU5?jGXd8RqX9uJN<$9m6XT;E$yBv$FQ}Tx_yzs&cFMQ?s&j2(>Eh{mW
RJ?Q`d002ovPDHLkV1gS9@f!dD

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_mini_settings.png b/packages/SystemUI/res/drawable-xhdpi/ic_mini_settings.png
new file mode 100755
index 0000000000000000000000000000000000000000..84807e8990eb9f91e66ea2643c13d27e834ced6a
GIT binary patch
literal 218
zcmeAS@N?(olHy`uVBq!ia0vp^JRr=$1|-8uW1a)4g`O^sAsWF`C+!w=OcZF{AKbtd
zvVe(|!zPKzeBw(74WU;KY7P!>1T`F3wE`NM`Vzm*vOad^@BiMivUBFu-xQ6U_gCGH
zeIWC7-V*Q7&#XEA4cZ3m%M_y+xfdvB{#{qgaN9W{{&Akl%K#?#1@Z@&XSnWTnKf~~
z3a{4!#ybsS0UozppEKQHC|{uaGLpTg@vXhW?Vx)X9-7y#y;`a!ulLnCuCLdP*VO8J
Q5zw&=p00i_>zopr08sl+l>h($

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_qs_brightness_auto_off_alpha.png b/packages/SystemUI/res/drawable-xhdpi/ic_qs_brightness_auto_off_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..37d7ac7351ca38955f21722a781a4a3d71ba8b8c
GIT binary patch
literal 3134
zcmV-E48ik>P)<h;3K|Lk000e1NJLTq002M$002M;1^@s6s%dfF00004XF*Lt006O%
z3;baP00001b5ch_0Itp)=>Px#AY({UO#lFTCIA3{ga82g0001h=l}q9FaQARU;qF*
zm;eA5aGbhPJOBUy24YJ`L;(K){{a7>y{D4^000SaNLh0L002k;002k;M#*bF000XP
zNkl<Zc-qaIU5s5-6~}+)&P+=|O2L+|2$a&G)kY|Sp-BalK%yZS!h_LZurZhvkwl(|
z5Ht!Jcz`O#H+^Z<5R3?f8Y^Oo2C+mVP)Y&<RRSrMQYf9Fow@h^eb{TwS!dsK?hNyF
zS;@&g_nf^x_u6}}we~(RK#+u_L5e_YP>LHAb`8uB#ekJpeqR&|E7F{JfGZVUx~@mV
zvz95m!7jNh{qUxuKNFY}b4#Kq3KyycbSD{v9<}#{wHX1Pu>b3U3BywjPBdKCc`dZJ
zG%8<n4M{5cyhGA;D&e~9U49i!?*<MgNXve|C+UhBWuqd6q!p503kG;i(uv_c4K%JW
z9+Nx=4w=wTN}4bskE-zoSLP?Cc*ibD`f1iC_WDthzH79fjK&<a{siTYk+d`P>fa@O
zCiLDSYkQ%jLz3FT0Bw7AVQA}k8%$}3osy1rBMe&q=>DfjdO=cG(zprxo}}A@z)1RI
z=zV4Pj|PJtE$Ii6#_Zj=(SE^rA!#6SOpgKV_iRafYg}8Bo|3dq(%0;NSH0lRHcC3z
za8yHYucWgh@7cic6w1ZrZ4$EO$NwA)EDg^*xak7t13Q2YW$;tW61W=}GI|}-($@-j
zOYL3cJt=Q4r>0mg`x>AIT7XYJva2x0OMxYsf`uv54MMx3-Hf&yZJGV=8g6c&CBRbS
zS(q0@gV)iXwE>2#H|hu%q@czH@6^z3QSJR<>VvR$X1JVB+i;IJp4~pmy3DgOfD^d|
zI0x7T{0Dd)cmwz!@D?y;0_EVnF;t__e&C4RF9tqbBaaV(+*l)|$nj|41YiYl5^yST
z2Cx=*8u<QHhUmMDNOI&a1HZ~%A2I{%1O5w~23%-L7p8cer2Y+T2mS`U3cQ&aV7bv)
z4_pqc4!BOsX+LQ+P6tjj1AHix?<>HsfuW)(ru2j+1Nf4(Skg-th#bjg_&R8Z`-hbx
zxW%dubL+0fhVyU(%{u6qY!fD{^P73BplX<VdnQO%We_uA_x?;ufzaiuhQU$EmZTB8
zTIvm%{r+;J<vg9ogvwy5o5^;ErWr0zH3Xm>Ll=;ivZESsyOgu>X5c%(dsN5ZCxP>T
zPXT9<CNqEoz)QeCfPVtd*mK8S0^9+7n{uYlV*uCmFmMU5)A47OHCk`9l)}@;%)%25
zK}=WD^_k}&=`u+VN;;sa;efThEb|s5ZOV8>aG4$pUN!qr*%%Mo?+szRMdjN{q3T9e
zWBJo1{W23ax^BGMsv5RyxTj|{HyW>YM%QJ!A<8^srGxU`1H(!&`2MU1eB9lZ33{=l
zJ(-c}Lf{<owtI|Lq<ve)+uQCp8Hb|>MxCasxTm6ZMTq-@#a)1HhU1=ck)*dXA!h=P
z`?k@H-ncEa@!tPUjl8Z$bMduC@qETUP0}|dJ*1S3_)Of9^rob>D(eDkB)wq*<#WYM
zz-hc;w4Kjd<Lz>EO}2+jRv$WfRjJnyHC96@d)p*wyQI+?!QATigq|6Z^!Oa~d=5_Q
zapU1$usM?@!kEdv$#iKhr>X4mla<!cM<pH12zISEd@Yt4=FEV<X&#i%jj%~&kFHeN
zIWCvW7~!Dlbcg9!4Ukm2)iSf1!?>z}MlQ_#!J^9~J+E>Sn-2qYCG9p|`J9yV^kF(4
zo^3bW$#R+p6YdXh16NYU{ho_At)~x!cb5Vmr9O?F3-Gl1W5DO^Spobm(}D2L<;Qfo
z(sZ0`AEPNxG!6sT06(XU#FVug0^T8IhyL#KEX+<*VZ2<HUBE$7CYj6GF<F0MIvu9E
zBNbX#*L+|1?={!yWUeSlPfJ>6xFhD8?t1eDPJ6ec5#xP=q-Se}L98}=Tu_M(DjpEx
z<*r$%4SWl@lir~MDHV2iI*ycwFBGh#EWo@)O37o-yKZ*^H<&Jym7<s%R1%8t!jp{_
za5Hc#W$x|_4h7T|lm(Ib90pE%*mydOX0jbInQtbmDdve$PgOPZ1b@F7c$w<>X$Q1L
z^Qd$a#0r$l;`7+cCbR3<)AO|k$i~Nz5k3ic7+4b+K&s+6jI!`B7VcdZ@1Qj%^GT+|
zP>p`Q1_<D@|0$%U?z2?$eMnVcU+(tN>xT0IPJ5J8lY}%J@^XCFWPZSO@YSFPCimon
zWrhu5HSl{<jn0dc&IBWTqT!7K&o7_>b_1iv+l!%5Hm^djHyu_Js?|~7+yh!9mpL1F
zkW>lIt><ob25_c5>i~bY`)SwYX8=z7G0G~_nZQS=4o@h(_#EIN)2W^7+{*5K7iSyr
zal-h?4A3D>e4h@_w~=PwxQjEF;49N%<K=LH$<m>B1@d`pjp3Y6Z?(FT44oqB#Vq*n
z0%YB0=1!G)#E_&vG{og|0Zwzf%9OoOSuoAz%Vn17cB*QUA-|4Q+M>Qu(hjBF-3WQ6
z)s=Kfz`sb<{Cut;)*mho{4S}HC$B*qHeGHs-HugFI^1+DWtF6xl&UZL8hYdrrBKsz
z^m~G_<_etFJt}Jt!^S(x;;_$TzDd$qYB;V_F+dm!O{K6klCD*G2*P`0T+-FnW<=?r
zgs0Twnmss;?M8dVcwMbBU5`WZT9b8FrLnw>6ieK$Tx7gQVQeWSC_6&Cnal~X*0;lG
zdQYAz>6IEewyT=dRmyvfiZ@QXy~Nh3cVdZ!(Z$x*iz{0~yShoK4txT0*rKwC(J~&f
zAe!T@%R6m$YfrTjdshSFb`aJ}*KYZ*N_wV7(KxZyO_<LZZltv+7_~`;yQ0i<p}a3Q
z$4lDPz&t*?U&&p4PQY+CDxD7+Q!|WNn~jDOX`G<u@>hJe%Wx-8ul0lJ?hST<D@YMl
zo)b(qr!0s4i&RVaYu2U(oJ`suTt#(n@MY4z;9h#8$qm50z_~P^8Hjs^UnC_%EoQSf
zn7Q9pRd;RTc2*qU?a-S)R;t`icUwHaRvL}5jCLpRjXT6H+tw)iY&^i@{*!?hsGjrb
z2Ql1y2iOYy7I>CaN$Lm7N%8wtq&nVlH8iJ!cS*7TUZ5z7qR|Rd8DN+cOWy+AZuf1{
z@s^i>SAadF?d(f|>nW3`x^3*;q>~~ql8)MV3VjSIxms=4Co*IDkaOBU1O7zXZeK}C
zh|V(O4Uw|GTS;5$!$ncV;?4UqK&vQ<uB0!Ka_;9$;r+lk)uiVtQZM^Krb#lP_oh1-
zn{b@=)y6C8v50ieXr&qOU{MtJxeiT?raC0$i1+m|pr6)?C%p1Dd3oJy_Bk(QICcCm
z;}08+3Bx-=I=uBd=@@>l!;B2z;634PO}Ovab%1geh`G798w&sHJR!%+R~x6%B~_!_
z0Vf(KKcv|g`WnEOkA5zs@-*qYq)PG9ph$G%$4N(BE@&`<KYNN)@4Gk{BAyUC1iV{w
z3RKx|MTdC<m1l)lNqRLbSH5JuC+SDFB&}0QPn*sPACYvPwf&*WbUe~~Rnn@+d!V2)
z=3XJ`IaN=J?NoVW-s6e8Yoa;7->mAHpbe^KpIzgz+}jOW|2$5A!h{`FI##zt)l{^l
zGLy@5fmf6&QY}?e@+C^g=6xIdi4Y!tAifufM)-@x;_E{+H&k=~_2BkC9KO+~Jw|hv
z@t9VWHwXiK!G?khpI2f$rERIK7s&4Yc^!@$VukVez!{)&pY>ec*57SVs_2Z{{p7ox
zc1|<rI~$nm?*@IjDnAdc{|3-Y@LNoVYiQWR%aknA>!O=2frB-``!!bJ>pQ%jAZejL
zh8*O#!}S7v5WWUoC?hBwRvOfV_J0!6tB8aJ?JWQR03~!qSaf7zbY(hYa%Ew3WdJfT
zF*7YNI4v?ZR4_R@GBP?bI4v+YIxsMz%HUuC001R)MObuXVRU6WZEs|0W_bWIFflVN
zFgPtTHdHV<Ix;dkF*q$SH##sd)0bG>0000PbVXQnQ*UN;cVTj606}DLVr3vnZDD6+
YQe|Oed2z{QJOBUy07*qoM6N<$f~n)#b^rhX

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_qs_brightness_auto_on_alpha.png b/packages/SystemUI/res/drawable-xhdpi/ic_qs_brightness_auto_on_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..626e283a88a7b8fd584ce787a2b9ba1b820846e3
GIT binary patch
literal 2928
zcmZ`*do<Gl8~&Nxh8&U0C=$yhHJe)q3$wXIBSK<wTXVl;!c4k~thrTgh0G<Pkjt<x
zh-8@xV<>V7A-QeTr|-Y-kMF$ad7tyV?|IJq&wJkU-gZ1~Ee?i&0RRxkpe?bxZ2k|z
zg1fl_A3nBAdjgR5NC2o!7v07Q>}tM9to142S)bzEu28;+#@YkG6(|6ZuK@sew?v)=
zfM^&1{O|?<qx%3L8<y96#$>l4=woYb3H<#Rk6LLNyA_czv|HpZqyGz3H^CGDz~&fB
zq%)EIA=mS%r`7(hMBeBKOD51<!*SnsV6CLhTb1kC(vmtR>W`tSkks4Ck5jJQr)+u?
zKW=tQ;iZYJK%c7=VO5l_OZk^e*L{vsWHL%Y*gN&Y(p+R*+|m{gM&Pvejka!_;El2d
zvKI0p*L$D3{nbMdzPKZVP-rSe*G6(S72J3R$9yM!CRL99Yso6y$I9p!f`RPN@YE~%
z>e&TU*IFO5b!s7P-+Vk-6oQeq`g$sw{4+`jXIVwBF^VK>ugB?y^|H&0?48dK@{Ial
zJdug-KtRg_)h$@TnsW_Lk0z!xKfjkD!m4G4+BCO;g7#q1?y7hPN5(-+z|DwD#PgvE
zb{i)mdajYMEFGzc3mrjWFf-VM(>j`!;FfRrV^uZb4be<K>%^t)Jz+E(HUzb%fpNXw
zpG$~##TcpM;p*P3u_|zMD+j{ASa+5Ma(!L4(lyt9j&&O2iIIXXj8NO8_MlixuV=M*
ze|V2R3Q*g$=W4R-<(Bfl$Wl??x_TYS3CA+(Uiw_JWereW(9Of77`=>bjyBaaDA@T`
zXmyES?b7f^qEc9RTyAL)Z$*j5FZ#wfCZw6+$AEgLu(rw<_BG1NAxKUoRn<~#?Yief
z8+G)iydN(-^)(+|H6kl04LhCd5>48YXS`-aC4Y>b!WQ5PJqfv5fu=PdxkrO!EU&k)
zgo=>+VJJwNW~V@RdH5@u=4PklLO`Q5duqoHvV^E&hVY-uiFE;oL1XxHfRUs`zG~pF
zzy*N|LVI(~?RCpK4wj55QfC?gqHK+@p^%{j@pzcd^3mlgQcB>09o3*sgb33z4FnGf
z(Z%v4p1#iRAbXEcS4sPZ#OXqYBhq2+E*p^yW>RgD`VALyb)^$|rs~Zx{B&<8DCPlP
z>?G>GI1@9u0uPf6lU7eDD$}Fy82wgXEW=0U={||KkHH{(sWLaZ*y(-_3d?)HEK)(t
z@QFhiC)foxKMeREowv}!cns5#Y<=}Q;KH7DAaZeM4}RwuZc}Z_JRMNtZ)je4kplUE
zn7<#_+@E*v;w1;pgxZAw6WJjrbaSVPb@gEO`O-A%wA|mecR~*?o3=v9)*f~5@ja+@
zw+UwFM$Jhek*~omziq^oKie8(Y&kyXCHnSc#e`ea*SKqSi{fuh4lAXN%gyT82>Fjn
zZ*Nk->&Pn{UqyolJb%g+BXAaY1jLbwEM8UezBpSao^}s4{g^Ru(m-kDrbe2phXAns
z$~P4i+gsxd^;$K_<L|l_@v2YgCqNQ8Zxv_p-TNh_!6|VD!MM&5*w%6CQJxxEgJi7i
zWo2`ci(MouPFqw_qFPGCse8q7nJV_|8Kcj%w%s*z%f-#rbdy?e<#x0t{qxB)pcs%V
zkTamb*etUn)OO6qpf5~j>G!nN7X*Bdd(*PPpQzT<Fm~CoB4Y)>d&Gk`AFsJeTlGsh
z$d;UpQVXj}D(w4&g;X}=R#dNk;G?f@s)R+(CZ<ju4gxQ-9W(n6)L*>u-TlpFRi7{c
zqBSo`L4Ajm-Vrc4Vmx8}+IW25AbWBtk0dD#KiWiClvC0T;vsrZ>OT@LGy@aD<+>~%
zb1q;+U(}Oou?Ls!F|z)CwDMjEvo!SOVY9v(`w{Zq-@e3nGi~y5{*7UEvE0PV^MBNr
zWm@OACK=@=mOXmI?+%C|{N-rxYE$_(_`Sf0qCdjVe4xs61u2pTqV|+#p8qtTI!K&o
zIq``jHx`%gaBigh5I4G+26lSE?h!nYB|qMxb^xz&%b|TnH<Fv^$m)08xK$#0s=dH}
zJbMM=%x7&kt=J_-M>O1r>3x%_J4j3#lj4x3Qb~jXv!BX^rK!j74m(F*9I9=;Nfwu{
zMwTYvo<Eb=Zmu6_^Zz{=m|qMB2N5Wxs-6|UGHH$}e+nwgTI^XGZX8?pyQIwU;%?J7
zD=E%7Qc*Ntoo>0R(tM|H(SHR^EShMdhN45r9_>!cIggT0U)n7=Gw8neS=!u~K`vxM
zX99(dcPv!sMUAEH-k}0{A8{MMpg(8Vp3Up0r?d0rnaFNG66#69ZB!$c@7OFHV|-)J
z(h<W@bhA1?qBQfV;ge~3=8vMO!}NlckjiT_;!aHODe&^u_o|B!?0oHqNkO0c{pl~f
z?O4@!lTBL0Jed7lVnc{b2DQ*OIc@pP%~==ydo9)JX9S@kw~wm{7@wUV9&a`85sTf*
zT;WP5w{)KI?`r&1<7sa+s1AIuU72G<U{#6534NleNAPzA6BO7I@xZ1R0ME&kIM;8z
zNyCKi_yUnKH5pMVpEB<(2f`p5#i|xuVGWg0WXj(6!L|O}{nTu9vn{JyZIMtrO@a_N
z-P_Ky_|${~i@u$>#LT6d?#m{}g_(781B()%tDe;Cis|Ol<qh!AX^^Yh(PNpv1+sFK
zBMKRwUKn=*z32>&3(OC_Z<CRRh0sH4o@)*cC5GzBpKPpneq?Q9U$V-t_n3Z4u<%vq
zv_EF5`EG|8;{>+Vujf_!7n!<aXJ0Tzf`!+NdyWx4gQ|<c{#p>A(Q(6LC)OrFWRm*K
z(fD|TO}9_FLV9fHY7#`??PaZBNJ3HPz}JPJ<EnF%Itx7K@YYg2!+Ng%+nvB1=Q#>B
zw_3o|lPZ~-U={HoL}gKBawz{bDs{)-yev{sqpF^c;wy&c;Dt0ITgP#_8aPS<Xa1?q
z@=kojXOrM^ZKVyp>|BuGYlB-L6AkXL-7O+qQ9>o<Ax&FvWhMC`@swiLy1XD=6EV9(
zj>OzWx5t?t5j_B8OR~nJ_X{<tAVfwlO?b{%^ZiwQQsbp^y=oBT^)<g<qL0TnAu?gX
z;Guu6VX0lS2E8EyZ3-~4CqVmyR?&0TaM<w&An2@T23&xiAxq5PkSejPEOe1ob>(qN
zDc>0$(6~wXY$d>pZ!8@Ry|wl5cZ@xqJDgv7r7!O4uZMj)PQ7QalvS|C^t&zbC%_Sh
zEbGH^4wq?U1NEi#4syqQhsFI;Z|F~+RcF_d;!m1b@2~loEwvA*AM?V)0osSNUScFD
zzqUmA(c^H@35OEfyIO?IiKPN4N2$?By-2D@0wkmvlBCI7c(r`@UQf$wTh+zA&nj9f
zLv6WjTT@!jg%_4It&$5YcM9r1Y%ONjsji>If=xG6p6I%#f?rn9;Y-Nw*8P9ziC#)R
z678Bx{WR+&W7YicYp66cP_7pKjz}DO?%{U)+Kr+Em>J9!9rd21*0Lz^w&F2Ld>gAi
zw!OH<N~4;{+V)b`#Jwn4q`FiZ>}9r(LrPnZ-;5St(<vCKN}n^eKK%e>inl$)oPK+S
z<Xo?DG|B#J!dV5^w<`0KB~Iqdn9q4{ef<c|rEk8xeV!N7hggcykD~uIm>oGAJ72*y
zBOh$q>Gj<-(F-8Tzf;*S%Lx)ytOBt$wSKp}Gxb{gCbbjr?#!Q<M)yY<U&kLEu@M3P
z-BHLw^31?-%fmUIA6IvuO0_7fb5XvyC_kf%5q`S_z+pNFZJ41pT;CaX!UzsG(lOMA
z85qG}MLiSV|6>Ra^~L+g{(r+j&biTDgZ#e<PNDu$F}Mgn0O=d*<EM-X#s&Cc{cygq
U;oW}!K3@Q1b=vaTDetTQ0gs4v761SM

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..987aac50d810a3ae4817f74b96d0187cec3edb21
GIT binary patch
literal 1933
zcmV;82Xgp{P)<h;3K|Lk000e1NJLTq001li001lq1^@s69)wx}00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u?2T{L@VgLXJY)M2xR9M69S#3-dR}_6a
zi>yM~c2_KHs0eH$sfbM*B4SA;GzLFFO#hhHwA!MkKdj+LZA4=PQqnY`r6x478nsd&
zphybZQdlL>SP_j8MF<6(c3IdJQDOON@U!Pm-rJ5_V5RH`KYEjsVP?lSXYRRQZ)EI$
zdpdjk_^}ciz=uOp{x&1bji}a*JX4Z>^ytxyASy@+V!=Qf@G%gnc$pbTbQZ7~Xa<IX
zzW^(cAnv_?|NgX*74mENc`WcFFbMPloxq>`+_GZD3N}1EOd+9}Zm$Lbxxg);pNN7K
zk+lQez)j#chr^*C7#LuHx`aK*{{hg#<?jYjD?mj100$@B^YG!r4vWQNXl-p}ZEbDp
z5uSwnMAU}kT_Ol?mOOay;CJp_nQ&!grLn20iCw#P&HIEsWdD~6`E6YO9>6&`IC$>R
zp+oP*#Kc77yn|oAsT$$`AU{d&gf}}H8ymADBO_nMGKO8db}hhf9o)m}5S~E(Wx!9s
z5cjN*{|=pZb#)bP-MaNHEMZ!>aG?=LO-)UWfk>)C*n|9EjU#_Q<p1U9(W9HOM3`Q$
z4_v!;?HqbZN-QGhb;2Ix{}5>9UR7p4$=?q7vmzoQqOr`p=;&zurAwD2tJTVI)DS7J
z6ZRl~)p+vTY_{)({PX9}H|*QDZ<g6?W|Abat5>heWV}jv0<W5YyouyLa^%P+A^(~+
zYvzb`%F4=I>wAsx6y?th3k!3}-_p_|QH#yY%>37Lyh7NGtWy3sPx7awr6ppCV3I#O
zJ9}1CR21{|^=0(nv24nOY4#LQ5cMQ~{o%uhW%&aF0s>P~Qe5&^R8&mp95p<=321YZ
zUoQR_``Q~C8lI5<`t|G5(9qDB@~c7^H;OQz;}&3)d(y@S6Y_8`<S*dzo1RvFwL(He
z1M|Im_h@g`0NmztDkYVpudnZC^#1p8tJ%-bFEBMV)g?b3@YF=TM!2V^M`O3!88TZB
z@~w)Ij|kgQ0rujyxx07omP$)YeH3v%X|i4+eBi(V@uQ}{zrPg!c!c7XlXmdAwTf2^
zhB8KqNP_reH;mp&I{D$bxw-ME0FC&2fEJ+=26Txy2J(SWw+=X|?fH}m8w>`9WMapT
z9iyA{OP4Nv9WC?=EI`AxlNyA=<5W3r0O^4L7){0_aj$rI_3G6O{hw{ywoPj?nGCoT
zvSY`Nr0(wSB3_H{@`hpM6@=#9Ux8$|hU1aA*IM)O<HudYPGVxBpTEC<ATEbfg}|n;
zmWRbH-arU<`Lz;Y$vA_OdW41T+_{sX8L-;gT4~XuMS5I%F*rCls=mHHV{~-1na8(-
zd%KIDQ@G>+^Auq+W_){{Fd2=3)DRXgUd*ULgocJvm;@&$C%@6&-u?|1r|{^fgyiw<
z;9){9MB60a@#0$*!on_IyeJ>(K^rz~n2iLTi_@2~va(WpdwYN2L(m=G6|KCIP-0dC
zZ;llv&CSi~5f-+8|9+V?ec*_Ti+fJ1)lz)FeDdVUk48pDs5?3-8F_r$c<rVa`4)&!
z5T{*-L<*`(Sa>-$HkR$#vxgNF6lk&geV*bQVe{JM%a=c+xtJ5Tb8m|>_y_PQ5I}37
zIcbZEifF1+m$0yd2M@|eR1vm)`*z=;pdi`>n`m3q+1dFWC(x%TgEx76Q$u>&>2zu-
zsVx@ET#&q>I$>cYB_*yzTD5AGAI-(MydXb6|6O>ohKEJ3q72^V3Y7CQNJEtRA5z>6
z2`GPY#MWIxcmz<GAUR(-bLPw^D1%LIWzfdY?U+aM6(3U6|5T+k#4yunG;)k%9`Oke
z4}SrdgAx)Fmf=Od1{o`F^U5+PUc~h=kmCBvl`HBK7M7Qn=lXl&#*I3o(MV-51fyv(
z#@I3*7NQJ3@wt@<pFVxs2(ohNdnSa16&4n{+I)O`yuVJTqxg;}E-v1J?bJC%o40X~
zJ5e6%P%d>zNlEO~sZ-CEFc}fXOd?m6>gsB(X!B;XdC7$f7cvpUtvm?_Q4+hVs;b@*
zFNp+x=6qdNUS2LA;boSQk>QKEL~ip4nS}G_&+kRdevZUV!8K!gdb%`yOx=vO|Dp`8
zU%!5iBuNzCK}6oi$0sl*CPqh}v_e8c*z)Der<?9SMq}*Rvu9adU7aQ;Cr5{boPFZN
z32EKBb!_Fzl{4o*7N=r=145@a!D}@(U;qFBC3HntbYx+4WjbSWWnpw>05UK!H7zhW
zEif}wF*iCjGCDIcEigAaFfivaP1*ne03~!qSaf7zbY(hiZ)9m^c>ppnF*PkPI4v+U
zR53R?G&njiH!UzXIxsM;pNO^q000?uMObuGZ)S9NVRB^vL1b@YWgtmyVP|DhWnpA_
Tami&o00000NkvXXu0mjfioAsT

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_ime.png
new file mode 100644
index 0000000000000000000000000000000000000000..433e5a74d3f6b4e296c234380bbee33d3155666d
GIT binary patch
literal 1864
zcmV-O2e<f%P)<h;3K|Lk000e1NJLTq001li001lq1^@s69)wx}00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u?5YlW9r2qg1CrLy>R9M69SW8TlR}}u|
z0Rg25p#gaWh(Ie~<e~Dgyrhc;mByrL>k3G$wO!COO`4Y0gvSCmJYo%O8qx<{xUfRp
zAaT(&p#@abloS!91_j3f3p2EUZ~C1-=Zx23&~bQ77o6ne&ir#9-~Zk7oqO(R+PbaV
z(zdX$pt`}!?!fXQphk6o7fCZPmc_uGI#Fwa2YAspG6u~hc}_nRz&qjB;6q;WtMIe%
zLKU0Co;-PCgj4$(ei()S1GmB_xLr$^H3`EgVPb4Xm0>fz0Unm4orB+ikF(!dW0!Ra
z!#ps3!YrE?0iKzeIf8Z;eiMEhZh7?R(a6Jx4~NlSUuD<Vpf!1I!Z2&M+dp0e7!M7j
zqoZ15V`I|2d-o`It$4FrXs0a}%gKO%fYki_{5LW)GqYF23knKye0+RT#>U2e#F{o<
z+X^g$_4W0MgpDvd02dV%>4A-p#!HtjRp7H7PJ?b^@WjQ77mM-RhN!5hFto3(q=$!x
zhoars-QE4><HwJMU0U0I<;s<#go&^f7Z*PjT|z>Fo+)BuV~zg){?XIZ)4$^T6mN@-
zvxeEFVpk^LQhN$M!=nEijQ+M|%a&LMti{E}Jsq5zn=6y(EVs3_y+_P)@YCD=3;&1)
zBF;?IcYJ)@W3VG5BN}#6pNqx*E`z1D#^855Iyy>)T^fV1d3KWc_;~$|2L}fUP$1&z
zJK7dZc9T=hRcu)drx?S72M;_3eE<G^2eX(f5N!{!%4^vtCMHgyTkz$}mvweyVqz9g
zl9-sNMMg$CSgx$B%s|i&aZVg%mQN_hw?{`eURrnMB>PgyOcrFMn=LIZh3Kl+6hT2j
zT5@u->&c*42@OipK7D<CUnv5l@R)?>E64XsgC?-bLG?Pu|Hb*20M85$4>zEjA7N;2
zZq`y#Ql38{F-;&KL?hCfDnMd+ngoa~HC?!Hffm#OxN95&>JEJ?CmNA4J3ISFX=!OP
zv#V|0x^-!G#gK1h@}&ew3mkb_mYGp<6Sq_++~s*mXtu7du20d`#5=rLXiFKT5CSnU
zFdzc_p0-OBAU;Qn0Nnx1p`gz@KR<8cR5^`j`p!*FO`Sux@RE`eBd1vR<18sD=@|i5
zRaIrm3FwIc2`KWax+8~pr{r+5o<4p09ZgAN+1c6d118JL%97A{o&fXQ2@QG<h7HI7
zlzYSRy`RQQ8lxRVw^!ulDaCqZ#I!pCtgEYAQh<Ees5^0t(-_TR#rW&BwY5a2p2l$e
zYiVg|o&lDi_f&w&@hf1{d92h6GyVPjHR$R~eTdneJ9l~pR!jsqG&Dq^v55s}cSnFC
zGNoQPsn!c9XM1<-*b%QOX>8d>d2sXQ%?_5UtE;ozIRV9$H1;+ZQc^EWb#`_h(iEW;
z78WiaFqyLeQMi2lA^~z5GjMFvrLv1a^3K>MCnwu6S4dM+lm3#?(a|ddR!mMnq&s79
zaBz$Z0iFf(Qhf<vVfQoM3H>Gm5stOCw!X!oVDR(v(-0af3wY0-J;JgG@O>8o{7_g{
z>V-IbALbC!>jjjTCosnb2_Yh5RZIkk0!0M)gOdOU6ah-sXkvD0Cno0R=Kd@%FHaG6
zDKn&}r>_p+?c29&VPRnomTPKiTnX?S2@7~0zliLDy|=gbbBr}hy^xcWvpQhKoCN3#
z0UmWBz+7gxgEIrY%oO7O7mSI@$jDgUiT1K4Cm_<DF(f1;#%8mr0;D|qGuZurUxZTF
zIKEGwIdkTq#-Tv-?B2b5Z2&t9u)V$gAOTu<`X`9oel2`uw_7ZhpU`&`DnOlGTrk%L
zteA@vPy~33!QN)@cX0o^as2r4TwymfG<5Yc!%{{9R8K$%Fp~-yzV6)OFwp;}1FOe0
zt``m*IH2v?wQFs`ib>5X0z7~I{1;q_O>$VwqF(qNx0nQt|6f>hW}Qv$T!#-IrrSwG
zPft%JZWMhu&8}Ik*0zd@3JQ2X5n5heo_7J$7K=qhMEIkLL`|EPnwpwrHk%WCeSL%X
z?%iwLzkk2BZQC~Qf)#6MXmC_#`}XbgH<?VqcpL)Yf%WzECJ0U|D=YIh%ynD0|AqYr
zieYNnFP})F0000bbVXQnWMOn=I%9HWVRU5xGB7bUEigDOFf&v!H##*kIx{gXFgH3d
zFy}E%+5i9mC3HntbYx+4WjbwdWNBu305UK!H7zhWEif}wF*iCiI65&lEigAaFfhkL
zgPZ^W02y>eSaefwW^{L9a%BKPWN%_+AW3auXJt}lVPtu6$z?nM0000<MNUMnLSTY7
C$UqkW

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_side.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_side.png
new file mode 100644
index 0000000000000000000000000000000000000000..7504d3236200394ce5171e11edb0b6adadb28f80
GIT binary patch
literal 3434
zcmZ9OX*ARi7sr3o$i5|OmcK1q7`yDt*w--32xW;OG?cPMGZ;(CzH4O3zJ&}EYV69c
z5MxQUhESG9*&ffk=l`7Zx%Yd{y|3=~d|%vz8&<|l^jGKs0AMmTF|a+?Tj%9UOMTum
zihG;Rg)YFv@c{rZT>fu?fV>yn06=f;1BKqW;f)GHJ@7^a2%18nf&uqYUOs-F01z^Z
zvqQq{$edb~g?)YVcyxw2%9evx&{jVY&7LYIB}B(+7B5sZ!(r2T$<UCBcc3sHoRoxq
z#$hAP_>}$&&5BTQQgliD(~n0>;U&IP?Uc3Q)8=XI^_o3g(<lv*mNCmj(MB1~Sg9{?
z>1%X<Pv6pttS*LLGyq_wZMq}$;6wxj97bwtUK1wLyaPZXpBQKXqGdi&jxX+vWkWyL
z8HA1j5ra~%o71A%0o|}9{W3t;2!zJvh}i*!RDkQChx;;cLk4gaf3o%oK;sT`!$E*k
zh7bp+FclEI>=|zWcxwPPqYh6E0fZdD?q%Mi27HkL<V@jSCcx_!fH=a+&<M~n0&+I-
zSV@2?9B>^F5eWfeashUuUAX42Yjv#aQs++PHfj<?)eJFCv@(G-aJa01#E2=^HFg!Z
z3vPM3vR$FMJPH^kmalt508p69aenRINyrFu-N=Ya5}x_C%*K1_Ghui4<<r&C>Hu8;
zSPF_9Kb3|wT|sM5qy0~duWnO$-(o0yNJ;c+WYKK~3dytZy@3CEV_1|zn3-8!S@~kt
zqwnPQ5gu`h?7B^apZNWW)I6pfe0}##6r<pRF{V2F+BLLqQOY-(Mi=8gx0Y;t+`@2n
z%>PNa$JCvGkYZo9VGB$$$a}V@P%50DpC;LRb>i&Kw?*kAu=b)d@cOPcC_GiB!o>sp
z+gzL#5k&k(0f5~$ROe?2S}@u>dTBKHY)9wBxbP}~_A*TiJP)9Os4VPblTJS^02mZv
zq+aXs?ssxa6RG(+FV1x`9J{K-=!^Dr>9gw7-$C=;ca^M((wB%Ge$6lC3i+(duSB%*
zj!h3>mhG}{W!4H{`Rhho&?(W5p`+3ppuOxSG#d|ce~J)EqUFlP9tw4uP_ZS73Vw)Z
zw-Gi^RW^~geF_t_H{svax_?0}&e`Z~s>T4I5Oo~eZY-aHX|&P$%-9SiRH$BwF)C&l
zyAvdzm&{q1KX(7k6|H9~MeAeL-Ym1p+R%PE;&*Nu#U4L7*}iW5hU?OF=^ld(!ZnQ5
zeOF#P)PUO(4m?I1f~nXrhD16Qs$hLVHvv5pgayLti%EqbpQzHMSvplZaEwitxNv%f
z`5Upfm;Ur{yDP}YAxxx2rr44%Ls-M(p*^aiYza^WaYD)k(}q{D3APENiF>vpWa-L$
zC6g;6=^tkA_%_n0Wk?HN8^EsMR=QUdS9n*1cAe;P?z(}m4(+~4*nYfg#<R-0s<cY&
znWLa*Uy^4#Ur_|Rq?~+HzqSZ(TW=FraarkMp4xCUr>S{qZE@zOE8bk*6rcL<L2ob3
zX9`$lkHIGf$;RKazk~OK8JS`^qWj~K5<L0bG~7s@VD9=Hi!z>1i9G!<IaT@1ob_Cm
zT$DXR3NQ7TBlRPFrdg&~Ca)9(R#{b6wNS-izh^%PORl_S7g1+quV}YiN%uLc+P(^R
zW7Ce;4q2&D5m$w*K*4lgMLM1&P&;;8bX!AT*%UV1UT*IbWboi=3XvA_WvY&Sh*9nl
zYZ#t+{79-T=Y+p4QLC!5NDZoJrU-Ac-OKROp;^ueJbV#kMYk?dp1l|Obb)<G@|z@Y
znUV!T-qYE)Dl0n+QEgIfQ*FH2p;EV1jw|ahY;!!qFzfZ3i93rMBa=ri;@0hE?B>hq
z%Q-Ez)DP-pt9(m&i`oo=-`^|W&MA0z3teD=DqjfgSpUlx0Xc!4`2Q_GFlIzhH!+G*
zlNd+1HG7o<QJVaae$p=+s7tplwA3xrEqf^@l`yVZGHLYOh~=42pYyWlvVWg{Ux^sC
zn2?yc<%Z>Uo~<RJOtMVFLc^kecxbqIcq&&pUrT;kVLg96e>#7$#r0;$O=)}uzSYyT
zaph*2<2Jti9`>f1V=2P^rc0AiEw1+JR9kIZ`K5A#Rk~Gm!4$Il^)LJfd}RyI>(wvR
zq&mDmKEe&@&V_90t?S-S??{h$8}a-^i-sv~hPj&mCV%9EH}~1q9n=@{MqX^|MD*@w
zks(OLDC_7K#bx~ELCGE;oL&AWV<Z=n@F03GJ~6>OYEU*?TQ;A!Z+@U-#VqI`&}AuX
z;sBT5l;5>gL8{+Y+4k9vn|nE=^is0GQSrf8_W<;(&FZ)g!^=!L-^H3pYp68_*}N_S
z@qnblYo}kglm=H(+;+IMe{0`=xvagcsk)%B;COpTmDn=SGHBh6D!7eZggy~DyK@$H
zHV%}duY!=^1dJZW>B7-r*khshNjmBz&)<zRTYAq533?oQ$x*dYtDUt%-UB~UYK184
zIU}hfKFrt~k>97rXx!G^61yWA#j$Z%c&tuRKs@5gxO}#9@c10`!J@%mgDiuEe5Aa!
zTD^>!vXpj}>|M=S)wfD-b^2tz9ET<mIE1O6IiH%WRGrE_zjuqrTYGWeaNih~!?|)G
z11<rfMI&AN*mBNFSvG0)EM1FutLqs*^;o4UIG<hJy&QZsi9WQ8zY8f08CMyP{{nTE
z60q7ek+KX+`;pqN94gwYSSr0rh!L+$X}4gqn9o-);LLj@=&zuq-XR~ImYNc%UnOLj
zjz?}F*SsDL)_7tYPkZkrwm<|jX+HQirPN$>l%dD#mwkubl$e&HX+(O$z1|Ned{oP-
zF1R+lHPrNxl%o1#=jGWJTNm3>8oo5v94^C;SnH^{tJbI)7)qjF=D2t*)`7Z4v-K%n
z%74<jdJCRi7ug{eX6cK$)%h{1vl-;O$zV^vijCNuo8EG<MnD`Fo8A7#;&`<=5}wwv
zlen@uo_vv*3t8ojLw$UoJD2gMvbu+GXVh!Li@dfVQ{cp$Rh7M#&3un(X7&x!qQjf5
zgWrZENcOM<sVy20C6v6^Y;E@}|1dJFp#ysb+lT#ysccWoH@i(A-W%WM4R8Og^kb6b
z)J{3k{_u`u53;wM^qTZMGCgXd=+q@tkq@(u{9S6T`~$c8!4u#U8WCpvG~x3k|AZFI
zHhJpWrZIE>KkrU)JHawcDopmzU-W$w2`~s<AyeoUDFRIDvyYyI*DTR|`sWcpk{@zc
zKW{hBDBmvc$jRO5t@V)h_|(Qi*s(F`AC?zNnvS7nd$12av*f5x>B!yDXShsUM5OGW
zIag9KK78F{WbrNwYUeF$(9(qAS>n1zyT*v~ZfnqPBWd+AycM2TuYTKqBWOeOH2srx
zf7^?;ygGujFJU{ZqdDA*Lgp<{9hu+n2>r!*HZ@tGrZwNO7lxwrQVte5=OgcnpNtH)
z%>;{Y*S1@?-`>~V(wl+K$4%-uoz8vPnR{}V7+knFK4(m!#zv2xrXD1-KrbfeCJ)9k
z#cmc{*H%;ergQ&<d|VD4y)!CSz;#-DI#|cW35h(M+?*a6&lxYu-px*b@Bg^;WP`ZL
zQ%~ya>JxbPAw*IB*1p5hR%h^BF#k@;B8&CPW5Fj9XWoAr4(!ItkJ5S4)6b~DIeW(*
ziZZ10e^b!I#MTl3!ma`UIvN1}oSiEf03ON#z=kUTsOJCx7b@*`uMq%T$TT(3gN4lg
znA7pIwBaNE+VQn7^?`<*${dJC9X4GuiY}T6Qb1TxCkmz_xTWM9m42ymvPH!t^$5D9
z3A_D7LQPClOrYO=2jvf$TtrI=>)P9td?j-JcE`)$un_`9xjxIbYj;{0^Rp}e-!P!M
z{vSv?-T$#DI_#achhY4Sad4#yA;&}B*%K{YX<I?k!Bvv))B~6ibdSNmFSKAGct@h6
zD_D-1kGig{mGeEG5g?)IzFrUL>uo;#i@_1S(f>Sz+dXc>MCgLKsRb@*HIzs;Uirxp
z!rNA6l>4)JXmMd2?3|!>0v_XG@T-$V@f}jN19hNv48$IN8{~Y!frgme`V()_kD^%v
zTpI9<pm22gnT94Y%#{_vUJ?lh-XO34_H*SQWAIC!PDX2g^>Dyu*z)K&*_xqj&0gA>
zQS8jj&92AsOO`HWOd!n2H@26vn{n;nAIZJ<WCB2lls|lR7qXWr3ptTefna4?zJ$<7
zkpQ;u1CN<o+@F)FvmD5&o#fWky9sI(gC9Zn4+OXqRW&!`QL*LeCk?OfCHa)2CfIKT
zxwwrDbkw7$4|j;2ru8HRfpEKHtQO5JxKGuec}uILsU8PBM=O^T$?W;zi(#rYuoDJM
zYz*-WtfC*iTjqrP5xdqqzYg03*7}&sG!|ll8)_qLu^Q842bK!#6GDMSkIRP3SMHy!
z&k_&0jE^M(ez6!oW_YhX$Pc;&VnHK4Zy5~laLS6GbwERwEdLEQTle3C^F3Dee`t|B
acmNEUJ-sYgSzLP_X28_Y%Aii)HR?Y<LTE7n

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_home.png
new file mode 100644
index 0000000000000000000000000000000000000000..0e2a14d3b54b015006897989e479cd7ccbf5185e
GIT binary patch
literal 2470
zcmV;X30d}uP)<h;3K|Lk000e1NJLTq001li001lq1^@s69)wx}00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u>I4Xmw!2kdVg-Jv~R9M61SX)d~R}{V1
z0R#kTwUsjQ0h(yUC`KBKei>hB(nu4Htwt>tgNa5(n?O>lrbz+Y_+w0bR1;G_nwa=w
z8(*kME8+vR3Sxa5gc;s5<M2>?PS?8ZbGZydi!ihwJ;@H2bN60*&A$8Wv(M4A|I6_C
zd{)sRgCI6Yh@aTxoo==HuZSu#JreQLS3hdtiTg#<=0_v~G8ytIBm=TZBtzyVi;n+~
z)q_qvK!lW&aL6Z+-H>Y#C&UeDg|v&b%A8Ylc8g88Un&JB;ypx_&c1{cL!Jn!Mo10B
z0eSr9&6`RJpJlE_bXvuxSTMqa7VRF$egr8H$1aiqF%qm2QuQ+L7IDd34Rxq1Kfomz
z1%lZ>(g9XKpVvU@Btmpv4N=aUA+@hwy}HxV(o*E{curFAe4cZBCps?L(3Tj2RWI27
zDc2{m$~YI&CXN-+CPuNfwY9jctnB+ed-g1yF=NKesHmtUz)Yg>nR9$c9qLNtn*^g;
zFo~TP!0%fTR*@ypGXZyqBk$9vPfJdmII+QQx09efG&FPs{=Nr!SJ(9z3ZFR_5)#69
z_So3iq~phrucs|BfaR1FsTLo3e!hE6R^{wk$u$Bx;egR_J$(4^$Ej1NCc`8)CMIUs
zk|j$bPoF+*Lo^MXy1F_;I5@|5)S)hIX#42Vqy3U1wNgc@#n<{?k%plm7R40F*;<JL
z|2AH{cyTM#M<TMrHf-21SlJ&uc(BJn96EH!e9p|w986ncT)1%I8>t>v9}SQhDsYNd
zK*E;X36&N6L`9d;xN_wR$&Q#icW$)O-L-31uNO0QRi4h7Gbfr@z}zAWS4H`W_zqRN
z0SRL@TT>xjK2Mc^c<~8;q=V(lmq#iaM7Y;v)yT@qGM`thSP?-?rWk#QuPX7KuA)qC
z-EtSdLVx-4r3M)+h213pO(;*L^XJb`gld?|sf>(_w<fE`s#U8@zZiq(&6}49A0<+G
zs>OFPxsVgNb<1T;s(eY6&*BjAoI7`JEmVv~hq|e$seLA^#)1V46lr4G3JVKai#-;<
zPsl|$*}52`%$SSq_3PKW<&!*?=w2Q(X3QwHV#kgh+i$XJBqSu5RbUhbd|i?#(|0Sl
z>`@hi9L<4(uDe_=&EarFK&g}~SGL>cd-v|;C?h&ZN=gbE;VDz5Xz}s!X0YzxzfWJy
z;+q`)sIRXd;`MqNRNWe3;}?MV6e;HH3!ETdUr<o+u_8Ql=+K~%RU<k&+9Z7T?Aed$
zQz{1g4<|S!ksCRhM$8c?YHe+8i}380#IJwx;>B&$&5<P~CEDG)cXgyj&<T$oJ=(y&
zdiAQdY15{W@OfAI3$_4maw4}bdF<;r%8>9H+1HsvF8p6OY0{)2Ag!G_b4Kq6ufH8w
z)cTe!TeOsvlqf{<H>ncj019nu<qL;&BMjv%Uq|E3Ue<%p@e5uXiYHH=95BMijvZ6j
zA@KRDR10!w7fyi*Lpj?@7|JAUd<tx%14h__ZKF>sVMI7P5Mg77bGzN^EG5nT{Q2{O
zw6wIaef#!lH*ek?Fv1lT75ae#2ej3zSBKH3w4g>xfYbUO38SnnMRI#&(KR61E70u3
zU{Pq5m6bZcf=(8TOslG@(jPo{pp}-Ez5}0sN(012=OHJxMOz6EqG54y@k|)hN?BuB
zsY5YO!Ds1OR)Rc;O&|0{pUOYEAYe14&*}7k{rYwN)TvY2%9SfeAc{BS7qWP_LHR57
zNsw#Y34=zISj1Fo2z|p>Ql;p-0YNNZw{Bf*QBje0>(;H#l+4M=G1@ph>Wz(!Kgn)m
z<T3u9Yieo=!8|*<?oCKP2C;}qZ2F)t@k!s!m}etx_{_`8>og1t3p00{8#ivG`8Oem
zL@J{JF)vVpK~}m%n_zcqy71-G)GkYo=HQn5?AbH@&Ye5jtXZ>0A)l_vNuXL*?0Eo2
zG0#=2*B{arvc^IN_7MF4yZEBdMsgsR+qZ8UeFTnIodA)Mk=nR%<IEEWe%aT)j$?VX
z<*b$Kci!t0X{)UTE7x*%q%;c$gA=)tW0x^}_;8cJgb5Sk(IH)uL!vq&d90@ZUmq?#
zEJUrBGwFiu6ko39=H^QiCr*r4HsscAOq(`MfpYQL4j(@JnUolHK&+8ob*0Ly-bOn>
zRMkQE3&Avfz-RrDBS${hIt~m*Wk^m=4h+nGmjlfRi*z&=;CGhPP^Vfh4EC*&e$i4<
z*Zm^t|6UW@T)|RgjZ`QvFVE$&%FoZYSvdt9Jo=~;1<qYumUbKvd4JF%pUWZX!F)UK
z>$pk{eTxXQ-Y$R?35IczBG@hPb$~w8)6<QTz~=rRk7ElLE;OCk?RK7O6A0w%xT&eN
zTrqJ)^Q6nYKNIpHB+A$I`gD-YeJDC-C8{pjdL43+;uW$9adB}G>c=l$ytsFZgU5IE
zNfQ$jqxfU7&*uoZTP^}s#67;wd$$TmKIDi<zRaonGmna>*b}Rc*z`ePDs9lr_j)lK
zW8=n+CTTR*y!43MzkmNSxzJ-|n<PSyWh<?bEnP+4E6)w`u1c<E)kUJ0Si~eYee{{E
z8dk&EvuCpqzK<v*p-I}>-rjyyKCRb6$|3i_l_FJ^3ezCEF4_`<Si}_UZa(`o@VPXb
z&1S6DZQHhmq9*c2G7fbz`RLK3Yn@K#&)BWXWdSuwRcRIR%AAur)TIq=i9sx45}Q8g
zD`=yzu+UuX%a$z*hl63duJamoEFv|1$BrF~(D7yB!1^sp(+?<#-(S9bc^l?7@*U2G
z)2T}v+7d(I5qrQ!Sy`D$eDB`9q2tGoXMS@lBKcUz2aKLYV&&a%>h9dRGfdeN>t7vg
z3)Mg*ZQHkR55ws<JUcr(A}cE^V)N$B;hf{UKsNu2@fYxqQ7XtlFFF7K03~!qSaf7z
zbY(hYa%Ew3WdJfTF*PkPI4v+UR53R?H8MIgF)c7RIxsNjF-_V4001R)MObuXVRU6W
zZEs|0W_bWIFflbPFgPtRGgL7*Iy5&rH8w3UH##sdvIExZ0000PbVXQnQ*UN;cVTj6
k06}DLVr3vnZDD6+Qe|Oed2z{QJOBUy07*qoM6N<$f?phbPXGV_

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_ime_left.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_ime_left.png
old mode 100644
new mode 100755
diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_ime_right.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_ime_right.png
old mode 100644
new mode 100755
diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png
new file mode 100644
index 0000000000000000000000000000000000000000..69a018d190e3c5426aba8cbf5fc134a8355f25dc
GIT binary patch
literal 1243
zcmV<11SI>3P)<h;3K|Lk000e1NJLTq000dD001lq1^@s6z8f;{000D{Nkl<Zc$}S8
zTS#0-7@j%j?4^5&yXvlMG|^&AyyQg+B|ccSlt>694}vd+#D~H{snDW=)Iv$24?buK
zh!m7UUlLUCLamBWLL?z1s7OR<1dVI9@y70U*ZaNSf6koax~VDjz{kv)^M5n{%zWQ}
z82i7^!omWptgKY~p-_lLqfs7-L^xVDGc%)(FD)&dCT(wTtEA)OV+mjz8yjqWeVwhY
zuBu~ob#-bCeN&&cwKaBda6mJ18YBdRLHpw3qJ4C9R1ssGGB8Ng+1c6QM@L5tDftc$
z4}ZbfJON`*u)=2)gFeSZ28nNNZSnc}c{d1yc;5k*1R@B2gS}l7D@rN}feJ{phr1YD
z2Nr?9fVZL_+uz@RK(T>9z#y5*%gbr=_YklP1O(x&AcwH$=LqFpU0oU}7K<r9pN}ms
zFMmTTA)SD}5~YSVjD7viIhUK8n`M>M+uJKS91aBoS9f=JUs5_iP!Lvt==k{f9fZoQ
zt*x?tO*}t8--<SAXlUs3&CShc2wbB>*xTECg{$}x-!jc+v#qSGOiRz@a&a`K<mBX3
zwC5`-Dn9P)?7Y+0*Y`zZW8-y<T~HLoXR%m5paoQtBuR|&Mc3x_dedlDARX`l86J-(
zLzd-p=qpyMl^ZhR+CxNZT3T9CUS6K3prF8$m6hejDmKallb;Y09{NCJg#tw@8EKvM
zl$4Y(zu(WRtE&lTOwGBfXp#xEMWU5STDoj-nreS)YKo1FjA$fX*<=U39}k)ks^_z_
zv#KME(~A#+WNzYO?*l(WVqb#fCX<514QotKPc!&NH6Miey-)-p0&Igg3<r1-$I;gg
z1h+0XG&GRS$v3NU>JAF=Zb5rZZEbC|XH5}E$22%NNW%S=0uodn6e@pWx7&GlcekcJ
zc*z7!v2Zy2-B~20{S>N@o0^(55;iH9mX@-KiHTc!dZch5C~UHU0&}0v3@K_POu&na
zi%I1!Oz;ze{uYN2A_7kDQGI=VK~7GNrKYCFum(#>Nijo=$>?Se4-flsFTbMBJ)E4J
zyjN9KRfO?W7}aLT2|iI5G?`2efRue6xCC5bLh(+g)6Ei9j$nFGa6<O%>})T*lYvXm
zOixe80=^`g8!-~_js{hQBiKwX1?;eeRVe-aDi;9~`!7p$baXImSnUgilhUaqOH{Jy
zf%Q)aq&Y}QZzbp}QRxz@k@0Sj^dgU&Cpo#$egg6hl(b8URxwDr(GdJ8RPb1ouub4k
zr1v%LjnbqzV-Hlz=jP@zG5Z9m0C*#mPO^$Y6}N@gPJRHwp<fAtQI-WUj0}FG*s-y(
z6KnMJ^w3^@c+U^u1ziD7S<@cOr?j`XliK~13ig!vtBGPSUAT0)rKLq9q44v<!a}9C
zw)R65mp{Y-=s&eE(hm*{4BRBO8GfRZ$<56rxwuj9uC1)BbR+OJuz(d_^!NAQ#Wz%E
zj|0&51Y1y}2y2k4FBcUReME4(-B<B`5kCnpv}ipgD~akD>Ub(1nDPSpgp1T-QXjPJ
z5EH*6Qp(qY867s8%}GFz6Z6q8MiDOf*C$@#@k&2M_y?&0?`AyHvk?FQ002ovPDHLk
FV1m?6I~4!`

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent.png
new file mode 100644
index 0000000000000000000000000000000000000000..f810704c9aa7d406e065d76f63f5d293d9a8da91
GIT binary patch
literal 840
zcmeAS@N?(olHy`uVBq!ia0vp^Iv~u!1|;QLq8Nb`OS+@4BLl<6e(pbstU$g(vPY0F
z14ES>14Ba#1H&(%P{RubhEf9thF1v;3|2E37{m+a><Y92O0Xq)ySp&_2f+n<mrn+Y
zu$OrHy0YKrU=}oxcHMVPmw|yv-P6S}B;xSf85{i$1&FkDU+qvUO;DJ4<m?AEl|w7^
z6J;Em%=q~HB<9YzA!R0J{>a;4YU@#st;#nvwm5jdwyZE%u~2Ns(WmpCoX_R@UK6j+
zdsvVqZqJ|7pZDDCm~htAeNJhFi<wYHutmFQq+1p9q^2j==7?+*w|iK9!um)P&vlXR
z8Q&ZIZj{CfHoX?iy`q?V!uU=#m+=V&F{Aqz8)IDd3m=;vS0JPA?|*v{n`{T?%XX2;
z5>|$~x3`^t*<$`*<lXn*tP$)VN`73Ko45UU#QN*`QoYCKu3EKSr`dL+xzPmIGmV+E
zS`QrB8~47c<>T^AC9(V4`WK%}`NVLocG|*ufhh{zGnk7a{B9WZXzy9CaVpMi_T5y;
zH=TPsH_kFh*(4b^alg5Kr1AQP=FhwiHJYv0*dsETyEswrOzTbq@n?r(W<WUqT_cvA
z4Ln{rgZJNx@F_Elv=e0%pB}PHOyUU_J+|=J>fGD>k3at4S@&7)_rrL(YGvlgBQX&_
zF8!7X^-Yhxk@2L}oJB@3+3NJ>CNBTBlV{UDA1S?SzN4-&w0X-RIW{3@<!90sGLt|2
zNlaK8)OjJ*=duawzMP8r!DlwKHP|=nEWVqk{h~qXX_2K-c!bD)xio9BZrQNaSA#=C
zyVtNc*l8*W-+b}m@XPY0mtU?|EK-^{;XznTg3TZ92^O1{%gyvT_CJ4F*lOP}&q*yo
zE4Qeg{>1m1@xdMi?wKd%l|DRrdbu3~=f$_P%x-fX1EwO?64!{5l*E!$tK_0oAjM#0
zU}&mqV4-VZ9Aap0Wol$)Y^ZBsZe?Kb+|c(HiiX_$l+3hBGz}&eRz~I!4exjLp9X4>
v1lbUrpH@<ySd_}(n3A8As^FQMn4TJxnwU~qcrq1~ycs-Q{an^LB{Ts5Vn<fO

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent_side.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent_side.png
new file mode 100644
index 0000000000000000000000000000000000000000..db596cc4ce0e423acd747c8f6699ecd7253bec96
GIT binary patch
literal 3209
zcmZ9OX*d-67sr1h`@TzDI|*ZV?abKMFtTThk)<KZRvP<yNn>Y(vNIJKO_s(kvS;72
zhtRb|S?2G)```OKpYQoT=jHjH^Wr4lGSjD{zD5lIpffbkvApy<mvW&bzpNQ0UG<kn
z<!@jY2mlSsKOzBn1)Km-o8N=MZr$=i1|b8zkp6szFc_cz1El9YUk?C6W-wL=xYZ`R
z`tiac)Hnf^VT`n7qvW%MCZkx>Ma2237>yG6i>KKv+L&~8$+&xq5=c{1Q7LQ|60}Lw
zQxvQGC8^Ob6O#H)m%?BAOf(;_4_q`%YHZXTVCsh`2$Zy0267e(DB4OWFVolPp3d&2
zRVl4VY9W8XNLhcEKk!_T1e`>usofMHP_zP)kTDucKrqcGNMDa9GHgL}9Z66zB!r;!
zKaD9-tUxO)6<P+g^hi*c91$x}L<U^?-Q8BeElJ=a`gDB^pfD%7;UvHzgP)D0C>`*z
zcqHfmFI7-8bUR5G*h&LdPvcHyFeM434Q)IPz?()u7-XcW1C+Et+9DzL1|SOuF1><+
zAs{9fu<GsGsQrBt%eWzanN)6_8eT|QH`0MpGJwLyMv7N#(2(OMtD@@_*E}t$_Rw4|
z*+_YYuLqw2C`xC$oc7>6WRM;^IH;J4qj#3v`bbU`aC2L^SR1PL*8*TEC}QM70#bhs
zrAm(SyC@OfCG)yNQ}pmS*|Uy8s{s^k&e$CI|C5bw@iYAN^xEp`lu;+t!L`rk$pxa_
znP7A7`zu22?D*(w>#|U!tW%^u*~!=T&xa<Z*N2`{#kkF_r|F+H(h$#h#soSI-SD>J
ztSc7G0jWB9DF?Ep0*TP)H@bvJiFcP5B~D2-78Sr7Zw-?0bjb=QchaB6qKvjdgymxZ
z_M4DxU&JU$QC`tYL&3y7&2#-CVSw^9d>(LlfI31_@V<J@9!daoiXz3|XmcO7aY_)#
zueV*DYoj@HQH+5Kb+$tpq11O#*B`jtsELA##SOgS5qE)n(c+OOSa`*u{pqFJt>4qD
z`!oD@r7Ua{YmTHM)9$5Yapj*$AaP5w6-=e%$c;VWZ!;icP8Q<(l)!2sV4SXCAY+*X
z=d(88*;jvXMLFJ4??bw3FOZEoi)+@G$%w48Q2#>P0K-=(U5n8xp&7m#B$JoMUX(xl
z;N3O#6vg6=;c732nKTVpk2K*MCxu+6ue4Nm2lVZq5>#mS{<i`(wAJ0$-rTMsZAv_H
zA9@>1#vG|jpi(3YhVr@cY8%*^*qTilRPbFFl4qKsQlcV_v1k_+Kvx*Q6ZydOtCQ1B
zRwmxoKtgbWIgJIv7@h#@R1#uNgvpBHpItG0`wBkFJgPT(-%@Z>qB39J;F=)%)689;
zItt|s3BH@Xv8$NXj#ar;?p6MM2WpI)R=}$ht7S3EK5rwgHO4jhHFA#}S#9f=d6x4P
z#c(EtG<#@mG0yU}MSKN|{KGuufoOI^<I>ua%&}`;9A3xwUVjVvz%-x9YnDB1GupqY
z|1J9)>0vM}T^w6<PXa=WE1#2s6TubC`8vm>jB6~Js|PNvB(t5fk;{;aw6+z;i9cpb
z@1xE%$`r}u7KgwqtIDbts%Weatoz|<m3OS3VD+r!tX3+izGPKfS7B~#TX9<<Dpf1u
zs}L1PxaO+}yYobHyAG2MbJ#13qPNZ~&E0%7?p*aD68t`N)o~9a6*@)U4op9OB;J&B
z&eN2vUR7DF43jgGv#GZ{$neypSjh=EDF`y7+7K(xK8Q$KVBNd1e1p48-UKh>;pkJ9
zm7Qf<ZBT7dt-sx(h}|j2l(pzK*_}qxYxfw5I*RHe(gv?$Hms(t=F6$e*-h0|j<8Zy
zKBe5nO*+9J@0ai96t><$6`CN+7eZS$eqVnAIftM7{VqS!r?n-orxhZfr5)r{>rx0n
zs_{U2X8*Q;Idy2kN?kKuvzKDh@gr(4$MycwV@SEz?YJVe;@9oh{ZfQngkQwibjx%%
z&(aiMcB4$yMAf8c;PXJqz(lS>zPik$>_+}Z{$&1Qql<lry#%fT_uj*>Zq>fbZWq^l
zKh|E^uGH4r-l<-%7E>!c(Nx=1&Qy*!Lz`6>P9Qqo{EhpBt8C<Yvo=LOi^cijp1301
zI1r6p*p6Lv3;M~2Cx4x*Q_#gv(^vD@^F#!`d%&u4TV)|{uwYm7N!MZ4CIn$S#5go1
zw}NBoztMRQW0gOqkKjPy1EUWTk`s-i`lYfpr1H7D=X+aLje?E>oR-2yk1+Z5`RzLu
zv#)m*ckk`S&%O98|KdiWom}8>M=$KF#oCA_&5KNFpT(L8bC`J~qG3Z2;tol-shxb&
zSQ=b)?7GLH@l)f$ixrI(HKhgF1v}@@N`%JV#(wh-WTA8HBJ8Ok@h&lpI0DL1!XyaN
z#7ON(hbyNiVUPJgrfRCpdi<=L-qB7e!fUf>r$yC9t+mzid-Z;QR?C09ku#V+c#l5z
zR>Zf7VG7rE*W``}TG80}SerP_RR09qYa=q*3c(|Du)sx~-#S@33;75cbLH2PMhfB@
zRZ`w+GfE%iKWKJKdD?v*x5d~R`WjzXmJ-J*-uG=?Jli>lU&buctb}vqKzg10LyHI7
z4`a*OE2WqvRI;>863qV0_@T`xUcsIsyw4IWoJt+q&eM(%fQ%@PBuv2^#d*#44a7~u
zo_|koRtOd9k}H*1!^enLK5I6iGnvm<DP+%k#OEiguF@hC{XG3y0JMtV6pce{A=W(~
z_1AdB)?IYnPi}<pW>S3esee{;)lQNc2QB*sw-=ifr>H}C*m!;%NbFP2sxG`au=BaT
zZ}yo|!QKnv4s$#6(sNvCoUx50kL`L(jkj{0T0rP5^$Oe7n{l_vYt-H+;l%yM&8v58
zvat~@B4MUJk$2kqqS_ire70$<sn=qkY|l;ZIGNi*>=qkbf5&0CHP{l9u&lEj*=$dz
z#O6ZQxZ{z1A9Lq2-c?q2;_nW5j(TpcFGv<T&}UU;uV>TWr<<O6N4I$U-OkZZ-C0QX
zfY@wPG!BM;`BCkCvq$--!2wlG_$&A!{5M>2cXYnNb@Jr?$S!wy^H2Hj<FgLU$LAWK
zT4$|EtWC!~$30FBPwS60v58fiCt0U{PPJx!0XsdUqon5)g7mma{FiZ_QFXXw+QiLm
zefpk1S}!nr!IE@}bk=_rbT13~>x8au9#btI^U|rzJW2_#S)v&G;}H*n2jUIQ+t1U>
zx5_(paC7)z{#j#WVrwDnOn>$dh5~styHKM8_@{d_n^9wE#QsnUCKK}{Lh9F?%WMfQ
ze8YWk(VGFe_kl5JX;hb(yrJ5xI_S9nK4`ygc8$g6y-nV06=%P#pe?lv^q6^1Q$bT6
z7VqeT-wkVN2=_eR<StYioIh*{{hOUQF<z*wKHqW>hCJ>%K3Zg-k9Z(@KG@$h9W1(A
z+ic$Ke5kdfJq??WAJ=ran48+0d+JRHE;<;Q(?2GUjUKv4KT2bOT}{hP>yM+0+b;Z5
zLs@xQ^TGM%SvhRz?vO|!$3@9SKbC_X5^*xVJvlg%Gg6$rpN;<L_qg<Yi?Gf0dbYd0
zo455-h@8xw!`r7jZNYQFJbNz}8O&E7^F0+Kdi{EPWHnrVisnM2iDaZX2WReblCzip
zCZD^3r6~Ym!T_M60r*9{^i2RBN&~Rv0)R>m0368Y&Ru!{ki0Y0(T0c2e4mpsBGqO^
zEj{hBrWHtV*<g~;sS)7S8d{^P@l``LWSV+Ip6U61x9-#tzCYncVL9E(RX~hK&3C5_
z91M{A{%-AAc0g-|ESdhBSf!=^!m$wZA0V%epo^1I{ve18drtXylKLsh96&}+`i_!u
zl8)Ig1s<Y*RP!nX69R@S>_9x>;i}h7whM)p5^ur1M~!*b`3k-Y?k<qA?kmHjEG~Cu
zRYIu>NSxbVyw_-9CouhhbDz<kfIFj3lVrt>1hXjTi7?a*Id*h@k=#$JoZ$BxKZEu`
z>kUZ!$lDV>R~W*N%d?$hvFOrO!RYaFWXAea!N-n)Un7@72g-j0n2t@ia}gK&ss3m&
z*XNl?;#COzTCn6$mT){wa=Q8bmgE`b)D<&M-W=TqlONo|DO1;f924Y77JV+>Dn6ne
zO4{FjeSvf}$F}GH_!l(D_WuHDruu)J{XbqVmq;W9c2OEE-%T`XFI!-!Yo>#Rx<vgC
Dy$S@Y

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_search.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_search.png
new file mode 100644
index 0000000000000000000000000000000000000000..007faa32385df888f554af2e7e08ffbd0befc7f2
GIT binary patch
literal 1457
zcmZ`(`!^E`9N)TRc|?we7=?qn$|Uj#aXhw6Y_pVCd8}QuO=V-sD;X6^*id4Z(GZTC
zscCaPqAm@MTQkEbF%wz39xYdYK%aBI-_I|f^EsdI=ZEjDfYUx2s{2#{0DuM@=84+o
z%I&!T+PS^UEGVVhq@Un*HUUk%n2;E81q*PGCPrfS!|@R~ED9SDO}YFUdjbGZM#DYb
z1Cz#NqCtN{tYP1mQpng!935Y@!w&QZG6$)d1I|~qx^iF?_V%Q8Z%^T{QJ(i$N2T9a
z&)@~%?x9S{&1qK26eFW2Ge*6`Uh8a^Hi*<&97a~S3UMSd8Jxk4{Gd3+6GENkh@`dU
z0lAE?_cP+J;SggU*4z<&biR;o!~(O<9IS|<_n`_=Zt%R4n)Q-!({zfjnYQaLfggm|
ztydtm$Wek;Ae+$Pgy*?r6=qjrn8zA~3kPUAuZWALuE!(Xc{5*<Hs&!qN)p%DZEc@u
zG@5yBO-(ABNQ{k5Zsl+|t<}{Z)(!C!tyT+a$-0}jUq%x9b6RCqyC!<3rlv4LCQ|Cf
zN@n?Tq^s;+27^&w0E_N=qA_aklKT*>tE<p1^5IW4G&GFI5s5@vSopoV;=23Er=%|$
zYggI(_QG11R#sMA=vuD9At7>sAikU`TU->A)hdj{fy+l=6eb_O7j}-rpTjeqatGmd
zkE6;LSy!PS-D&IVlnxQLt*UCqj?x}nhmbZDS@@(Q6cguM4!IhDl*$4P_+%UoHz=5S
z1@b?(PcfulB#}srAiPLOV<xI9^47@9f`S4gT)Q+h_eQh))eeclH5i#pHk#`v2oH4Q
zG#Q-GcMd-8q$3K~w`u8uADbaGl8|>mM^#~I?TqTE_ebWh#N>|{OV>t6M{ngu2mfoJ
zbPq80iJ)8)le}nvee^9L+d8#}T)6SRytK45Ti@cCUqyINyuNul)dmW^w>q3N_(@bu
z4}+MQ-qre?%$+FdzqajA(=#K?e0b9vKkiHgnBTs0=daUHC#MZ{py!5m=yWLSAFTXI
zR9P)$c6N3mfo&~P4E&}K+zPib)9w(aH8wO{a&1fx3JiR~n|yu}FzUBc@U7xwi;#>^
zM1sL!w&=L0NkNQ>55V?jw<I?p>BOVnH*enbuk!_LHapm=KQ`Vmh$r{`es?zAi_7I|
z@F``Xhtfb<9zRZaEC%5nM2iax=nSjKJvWY#Y&)~IPj7c57&)Mt#RS6HkdSuMC5#?x
zDL12|W<OIb7B}_Gd^sQH-6d+_$}00%DWf)ga-b-vF_a>NrEvRH_4Mfxb|ztl#>Q!r
zix*L>%eycOz%zowvFF?Dw?Q3seD<BQ1=LeUn-;q1sfRbQSd`;^sU5HsVzp7{Q?x`K
z#(g>o|8sb*&CAQnc)<$<x<K`SbhTt<W!;U9i<_iqTNDg0^BP**813tNz3`O(3<}0r
z_4S*vmoCYuR%RwXcm$-K$8#-Rog|bk!9m1fu@W>+6<1AQpa$iHL=wqmP9}T7ZfQB1
z`kp#slW}q?m_nhXS?XMI=4ES{==xggjL0EU_bTdkgR}GV^Ml=z<&?JKma&=%^yZvO
z$;eeR(#D#vc2|=aY#!T+NVHWMAYm+r<XtF5aAliwg&KU!I{;(ja-Xp9lFDID{$4eW
z!(cE#x}$`Z7GDmS{Y?Lw>0QU4e`lMoWlkEJcDjyqsX$EnKh8%UXVBmvH<B7-K&?Kn
zN=)$s_#?FryQqSn4LlG4#|6dBdAZ+eKb{hMSOOaa8Opm2y{}PzNQ}>Mn;sRRHJjh5
zWOiB$<bN}nOoQHoTk&OkmM25Tb)@~5S-hfpB+BKxjy-Cy(#$`uZ|b%0;NB><vTvvg
zH1^>%(MJ#He=!R`&uh!R5197cD1U$k{_=Zm9ZXY&0@i_nMYQ+NcKnpVy-s^JdR(~i
EKSW}=XaE2J

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_mini_settings.png b/packages/SystemUI/res/drawable-xxhdpi/ic_mini_settings.png
new file mode 100755
index 0000000000000000000000000000000000000000..78bbc25b5b43dd93512ff5f0e4f2bbced1460076
GIT binary patch
literal 324
zcmV-K0lWT*P)<h;3K|Lk000e1NJLTq000sI000sQ1^@s6R?d!B0003CNkl<ZI8UwA
zy-EW?6vgrXK`TERE5SmrP!O^7C42<66f7fH`2bczECoxGNAM+51`)InECeeXHI;H?
z<hqPQB7~i-mYsWlGkbPsMWsvsIku00<*0d)bUCShB4j&_y#sU6JOUOZc^vi!vb_d8
zN&2$A4%`<_8<HMu&j72E9)HIh$o5J!z5+ME9<W$IZ$KZ|1(tvWKc|`;x(4>A%)Te-
zpn+^}0mB>)@D8|&`$J%}m?-77E$Q}WMYd;wGvFk{60#%dBWmV>L53yd95|KqS%%$<
zY*O#Bq>Fq7wmU#Kp7kX)QPhR1y;`-fBh2=nKcG4rGO+eXq}<W14(%AM{cmK-Gsic_
W9E=nA-$60}0000<MNUMnLSTXzKZLyi

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_qs_brightness_auto_off_alpha.png b/packages/SystemUI/res/drawable-xxhdpi/ic_qs_brightness_auto_off_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..2697b5a80f9080f0d1c49a44518ffea6499caea5
GIT binary patch
literal 3494
zcmbVPc|25WAD_X9DYBL9V+<k8!Yn4k>=I+0vQ%#dhnbp1GlQ8?NR}3)(sq+Im#$Kl
z6iJ%by^2bUx@{`l5|yk`q<3`dzV9FRbN_hH=bZCA&+q)c-{1bn*%RpRtphcMf<Pc0
zpEdMg)f&0*Xlbh6{l}6Bs>MXg2$P10Vx>tOF#w{(h@t?PkAM>g1OuEH`L-K?2MDCj
z<*~!0VJtslv`FB>S<rEj3F1{~5Xi$z7SD;^3P@p5Kpam<f`7Pt6%OOYkl>+M7K#;5
z1Gv033Na9(@MlLWwnn?hz`Z<S9x|eeKmbTNFqwcaln`Yk_%~jnYQG>x!eQT3q+3bw
zKb;C=1;S_|F#yB5xH?Cp&}bMA=Yn>_;&5mu7zTyLAW^Ct=ZtnEVsS(a9`^l$tE`D*
zVu`_Y=674F6A8|hO5=%0WKvR+OOmULNF0YmySuwDa9}XbDh+3eTqxzpoP`pb9}ILr
z5-sM%OL-z8Y=MyzB}$Nz;3`l53_%djV*N!dlzdN=DrHC+CmxA*K_LZ#g}A<HOQgZT
zf8F?7Z3$Z*4<Lg9i6}uFt*S??%@43DcmHf?K~d!mF+j{y6@|m6i=q<*fKci~C&5);
zTw-`JL^PIw#baG*I4lN(BcRa)Jeo;xC7|$VDh}mF!2jU*J1okLNk<cy6co-~RSAYG
zm4J08P_Z;B9z(%1Ft{IBAE89b5k><)?DAB0zhmA15lf_r0ghB8W{X7p9~}_L6-h-B
zt|%Tx3&FwcS)6E|a6#a(P@q5Kr2}GKA`rtAiv+N587A`n&I47HXf)mpg~y=2MUEo4
z(y$baJDP%G(r66$cWli6lQpEu8RSBH{7<|55UF}_Vf$C}s}6sS4<J;{j94`s%VTvA
zAdq&C51qo6J$biDJ7*a~PY@R4zA-GpxFt{+m=gsTS5@tXm8{wq8j0<P+gVoaS!5ZR
zZa^-#gKmLC>E)3|1{AtmndYl|8aAeZVc^5B!t~fioCBhD^Rs=cKi-rEOc#6Ar#i~R
z-+1+I3V9H>E;OK=?PzPzX@&Kt=i9@A$kaV*>G#m&vNVsoy=4CBpqx<3N`uyptKA5`
zuY!DOa!Kj3Q8q>+)7My^8T%y_anAr^ABgS)8lJ(}bXie$_q$Rf9s}IPhZOByOaTkD
zqP1TbXfC>*YF1i_IC)>VH1K)kC}w#JRt9PK^+jTaZAPfp*<}+)4DFKV<~53ftZO88
zGVb8Zvy@dO&(P8w%HkHP^#>#6nB~=@{U%=h%@6g32}=MVvq!ydh~3a0Zh588gL;Ab
z>4EIw*#}pLxl^|*1e7Vz%3kVB9;&Blv$bF7A4iMjLF4cACL4y+TCgi1GZ*SYwDxJ&
zYj;?`kEL4W5*2`Uvk~d-j!8Ge=Vw9=dDxQ^3N2Wd3P;Ipxy!pDv)Tc)(>VFQ3u@8`
zlf@&fU8O>yu6*BnJ+@t$FQgVqbWlPG4nttbL-q9A;EJ#SkzJ1-4(w&9oBYQBi(O!0
zfAgt!2FVjMK%&Q$7?!Hz3TBnTpinmTQul#>1w2v%dO&7lN%ffti6__0g0`GjKHfhW
zt?g``FU*=MD1D}@Cp4aWpE3T_*YvJ8B}3E<{b?6aRu4%47fRbJfhO(k)_sObj50B|
zb}m>6qGtX~JyLG$_OO5f!;J05W|JcZBkgDMQR*iuQ<ro(DqUpeoIqXK7agdV-bcjE
zWw-0+FjjhseGPkL2Oxcm3&t!v-{lhd_gYGn7i*zE0YkQp23h45H8=VYmo*cXc%Q^^
z^L%2>{N=d#Db)3^jcZP1rcTRiOiGb`e7^=DEEiY~xs0Zy(!wh4I6hwdTkGz(OJtjo
z_ZF$88?I{8o32d1%TZqO1TMnZ`bP|Oxdl5wa)QXWm^h+=q`XN9`SduDyn%YfZosKz
z?S71}mZ4UHgXBqW-CB>~>K=AH^use86dLK&6FCRtRC$NnXkT!cW$&x&9kx(=&gPZs
zJboNZu7Kb7Mmb&Y<T8#Gcam;-Z^Bsq(pC;#$MgZSv@aVSOSxy8nymcHmNi%=bjswx
z)?Zy(>TBQeO$K!JpO4C8A)Iu?$&1s)hRxaBiJ?5=YTuOPg3-)?dHmSz1GQO+wr*21
zUrN>_UmCXcKV(bojRp?+Q+oYfA!ddmaJP`1Q*qwiL|QD-I;8d1sQDe@C}%6f@oR$;
zARIrHpJY+=*5o(ywiAt>8I@XCQ{<&xcQyt;FJMc#zhrp5mRB-Ou=zS&Rkh9#BYjQ1
zSiMHb_NK9e;$%~PikOnUDPn9U?Ui8HO-*uE4JOf*F?#Li)mot@iaqm)LMODV)2=4M
z+R4)yl?GwkH<%V&USyZxSv`4p7%_Kfja4Ex;jVMO*4KV5Xz`H2=n+=xOAEg@8rR2H
zo?Lgwh2Xm0bp3oY;(d|UWkiQV>n`21=}t+I+N`?j51Wki+Jk~d!W2hJeerv$)O4>k
zjc;9Viaa-M5TRkeKl@2_{l>~Cv!L6ACAvDBK5wiWIk)@#sH?Ij-yV>s)h(wb&a&`P
zsfIPyEfqJ~w)i|D>+d)?mDpQ)48W?@)z=xmULRO71l}-M*Swc_Ll-Q%bKT3VE*P`!
z%`y1=&cQ9s{S(-OBfV%%=o@=<b(Lcp;L7CA)FlWg9?_D>hP6hW{vBTfjIZr_qeQ%}
zy<&6L-}(jnI<u?8tY<~X@_%RVD0;l|aZh{ZTEr|E85Qnf(1?|q_E{9mZB9hAuL0k}
z8jb44SS#1J$&?p7eVh58S23Z4lDo;_noBd!rrm%>ARoN@EvU@PExY@)a`pCyKdBMI
zM%-_LQ~t=wdgl19P}+q>@84j~bByy1x4W&CQVo6i;F@1)3dzs=M&WsPP3TMzCiQf)
zZwH0RXk6A-S@fdKH1zQ8Bd2zls6);iJT){^-9cW@5;&yo*SNj%S;;5(6<eNF2N~Rj
z;O)S6T>@8^$F@c{@5dHc=r3kO>3mtIA?aKZPLnU2;E?-Vw>@jK&2#f4U$$4CO+7%H
z@%zGv-@l?ucshphraDc`Jy+bfxEJA*?4pDotC`Uy_AIUAmzRSYpKf=ar0p$qqt<23
z`<<fYl`)Ic@q?dJGdNAju&(>3u6{1u%cWj&a$lxD!)_;Ezth<S^L%^n_x`35o_=tf
z+ffN+wOZlg;kb#7`NoO}g2_dUnsPI*FXma(Cr^vs!=vc|WTvrCD=s5fZZyw43ft%6
z2{uFOH#3H$lS`FPAsuE1A0M3ZvU>2cr0I!=U-N~kr$dA&%eYVcvYD47)3{^jD?rcB
zus?Z7cJBK%zkC>Jq(})3d6GuNH-#yXlQ+E9KIqXqqL$?lvBXLmWMnq<$fOmf(T5~&
z!u&gOnQXFL+*0q(KrzoaW}~CZO`~$cT*?r>+J^dlT${CGcqczU=%C#;WzwgDTj*9i
z{PlE6EONjD&mj2|{11$GDBEwPWYthD9lER0c?FxDx94f>m7elg9Z-XRN&0YLd~kzl
z@kKpHr(52RRpgVnssPVv@Pi}k?f7#8A&<6`Sm(@Z(iEk6NkNr5rh<d+ozsw7-m&r(
zhi20^Rt1O5c%%HQ@4yJ&jhw>Q^>|{EqH(8*+|Kj{T&M5%ouL*TA%Ld>bTN4FFmQbJ
z0A~7ELFebLN}VTWBeJ)su`l-Xsd47J0-_47Z;s@=%}aV&hdDY9%qJR*B>e^%-eh;t
zZoID|?$^6!hT(V27bQIMPP1d{PImWs)Glf)no9GFt&DT9mmJu9S}T6rX3y3#=^Fa<
zaHnDeuIRjgLTuPTKS~{Rwt_yg<UsgH4G4k+>xMom9pgLuwNvaq5FfoyXgz<?bqMS|
zgjI&aci;o^C#KD7F~-2nyMYncra{8m(7ls!z8~Say~nHFhF`8W!RViCar<L7HOpZ#
z%ObM`bZ$Lvk#l0L4G9vG-l==IxQRCI^fXODJ`U+sPi$`ZT*^H?YZP(8c+7RP;*sE&
zpx==`O9_rB;c;K1j;Sk_S3ekTxx3f*&i&XuU$YL6xSX<Vvr3L!^=d_f-?~@wOmEW9
z=$yH%=Ir#NEoai{yZ!T*?A3PFKCAwE(5&j=T63GNUxbz8<gKG@^G1*U&kVtQBC0q>
zSb+7J0DQX!KEk(sDVY$Dy%1&G$}Jx~-ap5Zf20b?NCK^W^29iczI~5Q-2OP{XvRHt
zWo6FhQqLNs-k_!4)@vO*41}lxdsz46IgmQ&#eKDt69ea8FZ?<AF#PE?)X4Pz07!AZ
Avj6}9

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_qs_brightness_auto_on_alpha.png b/packages/SystemUI/res/drawable-xxhdpi/ic_qs_brightness_auto_on_alpha.png
new file mode 100644
index 0000000000000000000000000000000000000000..b6443fa9a1f9910e0f2fb0399c8653ede91855b3
GIT binary patch
literal 3182
zcmbVPdpwi-AK%P%Qtp+KwWXBHZZ_LkE;ENR4T~W%_PFoTHjGpw_oO0{aB@U-Tn>?x
z6-m+!rH;@^LPew_LXqEe>im9xoY(o|_q?9x`F_8j@8|vgT)(f^^Q6&Teo}+#K|vsp
znv<iwn{4!7ev}nu?^k)z1lh1wL}iNHc|oFRmH+_RvUvdj%!$Ja2HXG^J7(WqzzPI{
zgoHAfA|}n56v*S4v6gkr#2mg14FXwNi}|d;a6kkL0D?ogWcXxb6C4)GCc`~(G!%_b
z0YX9@V+DYFtP3MBHaw8XhFfokS&2z90uCTz!Ni;hu8<@q!@u#8Wb<V)5)S*OA_^zN
z|8j~+qr)gX0RY39VNC;3XfzCuH$$7_@OZQd41+>rkSN)WH$|J1aCj2N0`~oa%d835
zK_oYOhwrvzD>6JpB;u2h$mr;3vuLatPY{em6N$uS4h+UrreP|K;fh#dQ?3y4gTWpU
z1`0y?qEH?ew#>*1;6;kaaG9rng}~v{XnzxPh2Ik;OBqtk;v>;!C?too9M?B(p~wyR
zuN(iUEo8*-0i+us<V6YsW%UR``~b^x_wR<56=mL#b_qgdMPWtQ^8zC|09WK>Pln5O
z%-Er95*kOqS>Uh~JPw1w6VPaa1=@jtC7>+Oc6gLI!QuzUKVebk4)$n*0~LiQ$|^y{
z+7WO>f*p=xXMwS`pknYpuufc|h{X*Ae%K9_+5L{S|5q%DA^=z-o`AvQMf~UhdI(R%
z6Nd2kFp4`KW<+BJhH{q$TbB#;SG@LsAT$bKI|z6j*tZOmLjTDFS(IqBg*nOsgZdUZ
zih!lyY%xT%Ey{sHp~Amo+5b=0kTPeG%kA+$?eaq;>%rye-_0*u{C#`?uI$VRWQU`R
zavuQ#DHk}|+cLy`<G$e$I#lfqP^Rs<-A1Wam!Zm=vzV@7%4lyRBx1@<CH=O&;VT22
z=8%Ef6vSXq1D8;jxC8v?bH$9lN|^mooJOE4l=*9EosBI+etf3jdF|-PHOpFTBewQb
z<CghL6Mx((AO;70D!>K@HEz;W(ak20X&S>kY$_yq0SXt~qDe*RI{qmeei^E*k$cch
zmH1B28a4AyGt&xIa2KDA?bph^LvA)XsuV%_I(n$0RlfOCgHr0&)z!(~RnSO<iX9r;
zOPV|%5p~9BRwH_+6hDD(ttoJHL-=R4EY5C`j)Ifk(BOWWt!G?gp3!Yw)0;^kBxEY?
zg%60(>e{Svt*x`R`oZPa!xU=S2rE!|o8vl?u3VJdjswpdSMWE!iQDdrfSbHiY9@zL
zyapn~O4HHv9QCuh^p))&8-7!!zaE+gM3w6XYkOS14wIexYyH3q1;S{^L3wAVE5C!v
z4@@2Dk-ij6u*X7ybZH?Ds($%WyhP7N;icT?3A5%%O<+$p{B7Kr*QDz%)fS((PaY=7
zEo9cJf(#`;Y3rNDtzNHWMcJX2eI+BRbvwv8<HFwQjsA~&x697}k4h`56BO;4;I^1r
zw0t4EaNoiOjSl02Y!ztxmi@8Fv*7A8)du{0p#jM?1-`-Ho$<?>b@S?{G@#&9$0@zs
zd(f7Ij^IKq_(jtYgRLd;A5`^c`>Jbobod2{=`Gg_GLtraV40EU5ITcO`U&qr5hojN
z9QO8jlG6o!i<m!HpmYIKDcK+ia(N5$d24iCx`gK_u;R~nIiJ~`WRR?5u3L?`uY+3o
zA%}+5hU_V+Wz1REu<az6Bn?&XRpLH+(vrdh`GwJa8!EFc@~&RIJ!M1)STn#22$I_$
z@;>dA<5S66MX~K6rIK>fdWuH7O=YpJ=jc$r=ZZhw)-mQ-TR|6FY?7Abq@zRE^md<b
zcPPB&W}`+#kyMhFQjWd*3YLa7dzGhU$+_%^y}fM{wvG|{x-@-k{aS?;!LcQ&N}~$n
zr%;slo<|qX=HOcD<*MYYZf1?@=WS|qti2NB{VF!YlJmH|^MEAwSIc|;87f$9tX7r6
z^BwhbrHc9+rW=}0NQ2FZX=Nd+UPfXLH<dZ4Gr@V`#Q4O_`kC9hQrfsLLT9p4^)U(3
zH94&Q3#R@AWYnc#`li4pyk$GN!)aoj>Y7``CBFO|58<VI_uOW@+x;4He33fS{0fAt
z#WdE>eb<%3?lrQMAFM-c#vZM0UwC73Rk!)RBxIAY`uNEa2LlMVj;WM!(&dw2WsC>i
z^0x2x%k5U3R~m{8wW|1I)kbo~Di(IVIUlTqC)TD5OWeVe-u_?DHJ21-PtES>h<vKu
zhN9s%H4fP>O0?KfT=X9B`mZa6b458*OA%2)`7zt{A=1FSSyMK#Ncq0Tt>06%I!6?Z
zZ>~GoW$r>drw<o<a?IPK74F{iykOU+<=~^c+Pnf!Pm8iGFC3cckLZ}0g!HZWaP*Q_
z`{geOK7-*_rM*#px3)GKpS?X&wAp6mn;UO%AEghb^=b_DjIr_V?`Z{J+Jx`doj);P
zSg$+Ec}hQhAR$+pE1V4LIPmtPdC1G?@=9v#u`(|>tF7<4wC8<>^?>D(kA6Etrc|mQ
z7>?bzk^ee3Y`mjHK0KBxg1q@Us5kEy7NFe1mAVBQ-q1R^_x;dXB($i8f><hdbhrU*
z!x~76M^CjscudXXEUteO$J_iO6SRdZ7T#GU=Mh!`DVrF0*P}gC4qCt8Si$TN-7Xp3
z`C1a>bKPJkms5g0ra~UHTqFb@^lN$Z*tv7h!-V-($%hjw-4YpFiYxpOy$Wv4G1`oL
zt_^B)Np6nfy*!so?@CGXBi)d6HPn%-MUcEE>CY(Tbsnnvk=>`Xb#n4o8J%TD)ohHH
z0`$4emU6Y6-OiWBx0FbVC6lMGDnv>*f`$CdEQH}<eB0imUcd!zieoN?QE`^5{kibw
zG(dg1b06$u$Cs-~hS(JhWsAiNBTqQi-L=+<**fu~Cx1r!xnw7HAE$sTM>gJJcqrei
zgnk%@-mLXZWFAw@qSe51OUF}7yVs2A5Izb4$?pl4XX4)Nt5TXd?gxIY^I16lXE_o0
zQd~G~b~D#67^6F^8|a#LrAM{M5}TMyq|qI&w_wrF(eNEUxr+~;TuP#T60hkPcrLMO
z&?sx3gi`pd37z=Uk7&+Z4ZLo~yw!eUJ!z#i88Q`>k-YIY6~Tjjw{sSKHx>2nU}ZON
z9b?T%E;=7nSXjM&(6Wf#sV=?+dcp3PCl8z4rGuXmG31w=BtBJjMh~gi`rKm9y*LP?
zcFROHTalZYAm?0_m7z%u${AiT(Y`U%{_vRHs#MQ=J`5YFr+xEvc*06sz@$u}KGsIM
zm!4HIvD%#CHkbFVI~Od+0R-h?Q%uSAtqIeh=ficICM<$G3BgSbe{B6pBu=gwp6W2_
zcKj6*+ul(Y*HLpkW^%2?qjPcvzFM<29r{|XT}MqmM$=5xry1tfDP>0Oz3sa~ds@W<
zT}!k6C0~;Jo)InXO@fD{y>uI4qE1(V8Z>pk1W;&aH?ib}8{GSkC{Nye2mm*#do*Vy
zE`7~e!iRa=f5|$uv}Wh~yo63Bvbe5d68tRSe9dt1&de@e!xVk<iv+ESj&v7uwLkmK
z-49GBLwe7G{EU5enc@#vqUv&1f0?HLnNKzAd39~*QASgbkH@q`_n3!ul6P3+F^`7`
zX<ImNV@Cf;S1+3DTX22Txs*DWshzPYl!dGpr2f5+YZp!LK0e-Lc$GOAQ`-B<^zI(-
zu>A94YqKX+LXCs^h3+wBAARrc>7Gh$+7fXZGjpV`zxQ+_oO{oHus=OHnMzRIz3ci*
zXm0Vq$<ASs=86LH>43IN4N7@ig8c>=-#!Ogp{Y*!U$y)})Hr_HFjY9b{0HDfb+NCq
H^H2B>mM%<4

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..be03cbe16ddb34ada02651a4d822711a1eda94ef
GIT binary patch
literal 2934
zcmV-+3yJiJP)<h;3K|Lk000e1NJLTq002S&002S=1^@s6<5U3X00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u?2T{L@VgLXNRY^oaRCwC$TYF4Y`4zr1
zyk=w=9>Xv^mdDH>?CjKC5z20pjYeCx8Lctd>L0kfU9D+Vw2kdnqgj^PcDK>3i7}0v
zmc>S!#;RLs(voVoTOc-8*f!A>F}jF6gkgBeW6&TEZ@+W-{op#xjDX-=sK4ao-a8jA
z_k44{bG~!#MG&5?XY1Koh)WbjZYo$1ESPQ8{M>?FGUqt}D!J1h=Y$0bh=-HGGG||e
zeF!@XD}jBB&W((Ws2)CiNLzty-Y<_RP|HF;9=0FW2)hgGhxNd^VTWKL9JoOHFxvp|
z2nd7a!>VBeur^pL><%;9zlUh}4hLd%bTrWJJTVA75%S|@uuoV7bTP-B9!5ZP0*FtC
zhK7QO7T6E8OHT{}r$HR-XUy>)=4^`>5V*Nub=R+7*Sg(q!R2xV+N~J@Ag2LE!$#QW
zFgJ6ug#qD|9Zv!RQP5CaTpV%p=1rlzygbnEO$z`{1C@*he`3kc8x30EY%4qO6^Npu
zqNwWXYT@L`lYw?~${=`FgP+5iebE3;5-6PnLVtgMIgXoI(wsj)co9V$0ICLWG8*(V
z$Gp*iKJP&yymsl*rFR_;$1A7`xA9rKClGu0?v1{9@uG0z#0h1UP(Pw5M@EBg77g+U
zXkj39Vc*%*)O4(%pdb&IOv}y9eGx!3vIMDYApD4;1P>ath?A2a9d{52pus<n9Xs|G
zF8O?TczC*6txj6EZe21tt!N<ph$0Q_4Mu|jAK9N%qVK_j2SkHHi^Y<K%ch5gg_)C*
zk_^~a@7c2_TG2rG5k=XoFX-`84O$pQT0w)7EnBvH1DCWQ3al|PG4a^fELpNdT~SdX
zkh6*f!bdVR!G6KMd4JV_Xwco)*Y_Etfh{N~$eNg#m|`><^*9cqzj5Tq5fwS9NFaRB
zAedEy|4cy?^$iXVUL_hJ2`;55ShQ%7IUymz06K(h*swuZwrrVz+#orpI3WCpBB};|
z_R|~4MG?{9<L%qG6AjFIy*{1MK#Pcw93cSsQXCLIszD;`eQ}~Um{bkqqDV%AOpQik
zO-@cu0SH6`>3VVi6a|Eza!8`+Ek=W>h@u+M;61zD{t_;0)#-E=lgT8}fc{QzZ?DgL
z2sjXaL{ToQ26v|*idq{R8$aH*ZQIvzNlSEev^6R!Dqf{hX@Y};rJD{33GsU$0RzHM
z6g-v&?3mNwA0;IvZ{U)dNQBn-`1q9A*w_exRReD{Py`TuM3GiT19>&@CW?9?ifV9E
zg=uMNOL18%i6Vdy!)Y+x^;CiIBZ|HXD`gST=~)ek269mZ8WeBZw25e7MilUBFirzd
zLb*VAfWV`GTI3I8qUdqe;8R8eE{c*NipFX1Bx}xr5GS|Ew55qK4MYDsRZ)Z+csC~}
zXQ?nDieiueLsqO<A!KD`%_s^26%jlcW-=N)RumB(8X6jkw{G1kRfEXLNUOnMkZ9md
z6e$`ASyH5Jia0SZyyJrgR1Uj9gTI3YZwil!qG?wH#Q;Ii05~OZv7cglAJ*hS13oFH
z7FnW!&1U1G=#gq5&e0>cIR^sYtZ?t%J>mB4+o8Bvl{hv6lY>C}Z8RRcb?eqgJ9qB<
zCILXA2vm?n5vRf9M3JI_xOVND(AwH6l$Dh&!o|K6ADsnqh1lKR-d?(T_3D@LD@Lo;
znv$KJ9VsvxKqbx@08b4F{E~3?>{(&``t{++{*~g`e87_yQgX!k&!G{%Us_tKJAL}J
zP+woK8W<Q*pFe+IKo21SI&XnkyLK(-b<m9)H};5Q&k>uwfYHLL2pJ7tUzU|!c`H6Y
zfuO~1J_Mm}0|ls&8o-5Jj251y(<x3&oIYfg#<L%pbwK7E2r6@0tyaj*&818i>u@--
zuU@_StKs3{I_ep`^c3=u8x3M>VB2AOaq_rs)&QAvAV~2Q6ckAN&;dHVUZ0BH^rE7o
zHEnHeC&jT@LN^mpo)N-lj(xDtU=9zu%o-q1O<7h|RY|x&8tY6ZQz}ZK700$yr%rv>
z?RJ;*{J=z&XYSw)7xf&!gT3IRc~d?R@*s(bhzN^|i!-8Uu;AEgx7)L-tE=CGnEHaz
z#n&XNm7S*>EfmKd@5|{j<AnOufd~x^m9}V^kv`N~2&V+lWidXoY~H+iB}(Q;_@hm%
z7jgQC5Eql_)vS5rul1;B8X*CjP|13QpxD@0Jx!Kqwt(Y|Lx&E1ySuyluk2>Jy@0`A
z?df8a`3vl8qW6K1vVrhi)Jw3QA`OQGi2dBTb3cSU|2Lz9%MV@dGR1lXX7wnyQ+hQ}
z5kT-+0?`E<4J36O`V0cYynOlcSFT*S^1;Z+$d}AvmyZZ>GP=~lehdqrPC``#5b~9h
zl0q9bzz9!FOiV(AP<2_nW5<ryoKEK-7zjP0_jzVBt1NW>f;je$WbjnzqBtPrfkHt7
zFd`wyQc!Lwp=RJF-lkcFj1Io&(!~Jzy*T!uSUx741c;J>kQQsfLlGecR2Pa4OIli5
zR%K=7PguF7WZCYcy4+!Op*LWDDJ!>=s*B=*pvAs9l}4k{rlzJQpahftSiEM<npf-U
z>VA#<QO^=;t2nutYi5x{(QyU#wk&^)H*@HAl@A0hB+~I9fjUKS=$`{1lu*+T9z6JZ
zM@PpQmLEFB$*&0TV*-R89a3q|lSPEe<#MU1)!(;opR$3FLITwVv>3-mr_+HkQD*F$
zp;W(e=FFMzq1;~dLl>?;`q=(&Vd(@$S67$Rx9s1)U->|I0fufU%xpHtAwq~Q=@}Ur
zIhQYAet&3as8*clZawM30iyHN1-~;oI%)*X1Voo%-T?uvApiv0RU;z8A=eW@A)<?Q
z*REZ!H8wVuu=z%}m;Ax$LVXRj`~QNihs2M<wqBf1uNTsypg<ER<mcy;Y!8C&&>M|L
zYW3+k$n!^!9?kFR>G>PaAMEj=w}eW`v=fP!p1CxMUS2p=G!UK(dP6F=s4lSpgu=xN
z9r98|Ma4V!@872f%)K-n6TQzqoJ^m1eFb^G0Wn@~K@}~)FyS+zi)G`+jjz_$)*c!j
z9`;vmTNVTmd_joutr~elhaB=8bVxeokix>kwJ4W=WC^iL_R@*Ze^Wp*y|sJy?x+hF
zE(phu9}l#9(_e62a5x;aOL9FL8YB(5geuGnD7RbOZg&NvLx-1g%advcXjQpt)vAc%
z;$q?O;lqJ;Yi3I}`%po9grVK%(=p4+l`FHWs;Y_x2M51k`a=3wCKe@}I_{d9njZ=5
zWwgA!yg<7&JAhzI5=3h-7)YW@`GcOg%cf(zVUy;h&CSinZ8jSL7b4ElbCrNBdc43K
zlBQ$yq@A_<nFkIWc)g*a;Wt!rA=^JGD=Yf}qQ{0vGU4Zfk$mU$8EilnXd!LUvxI^!
z1~wg|cAr3@(knH0_&gPn6HY%1p*HKUBq(ChFqtBR+I=_}28WF%lZoEQ$pkoyV`5?w
zP-(QpCA;0e@S?%bqOY4q?OK>dn1%PVo~{4q^*@_I=%UAWC~g1%03~!qSaf7zbY(hY
za%Ew3WdJfTF*PkPI4v+UR53R?H8MIgF)c7RIxsNjF-_V4001R)MObuXVRU6WZEs|0
zW_bWIFflbPFgPtRGgL7*Iy5*sFgGnQH##sdt)Gat0000PbVXQnQ*UN;cVTj606}DL
gVr3vnZDD6+Qe|Oed2z{QJOBUy07*qoM6N<$f;zc0ApigX

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back_ime.png
new file mode 100644
index 0000000000000000000000000000000000000000..b6b1615c5fa48b9036858b0850f548774523b769
GIT binary patch
literal 2999
zcmV;o3rO^dP)<h;3K|Lk000e1NJLTq002S&002S=1^@s6<5U3X00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u?5YlW9r2qg5mPtfGRCwC$T6;`X*%`lc
z2N(rrhKD@FL8U36&}v*kT)?O?D59doivOUc>${B)B&FLl@eh0<wyANurM41{x@&{A
zJ~l@857UNSUj*I7xW+8<Py~_Xjri8-?>nBuUaoV8hXV}Fe94zP7w);|obP_$@BDt}
zUP*G9%UtF%m$}Sk?`u}8Rk)5jJ0GsrulXn%k<0w3ha2D{hN&AAbCH#E>?s%`Y98<m
z_<8vE@XBH6Rq*fN=in>&oY)-Sym`~>jQAt`F}xA}XqY?Ap%eb6US)(Lbr!*!;I-WA
zhOyK5AMj%{e6c7K%|IYs^prC2gSfB-UgHE4ag@_sS}?alK1aR1j38j7i;8e;<B?R~
z@F7pPdMEWqe2nUG(_GqLzkdC1o)LBf!AhgOz5UNTjov8>1gQo$tHiMyUgcz7O=E-K
z*C>(Zwzjr?J(h+5kyEEm&BM(e*obHoZuFm+n3%Y*u&|h@sHkZX5fQP@;1efKjGZuH
z!nDxP(3qB%mJ1x?y3GM|syTV`WKxe{Nrnkh%J^4SR({IMqed0g#?sQ#-{YFlfPjE#
zolZ9azlYp|f`X!HOvS~;n=!@)70}Zh+N!Fm3TSQ?i$yQ>WCsr(q>GH3H*b!A^5n@k
zxWNyK$kMU#<;$04$eJiz=Y=QW=kD(AGn77h^k`p<#ryd2<6$peytu^6S~=#1r%#`j
zWoKv4pzDqvJ!(G?27`g6%=-1~N8;4)(xpqkv$2d)blXvndqs-bB_{)H)*tCJ9e<0l
zwBvYRRnpDZuV3Fr*|2KWs*!Xp0;qjcy<RU(pFUmMuwjGj?d@%nWjUg`x!GpD@xUa|
zO`ku1F5kO%Pa+>ID=8^q4m@B%K$b=z2<3d`=!R<m|NlltMpEe*b8~a$q@*Ot&CShz
z2O~y|kWl;5+_`fpWWI+E9a>5&g$>{&o^clLE}qJuMFIBs@ne<^uU@^9IWPD-&RbOv
ztQLQ-KX>ljM`+@cmX_v0a~nBwWbZmzxNso_LK;7Qyf;oQ6%`eK<(<?hvVo->I{JtQ
z!mYEjb5N8j(4RT=$@`wm$MjH9!Zg0ty1Kg0(PZ4HQKP)W!^5R{^XB!v!@Rsa0u>X0
zGXcQ)tqtI$^KUVzP#PG5A`ey|(3cL`KpEkUKEF_{a4abJUqya?{(PFl?%lgtEnt=F
zTW3b2ksTGlnPYt`Uev(Z0pG*ZR7Y7s0~{!`s<sJuMz$-Ld0xt`ckbNDN0We*loU_8
zwntpBWdxl2_wSd05jsy#PZQ3=wTOxmI0pkOkP%Eq;~0qkzESW7F_s^Y!KEu!te8g6
z^uU1wdXO#qD}_BnT}cTE3DVM~OX&`Ng@uK`Aa<q!oM##v8{Ig956I3Il>~T#QXKBF
z1&|bo%a<=_p^0yLdb(li)TvT%aPa$e4(iH|{{H@6IE*27rU9H3j8y_S9UTac2NVoF
z|2+-&uizp}36M=#^3QvDd4;2yan77M5(re^vB8!h#iXpPEGjUw0yrCO0OxhMMbxmP
zv4Q~d*|TR7oC1A><I{b`10j5<Lpi78a-U6`HnCa&A9Bn9K(5#^Gc(f@2fr&<uH>i!
zA%K&1wDMJK&mm(#xhVlsY#ep<&jGTny1M!wxO@x*q4(|Ew{;sgZgkv}5NQQs!hjP$
z?E&WlWI`fe>t#m-13E#uTF?scwPFPm+3*ON^4<3B+h?PRk(Nu7$;3e4p$2uw$VhT>
zvIkCmj~qFYt|8SKa9a5$&-<<-0vi<f%T|f1uDynvH*e;miT{!%OFUCkQ@ilZ;g*<~
z$c|8Z1e_s|>IF8W`U5^t!8rB(%?QCDDYJM$B5|)<Dq_dB20A)AzWzB3%}jgu?$tFk
zG&l|$)Fw(~&z?P$Zv>o)NLyP{ol5405;*%448>9`uwkDHAiI{!vuDq)Mialqix*SI
zI=&>-=HbEmk=CtS#~3HpYkN|?3pfew`x*=tKqe@ZrC1>tgRHNwFM^QziNRnXx~(Jb
zGvG#%o;h=-glv$ZR83f~BYTkQAM%Na^zKzZ)P~9e5}!yE5va2&Y@mDB<A0S{E>qFO
z2%vN)64);)-5(>V4uVDCN$a!^2+J}I)E;mOg4HYF6aga!$=m%>k#*hn8p_MdKS7fq
zC}uCpgt24CI)*&;)=-PmqD6~HsuOUAa^TdG>Y0LZihYEh%=+WYreOFr6>p(?Hy~SX
zrlqCD;d1l*`SWEGih~*ir2(OtRNt~?%M98V)R5{o`Xbd;*szTQ<U1=<adB}rE+2(b
z9YO6vLPCZn2*3ySbXTulO~C2Tfm2JW=kdDNfud_-g)#{6pIP6&$gNiaWJ^<1)0gq_
z@w9{Ob@AfGAxZ;o1WG4PoRE$kJEp^GVnS+0f^mMS#W>;d_OL?19)%xLsY?csMC4AN
zKAnLkrd_*sc~~qKw(&fqMkpN@7bm2;@8QFT?J>^NAUZasx<Xybe6L}F_3b``dKGG_
zt*t$ZCL!pTi6FDtJaFWxFZPzubxCy#fb(w}z)64ml~qHkD});Hfr~b%^g{&j`<$E{
z(i7&4j0_np*Exb9Z29u#($=k8g;bvb94NECE7j?|6h6kPkm~fC6D~c+kzcDyqKiD0
zm6h#4A3@R4(QGSv(xgd4J@xKJN{?*i%9SM5{UOyqwrWfDJgY*g^W7$y>x%JQPc(?O
zoTJeDiOa}>4{(3)qM{-vN&|(7_4~qw3pxOo3E)XDhqQpR2APl`1Ql(+(Z(+iPQGfn
z6f4jptPa0H7iKU>1HGFVGzQsMqk3JoY?-uR!2%)Gm)l{SrxeSicuDi2#%j~l*x2|5
z?im&w9BkaTZ=X&Xe5W)a)iGe@9;cR6?_!*}xw(`P|KdUF29OBQy@G;*#kijjRwp;w
z7a@x8)Fz%1XPgW;H5e!12kmi=<H5+#P_eBQ6&0W2ULgSi0Sq8%lW15Ni87kpnl)>f
zRKIrZ+Q&9T69Y~>?H#}efBgQ6UsIzD76maYD~r<11mZTpn+y&%0x^2yj0wm9H73<H
z7$;HZyYRy{N`jH6l9G}?P%w$cQ*gyb@~|=SRvoI4Np(EUbUb}qpDI4&L3l@E(`QNm
zVA2!D^XJbyKR{|3y;YwzYZmPhFsTmUR5MN`>r{WVRtG(iiFUrJsi_{bXU}G<(y%rm
z)ln+8fYa7zfb=^5Gqf4&MG_Y_Wy+MHp2qu`km_sKu4TY^_3BjyoHjl_5kaVjp18YX
z$BtxNZ{E3cXa8R3JDUmicjn9)9e$gj6vZBAD}r%ffep1hI32fc-P(;Nfyv3q{ePYB
zj20Le$lj{+Jx+g6<Ybh{4Nj%S7qg@-I#3e-oIH6l$yqa0rVMe_|JV7>Xe8BBQc}dr
zAq$jhQh9m#U!Xc^8}DvsXXjT~D!0YP#!i(OXA1J5HcrnV`(yMP049Te`^mB#hTl=h
zmJh<i!(&h~goY6iY~w;gLX1=rg@uJfJ>-EgdO1Wp%?N@Up13d0$KlWP9YZAirvO$9
z0z=;{4Rd7dg%Qyr!z!Rd?Hk}GxEbyZP;?hT81}1#%UtF%m$~f!*!~CJ)Rd<d>pbNE
z001R)MObuXVRU6WV{&C-bY%cCFflbPFgPtRGgL7*IyEvnGcheNH##sd=P^y%0000b
zbVXQnWMOn=I&E)cX=Zr<GB7bUEigDOFf&v!H##&pIx#jaFgH3dFvmiJoB#j-8FWQh
tbW?9;ba!ELWdK2BZ(?O2No`?gWm08fWO;GPWjp`?002ovPDHLkV1mGyjY<Fj

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_home.png
new file mode 100644
index 0000000000000000000000000000000000000000..f16aa4882dd4eb8b640ec13eafc67238721fe1f4
GIT binary patch
literal 3748
zcmV;V4qNewP)<h;3K|Lk000e1NJLTq002S&002S=1^@s6<5U3X00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Ra2m=u>I4Xmw!2kdagGod|RCwC$TYGF&RT{rD
zondHa+Dc35yY#t$8$lolE9wS>&5DV{RkERttL}zu1S6{}WEV{o!yg+Y3X#Q?rLdqN
z78lg;a7z?YC4>lc6<9>pNBWrQYdU=hf}pd%-|ctH;dG`ml(y4NILVi}y*=kUzwdXy
z^PTUUd#+*JC^yQD5{nWH234^^?2tGShbGp2yVUJ&`+rw7!|ft{GA5j!Ax(_-)Eydd
z-b;W?gggX!7V=lf8<1ThZ^*r8rOrfYW77z6sP~3U>BR#GxDYZQvI%kuQU_^(v_Jxo
z4oIg+humwCI(5=!ljtZEokPz<v?s3qJqz**<a5Y5NGqff;)8f0^<pTcR>b<dUh4Ry
zO{?hmTy)L~5qDxkh6W@~c{;a4c8Ede<;m76#`Q(&MMs0^tdl-&SG*%`(7hwXP~dMi
z<Yjq^0r{=zg@AfRR8Odn(56P~<7Mev#WL_@gqQ|-eK+K&jB&5#-lqKc<By?SzFFcy
ztB7CjHOkXBjhD7MA=bSP>HBVljDa00VMusN4D*ZodUXQC5X)e5sC@tZ_b1!h+Wytp
z*!WgmUELN6uX&IE6J0)O(;|9$=$Cqasr%G`lMx~?4Tr2$Tr?cWRv6HF;lhP#pU=1L
zqmMrN(~>1i=45AQPxg2`w?g$Ts_-8F_w>_G--EhK*@kVYLr4kNk2PFg6m0z;L_@>_
zcJ!*ar8T~F*QI+0zWw&wsv}2^Jp15-56*z9LYK=`g5NPB#k>b85Gj;<=KrN`;k<eC
zW*k0z_?gbm&I4j>V~99n;ph--!!^wPMuN)lDoA@M0`TMru=V1_izoR+@4WNQpV3IW
z-CmrMl2V+OmX?!{kTBBebS6POkOWA)2(LX3ha<`Dc8^5KVH>n1A^Fp$O`BR(Rkf75
zIUKaOqk2b&VC*ri_Ximkvro!X2}J_kv$>(6VS8Cw89kt6*sx(m`T6;yGcz+&Y&Kgw
z?m6P(;%t%nlsXQ!VcUX&g3;7PozOiK@uWgxM?)CzXw_myzmQ<f(RV9RUnPP-8VIVo
zx_Skk<T$$ch!G?5Fy51C5G11Uy%dua=t_dlT<Xrv&Apj@p--;_;ChV+pWOeYYD0f`
zLY7QZ`s`qlP`7{o{wL9_C_O#BFexc171vHY(Jo7Dedj^b;Y>_SOwGv1Fk{NTeft*6
z5Yfr7W|L!ry>FfY<t7pMwZ_;Q8GE5f@EtgC;Ex0b5^@33ZF#`;5D<<KUShbo(N`Y(
zJb3WnQ!*@dGHN82tx;{EZP)4%772F*!)JQUbWv0<$jQmchM3X%-h1!uHv;s67-9aR
zFBgVL7B2ITA3wfAlCf}E=^a+^jJl&smoDkUVn>JoY0eIq=eMIt3E~1CQl{(q=btxl
zJzykQB{enGShj4L0q=9+I+GZH<xL5adb|jT4c#^&X^XBSxKA8i2r^qqSn3rL8aa(E
zSg_#dsGdG<+_>Rvhrb7$1gltmN#E(jB2#OlhSf~?V9PJWrnsm&_~C~iY|5}$8|+%~
z)dZEanJgbVbZ9B6XH1$j$<4Y*ng)#otFTY@J$dqE#-)spKmK?Lv1#j*8nI!mH9Tlz
zMCDLoM@14+f<|Z5AS505J32b5N=r*`MRiX_MTLFP8PJMg@DLNRDG671P^T@liMG+k
zUKJuG?jA>o6=lJ$4Ut-H%(Wgpdh{7oPu#qDvkS?Ofpj=#Bp}f;XO!~ta)L<w<daX9
z$<(QO1#LKo*idH03Z(4em12w;XV0EBgoq6ieCiYuTE6@4yU&&`UCPwi1;r+_{W(ou
zYq9zUUSe@!!8Q#TKMi)RcvY|PU%q_#9}^}_FuY!G?*S93s}TqUj5BA>xZy&dp>dNE
zcua3Voj1w+o;`aU))R?!u`s;z&O1*0cz|)6_7J@iME_G$Q{$oM`~Cj#3NgNHtkl-l
zHbqHQ)%my)b2c+bbC){S1n5ODIe_sGVz`RkTpG|e+DKc&Dms7uyd7?3oI7{!QCZMj
zr3hY9w`R>64hu7ma6TU@1?v!Ng=r^7V$~lcY-*%!w2`*<#;CbCL8avqaP-{a-&3bf
z&5E_rk;?Sx)3d_l6n?SIv^63TQ1Tjn+q7WQ(%#;_7t87q{j$CvfMVe)E-oH{Sz(_9
zOf|-}!M62L6M=}jJ$Uuziy0_UwxHVZnKNe^&pr2CtnKbmmM>p!+<*W5yo?9dt=cro
z-*&MrIwCL?y{oM@O(GC!Uqdw~))mIel`CUycaO4S#R>x+%gbTF`gd*SFn6!Swx~Vg
zy--9T;;u(E$N2H%jkRmn#@g;4g_yAR;H3jtU(*(gCJ|y=L?X=D08#a=P(uUbjzhz_
zc=2Lm>(;HYw!25!xN)QL_~VcBau~3_9wH%Zhiw&Bb{UZfC@I(2te33vy*YE{xVCNE
zX6)LvE7o@RC`hQd?l9)gojV*@cZUd;0ob-NY9gAOoBtAG`fNgqdVJlwb@8W9pEeF3
zJ{)Vidz6C*4;m*<oG@0eUhM`}Ju^0^Pq8f`5$5vytFOLV#N<OusJJax`{kEkmNYdr
z8MU>wv0Gq-Da1r<z+WP7#;!^VY17wVf4wN;Zk0tuWo6|oc}Ec{GkYXrW)`EOWX2DN
zc#uBYw15BpSrLg4GK~A~yDt~f^^}&GnF$G8t~(*wvSmxGZSO7&l*;tKUP}ngbrP_j
znLmGiUc_WjsgT^#(y~p96LqrTaTIfOF2)-7FNTa)5DPH@TQ)Ij$&?u%P<CM1K0>p#
zXDKZ$wOl5yy1M#_VAqizbz_FtZD9P-;FaS+2AGZ+0qk4FBG}qg+!8N3j~zSqgweHf
zw!t%cS8T<J^78UKp!C1Nt2b^<BA|E=#$hsdc~Hj|%XNnsZzC39x(V3!YDAc^j<#&r
zupzo_eY@RmDqgs7A+xSjpU=mnq!Y?(G_PpKz0zQ?AKy6lkpvZkU~1RAf!I4~3vHrp
ztV>&?>3~GUeel5tzrnh`KG<_RpYwAyB-3Jeu*pzJu=>srOnUCXeU$nSKm71v+SF@m
zt(KIO6!Uk=lquW{%?Sho`+_|;L+ix-{-!*UK_f#W!ScvgL(CLrfTs<#MQrM}vDd==
zKQ5|Xc;N*y=h?AiN141^40RZc1U+U=r-MO;MuPRG{xM~S)6Z}DU_&Wwp-r?c>V4L%
ztgcNcx7*D#4LQizHp|+h$4g+jo;Mg|gdt&`mHDb9$V?I7`7GLykdP3s+ICH4)v8tW
zisVI$7Ttxc?X%$3TjZAOH3~t$8b~rU608%rbEWUb5V)EzT)1!oE9JXr!%Hu{6kTl4
zi^t<Je;;_@fdu@d?cBNZcXBYp7wq|>)jCzXP<c|<eZpRCtHlGS^yLjfg7sFeVfXIc
zzbAIFq1&cwDtvL0mX^kyYFklJ5wo#etn5~5*`_{B{1QMjw5NAXhe0(0^n>Ws%@o=?
zt{4i7|J12dFG5vbet!N<d3kv@+S2D2QQRWG?Y7&D?Cfj@$|&3#Q&Us3F&O3?l}MXR
zW1Q2IG=q92Bm@C!eUIp@mOetA(lz%Sh!N_>I-Sl@IXO9w>C>l2H&gUhxCc06#tdWP
z#EE?Uo;hK{gj>8`?{*<09GFH)Y~F|b7LumU`B8d=<pFH_2xPD5Z0hA91c;3oiFMMX
zNyBH)o^2Es7G56-TCpMGdg9{Zaxevr|K^)-=ox;QT6JJn1{x4K0$B&)OV|P#<5ziy
z;ss8rQzmVWD0)I2IIR;5eqtgvVgy#VMQZ;sfU#9sS!rHpW@aWPCnxj#(#<DNo?Iyb
zw569L!q#!Ww&0c1`gHG|GS*j%te1P$!7Hcn+k#j29YY;)u9d#M#6nEOMvTNt%>Dj?
zT1i6a8HtF%qj6naQBkqr;>C-f$`kX3IS8tr(DjLXw<u5Ak{0=&FGM@_Os91(z`lur
zScr+(3^~j;U@xfElWp<w@oq$7dPV^jGBc65Y!-0lA#r(Hkv>zX)1=qW6hx<W2;R#+
z**7r|3o#i3aH214k#R>dT$oX^kb&}4?AT44Ha&#Aey=<+?qxJYAS9{}SCsunu7vB@
z2m4~5?3);fg_!y^CPY&>9r3gb#F3t!o`R{0hd_C#{HJff{q}<T`uf)|UAlBS*!7~w
z`c6yzl&RkOj6wOFLG=jh>?GUr4b^Gtq;B@XzSt-GCI(`;?kTdb#d1I77&e}p29ONo
z^duvH<j9dXBfY(+s;X*9Q&ZDFFJHd=dGN}|ZOuvmwM6}R#r(L9ZP=DNsEazOn|-h^
z_Q}3gEHN+Ql6E(JwWug7DJhAQH{~Y)dkg0Fsq5CQ`}LtihyMJ<7hk-B`F^Y4?|-+w
zy}c5y{yq)Hz1Pp4J^Kplur6|!sccIf)J2`t%{~k{qcJ24+_akzWTo*KyQu)5BZQ0*
zgXl3ua!>zWqfq`=EOo~S0Z0&YQmNA-fPD@5f~RP}eT{;G0t4eXj^AQnD#H|?JPK=<
zoKd4jacmc7WMquNoIe)7WAS$hq=^4x9oBWZT*++9{N5PM*<cU~Hwt;+ixWJfe7q(u
z`JYqj-Y7RpjLQE2I5ZkO&2|vp0000bbVXQnWMOn=I%9HWVRU5xGB7bUEigDOFf&v!
zH##*kIx{gXFgH3dFy}E%+5i9mC3HntbYx+4WjbwdWNBu305UK!H7zhWEif}wF*iCi
zH##*oEigAaFfg(M*6RQO02y>eSaefwW^{L9a%BKPWN%_+AW3auXJt}lVPtu6$z?nM
O0000<MNUMnLSTXp%@tw*

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_menu.png
new file mode 100644
index 0000000000000000000000000000000000000000..a37ca5d7daf5f187aa6086c1386d0fd4f26d0435
GIT binary patch
literal 847
zcmV-V1F-ywP)<h;3K|Lk000e1NJLTq000sI002S=1^@s6T0n-N0009PNkl<Zc%1E*
zKWI}?6vj{fm9(U73PNK_NLy`dZ5>>kba6DGtGYXzLD1PHAaoGi9IRw;am^4cB02;V
z$3PXb1maRc8%RQu{)y*{=Qg*m@7>&oMVCJKc-(u={k`|{?)y#-(fRS;kANtsNzGXU
zf~{8T=F!p7R=?l>rG#;()48KT&5(Ax{Xhpeg}4befb8z>-ZDXykmm)%WTe;Yy|n=$
z5Bak0#NC8gQ5%R7@?~8>2Z2866ErF7jzPG+G1m0q;o%P(2=b6G>w->Dyk4)rwgDjz
z`JSL$E_dVL;NYhTf;jSwAXchWDn0gsVIFbhnLv2vIo47(o4sAD)i#^W<`)2P#u)R6
zOWvv9NWHZfYnC<7T4AlS)>!LuUX}TI$%{GP+VMV;s~{=Oy2M(R#mh2IOMKdGA1PQ^
zf>W#utb{y5O3n$HpOU<=6QV#t3F5iO>Cc9n)-);eW0Gfd0Ua2TMM@DHfE)0yjP3le
zKLYH6>ueWKl-R4Uk&hodP_0(uyzq^O4{esq<rx}f{;V)3Z<%ZaaT@xy>&_1I?LW0K
zHg<z&WHSH#{r!(NAoitiWHA5OnVG*&khl4BZU1ChAitBzv-#COw*eu~2x6u9pU7tu
z1aY!4|4b%xeP?Iqy&DAch|>u3$6J6OFR-p`Y;4@+UHn1`W6Vo@*6pq7=8x^4WG&LL
zl3b->1zD8%jN3j^j|cjMB*ExaCAmz)3X+ic1i9>Nbyo@ogIARVk8n}Ws)CG@;ak&T
z&Pp;xJ}ZbDFrvwK1<`>DdR{@?kARE(0rvLx(%dq<WPOnD>?_8Yw*d~`5PQviUbyY?
z^=~6iqc&ruQd!_DdqD<59C==_!ROKKc3;^T8}i6hMfhq~f7p>n|D=UDvntYPG~U@j
zkVhu-FBXgUY(U5}f=F5j6U0{wk<aHJs`fz%<3geEh%8!&6IFzU?Ss-9`KThe-J~Sr
z$}5_dWIic*BdbVUuBh4vr8$|8lVuf&(y)DqYf^1Qlq{=Ah)%Z;dK(ckL7YHm`!KSN
Z_zil=+SpvAgQ5Tc002ovPDHLkV1o2GpWy%i

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_recent.png
new file mode 100644
index 0000000000000000000000000000000000000000..109aeedab42ac917447485d75731bb19dc69efb0
GIT binary patch
literal 1063
zcmeAS@N?(olHy`uVBq!ia0vp^P9V&|1|%PcFuVX#Ea{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJdH5r3MTPuM!v-tY$DUh!@P+6=(yLU`z6LcVYMsf(!O8p9~aX
zFY)wsWxvnCENCF@y6>7U0|PUgr;B4q#jUrq&t^#_inJY%54z%{+i}TvmY=iv-4sEl
zNRjPpMK<Z&6|Z8<+x246-JQA}9B~d4rd?|5`oi=@C~C{>tX&t5luVlSBmca$C3EoW
zV}%877VL3pMw0gPKmSO*Ge@Iq3K-;?&h_i9(6H;O_kEO{HupXsW0x+s)o(_vX+M4S
zzkMw1{xqw|<L8S{GDfej`S4G3l`xwhurJU`q_^ndr#Z&2%e_wB=@u1iW0@*$v(&_r
zclz-MHmPM-Cv4o%aWdu6;s-z4-X=Ya&lWS7AIP7-Q+)nZ*+zB!xIgo@-?CSFQ8oEe
zLFBArmyE|Bcbu?3l<(T|uR*fcZGMEy;V*2*|Ezft^lyhsY?_r>Vbjk!)fcKa=_DCQ
z)R=WAypCELR5|rz3LjVNq0cpT|IeIkVAM%qnw^>cLTN|)QdgO?9S1f>>xl8c*j8a8
zwb%c6wO^a$qXZ^t<5{jUy1I+*zdtV;s5gE7rCjs!va)vps&jZG4lpgNRNBE_?HW)Q
zv@UDwE#*J^qShuA_D^PHj+pVXOEO%$=}~M&;cRXmB`22-4najFmzE9zL83StypN>r
zjr0HXh|y>D$G_VA`^y=0&XnxDB<px{>z*Bdtq;vub2s*B-+_;dF2CF(!NbP?vZkML
z&KbFg115Xt?TJ14VuE2@N4D)hmOB&VjQ^U)?O4O1-+f?$`7`nKc1!6!taqmz<5_IS
zb@TOCyNJ3C(n`19mZj~wr+i{=*y^c~ZY}e2%y!$$@YP?al;-~YV&m(>LbnpmKP~$0
zW<O19rcY9tWt7&`xIVYVR=OolmW%(CRUW8dO53owJw$8kmF=_LL$5}c-0@j{x&LML
zFIn4}`!i;JyLy&UIpQEs*}KG#^??qo&5o*K-I@ynPRMt<JSy=FUFTl+ex2umRZX(C
z3&g){DX82Vrz*oIZO``NkD2banI0<JH2GuZ<!)$_e3QYjcY(S!S2VYmxrTYnJl?de
z-<~U|0)grNe@st}3;x{rV!a!fNmNT*BT7;dOH!?pi&B9UgOP!usjh*Au7Pogp}Cc*
zk(IHbu7SCgfx&Y_-&-gea`RI%(<;$4m{?dDnL{+Z-_?H_s6i5BLvVgtNqJ&XDuZK6
hep0G}XKrG8YEWuoN@d~6R8a0^@O1TaS?83{1OVn!wD<r3

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_search.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_search.png
new file mode 100644
index 0000000000000000000000000000000000000000..9fcc72d6c50867029fde802d6fd9a2ebf506d9b0
GIT binary patch
literal 2566
zcmbtW`9BkkA774&a>PT<<gCXz%6(LhJRT%tEXQnSq8z!$rja~ZXi+rBh%)AEZbl@A
zh^LGgb4EGZ%#oX~@4xW<eqOK7=l#>?^LqdAe!brx-0fS|0{l|^002P1<}XXoF|Ho>
z^V27fr(VHA&oM}bTS3B|f_=lI;Gsys4WD3d<VBl6_+2Cj3HON(=|!3V0DL7jmN%SH
zj1{J*o%5n>H|L5L@GP)hO5iVJ<q@X6K9oRs4w=%l{6JS@B-Y`?5v`n0D<J8r`o%<>
zp>jx$?-of<UMbz+yol(yRZ_3&u)Q5nitJf<{?j8M<E3O`2%*7D$OJFrJD4T;Sn~DW
zfs(`R1>g^#f&GD_=z%i$G0p$Cj;_gIc<wvtWNjGBJX7He=09CHADI04twmvKQlxRl
z-<w9nfpcc2Tq$A-=A)_)Wd?;u1AJZ|sdiv-4le+29*8x7AG1Wkfv*zEJ7syY0E&2T
z3SsJ3WWJN<Jf=}YPf(8Pq1imbBhmL~+Fvrl2p7r8rzV4{<>vd!`MZqS?}`wj^a#r2
zFzqxuk?XN*>GSpU_3v+rxez#?=a#xFJxGS%RU^*ISdF`)q9Q)uBw7dlu%fcElEK~z
zo@@-66U28r5fQ^jmf>UbjRsxW7uz8ilu*(tv`3FQIyzdn{H<zB)-d!tR1h8(9uX19
zq(-q184LzZCUXYm==kN;V*&tiZdpM_a4*)(E0`3tPN&o7^78Vu1m(=i6V%*6buYVw
zd&wg;7N?q;nszMj+!<T2L(Ja3Om_x@b<LCbfT0s|X?7~yf=>`=Qt9}}$Zsnw_Q+Oj
zwDF$yaJv8Uh_YLnUyzv34tDE(>>h?lBwo@1&pE4Z)=8Xic-wmEG_ZWcLP^BX83bC(
zV)A(BqV0KD_)x+<{s89#`VBo-c(Gw^saW#DmjZF=$4=gu2?89$)XZEIkymN&X%Y0<
zY*j903x%C#-yimMjuX}M^m{@!v>zT-bHnjh+dkfIh?ExxZ@W7tMwO;=yC51;@vwPr
zby}U=SYlL6%r51p9=7t4Dz|YFqn1Bp;*VKpMx#N2n}@x$BX;laK%QA^{DlLLfsdgd
zI(2Z!`!i^+QP-(LONB3&N|_~KDvC2Jul;$CHu2}n<%s#K;BQ?6gB7Z)Mqj?)oMW<B
zEQ`o>eD~bJQt;1;6N~Z9*rP*V>S|Ku`jj(j*%@VPKjZo7=EtJuuST8hzUVQH?vGD|
zuy$gkGXlvJHpxCGAWA{t?Ad*bhzR7Xt)eA!cUeuhl$T^<vx;VV)o_bCj<a<_b#>`L
z1U_$ucD*XqdfUUJMeCp|D=RAm-@RVo-@g|l*>N9?o6qx)o@laD?^C9z>n@7YyeSVk
zdvo{HKZn3of#JN7RHhuH)j(TY8`dwYkgdId=V;zVZ9LO#O;8g*d-9Zeo6@ZxLfe(X
zFo^SYv1e@5;r`CMrG+I6s~s5YmUWj&8zsAEJ~Z}qY26E`^a)zWTumml1;wc-ZQ(;4
z{(IYuYoElQ48Z#mMn2zDYzG>me+LvX??bD;Ev=MdvIHm+VV9~guG{a0VSW@yf4#Ar
zn_Kqf+i_F58;&4Q`ZU!%F73@wu|r!ex}ves;Lhu%Jzw=)<@S`=V*%C$F`M1qyn7M=
z8Xg{&-ucc46qmn%zgDvwYh~5tz~8EFmOmJp_r))qplcNemlwgE9Z!juPU*N%9}?3#
zc`^rpuOXcVs`Dg#xKTDm^{8Y}D3o8k{O=Iq;o(%K_9BPFp`N@8I|su=O^h*_rm(Hq
z-OXhzyoCw2PUf!)kk$*>ZesGpU!PWc^T3!M2X^opan)qtNyWu&)l?C`(9qDRJpEch
zLm}!;AM(mVB_zFXNoQ2ro|o2<%#t%f3BSvES6DbZG&3{v36r?><&8DiET8Q}<)c?G
z=A8V#oB~uY5P{9><*kY9gJ}~P*H4tG#VbYE7;CE>8VJpVsEFXgyjS)LhLe|`Ufu!L
zy}P%lKfo=vjrL4Lf^%9m2BxQB#lQXzHFEd)H#0h6S(rTrKM!4GF{wn_zDBeJw^MxD
z@3B6C64z9%K8u2X^Q~S*mj%u`k*}LvI3kwN3yS(7E!IV+S!`KB>tyEDnFrfYBy!#c
z!79WWwk4&tl@(s+g}x9oAgivfc&ZHM8m^ym6!RKWf$~(Alw7_@8spSo5o2;>3ym-I
z`~fAGl`U)0_K8{uXRr3`i5fL_gmQOV4jPTd1~yoaPFM;bDSd1tOh0Wie$|IwZXN7?
zCX061Cl5}OBEt*PDCd>9L8RudlkxHK`M)Nb)}5bWwdAl0a@{&_4+B-$K227&Dsvha
z&T2L@j^1N-*0kK+-Mu7MS`^xQAc>}>B7GOp!ILe~uy2)~#V#=)EOifEff4~^GC9jf
z_Z)1r>Qrpog3j>MDrjqS8JWDO@7?eAzN1fHDR>nMg<kLmSG;FQyX5UWPoF5zMaz{Z
zoDw>$X>C2Qy!=OVewAe37VGCv1Nr<I0=!xSiA0{z)~xgaJI1HQnv@G^L=PVk3vHPY
zFR!CA4>>w96$9KR8b>upvL|EhgRV<SNqwsFXj;4D@9$6QekO=(Z#ec@M;sq8V5ECx
z&V`O@q!X~&(<?=Z`au(ZjQT+Lu*@HOjP#7i2M<=)@=Vb&sfmN2(3PpSsc%C=VVT0B
zFm=<;ATj8H(hdABabgCUYZ6^es;CHjGR2-++Kegt#ihY5jk8p_dGjVKA~JH)2z$8S
zNLdYfxhuh5Arlok**<4NR5PUbpL{$H3q{+cO~o4#&y&GdrsQ>A^$9qU@^_)`S4f$_
zg{Z=er^2qFW3rid?aK3im3=Iu(lwoG&QJt{zS1|iJ2vg-HhKAt+SfV-95m&{Gq&qZ
z9LA^BHMml8AFVjcN0zzxEV;NdA6m1Sde<&NqH>NGUXa+2+<74^ll29W*<y$Mpkwu%
zIX9cJ=MCGm&E_hR`>GLaBdt@{Tl?E<b7()iMQJr7Mkp*UB3W`>2!P+%+_cxz*KZg%
z1z_ssOs{tOXSR#bdSY?|zV(Y4joYtnpg#re8vhdmKp_x_gX8o|-B>SDOzROt9A<R^
zCUtt6YP(wQ?sB(Ji82>=dwYA^mRJ8VFDTQ{&{#8B4oygwmEcAU$7*e$sGSfL2uI4l
zw=IV_bc54A@X|zoz`8IM)jO(hMTQ=V#>(88A}6d?0%)2&%KeMoX`9jG)m&|)-LHwX
zCAquH7OpYYgdKv;R-ZyUgj-&ZEo@t)3%Gx||9}5-;@Cw;d_X`{1!%Rc$#CSqhit5F
KSyr0E9{mTR)!gd<

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_mini_settings.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_mini_settings.png
new file mode 100755
index 0000000000000000000000000000000000000000..6a6536e9330745c98d29b4cb2444977ba7a6ccd2
GIT binary patch
literal 401
zcmV;C0dD?@P)<h;3K|Lk000e1NJLTq000;O000;W1^@s6;CDUv00044Nkl<ZNK3ty
zy)Fe&6otPP1&s&LXercwDi5GmArwNRkPzah^b<m&&`1;nmD&U7xV3^-;RzHJvgF8&
z%$+-CF83Z&&R%=1eb(7$ZxQ)ZWPX|wu)PB8<%(IAv|m+VvjUgEM2_rA(qy{??t#G^
zSxwT=uLNv|6Ws!DzzJ{%Yyne1M~>_RxBxbR5nvAJ0!Ae{#nxG5dm1>)5CveBjd{$B
zr1J&=+ugtu&{K8niueoAC+RidzN@nxtk@_?egtlk_!!V%g58!Btg90U9dQbD79<`6
zi;{xx*bet`1S}L_-+@_4q4VnfwH-R;8tBa=hRO$0^7MZq@{l{pGcYcxR(Q!tb!)&*
zM&MA=a*-Xj4}hgiY+cfB7TeGvw&Mvzwa9kdOa6~Gjr-7&4vIG_5`n)CyJ29ya@hU!
v^li6iT$cz$UpR4BW-H^nYMHdc{gwL(YD}ORwW>B&00000NkvXXu0mjf9<i=b

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back.png
new file mode 100644
index 0000000000000000000000000000000000000000..a059704f9848f5e0018dceb35bd9829d94db66bc
GIT binary patch
literal 3313
zcmaJ^c{r478y^h@g9v3eXWC`VzB1X@FtQY-G-h55W-&8{kT8)iTMItgs1Oy|lPIH*
zWUG{z6m?ouC@HD*jh6GBKhAaD>w4ekdG6=_-S_X_{&@f6>EWcNqOSr1fz(`_?Y(5H
z-{PyJDEmg{qHwZBPw3z$^yUT&qv?DAWW(eJ0WcRfJp}Lq=*-=bU4SJB1Wsl7_zC^o
z-6#w$+nm0rV;;li$<QE>rBw`%&IkvDupl6W#i7Edu3Uq|SWGH>E8ZRD&a(qTS<bP1
zz&qB%hY=gjAT!}s8)23)6qx}wAf&@$*by87C58(BVV5G?FN%?H*bfz9I2Hbrl%KmN
z%#O<kV0d#pf`P)IVMMYy8jmLuF=j9f3XMae&`2~EfhJRMI0^~{`}M$O-uTR5ikH3P
zFJH0~6&@-S@+e4Tbab?NG}fHU4?&{IWHJ(kL1HinnFd0zn<J#hAUJ}Rzb)7U0tTPO
z6SBA**rG*x5I0Ilh0B=!41vvacmK;UNAN3AvXmiX=sYCa9ED`F7vuV&Ef9JE|EKYf
z+5(^5JOJqh2)I#vhO8dJD}RG!x%+oVi;6Nf6dIo;D+)crp38`01011?JrypyF=w)v
z6fy=6pn`%32z(F@gTT=VOavW6pd&D3G#1Ci;K>*a{<ocf!rR&4@QwsL3X35S&}av|
zts}w47G*D6NCd1sj`$nv!Vw7R90u^)H%sRGCl=@UuULv5AD|1ld><}1;&&H#hH`~m
zK`568v$OkAb=W$0I)lYo6s}(^)X%u>0X|CvFdg|^Hta{HDXf2BK|~W6OlA-Y0TA#w
z1dd53BS>T{9)Treg0M^+3Bw=-!++tKf6L&{PL)Yyk??*Kq7VrLTo49LLJ*1QAOsps
zBq4$T3>^W`0X&L9BB4-pG8`$Rh+J%*zctfuk*q@(w||X>?C{rc0UX&x@nxek4^=M%
zft2N3>}`BvhToikx_O6acX9)p522nKuhKu0sF4;NcD$ws0zUvI+$-}JTFU`$wGjPe
z&XEXum$0kBUg{ZHldpMCkGQ*WEFjF&e|e`{sdxNXsoTJ*vU)^{=tb-0>YBWd33dIW
zao3)ioRd0D72bVJeGw-$y|87&T4Eo*BqAxIDxylt6a(V+;d_-4#h&X77kVGm9!#q2
z$$kE2{!gU@=>=v#u}Dy~0cKRDflL0p^rfr(0c!G?e#iB0uYNbkv2SYIlt&trS`x|)
z3{_*Hbt=V?HE#opE<Z`x>9{W(p;ioT8B4xA)Zu5A7eG$ujlyjPi};@VtdAGRtxDH$
z(Mkq8DQ2H3s=KLZHHvyqNII$aEb^<3>BA>Zhyyj^7198U{1Ogo{0ZCBc!Rn$>ao`W
zZAhoJf^84}SkI?tSCu*u`gJQltOkc8wqD#>;ZCDPuU6CY*?ztxOZ?^2RN+W9!^xjc
zA5)+;lLLu!z%BKY%bQk?7nPT@wz|6B%8qTh3RyV6-B|<^iO;OJh&f3QykWCv=g!f|
z)Ko>L`Oy)Dwq--6QDRNVR3cw5a{9%`w<F#6E4D`;I<1q5Pc-hQS*<t7Agz<5wx@|z
zT5ZH?>Z;oH>$LPL^G-|B#M#!$8KkniVf9zCjj6GPyu{#*s~Bp`hR!DW!JS!R+qR@(
zFzIE@wu(GSR_NS0$wg05>pt<3wY15AM&6ian_OOf#{#KJeX~=;HaAizn_ba!>(+3^
z-B-q>wxp;uC#B~0CmL-w>KoK=b$4H?47|2*$C{*@1vTJ^b@qurLB!(X;$p=ZwjReY
z=9omQ%ugc&oZ)y=Jq!fN74fDM-6k7iC5dA^T|?LQ<d-~@RB@#`#(D}pUNkfJ?x{{!
zSJ%#T@fePj%0r3eAk?AUmr#<fy4Y^LMSsol*P|_QA=Q2__k%aSZ7U4swn;qoGe~~&
zvH#VCM9V?0#H&H<0G`>{uBLmuCoHj(hI&oO0WeL^($7%(hoRxSD8t4_yBeSSO<2Ta
zDL}SX29ytm)t{Cmji{!Eca-gbZ0qJ{^!E1F`k86#=<Haor7qQzn0T&UqYW`i6koh?
z0DMVT^}&MKpY^tpo?y~klZko^!y!o~ji~mk$#pHU1*!K&j5Jh4Tu)Uy-I-*ey2Uzf
zz}FB*AWR;$+PgsWk|ed1GKV%wA39R0)cKxcM6R2g+YQ&-Ziix5d_aD~!3Y<Y`K?3T
z+l9}Me(=!IG}pATv2kt&y29Ly=Iq?+{1)^`a#MlUvqibWdPP{3ifQHJ07{kDs}*{B
z1#0<agaWr(67u!g*)3w7+1c4IBsoE2;zP}ZgoKgS04Z`OVaTPUKB)abEdqfURDIEQ
z>QwBxuO|<xiFn`Jvgh|HYl#R%;#O-P5!69-9aNZH@9q3XaYoS8w1#%F`BGIC&o?ga
zi*o8rP@jQ_Wjtnhu~OSXtLctb;1kswsAZK+o45G-x_i)QeM?nT^smot)G#th-nL(w
z*m>3?CD8=o(a_n2UK(-E=aT;IV;LQ(ho|df@0D$y7#<$>Nqh4E<<4l_a$))^h+Sf9
zudP^nVW7%O=e|n{*dvHA+7xv@e7KGU!D28qk-baS#y5}>Fr)H#{+@5$D(m5Gqwdg5
z<?;DoJ4OB;tuwjX8zS@yj~uC`SX#!zpT=3V&#JxqZjQJAI`x2AXH}4)Qlx4VIX694
zAb5VeD<xpgCG~YDO|H^#URUUSSaIgdhIzuBgO?@RgDsnAe^ks^@t(Ba$<NO(@f$<W
zB_26zrQpk3vc-SiRBWV|S&{CMuz%j<U|;FXi#~(#@$rw(Uc7iQ+8Alq$%|<&7?-z^
zMpx$OMtnj#4_qi#YWNcyWasbiPmUZo?Qq`C*0uwCb*k|4RpsFotHnx?FY9mmY~T2)
zG)f|ooJ&nj%_;Xj8ytqy&kGsPSJo>WSnD87(*+sC@0~VseT{0tzMPE}*xK6mH1D3N
zK?Yup*Z8tu!Pt0rA&vEj-@EC*3QJ#M<DQUAF&)bdV(xn9<>X}e*9P}Y99rq*L2u5p
zvTn~AbpdOFci9bQ_sKDv$NNv&DQgT~URYSrG&9lfkM<FLU+E%#J54S!DfHFU)I2&r
zKi~fD-Mj8TDxgeK^GR1uym|KKI#to3zWIcBLPLFh!5a6YJ|_wa3IyNgXICDdPD!5Y
zG(BBs?toDhE$eZ00-|NnzqysWVQWfiY6s@zk}E#M<laq+n&!n(4e^uiuO}uZ4wupj
zPbvV!?lh&3z?2;O6fNU}>SPEmP_+NxL)}N`)_a%A`}+E}=*t>k?pSq3+OCw($_0-Q
z+Z3Veu2`h?4Vlm>Q4={EDU_xqPTriySHD58kD=!y1EwKaY=`nG^iX?U@5Mmw4(_(C
zJ9bd<czo0#%*mS|VO6@UNq%dOwOSr(VWCu;JqdK@ebd*`@$HvNo53O4=;KRjGZ?%q
z_&QPYsudE^X!_yP#Dj775X0NmN=r&oY&uREQDcReP1CLQbz_$51CO7{=R8t(@_zsR
z{m!LOX!@tt-6iy@6E$C|2edOC&s-=kFTlrrj6ggMJrGePuFE1e5i8Qu)1gDx_I~Hz
zv|NtODoy*crt{$acR=)1=&b^5h;c_p$CmL>*SNU2r?5W8vTyDl)(_wEa6s4L)g+hT
z<NXYS%#KY-NlEJur|+^DklL|~tfIkZnxZe;1_wWXRn6$EWQT>BYR#ki!yi;CPsS{J
zyRrkK?=Eq{V1sYZB}kGLhVS3MZ&#U7n(tP6EU{pZ8TUrH;+1Q}w3<wiX|9uC4=q4~
z<G{6b%Z-eTqVgdlTKREJb#)(B4<kKq&Tg6rH$I+Oy6fQy*~BP*7UXQJFs7q)hhc37
zP!*M{gRg{NF-kf9UaVnQlLPy_&BEt5Dv%u~;ybnAo#PX;=O0Z6?^!mWo$@u=S)4hb
zj~NzOETpoY$$Nz5+<9O*6#ljCCdc3mxXgKTze%g}=J4XZOWDR|r#oi+0kI0SU}Ac#
z$Jl9KKE?u5Gjalwdu{Ue^_~)?yleXTE#KC*f;N?tZ>PIeTQB~ExHx#&SK97M{vVK3
Bjrsrp

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back_ime.png
new file mode 100644
index 0000000000000000000000000000000000000000..8f00a64b36033a7085c218336a0d28aeb0d82495
GIT binary patch
literal 3419
zcmaJ^c|25WAD^*D(p+2GjHz^$*%xNaWF14+?3I}9$Y9JgGnmjDDIrCQ5<^8MmGvrF
za;JoZH<ik@HEou%%)JWbR`2N6ecwOs=RMEooacFd=eK-++w(am-P@C<tG!wq1On;0
zx;XhL=b)uqOGEkGmy5zFCle7hNaV{46U8wE0LY%rV**fDE@Lm?12EY8_jLkf5J)wZ
z;};|f@^B}ycw7Wyi3cI(@|Dsc5ZPADXRsmx5tIq+<wR3pGflt3pd2;@7KryidGH;9
zaE?p70Pv0X^kc<GvWRS$?KUV`Oj0V~0wM-f%#Df`lEf6)H@zg~dWnpLLBFwxA}O%H
zKm~btLmhbn0E$Q8;Vcve4YeX7(0II+6~+>ZL7{O-6dH-f!qG$$4o5<vpx-Z;(wcxB
zM)GlT{%%XTqrk#NB0dR;jEjpy#9<LU!CoYqNF*Xr7$gP*S8~9G`=dn+F+5th;fDq%
zK*$ns_#zH38oH#B!Q{n=C@>|`zg*z*Jv{za94-7FC}qfyVg?_HMxc;f?vh{MxP>Ag
z;J+~bkz44upAR5?03k0%z*6QTY{L&>W$gaHp(REo8j_cQqf81T%8AE{;R4YjS0@Tg
z`3Aw}ut`J=9zZdf1UR0F!@zM20vpc25EyU_5sk&MF?b>dga4uDpX43wad>9}9*4yc
z2xv4F@8C?ZcR)EQCu;)M31{^~)-_rvVnnlmAGSG4+uvoe|5ujeC;%8Dp1_aCi~3Oo
z-r+nEPZ-YQLmeHzWgYsn2ZP0lULsm7CF(D~od5wR7GOIIcwFeWNRv4KfWit*V6oXu
z6dX{x0mrc!M7T8(i-%*07$%mDv&OKj!(iX#+5Z#4zbaKpQF_Av0f=NpAmEr7v^Cty
z3eAM0(N@-QCV*kU0S16av8=68C<YORR6;~970>?^(+`reLYJ0*w}x`_cXI*J%8n8!
zTgUkGFGV2GvPf4adq45Oq(sNvH*i%)S1V~O<${ixa824{4<I^Sf6m1{uiToMzq`yG
zJf`}J@M=gTTo~v@(P~XLbHO|AYMyFCqu=G3BvReGS8hU??PzyY-|1A*Jg|NDzyX@x
z<fFQ=!n_3J{L9Zd$ci`bw|$wnc|Kz^RuuBN&{Mh{{h~Ycq#Yy(5`?DGmqwdGvf<Kr
zHK?-3Rxvv}8=;!@$)(pH8Av&;Wn^=R;xxe*@6_IAoCsTBWnB)bkbjW3$s6S65r>;n
z>k6_>^^hOsjP2yP8fV4E-m9snVQDI@&z)~~aTHPm%J6`PqTcS8*ifNDn;Lxaxcb+7
zV;J4aROg4;_oWRj+LL-0Oe<Yn;E(UPkaE;k@U7Q!GY<D@wRl}=cTv$i*E33@I@IR7
zmu)e~Z0WoG<;|Nn9bw&Pf8WB<BotIo5D3J_h2LLIrMTX-@GV<@WcIl<;A%(qz@BDt
zO`5^wQq0so#mbV0XHC|w{S(94{H!YUD}_uBwmPd;Sy>rE-v7sIYAIoUdid%pO8ooH
ziW}-flid7KJMfh!5plQAOqQ-Ya^%RZTL-^>*(>Lc(G`7teLGH>d&C##Bs2*Hg7+>P
zuH`<1WIobd9iCZUUcM90xN}&&blt$zoVN94y@<%jb%Lys%1Q*hG<B6vLFBW_b!)7m
zhdjjz#%nLpnwqr!r2s!`*p;H^*d`K*-sAcwfQ1BXr~PZSXH%WM&(BLX^T#rrOYEcK
zS4X}cbM^Acu#4CY`Pt3QZTEvh;wg`&KfqwHh2kg6u}<X5O~;>(Kf2_mxm=@_Tj+Bw
zXzL73U|k=SeNQ;rO+1oAx<r9Z$2VLV93DPy&MVq{J^9gfGXi1GihL@}>`kaqvcx*w
zwm(Q?m9ChcF82j4^HA?)$nfJC85y<bYcVgb+;+|gc^kF5BQ;4gIjdb(;Ps9w-&ZGb
z>%NhKG{fJFc^BXs9zJfRc&as`J@DH?V+o@pu)FZ|X;E*)^^r?;#TvuhlbLr9fal3R
zJHtHO+`1+nUXVtdH@PYsuN7S=J&{~r01?|`^1WP2G9&y0t3p0grH_YY6SZBPV(g=W
z1VOM|q9*spfRI!TdV$XHpD{jb#%tg@#)v=D^=}Pd8=QBh2g;|IY9q&fdK&lh`?{Vw
z=S`b7H5eKiPAv>^J(1CuesPHQR(bG(f9=Ek{N{iaTrSt&%*-qjngQvbz7XvG=vda^
zTnmVIL9N8f;O-u3lSV^B1Ie0(JrUAWZ}U4<zD<@g-Kx^8D-Lno{%{e$el)(Wy}kWq
z%)6(1UL^IHrOFN@Sw%jz43KlPvs-qoyfx!3-@B_Rb}EF|g=tZnRwY*ibdl~HJDqg%
z3;){SO?}+-^7FBmtE&}x^?-?Kwos>eU|_)iRY%qtvI2_HhXMz@B3Ly+t2cWVo*nAz
z6KN(N-&oxn`8YoLOm?<RyLkbeIdW1Aa>AwD&R+I1_T~6>(qhe>nqO6#RFFr(;sTA8
z;$qf%ah*-v^y&7Fj;}}BZq4ZQFBtS2iZ^d0-$_`JNCfUh4c4$|0S`XX|9x4*k3MuD
zK3V$g-Sy=%H<e<TVCM}(Y-<UacA`uwwR&$Hl}M}Bj@wWNYOMph@&-PA`oyYp2N!v6
zAclt35AL<!IcHveyeAA>8C3JK8ab<bNM}+*thrH*97Ctmw^Tg*I6F2kp(M;9OzHYg
z^hCQ`G9|R3^%fvKAJzL!uUxn!5~;Ggh_dLl7HTANE2_U(Ff%&=zT2ITJ!X<TpPTe4
z)h=Qo(`b#ly86!ES7Oxy`jW3(x4LzJn%h)V^mHH4a#jyD@1K2rKX>cak6XG9pHOCP
zu#WTCHdD6f36kGZ+g6;j&C<fcB7q3xOL&ySpK^B~6?w?ef2D!NRUn0t;^sk7&7<(K
zK!1P#?Be3DRoYcNzP6$OXRkJ@qIWNftu_+YlB8*@Q?a$cIiD9^WW^hSJo)-=P2-VX
zhkMUEKd2y;ZFM+Jw&uiGaeD0AzVcyRUEOtwXMl^#y4BY=ZpfBMDvXzjBV~@Rx|z<b
z2ImqBh;|f{$~TpBhi=xSLd1iM;O4#ldIwFYB=e?#t505x0HaNo`u=o18P;dOYu->S
zZejdfuDi>!=-jzo9qA#`YwEG8<O^lEy|VMLRLt|<yu!l5j`_q^J6g4k{Idt=>&AsM
zAyKAqo8j$|egOe_ntZIbF5#hiEVxKLNy=I^gJh_$FFn1f4v<PDk`JI8wtksio^On9
z2g_raaziv|X19jC#?mIn$jIoeqSm)6aO|D~-89*_4b=RhF7bGt1hJ>FE;zF`%1(U_
zB3`ph<)T53OSxs^4enrGt3}r&vq*T5H<<9*#pKtcHr^$b6#-XMcJJC1tD&y`FyL;<
z(a@-Uzs!U(gjFY7g7)k=fWlyY@)$oq^61~F{@>>k)8f;<xR?aWfv~Vz(2QfC-2QD^
zN&2xoiMhG?7t64n1UaPpH?NtCxs8pDUK?Prk&?tq25Ya|+c-tu@AZzeoX}}&YvZ8N
z=niF6yPkHANwhnim63t(zA*`EoN(co4y%&yT{V4tmwKI$me44*)OQHB2!O0l?zkDQ
z-jm~T5pF~EcL)gyDcdef7j;Ut^kj>WB-(CBmU#!QcXZ92*4BeEdZeSyb~SzP`wu*X
zs${rh;Cg$LC;0(YA-BAqJOHFAutO9OPZu<^C$!#QnFHm)6m!-$Z`rwoH-EggMJVR5
zpa&KCJ)@DUkC$oj-0D7RxH_CrX{NM9b<k1l*6RL^qfz;mK8H2sQz~+FRobry7Uw=@
zXRpL%Wg5BHH-1??zQYSLopk2*Iop$GCnhGE5jN{YkjWL|+}zw_Qcp=^=A1-%T8@{L
zlw|SmV;*kNByJnIVJv<u^+L*K+daKhGrG<oO+ovzR=iGB#j8-rKJC((*%w!io|^JX
zq9xJZe)zOdR#uiWUPC~+w}7j1dwP04nwXe`C%bNpK6-JR-6XBI_kDJ7h8)DxGBP1H
z`c6*E*53RS-d28lOZ<sTrD=A{%F;AtDXO&dZ)JB*$PAr9U+VRxhY)1ZboNjE;v<Dx
zF{F&wjQ%GJSc8UuV0@6@X-)lfiQvt~YHivz+i7kkB&vgHv#D>fv=|ngWpeDdiku4;
vUv-jU)y;74%v!hf?_V>%YU{NYy^_Enpa;lHSbhk;^t<Cq^>nIqpdb1Vu)fZ}

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_home.png
new file mode 100644
index 0000000000000000000000000000000000000000..194d39f9f13753931c6e669183334d00b41dd776
GIT binary patch
literal 4428
zcmaJlc{r47`(r0WWXU>>Ez6k2n9ZKCM?$tHnH9y%7=uAcBWrd^$`XY-B#9|ekyDmr
zsVtQ;A}W+E5#=|Xb2`88kMH{4>w4ekdGGh$m*;+-H_hG6L3*3YHUI!1?c|8_;E%q)
zZgElmGrRzb;19c4cD^i6I+YboU{U}!WIB-obP6K`Q9LLFa!hzP#T)<-N)GYzW%;`9
z!;<J>#)Mxu#_TW#pBex#w_-C0q+=8okVpv%p;>^wv^)R-L&z2&A5&MTE5nu&9O4+u
zq<F@<d68m|kuYSCl_k)ejpZ{4qp%1-c33Da0?W1l{lyo{pZ@|wK)}CHSjQ|te=Ftd
z>JGG}Gbun*V^c5*3Wotv7-N{JDGCKQ0>Ys%1Oy6$z)Zj}3>JaFLZQHaE)ZWDlT5{W
z;OzgA#ecH^1+!QTECdoA9c>(KVoYZSL0}jR1_Fgc;BYV>0~`@UV-eV3T7=eb4me5#
zi5bFRh0tlhUmOWUdL+vN#Mkt16T%p-uKzNoMf~F^zRMtN0s{gwhC;%^e%bXGb_C0V
z^8af5SL_I{7zPF6L5ZM8GD-Y+P_=#&^L_Wf1^q(gYlGd-4B-cb5Q?LdBEu*&mJ`kb
z#Q$PU4k2SPa8nADNJN57i3m6tK|qqh1UQlahGSqR2r}Fh1BaXb=JVg^ZEX;y_DF=S
z2^@)p!R$=;+9PfDLUH^7jWod_P`_!NXb~&|jYRn^JA^MAWr{%{k#M{JNsF~*QV1+M
z(~C|I{hbBw!E_cqBACtq+S>jVb>JRX0x5*{3#k7qP=DKvqcB6FC}evkJq-Alr?Dab
zO$!*3L?#oVU<%R{0Y;Ds7%&=RVhT3Fz=<Yg1R734Q$hdGlmEkme`hKm!ncI+TOlk8
zi9`_LFf<s2f)T+m7zzz0Qs4wIg+MWdlF(=<lz;(2_$oqvCC`5(({B(zLw`;GEe-z5
zzr{tN@hghSFP)O-o?rRpjCaD>c(Gs29hP?Y8c~REd174Ol2DN;qHtB-S_`I*KzkNr
z(Ru!QpVl0@5y%S{tiqhaTs+?eCvk(FYlgf_dIy~5f(<;vGq(E&UU_l)+ECsBVM4w5
z&jjy|{)UsSheu1bW|9iQtsAQ{Q9hr0QBTf)i}>=bZ{suO+nb0A23l<lw|v-hpRBpf
zf^fTh7>6gpDci$Q*p@UWY5q~BtH?0Oax*hfn&)S|4Y&&`4^@|y9@tS|Bz`y{F2O8;
z+7@YTkx&L?-?5NhLjr|zoVDYg<&0siO?hg(>3qip?KZ46lDA7!)lch^u=}<T5>cGR
zf^oqv!PD6{@%{ikK#HRWCq3}RKp7xF^lE2JK!ZS*V7!Bh#(=P)zzx7#0o?Z@p+G>Z
z7+O$S3dgB_KD*Xh7Uy5+#QiKH*FG*dC$ew5Y&7?x_FU@&`3yapSgYO1xM}+0rdED8
zYa|qD)%Y@0F+pML@OAH$-Hrb9p4bvvvi;?vPa=8Yz!ZT8RS$k-1s1o)%lOWJ7SFVw
zeA?I7*MI5oo0e$$WTi`CFSGB^9Y%T7Yi?MCho@)RnY1*gq1mtd<E&To+p>e<E2^Bq
z_Xbsg?M?b`sI#<?5R4BVk8h%n-_P1ndo(A$#Ox2?o|17zpjp)N^ivmkdHKRql@2X7
zOljUh=KSN5z{W9|!#YYwwrYHCl#bRDI@YJBsR1}$VxVxUlVaDwOhBb|EFNF{eQj~F
zXnCf;UvyVYk6qrDn?_F9n0Ru;Vw)9UxNH6^j|Utd7+5I$Iy+LPP0V#SJEhdF3yN|l
z4;FV33qTb^JE@Z5yZ7Yh=bKhmRvw$_E7{2NxW>}i2@%?Kch2_{w)!a+bSLnhl^Cnb
zj!vg5wBCQhdl6G1QX<@j*jCnr%W`I~F@YdI+mZ9Qk$soqc=x6!?n#Swi1>V$Vi$(f
zoh;vQ1JPeZ*4C}7Zu0;oVAuWot(F!hY*qaXV}+@L{<Z3Ln68*|o2>%!J(UZZjVr2h
zs;V{3?8SFAx2RA3=Q-8Oy1YqPzBoEabki%RvOY`w>a}Yx%W`uUQL*o@SG<254;t1x
z)019)3OHC^@xBk*xSF1xuH#Z@`~#*2(qo|n;R5rPddgWodC1D{f!9Ct_4fZXFf^P!
zLaq$Heqv?T^h{)X#bBP6us$|wZgg{QZth5eaY|3dnzvcXP{2sw+Lwz{!Ad!C8!xVT
z-pK!{BY59g@k(CJ^|zuQ8?(N1PB`lu8pcU)7<gu**1ZxZM)en#uVo~uIvhNB@Bo!c
zRanmxZNSIZ)}A9gRcRorIrvg26x}YnIw{x3;a7w#zop^YZYC|<$~6@~Kj5aVqoa_&
zb0sf%al6%eg2Ss?-Mq{0@Cz3%AQR0BbtYLW>*HUs?F=>Jb0;7A_s`GHw(QW<d~m&`
zMOE*nMg#t0NB{jSY_568(p2|dE|+^RH#fHyV)Q`-{4RK~)UN(n5@5nru~`{6H8Zm%
z+ND5l|ByW;w_`g<awE9SQfcSTofFE+)qhN!zfHDs#3)L2UNZA`Fz&l54QkZV*Vos~
zGrIJ3)ogRK#nO+tr@8pR*RNm46Jepm;^eyN<M`>7bde7EC&b(*%bOiTH9m!@c-Y$=
zfQ!0Uvs-zVb$++1c6L5QgQd`ZkeTn!Mf))qBYT^UjkvW<>9Qq<7grVW+A%q`4Kkex
zq}=xI=+?c^KR<UfZoaJ5>C99`l~#V}%@|Zw3e5bTK`)c&6eN8j%9@Mmu8^}OhJz81
z`m9qgZ_BORE)?fRoO)gVMOWFS|N5cZ24u#qUQdpKtbKf9bCr*Gl$-A%aqSRgI|Igv
zKcz^-_%cZe3BQL@ZddlcUs_snmtEd+Ov<*uyr|h|bTyiiHh9G5^n|Y*BQ#^6`8t=2
z#Ha6fl5}%%*}w*8PHit1lhN3`sGFLwpn_j8sD*M3jS3P{BTHY)38*X^)!51s19UlJ
zcX%P$g$D_tKI9MeuZ0b*Nz_~TsUI8PMh4|Ir9hl;BlFD6%8qUitdU*4+!Uee#iNal
zjW0f4UMmbsJVMi<sD5(P*G4S-3hPW@fwO{EWcZm!%<Nj!`6(MC`PQMM1!HLvYL8;~
zE@;~)EFSTP?vmQe3EzigyJ$kiOQ($6x1AFc5WZ|Kh2}sHBtAv}p7!RXGNMhDC5B<f
zG#QWCADp06p$w_*jWqdQDWQU%TrNVSU|)i87Yz7KJh@tLJ@)F*rv;#%@*8OPZDn-B
z9hZ7W!`ZfD%{<z6AbLzbOIw2bdj6i2WU0!OFzE{NseIO1DaeGt<g^JI656;rSq0Ea
z|8`nSpQA48$bzqgd@r|6;dtw&pE(l=eH@YzSYvxsBTxHIO-)U~d&k<tEvxH+I_yX3
z3X;B^D=RCFcU>7SE>EO~rB`B4#MaA6kx22O!8F?a31oXrOpG+t#lMm!tD<tDjzMub
zekm1#I8Rc9Rak74TEwZm(P7t@m$wt4%5`vjQ;>#5EW&J5JQ=2w_|y6G60B%nW>ZrW
z^;)oZxBuLolUqN7YWr|FT&*OM^FHI_=Qk}|Q^}TR@47<k(gMhD#PLN<nVFdv0(UF%
z^N%QZ{O4xOriOm=g|1iFq?VYfhc)gMLq{LzMw*n)oD{tfiBJ|79gh-{-7I|pquyFS
z=T_YzjmbtIxLa6rs9FPp9dC`fg-=#^@Kkz!aodXGwpSNBu&L;eGs+v*<Q;flUv^g0
ztZZ#OcD_yOgD8nD#4n#|m|k(l4UAD*n-$|G>1bSBTmT+FW?;WHP}%WRIZU93F31z?
z9R0xFSe?(FoSc-jTjDW%K&LGlhdWYa3NMX!qBYE-5>$JV#2b@OyzK`mVF1Qi`LLJh
z$IR=+Kib!18P!kD^4AV?HWSkGVNO#ZNx+_=fjT>+|B~lwc`+xa{-SEnb0{`W_Vb*K
z;_5NKh=>R)Wo2b(H#*30W^e3uO~l-+jIY?lXs%F0fZxW#)O0W}u??TBUub+dRv!!w
zt5KtiEvTT*)_>@imY0GNQi^ie>r3x#p{v<lu^Tyobn32hNyY0UvzK>sUTP{R=v1o}
zCOO{cRZqp|t2&EOz1tp6m5z>%s$CvT-AHapxcxKt4%18`+31-t3d--XCvLx?p?c7I
z#iG3Iazrfd<T+d8_=~;${o{$GnPl$AS5t5Q9P;v)N`c)7UHbUETImM9nW>~_va4A4
zK8Uu73ckEEv>N3yY!Jv_!wFQXuCw~^>PL~jwZS_}2p_+NGdI&6$)29iXW{wZPA9i0
zL_8kcZ*QeEd#JZCPS9Jz(b+k+Ox4-NHl{um^=b|DI>3&0sL}rNVB+km+rE9ha!R5h
zIwzM;e2+6y`Oc*S-cr|_-wnTf86$vi_{J_p$u-;0Y|0-wXx=^|wR~JJalzrm$jBBP
zi^UE-vYEVXR9mx}E0bpL^aMn#ZebGnC!E91&OKRKS=%o=s)QQVwc6F^w5G(WiKwU5
z@>}J5(e6=3+@89J1+fRP@6txU2;#2~bwox+4uJz&*(3a|!2!is2`$}&-y5jec>$=g
z!^#rp)Z*Xw6qIrBWVUs$DWJ~k<lfk@ycmto_uFO8o)PbFel3ub^hrcgaZ}OA$5HID
zbk^nRAM1BNoz2s=(8dTN{Dk)Z*houDn?-+_E41F#euH~Q=A{uxO=9TTF)K;g*`&A$
zhqn(NzFyNC!0%qZm7?2ZlXehSCTFxSc0yZ8dHz~^lFO0%$Je<zIXS7;sriG|5C~+v
z<>=5K`@1{mwfySq^9=6o3eMo(MOg1RBy-Q>$LJvV5I1ywem-m^nt3yOU<8b#J#bVs
zdfVmu)j!1U4{bSn?+o$hA6dJHhK3+jRaN&Z_#2&{I3we+7ehnp-CbSiWALKW2EHeX
z&omE{{MEd?>g*h7YR)M~`RmXDvF&PXjHP8fMok`G`sce?8o%yh+}!#GO@jI^Nr}@h
zokF~=Y(S9$-g<jE&$=j-x@U1|Z?OEMLiCT`A`=seckGgX$2Q;S&tun&3=9k`*b6|~
zXk76hkA9rgF)Ca&%RY39dM7zuwa%wXZ{7Nxg6xO`zZ;W#OUzJOAP_MNlJ@9eeR6X0
zrxLShZy#^()xo=|KnZ&qy7LwIp8AN~WW`-Hf!ys6vcNGW`F)H^4hpJHJZ_Ylkx>l3
z<zDP{GE_9NT!PGVc5>n${|OW7gPi;lU3mFB-ekXJsrKTUUGDK`RM;S4j3Lku>3L3U
zdZBI>rF{y5l@vTDd@sNXY;L}3c(e&C82vo4_H=pjLt%=@%EXOF#PzXYgk=JtT>ALJ
zFn@!5yOGOX0(m68yKIia_Z<KZPYP>1_&#o)nmR1oO#q$o4%d1i7}c5DJR#T2dE_tA
zdOKD9iFHRwmG<5w!P0VJ({Jxp+5{)I4XUJCS1cITnHk9*(;{x9d71ra>G$m0OyUi8
zDSiT^p#7Sj>F;6cde?iKq43eZz{q``Pd9S|XAa)Yt@VL%Sm<IP_g%OPcsZIQbl+8W
jPDXe?;!D$(1Qbwx+-djQ#7wVW|2LfM+;DY!13CW(ADOg<

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_recent.png
new file mode 100644
index 0000000000000000000000000000000000000000..046d850f3e0c395b4893b982d9282ae4fa395cc9
GIT binary patch
literal 1675
zcmaJ?4NMbf7(PW&QCy61$Y%6B-PDEa{j|OIItxMzTDANO-H^ex_q80*Ub!An@DFht
zQ(U&V;B-ussUdS4vL8?e)8fw@IK{;HOGGlA7!{DALnXqlK-FZ%OYXk!d%yR2-{<|y
zZH|pz8W`|K00cpShGqJAX*GG@iT=_zrwms}ORyMe5)*i<n9m3R3TJsUfDLxW2I2w3
z7UVR8#SrB8F_&l(O~#cP3vZV(ULBd+?v&6Fv^dP|WGq=ggw4RlIkZSm!%+n0SS^yQ
zG~!054rFl43I&i*7@cS-%(Bod5*7+Cc55U9b|5ma+n()kY1~?5*sey}d&L+6537h-
zT4aQj$ruakcmcplnG&_&Bmt{v8KG3FRAdND;)DXj35<}V1g%jhG&l~AK8WN^V6B>X
zeblHg>7+$6MA50iu>AadS-xDx3pR|PX&S>xj3iM>19cTRM8=IeT=RSu^uT2iIH$<*
z4%lmvG4r{i7Lk~agkX0Xjn51_T%(DSQii!1Cq~F{%x?F_HLUFt<H2(pFV%J>7B~SG
z4_th%V3F!!o#z8fxqG!EucE|86C-d^QJ8E!Z^^X-hiK4i5$Q(8a;%0Xl>j%JDO71z
zkf?&8Sd<|t1|?}iu3$+eO_EBVotNSDx`-%+J}N>^QWQZ%DkGw(@CaNlEow@xSEzhg
zgTo~<4h!)4<|N;v*zi|kH97$>A}=KJe73I(Vl#M=cV+NSSf?AVI=s-xSU87QxX4?m
zk+}6h;PL<)CGd85IMW*LB`j0~Wnoz}jsi-lKou-QqiR~NMCCMTma_^qX;E8|Q9S!X
z21hzol1Py_eS|bBic*+KLXE0agc&6Wl^Qhzl0g9jl(<E$#&L#5Fo`1OZJrmJ$tRLJ
z)VqB)8q(p}Z~=!jQGzr&_aEY)LeSW9gFZabef8e8rp)Q#vrhG1v3``f*E}}{t|)8?
z-@Ru-OmpSu9dC7%K3W*MWKZ(lO1@+6g2>{EZ7E9(m%AM`<-K8I0DZz*buT@?b6^t(
z8>v5SLwz>YIc{HV(uuUGFf=oLEbf7(7mb;U=j;rMjC;^}{le3zzpLxZnvXnAXnL)(
zIR9&9-w}DRU+@C5;=+vdnDN!@+A?B$j_ktvuEvO#klrpZ|6thmlF!KYaY<X#*v6pJ
zG#Pqq(&eP?`mL8XR=YQ?txIiQ)!)H*4!4|Lce{%;p1l}5em3FmoNP*p5|8C>ECeBI
zq4L22wV1l-rz%-;n#_Z4xpWPw{%4Pncb(eTy1x1VUjIddt?GVU6PWr{^TM&F!4HZ~
z-#oOn@s_7#=xM_z?`~T$v^+C!Rma0e57Jx5%uFwu<bnKFLjJ=6j!Q2Z^ETu+1@~Ue
zeIB&`4roO7KjnVI{tfnnwG|fwJ^k(FiT8Dx(}cRdb4^sa@vlI&@qACEpY6SWj|bIM
zL{|k>`la}F?Jr*QTl>k(+9$8SQ@wM|(d$DuCm-I?+W9y`@uX(8Y?F?1QLf!*tXb!`
zoIcVD*0e1pD^9DsMNQ1_H+s24ZCd-GHZ0|bi*eKAO20Y0eA~@VmaLyO#sACFlSo<B
znZc$N!5dmu->Qeo=U97Mg6>#P-8Iqo<|Osaod2_}=E}6T?9}bo>Nc-i|Kp94@4HHN
z%(`+QGz0&ouFI2nw`|wI)%_D1+M9Q#K8+v92)%u7_TFz*A#bMC*YE0opYG1S-B>cv
zm2k&8`I!5=;=TS!2iqfLd8-^{s5v?2*Q5`75Xj+NUOREHXTgjqxaY)*!2ldua{O$8
T_{XGa-rs{EGFo39kzV{Cq#1sO

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/cid.xml b/packages/SystemUI/res/drawable/cid.xml
new file mode 100644
index 0000000..614a050
--- /dev/null
+++ b/packages/SystemUI/res/drawable/cid.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (C) 2014 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
+    <group>
+        <path
+            android:name="torso"
+            android:pathData="M35.616,28.128l-4.185-11.17c-0.37-0.966-1.233-1.561-2.11-1.862c-0.638-0.219-1.94-0.47-4.366-0.59h-1.91 c-2.427,0.12-3.729,0.371-4.367,0.59c-0.877,0.301-1.74,0.896-2.11,1.862l-4.185,11.17c-0.496,1.122,0.396,1.59,1.148,1.385 c0.809-0.221,1.518-0.506,2.084-1.866c0.309-0.742,2.818-7.124,2.818-7.124l-1.542,27.45c0,0,0.603,0,2.095,0 c0.967,0,2.209-1.01,2.419-3.358l0.931-12.818h0.709h0.104h0.562h0.241h0.005h0.085h0.005h0.241h0.562h0.104h0.709l0.931,12.818 c0.21,2.348,1.452,3.358,2.419,3.358c1.492,0,2.095,0,2.095,0l-1.542-27.45c0,0,2.509,6.382,2.818,7.124  c0.566,1.36,1.275,1.645,2.084,1.866C35.221,29.718,36.112,29.25,35.616,28.128Z M24,25.331c-1.817,0-3.295-1.478-3.295-3.295  c0-1.817,1.478-3.295,3.295-3.295c1.817,0,3.295,1.478,3.295,3.295C27.295,23.853,25.817,25.331,24,25.331z M26.616,22.036  c0,1.443-1.174,2.616-2.616,2.616c-1.443,0-2.616-1.174-2.616-2.616c0-1.442,1.174-2.616,2.616-2.616  C25.442,19.42,26.616,20.593,26.616,22.036z"
+            android:fillColor="#FFFFFF" />
+        <path
+            android:name="head"
+            android:pathData="M29.081,3.012l0.962-2.35c0.096-0.235-0.016-0.503-0.251-0.599c-0.235-0.096-0.503,0.016-0.599,0.251l-0.997,2.435 c-1.1-0.252-2.503-0.348-4.18-0.348v0.006h0V2.4c-0.219,0-0.432,0.002-0.642,0.006h-0.001c-1.396,0.023-2.581,0.124-3.537,0.343 l-0.997-2.435c-0.096-0.235-0.364-0.347-0.599-0.251c-0.235,0.096-0.347,0.364-0.251,0.599l0.962,2.35 c-1.277,0.483-1.955,1.3-1.955,2.612v2.752V9.09v0.784c0,2.411,2.284,3.151,6.377,3.218v0.004h0.254 c0.128,0.001,0.258,0.002,0.389,0.002v-0.002h0v0.002c0.131,0,0.261-0.001,0.389-0.002h0.018c4.242-0.042,6.613-0.764,6.613-3.221  V9.09V8.376V5.624C31.037,4.311,30.358,3.495,29.081,3.012Z M20.407,9.78c-1.16,0-2.1-0.94-2.1-2.1c0-1.16,0.94-2.1,2.1-2.1  c1.16,0,2.1,0.94,2.1,2.1C22.507,8.84,21.567,9.78,20.407,9.78z M24.237,11.303h-0.443c-0.326,0-0.591-0.264-0.591-0.591  c0-0.012,0.003-0.024,0.004-0.036h1.617c0.001,0.012,0.004,0.023,0.004,0.036C24.828,11.039,24.563,11.303,24.237,11.303z M27.625,9.78c-1.16,0-2.1-0.94-2.1-2.1c0-1.16,0.94-2.1,2.1-2.1c1.16,0,2.1,0.94,2.1,2.1C29.724,8.84,28.784,9.78,27.625,9.78z"
+            android:fillColor="#FFFFFF" />
+    </group>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_dynamic_qs_live_display.xml b/packages/SystemUI/res/drawable/ic_dynamic_qs_live_display.xml
new file mode 100644
index 0000000..fc1c4d6
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_dynamic_qs_live_display.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2015 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M19,5v14H5V5H19
+M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3L19,3z
+M10.7,13.3h2.6L12,9.2L10.7,13.3z
+M14.6,17l-0.8-2.2h-3.6L9.4,17H7.3l3.6-10h2.2l3.6,10H14.6z" />
+</vector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/ic_dynamic_qs_themes.xml b/packages/SystemUI/res/drawable/ic_dynamic_qs_themes.xml
new file mode 100644
index 0000000..14802e9
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_dynamic_qs_themes.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2016 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M21,5V3h-2v6c0,0.6-0.4,1-1,1s-1-0.4-1-1V3h-2v10c0,0.6-0.4,1-1,1s-1-0.4-1-1V7c0-0.6-0.4-1-1-1s-1,0.4-1,1v4
+c0,0.6-0.4,1-1,1s-1-0.4-1-1V8c0-0.6-0.4-1-1-1S7,7.4,7,8v8c0,0.6-0.4,1-1,1s-1-0.4-1-1V3H3v2H2v4h1v10c0,1.1,0.9,2,2,2h14
+c1.1,0,2-0.9,2-2V9h1V5H21z" />
+</vector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml
index 549a239..b7fe5ab 100644
--- a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml
@@ -1,9 +1,20 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24dp"
-        android:height="24dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:fillColor="#FFFFFFFF"
-        android:pathData="M20,8.69L20,4h-4.69L12,0.69 8.69,4L4,4v4.69L0.69,12 4,15.31L4,20h4.69L12,23.31 15.31,20L20,20v-4.69L23.31,12 20,8.69zM12,18c-3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6 6,2.69 6,6 -2.69,6 -6,6zM12,8c-2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4z"/>
-</vector>
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<bitmap xmlns:android="http://schemas.android.com/apk/res/android"
+    android:src="@drawable/ic_qs_brightness_auto_off_alpha"
+    android:tint="?android:attr/colorControlNormal" />
diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml
index 4ac5b33..e17b533 100644
--- a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml
@@ -1,9 +1,20 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24dp"
-        android:height="24dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:fillColor="#FFFFFFFF"
-        android:pathData="M10.85,12.65h2.3L12,9l-1.15,3.65zM20,8.69V4h-4.69L12,0.69 8.69,4H4v4.69L0.69,12 4,15.31V20h4.69L12,23.31 15.31,20H20v-4.69L23.31,12 20,8.69zM14.3,16l-0.7,-2h-3.2l-0.7,2H7.8L11,7h2l3.2,9h-1.9z"/>
-</vector>
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2014 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<bitmap xmlns:android="http://schemas.android.com/apk/res/android"
+    android:src="@drawable/ic_qs_brightness_auto_on_alpha"
+    android:tint="?android:attr/colorControlNormal" />
diff --git a/packages/SystemUI/res/drawable/ic_qs_edit_tiles.xml b/packages/SystemUI/res/drawable/ic_qs_edit_tiles.xml
new file mode 100644
index 0000000..218228d
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_edit_tiles.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2015 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M4,32h4v4H4V32z M4,20h4v-4C5.8,16,4,17.8,4,20z M8,44v-4H4 C4,42.2,5.8,44,8,44z
+M4,28h4v-4H4V28z M12,44h4v-4h-4V44z
+M44,8v20c0,2.2-1.8,4-4,4h-8v4h-4v-4h-8c-2.2,0-4-1.8-4-4v-8h-4v-4h4V8
+c0-2.2,1.8-4,4-4h20C42.2,4,44,5.8,44,8z M40,8H20v20h20V8z
+M28,44c2.2,0,4-1.8,4-4h-4V44z M20,44h4v-4h-4V44z" />
+</vector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/ic_qs_heads_up_off.xml b/packages/SystemUI/res/drawable/ic_qs_heads_up_off.xml
index b68fbac..904ccdf 100644
--- a/packages/SystemUI/res/drawable/ic_qs_heads_up_off.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_heads_up_off.xml
@@ -20,6 +20,6 @@ Copyright (C) 2014 The Android Open Source Project
         android:viewportHeight="24.0">
 
     <path
-        android:fillColor="#4DFFFFFF"
+        android:fillColor="#FFFFFFFF"
         android:pathData="M11.5,22.0c1.1,0.0 2.0,-0.9 2.0,-2.0l-4.0,0.0C9.5,21.1 10.4,22.0 11.5,22.0zM18.0,10.5c0.0,-3.1 -2.1,-5.6 -5.0,-6.3L13.0,3.5C13.0,2.7 12.3,2.0 11.5,2.0C10.7,2.0 10.0,2.7 10.0,3.5l0.0,0.7C9.5,4.3 9.0,4.5 8.6,4.7l9.4,9.4L18.0,10.5zM17.7,19.0l2.0,2.0l1.3,-1.3L4.3,3.0L3.0,4.3l2.9,2.9C5.3,8.2 5.0,9.3 5.0,10.5L5.0,16.0l-2.0,2.0l0.0,1.0L17.7,19.0z" />
 </vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_heads_up_on.xml b/packages/SystemUI/res/drawable/ic_qs_heads_up_on.xml
index 23112fd..9c5983d 100644
--- a/packages/SystemUI/res/drawable/ic_qs_heads_up_on.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_heads_up_on.xml
@@ -1,8 +1,25 @@
-<!-- drawable/bell-plus.xml -->
+<!--
+Copyright (C) 2014 The Android Open Source Project
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-	android:height="24dp" 
-	android:width="24dp" 
-	android:viewportWidth="24" 
-	android:viewportHeight="24">
-<path android:fillColor="#FFFFFFFF" 
-	android:pathData="M10,21C10,22.11 10.9,23 12,23A2,2 0 0,0 14,21M18.88,16.82V11C18.88,7.75 16.63,5.03 13.59,4.31V3.59A1.59,1.59 0 0,0 12,2A1.59,1.59 0 0,0 10.41,3.59V4.31C7.37,5.03 5.12,7.75 5.12,11V16.82L3,18.94V20H21V18.94M16,13H13V16H11V13H8V11H11V8H13V11H16"/></vector>
+        android:width="64dp"
+        android:height="64dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="M11.5,22.0c1.1,0.0 2.0,-0.9 2.0,-2.0l-4.0,0.0C9.5,21.1 10.4,22.0 11.5,22.0zM18.0,16.0l0.0,-5.5c0.0,-3.1 -2.1,-5.6 -5.0,-6.3L13.0,3.5C13.0,2.7 12.3,2.0 11.5,2.0C10.7,2.0 10.0,2.7 10.0,3.5l0.0,0.7c-2.9,0.7 -5.0,3.2 -5.0,6.3L5.0,16.0l-2.0,2.0l0.0,1.0l17.0,0.0l0.0,-1.0L18.0,16.0z"/>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml b/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml
index 16d5b36..7c1e235 100644
--- a/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_network_adb_off.xml
@@ -1,36 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
 <!--
-Copyright (C) 2014 The Android Open Source Project
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-
-         http://www.apache.org/licenses/LICENSE-2.0
-
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
+/*
+ * Copyright (C) 2015 The CyanogenMod Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 -->
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24.0dp"
-        android:height="24.0dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:pathData="M8.4,5.3c-0.2,0.0 -0.4,-0.2 -0.5,-0.4L7.1,1.6C7.0,1.4 7.2,1.1 7.4,1.0C7.7,0.9 8.0,1.1 8.0,1.4l0.8,3.3c0.1,0.3 -0.1,0.5 -0.4,0.6C8.5,5.3 8.4,5.3 8.4,5.3z"
-        android:fillColor="#4DFFFFFF"/>
-    <path
-        android:pathData="M15.6,5.3c0.0,0.0 -0.1,0.0 -0.1,0.0c-0.3,-0.1 -0.4,-0.3 -0.4,-0.6L16.0,1.4C16.0,1.1 16.3,0.9 16.6,1.0c0.3,0.1 0.4,0.3 0.4,0.6l-0.8,3.3C16.1,5.1 15.9,5.3 15.6,5.3z"
-        android:fillColor="#4DFFFFFF"/>
+    android:width="64dp"
+    android:height="64dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
     <path
-        android:pathData="M18.6,5.4c-0.1,-0.1 -0.2,-0.1 -0.3,-0.2c0.2,0.2 0.3,0.3 0.3,0.5c0.0,0.9 -2.9,1.7 -6.6,1.7S5.4,6.7 5.4,5.7c0.0,-0.2 0.1,-0.3 0.3,-0.5C5.6,5.3 5.5,5.4 5.4,5.4C5.0,5.9 4.0,8.0 4.0,12.0s1.0,6.1 1.4,6.6C5.9,19.0 8.0,20.0 12.0,20.0s6.1,-1.0 6.6,-1.4C19.0,18.1 20.0,16.0 20.0,12.0S19.0,5.9 18.6,5.4zM8.0,13.0c-0.6,0.0 -1.0,-0.4 -1.0,-1.0c0.0,-0.6 0.4,-1.0 1.0,-1.0s1.0,0.4 1.0,1.0C9.0,12.6 8.6,13.0 8.0,13.0zM16.0,13.0c-0.6,0.0 -1.0,-0.4 -1.0,-1.0c0.0,-0.6 0.4,-1.0 1.0,-1.0s1.0,0.4 1.0,1.0C17.0,12.6 16.6,13.0 16.0,13.0z"
-        android:fillColor="#4DFFFFFF"/>
-   <path
-        android:pathData="M5.35,5.7
-                          a 6.6 1.75 0 1 1 13.25 0
-                          a 6.6 1.75 0 1 1 -13.25 0
-                          z" 
-        android:fillColor="#4DFFFFFF" />
+        android:fillColor="#4DFFFFFF"
+        android:pathData="M41,37.9L34.1,31l0,0l-6.5-6.5l0,0l-9.8-9.8l0,0L13.1,10L6.5,3.4L4,6l4.1,4.1
+c-4.3,2-6.9,4.1-7.4,4.4l23.3,29l0,0l0,0l7.8-9.7l6.6,6.6L41,37.9Z
+M14,24.5v-2c0-1.9,0.5-3.6,1.5-5.1l7.1,7.1H14z M21.2,13
+l-5.5-5.5c2.5-0.6,5.3-1,8.3-1c13.4,0,22.4,7.3,23.3,8L36.3,28.1l-3.6-3.6H34v-2c0-2.4-0.9-4.6-2.3-6.3l2.3-2.3l-1.4-1.4l-2.3,2.3
+c-1.7-1.4-3.9-2.3-6.3-2.3C23,12.5,22.1,12.7,21.2,13z" />
 </vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml b/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml
index 712f47a..669622f 100644
--- a/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_network_adb_on.xml
@@ -1,36 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
 <!--
-Copyright (C) 2014 The Android Open Source Project
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-
-         http://www.apache.org/licenses/LICENSE-2.0
-
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
+/*
+ * Copyright (C) 2015 The CyanogenMod Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 -->
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24.0dp"
-        android:height="24.0dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:pathData="M8.4,5.3c-0.2,0.0 -0.4,-0.2 -0.5,-0.4L7.1,1.6C7.0,1.4 7.2,1.1 7.4,1.0C7.7,0.9 8.0,1.1 8.0,1.4l0.8,3.3c0.1,0.3 -0.1,0.5 -0.4,0.6C8.5,5.3 8.4,5.3 8.4,5.3z"
-        android:fillColor="#FFFFFF"/>
-    <path
-        android:pathData="M15.6,5.3c0.0,0.0 -0.1,0.0 -0.1,0.0c-0.3,-0.1 -0.4,-0.3 -0.4,-0.6L16.0,1.4C16.0,1.1 16.3,0.9 16.6,1.0c0.3,0.1 0.4,0.3 0.4,0.6l-0.8,3.3C16.1,5.1 15.9,5.3 15.6,5.3z"
-        android:fillColor="#FFFFFF"/>
+    android:width="64dp"
+    android:height="64dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
     <path
-        android:pathData="M18.6,5.4c-0.1,-0.1 -0.2,-0.1 -0.3,-0.2c0.2,0.2 0.3,0.3 0.3,0.5c0.0,0.9 -2.9,1.7 -6.6,1.7S5.4,6.7 5.4,5.7c0.0,-0.2 0.1,-0.3 0.3,-0.5C5.6,5.3 5.5,5.4 5.4,5.4C5.0,5.9 4.0,8.0 4.0,12.0s1.0,6.1 1.4,6.6C5.9,19.0 8.0,20.0 12.0,20.0s6.1,-1.0 6.6,-1.4C19.0,18.1 20.0,16.0 20.0,12.0S19.0,5.9 18.6,5.4zM8.0,13.0c-0.6,0.0 -1.0,-0.4 -1.0,-1.0c0.0,-0.6 0.4,-1.0 1.0,-1.0s1.0,0.4 1.0,1.0C9.0,12.6 8.6,13.0 8.0,13.0zM16.0,13.0c-0.6,0.0 -1.0,-0.4 -1.0,-1.0c0.0,-0.6 0.4,-1.0 1.0,-1.0s1.0,0.4 1.0,1.0C17.0,12.6 16.6,13.0 16.0,13.0z"
-        android:fillColor="#FFFFFF"/>
-   <path
-        android:pathData="M5.35,5.7
-                          a 6.6 1.75 0 1 1 13.25 0
-                          a 6.6 1.75 0 1 1 -13.25 0
-                          z" 
-        android:fillColor="#FFFFFF" />
+        android:fillColor="#FFFFFF"
+        android:pathData="M24,43.5l23.3-29c-0.9-0.7-9.9-8-23.3-8c-13.4,0-22.4,7.3-23.3,8L24,43.5L24,43.5
+C24,43.5,24,43.5,24,43.5Z
+M31.7,16.2c1.4,1.7,2.3,3.9,2.3,6.3v2H14v-2c0-2.4,0.9-4.6,2.3-6.3L14,13.9l1.4-1.4l2.3,2.3
+c1.7-1.4,3.9-2.3,6.3-2.3c2.4,0,4.6,0.9,6.3,2.3l2.3-2.3l1.4,1.4L31.7,16.2z
+M22,20.5c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2
+c0-1.1,0.9-2,2-2C21.1,18.5,22,19.4,22,20.5z
+M30,20.5c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2c0-1.1,0.9-2,2-2C29.1,18.5,30,19.4,30,20.5
+z" />
 </vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_profiles_off.xml b/packages/SystemUI/res/drawable/ic_qs_profiles_off.xml
index e5adb0c..f407c4d 100644
--- a/packages/SystemUI/res/drawable/ic_qs_profiles_off.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_profiles_off.xml
@@ -1,8 +1,26 @@
-<!-- drawable/account_multiple_plus.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-    <path android:fillColor="#4DFFFFFF" android:pathData="M13,13C11,13 7,14 7,16V18H19V16C19,14 15,13 13,13M19.62,13.16C20.45,13.88 21,14.82 21,16V18H24V16C24,14.46 21.63,13.5 19.62,13.16M13,11A3,3 0 0,0 16,8A3,3 0 0,0 13,5A3,3 0 0,0 10,8A3,3 0 0,0 13,11M18,11A3,3 0 0,0 21,8A3,3 0 0,0 18,5C17.68,5 17.37,5.05 17.08,5.14C17.65,5.95 18,6.94 18,8C18,9.06 17.65,10.04 17.08,10.85C17.37,10.95 17.68,11 18,11M8,10H5V7H3V10H0V12H3V15H5V12H8V10Z" />
-</vector>
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2015 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="64dp"
+    android:height="64dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#4DFFFFFF"
+        android:pathData="M14.304,5.455l0.79-1.93c0.079-0.193-0.013-0.413-0.206-0.492c-0.193-0.079-0.413,0.013-0.492,0.206 l-0.818,2c-0.903-0.207-2.055-0.286-3.433-0.286v0.005h0V4.953c-0.18,0-0.355,0.002-0.527,0.005H9.615 C8.468,4.976,7.495,5.06,6.71,5.239l-0.819-2C5.812,3.046,5.592,2.954,5.399,3.033C5.206,3.112,5.114,3.332,5.193,3.525l0.79,1.93 C4.934,5.852,4.377,6.523,4.377,7.6v2.261v0.587v0.644c0,1.98,1.876,2.588,5.238,2.643v0.003h0.209 c0.105,0.001,0.212,0.002,0.32,0.002v-0.002h0v0.002c0.108,0,0.214-0.001,0.32-0.002h0.015c3.484-0.034,5.432-0.628,5.432-2.646 v-0.644V9.861V7.6C15.909,6.523,15.352,5.852,14.304,5.455Z M7.179,11.014c-0.953,0-1.725-0.772-1.725-1.724 c0-0.953,0.772-1.725,1.725-1.725c0.952,0,1.724,0.772,1.724,1.725C8.904,10.242,8.132,11.014,7.179,11.014z M10.325,12.265H9.961 c-0.268,0-0.485-0.217-0.485-0.485c0-0.01,0.002-0.019,0.003-0.029h1.328c0.001,0.01,0.003,0.019,0.003,0.029  C10.81,12.048,10.593,12.265,10.325,12.265z M13.107,11.014c-0.953,0-1.725-0.772-1.725-1.724c0-0.953,0.772-1.725,1.725-1.725 c0.952,0,1.724,0.772,1.724,1.725C14.832,10.242,14.06,11.014,13.107,11.014z M21.44,10.402c-0.261,1.016-0.5,4.301-5.798,7.557 c-0.439,0.269-0.884,0.974-0.884,2.152l0.05,0.89h-1.922v0h-0.014c0-1.492-1.214-2.706-2.706-2.706 c-1.492,0-2.706,1.214-2.706,2.706v0H5.525l0.07-1.243c0,0-0.203,0.516-0.489,1.243H2.501l1.563-4.171 c0.303-0.793,1.013-1.282,1.733-1.529c0.524-0.18,1.593-0.386,3.586-0.485h1.569c0.492,0.025,0.926,0.055,1.311,0.091 c0,0,0,0,0.001,0s0,0,0.001,0c0.296,0.027,0.563,0.057,0.801,0.089c1.028,0.062,2.506-0.095,4.131-1.475 c1.423-1.209,1.591-2.051,2.28-3.895C20.285,7.463,21.816,8.936,21.44,10.402z M12.316,21h0.013v0H8.02v0H8.019 c0-1.185,0.964-2.148,2.149-2.148C11.352,18.851,12.316,19.815,12.316,21z" />
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_profiles_on.xml b/packages/SystemUI/res/drawable/ic_qs_profiles_on.xml
index 2e5b307..ce752e7 100644
--- a/packages/SystemUI/res/drawable/ic_qs_profiles_on.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_profiles_on.xml
@@ -1,8 +1,26 @@
-<!-- drawable/account_multiple_plus.xml -->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:height="24dp"
-    android:width="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-    <path android:fillColor="#FFFFFF" android:pathData="M13,13C11,13 7,14 7,16V18H19V16C19,14 15,13 13,13M19.62,13.16C20.45,13.88 21,14.82 21,16V18H24V16C24,14.46 21.63,13.5 19.62,13.16M13,11A3,3 0 0,0 16,8A3,3 0 0,0 13,5A3,3 0 0,0 10,8A3,3 0 0,0 13,11M18,11A3,3 0 0,0 21,8A3,3 0 0,0 18,5C17.68,5 17.37,5.05 17.08,5.14C17.65,5.95 18,6.94 18,8C18,9.06 17.65,10.04 17.08,10.85C17.37,10.95 17.68,11 18,11M8,10H5V7H3V10H0V12H3V15H5V12H8V10Z" />
-</vector>
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2015 The CyanogenMod Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="64dp"
+    android:height="64dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M14.304,5.455l0.79-1.93c0.079-0.193-0.013-0.413-0.206-0.492c-0.193-0.079-0.413,0.013-0.492,0.206 l-0.818,2c-0.903-0.207-2.055-0.286-3.433-0.286v0.005h0V4.953c-0.18,0-0.355,0.002-0.527,0.005H9.615 C8.468,4.976,7.495,5.06,6.71,5.239l-0.819-2C5.812,3.046,5.592,2.954,5.399,3.033C5.206,3.112,5.114,3.332,5.193,3.525l0.79,1.93 C4.934,5.852,4.377,6.523,4.377,7.6v2.261v0.587v0.644c0,1.98,1.876,2.588,5.238,2.643v0.003h0.209 c0.105,0.001,0.212,0.002,0.32,0.002v-0.002h0v0.002c0.108,0,0.214-0.001,0.32-0.002h0.015c3.484-0.034,5.432-0.628,5.432-2.646 v-0.644V9.861V7.6C15.909,6.523,15.352,5.852,14.304,5.455Z M7.179,11.014c-0.953,0-1.725-0.772-1.725-1.724 c0-0.953,0.772-1.725,1.725-1.725c0.952,0,1.724,0.772,1.724,1.725C8.904,10.242,8.132,11.014,7.179,11.014z M10.325,12.265H9.961 c-0.268,0-0.485-0.217-0.485-0.485c0-0.01,0.002-0.019,0.003-0.029h1.328c0.001,0.01,0.003,0.019,0.003,0.029  C10.81,12.048,10.593,12.265,10.325,12.265z M13.107,11.014c-0.953,0-1.725-0.772-1.725-1.724c0-0.953,0.772-1.725,1.725-1.725 c0.952,0,1.724,0.772,1.724,1.725C14.832,10.242,14.06,11.014,13.107,11.014z M21.44,10.402c-0.261,1.016-0.5,4.301-5.798,7.557 c-0.439,0.269-0.884,0.974-0.884,2.152l0.05,0.89h-1.922v0h-0.014c0-1.492-1.214-2.706-2.706-2.706 c-1.492,0-2.706,1.214-2.706,2.706v0H5.525l0.07-1.243c0,0-0.203,0.516-0.489,1.243H2.501l1.563-4.171 c0.303-0.793,1.013-1.282,1.733-1.529c0.524-0.18,1.593-0.386,3.586-0.485h1.569c0.492,0.025,0.926,0.055,1.311,0.091 c0,0,0,0,0.001,0s0,0,0.001,0c0.296,0.027,0.563,0.057,0.801,0.089c1.028,0.062,2.506-0.095,4.131-1.475 c1.423-1.209,1.591-2.051,2.28-3.895C20.285,7.463,21.816,8.936,21.44,10.402z M12.316,21h0.013v0H8.02v0H8.019 c0-1.185,0.964-2.148,2.149-2.148C11.352,18.851,12.316,19.815,12.316,21z" />
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_ringer_silent.xml b/packages/SystemUI/res/drawable/ic_qs_ringer_silent.xml
index 4e668b0..904ccdf 100644
--- a/packages/SystemUI/res/drawable/ic_qs_ringer_silent.xml
+++ b/packages/SystemUI/res/drawable/ic_qs_ringer_silent.xml
@@ -21,5 +21,5 @@ Copyright (C) 2014 The Android Open Source Project
 
     <path
         android:fillColor="#FFFFFFFF"
-        android:pathData="M12,3V8.68L15,11.68V6H19V3H12M5.28,4.5L4,5.77L10.26,12.03C7.89,12.15 6,14.1 6,16.5C6,19 8,21 10.5,21C12.9,21 14.85,19.11 14.97,16.74L19.68,21.45L20.96,20.18L15,14.22L12,11.22L5.28,4.5Z"/>
+        android:pathData="M11.5,22.0c1.1,0.0 2.0,-0.9 2.0,-2.0l-4.0,0.0C9.5,21.1 10.4,22.0 11.5,22.0zM18.0,10.5c0.0,-3.1 -2.1,-5.6 -5.0,-6.3L13.0,3.5C13.0,2.7 12.3,2.0 11.5,2.0C10.7,2.0 10.0,2.7 10.0,3.5l0.0,0.7C9.5,4.3 9.0,4.5 8.6,4.7l9.4,9.4L18.0,10.5zM17.7,19.0l2.0,2.0l1.3,-1.3L4.3,3.0L3.0,4.3l2.9,2.9C5.3,8.2 5.0,9.3 5.0,10.5L5.0,16.0l-2.0,2.0l0.0,1.0L17.7,19.0z" />
 </vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_tile_category_other.xml b/packages/SystemUI/res/drawable/ic_qs_tile_category_other.xml
new file mode 100644
index 0000000..f3f9dca
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_tile_category_other.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The CyangenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:height="24dp" android:width="24dp"
+        android:viewportHeight="24.0" android:viewportWidth="24.0">
+    <path android:fillColor="#FFFFFFFF"
+          android:pathData="M12,10c-1.1,0 -2,0.9 -2,2s0.9,2 2,2 2,-0.9 2,-2 -0.9,-2 -2,-2zm7,-7H5c-1.11,0 -2,0.9 -2,2v14c0,1.1 0.89,2 2,2h14c1.11,0 2,-0.9 2,-2V5c0,-1.1 -0.89,-2 -2,-2zm-1.75,9c0,0.23 -0.02,0.46 -0.05,0.68l1.48,1.16c0.13,0.11 0.17,0.3 0.08,0.45l-1.4,2.42c-0.09,0.15 -0.27,0.21 -0.43,0.15l-1.74,-0.7c-0.36,0.28 -0.76,0.51 -1.18,0.69l-0.26,1.85c-0.03,0.17 -0.18,0.3 -0.35,0.3h-2.8c-0.17,0 -0.32,-0.13 -0.35,-0.29l-0.26,-1.85c-0.43,-0.18 -0.82,-0.41 -1.18,-0.69l-1.74,0.7c-0.16,0.06 -0.34,0 -0.43,-0.15l-1.4,-2.42c-0.09,-0.15 -0.05,-0.34 0.08,-0.45l1.48,-1.16c-0.03,-0.23 -0.05,-0.46 -0.05,-0.69 0,-0.23 0.02,-0.46 0.05,-0.68l-1.48,-1.16c-0.13,-0.11 -0.17,-0.3 -0.08,-0.45l1.4,-2.42c0.09,-0.15 0.27,-0.21 0.43,-0.15l1.74,0.7c0.36,-0.28 0.76,-0.51 1.18,-0.69l0.26,-1.85c0.03,-0.17 0.18,-0.3 0.35,-0.3h2.8c0.17,0 0.32,0.13 0.35,0.29l0.26,1.85c0.43,0.18 0.82,0.41 1.18,0.69l1.74,-0.7c0.16,-0.06 0.34,0 0.43,0.15l1.4,2.42c0.09,0.15 0.05,0.34 -0.08,0.45l-1.48,1.16c0.03,0.23 0.05,0.46 0.05,0.69z"/>
+</vector>
+
diff --git a/packages/SystemUI/res/drawable/ic_qs_tile_category_system.xml b/packages/SystemUI/res/drawable/ic_qs_tile_category_system.xml
new file mode 100644
index 0000000..a54bec7
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_tile_category_system.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The CyangenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:height="18dp"
+        android:width="18dp"
+        android:viewportHeight="24.0"
+        android:viewportWidth="24.0"
+        >
+    <path android:fillColor="#FFFFFFFF"
+          android:pathData="M12,10c-1.1,0 -2,0.9 -2,2s0.9,2 2,2 2,-0.9 2,-2 -0.9,-2 -2,-2zm7,-7H5c-1.11,0 -2,0.9 -2,2v14c0,1.1 0.89,2 2,2h14c1.11,0 2,-0.9 2,-2V5c0,-1.1 -0.89,-2 -2,-2zm-1.75,9c0,0.23 -0.02,0.46 -0.05,0.68l1.48,1.16c0.13,0.11 0.17,0.3 0.08,0.45l-1.4,2.42c-0.09,0.15 -0.27,0.21 -0.43,0.15l-1.74,-0.7c-0.36,0.28 -0.76,0.51 -1.18,0.69l-0.26,1.85c-0.03,0.17 -0.18,0.3 -0.35,0.3h-2.8c-0.17,0 -0.32,-0.13 -0.35,-0.29l-0.26,-1.85c-0.43,-0.18 -0.82,-0.41 -1.18,-0.69l-1.74,0.7c-0.16,0.06 -0.34,0 -0.43,-0.15l-1.4,-2.42c-0.09,-0.15 -0.05,-0.34 0.08,-0.45l1.48,-1.16c-0.03,-0.23 -0.05,-0.46 -0.05,-0.69 0,-0.23 0.02,-0.46 0.05,-0.68l-1.48,-1.16c-0.13,-0.11 -0.17,-0.3 -0.08,-0.45l1.4,-2.42c0.09,-0.15 0.27,-0.21 0.43,-0.15l1.74,0.7c0.36,-0.28 0.76,-0.51 1.18,-0.69l0.26,-1.85c0.03,-0.17 0.18,-0.3 0.35,-0.3h2.8c0.17,0 0.32,0.13 0.35,0.29l0.26,1.85c0.43,0.18 0.82,0.41 1.18,0.69l1.74,-0.7c0.16,-0.06 0.34,0 0.43,0.15l1.4,2.42c0.09,0.15 0.05,0.34 -0.08,0.45l-1.48,1.16c0.03,0.23 0.05,0.46 0.05,0.69z"/>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_tile_contract.xml b/packages/SystemUI/res/drawable/ic_qs_tile_contract.xml
new file mode 100644
index 0000000..e98f57c
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_tile_contract.xml
@@ -0,0 +1,24 @@
+<!--
+Copyright (C) 2015 The Android Open Source Project
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="18.0dp"
+        android:height="18.0dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:pathData="M12.000000,8.000000l-6.000000,6.000000 1.400000,1.400000 4.600000,-4.599999 4.600000,4.599999 1.400000,-1.400000z"
+        android:fillColor="#FFFFFFFF"/>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_tile_expand.xml b/packages/SystemUI/res/drawable/ic_qs_tile_expand.xml
new file mode 100644
index 0000000..a429456
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_tile_expand.xml
@@ -0,0 +1,24 @@
+<!--
+Copyright (C) 2015 The Android Open Source Project
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="18.0dp"
+        android:height="18.0dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:pathData="M16.600000,8.600000l-4.600000,4.599999 -4.600000,-4.599999 -1.400000,1.400000 6.000000,6.000000 6.000000,-6.000000z"
+        android:fillColor="#FFFFFFFF"/>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_volume_media_mute.xml b/packages/SystemUI/res/drawable/ic_volume_media_mute.xml
index 252d63c..beb806c 100644
--- a/packages/SystemUI/res/drawable/ic_volume_media_mute.xml
+++ b/packages/SystemUI/res/drawable/ic_volume_media_mute.xml
@@ -26,4 +26,4 @@
         android:fillColor="@color/volume_icon_color"
         android:pathData="M4.8,3.9L3.5,5.1l6.9,6.9C8.0,12.1 6.0,14.0 6.0,16.5C6.0,19.0 8.0,21.0 10.5,21.0c2.7,0.0 4.5,-2.3 4.5,-4.3c0.0,0.0 0.0,-0.1 0.0,-0.1l4.0,4.0l1.3,-1.3L4.8,3.9z" />
 
-</vector>
+</vector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/keyguard_overflow_number_background.xml b/packages/SystemUI/res/drawable/keyguard_overflow_number_background.xml
index 83f9e5f..b812d43 100644
--- a/packages/SystemUI/res/drawable/keyguard_overflow_number_background.xml
+++ b/packages/SystemUI/res/drawable/keyguard_overflow_number_background.xml
@@ -17,5 +17,5 @@
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
     android:shape="oval">
-    <solid android:color="#ffffffff" />
-</shape>
+    <solid android:color="#1a000000" />
+</shape>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/lockscreen_shortcuts_phone_background.xml b/packages/SystemUI/res/drawable/lockscreen_shortcuts_phone_background.xml
index bba4ffe..e3cae61 100644
--- a/packages/SystemUI/res/drawable/lockscreen_shortcuts_phone_background.xml
+++ b/packages/SystemUI/res/drawable/lockscreen_shortcuts_phone_background.xml
@@ -5,7 +5,7 @@
         <shape
             android:shape="rectangle">
             <solid
-                android:color="@color/lockscreen_bottom_shorcut_phone_background" />
+                android:color="#333333" />
             <size android:height="@dimen/phone_height" android:width="@dimen/phone_width" />
             <corners android:bottomLeftRadius="15dp" android:bottomRightRadius="15dp" />
         </shape>
@@ -14,7 +14,7 @@
         <shape
             android:shape="rectangle">
             <solid
-                android:color="@color/lockscreen_bottom_shorcut_phone_inner_background" />
+                android:color="@android:color/black" />
         </shape>
     </item>
 </layer-list>
diff --git a/packages/SystemUI/res/drawable/qs_tile_background_drag.xml b/packages/SystemUI/res/drawable/qs_tile_background_drag.xml
new file mode 100644
index 0000000..0a3ba2d
--- /dev/null
+++ b/packages/SystemUI/res/drawable/qs_tile_background_drag.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/*
+** Copyright 2015, The CyanogenMod Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+       android:shape="oval">
+    <solid android:color="#FF37474f" />
+</shape>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_bottom.xml b/packages/SystemUI/res/drawable/vector_drawable_place_bottom.xml
index 1d1f7fb..14f1981 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_bottom.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_bottom.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M0.0,0.0l0.0,24.0l24.0,0.0L24.0,0.0L0.0,0.0zM4.0,10.0l16.0,0.0l0.0,10.0L4.0,20.0L4.0,10.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_bottom_left.xml b/packages/SystemUI/res/drawable/vector_drawable_place_bottom_left.xml
index 8acb1c4..cea6324 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_bottom_left.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_bottom_left.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M24.0,24.0L24.0,0.0L0.0,0.0l0.0,24.0L24.0,24.0zM4.0,10.0l10.0,0.0l0.0,10.0L4.0,20.0L4.0,10.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_bottom_right.xml b/packages/SystemUI/res/drawable/vector_drawable_place_bottom_right.xml
index 4cf5aaa..c2ae9c8 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_bottom_right.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_bottom_right.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M24.0,24.0L24.0,0.0L0.0,0.0l0.0,24.0L24.0,24.0zM20.0,20.0L10.0,20.0L10.0,10.0l10.0,0.0L20.0,20.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_fullscreen.xml b/packages/SystemUI/res/drawable/vector_drawable_place_fullscreen.xml
index 7788c3d..aee0b7f 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_fullscreen.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_fullscreen.xml
@@ -19,15 +19,15 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M0.0,8.0l4.0,0.0 0.0,-4.0 4.0,0.0 0.0,-4.0 -8.0,0.0z"/>
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M4.0,16.0l-4.0,0.0 0.0,8.0 8.0,0.0 0.0,-4.0 -4.0,0.0z"/>
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M16.0,0.0l0.0,4.0 4.0,0.0 0.0,4.0 4.0,0.0 0.0,-8.0z"/>
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M20.0,20.0l-4.0,0.0 0.0,4.0 8.0,0.0 0.0,-8.0 -4.0,0.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_left.xml b/packages/SystemUI/res/drawable/vector_drawable_place_left.xml
index b9059ac..078f83c 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_left.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_left.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M24.0,0.0L0.0,0.0l0.0,24.0l24.0,0.0L24.0,0.0zM14.0,4.0l0.0,16.0L4.0,20.0L4.0,4.0L14.0,4.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_right.xml b/packages/SystemUI/res/drawable/vector_drawable_place_right.xml
index 44ec2d8..86730db 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_right.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_right.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M0.0,24.0l24.0,0.0L24.0,0.0L0.0,0.0L0.0,24.0zM10.0,20.0L10.0,4.0l10.0,0.0l0.0,16.0L10.0,20.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_top.xml b/packages/SystemUI/res/drawable/vector_drawable_place_top.xml
index ac43a15..92e01af 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_top.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_top.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M24.0,24.0L24.0,0.0L0.0,0.0l0.0,24.0L24.0,24.0zM20.0,14.0L4.0,14.0L4.0,4.0l16.0,0.0L20.0,14.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_top_left.xml b/packages/SystemUI/res/drawable/vector_drawable_place_top_left.xml
index f861548..feb612c 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_top_left.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_top_left.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M0.0,0.0l0.0,24.0l24.0,0.0L24.0,0.0L0.0,0.0zM4.0,4.0l10.0,0.0l0.0,10.0L4.0,14.0L4.0,4.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/drawable/vector_drawable_place_top_right.xml b/packages/SystemUI/res/drawable/vector_drawable_place_top_right.xml
index 942e099..9f4ee49 100644
--- a/packages/SystemUI/res/drawable/vector_drawable_place_top_right.xml
+++ b/packages/SystemUI/res/drawable/vector_drawable_place_top_right.xml
@@ -19,6 +19,6 @@ Copyright (C) 2015 The Android Open Source Project
         android:viewportWidth="24.0"
         android:viewportHeight="24.0">
     <path
-        android:fillColor="#FFFFFFFF"
+        android:fillColor="#FF000000"
         android:pathData="M0.0,0.0l0.0,24.0l24.0,0.0L24.0,0.0L0.0,0.0zM20.0,14.0L10.0,14.0L10.0,4.0l10.0,0.0L20.0,14.0z"/>
 </vector>
diff --git a/packages/SystemUI/res/layout-land/recents_task_resize_dialog.xml b/packages/SystemUI/res/layout-land/recents_task_resize_dialog.xml
index 68d5e52..a718d4d 100644
--- a/packages/SystemUI/res/layout-land/recents_task_resize_dialog.xml
+++ b/packages/SystemUI/res/layout-land/recents_task_resize_dialog.xml
@@ -25,25 +25,27 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:gravity="center">
+        android:orientation="horizontal">
         <Button
             android:id="@+id/place_left"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_left" />
         <Button
             android:id="@+id/place_right"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_right" />
         <Button
             android:id="@+id/place_full"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_fullscreen" />
     </LinearLayout>
-</LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout-port/recents_task_resize_dialog.xml b/packages/SystemUI/res/layout-port/recents_task_resize_dialog.xml
index 4ec99b6..250f53d 100644
--- a/packages/SystemUI/res/layout-port/recents_task_resize_dialog.xml
+++ b/packages/SystemUI/res/layout-port/recents_task_resize_dialog.xml
@@ -25,25 +25,27 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:gravity="center">
+        android:orientation="horizontal">
         <Button
             android:id="@+id/place_top"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_top" />
         <Button
             android:id="@+id/place_bottom"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_bottom" />
         <Button
             android:id="@+id/place_full"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_fullscreen" />
     </LinearLayout>
-</LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout-sw600dp-land/recents_task_resize_dialog.xml b/packages/SystemUI/res/layout-sw600dp-land/recents_task_resize_dialog.xml
index ce1d31c..26c9b1a 100644
--- a/packages/SystemUI/res/layout-sw600dp-land/recents_task_resize_dialog.xml
+++ b/packages/SystemUI/res/layout-sw600dp-land/recents_task_resize_dialog.xml
@@ -25,49 +25,55 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:gravity="center">
+        android:orientation="horizontal">
         <Button
             android:id="@+id/place_left"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_left" />
         <Button
             android:id="@+id/place_right"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_right" />
         <Button
             android:id="@+id/place_top_left"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_top_left" />
         <Button
             android:id="@+id/place_top_right"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_top_right" />
         <Button
             android:id="@+id/place_bottom_left"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_bottom_left" />
         <Button
             android:id="@+id/place_bottom_right"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_bottom_right" />
         <Button
             android:id="@+id/place_full"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_fullscreen" />
     </LinearLayout>
-</LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout-sw600dp-port/recents_task_resize_dialog.xml b/packages/SystemUI/res/layout-sw600dp-port/recents_task_resize_dialog.xml
index 656a859..e180daa 100644
--- a/packages/SystemUI/res/layout-sw600dp-port/recents_task_resize_dialog.xml
+++ b/packages/SystemUI/res/layout-sw600dp-port/recents_task_resize_dialog.xml
@@ -25,49 +25,55 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:gravity="center">
+        android:orientation="horizontal">
         <Button
             android:id="@+id/place_top"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_top" />
         <Button
             android:id="@+id/place_bottom"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_bottom" />
         <Button
             android:id="@+id/place_top_left"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_top_left" />
         <Button
             android:id="@+id/place_top_right"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_top_right" />
         <Button
             android:id="@+id/place_bottom_left"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_bottom_left" />
         <Button
             android:id="@+id/place_bottom_right"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_bottom_right" />
         <Button
             android:id="@+id/place_full"
             android:layout_width="36dp"
             android:layout_height="36dp"
+            android:layout_weight="1"
             android:layout_margin="10dp"
             android:background="@drawable/vector_drawable_place_fullscreen" />
     </LinearLayout>
-</LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_land.xml b/packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_land.xml
new file mode 100644
index 0000000..43426d1
--- /dev/null
+++ b/packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_land.xml
@@ -0,0 +1,115 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright 2015, The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:systemui="http://schemas.android.com/apk/res-auto"
+    android:layout_height="match_parent"
+    android:layout_width="match_parent"
+    android:orientation="horizontal"
+    android:clipChildren="false"
+    android:clipToPadding="false"
+    android:id="@+id/nav_buttons">
+    <com.android.systemui.statusbar.policy.KeyButtonView
+        android:id="@+id/dpad_left"
+        android:visibility="gone"
+        android:layout_width="48dp"
+        android:layout_height="match_parent"
+        android:layout_weight="0"
+        android:scaleType="centerInside"
+        systemui:keyRepeat="true" />
+    <com.android.systemui.statusbar.policy.KeyButtonView
+        android:id="@+id/one"
+        android:layout_width="48dp"
+        android:layout_height="match_parent"
+        android:layout_weight="0"
+        android:scaleType="centerInside" />
+    <View
+        android:layout_width="0dp"
+        android:layout_height="match_parent"
+        android:layout_weight="1" />
+    <LinearLayout
+        android:layout_height="match_parent"
+        android:layout_width="wrap_content"
+        android:layout_weight="1"
+        android:clipChildren="false"
+        android:clipToPadding="false"
+        android:id="@+id/mid_nav_buttons"
+        android:gravity="center_horizontal"
+        android:layout_gravity="center_horizontal"
+        android:animateLayoutChanges="true">
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/two"
+            android:scaleType="centerInside"
+            android:layout_width="162dp" android:paddingLeft="42dp" android:paddingRight="42dp"
+            android:layout_height="match_parent"
+            systemui:keyRepeat="true"
+            android:layout_weight="0" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/three"
+            android:scaleType="centerInside"
+            android:layout_width="162dp" android:paddingLeft="42dp" android:paddingRight="42dp"
+            android:layout_height="match_parent"
+            systemui:keyRepeat="true"
+            android:layout_weight="0" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/four"
+            android:scaleType="centerInside"
+            android:layout_width="162dp" android:paddingLeft="42dp" android:paddingRight="42dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            systemui:keyRepeat="true" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/five"
+            android:scaleType="centerInside"
+            android:layout_width="162dp" android:paddingLeft="42dp" android:paddingRight="42dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            systemui:keyRepeat="true" />
+    </LinearLayout>
+    <View
+        android:layout_width="0dp"
+        android:layout_height="match_parent"
+        android:layout_weight="1" />
+    <FrameLayout
+        android:layout_width="@dimen/navigation_extra_key_width"
+        android:layout_height="match_parent"
+        android:layout_weight="0"
+        android:layout_marginEnd="2dp" >
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/ime_switcher"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:layout_marginEnd="2dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_ime_switcher_default"
+            android:visibility="invisible"
+            android:contentDescription="@string/accessibility_ime_switch_button" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/six"
+            android:scaleType="centerInside"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/dpad_right"
+            android:visibility="gone"
+            android:layout_width="48dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside"
+            systemui:keyRepeat="true"/>
+    </FrameLayout>
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_port.xml b/packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_port.xml
new file mode 100644
index 0000000..a7dedbd
--- /dev/null
+++ b/packages/SystemUI/res/layout-sw600dp/mid_navigation_bar_port.xml
@@ -0,0 +1,132 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/*
+** Copyright 2015 The CyanogenMod Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:systemui="http://schemas.android.com/apk/res-auto"
+    android:layout_height="match_parent"
+    android:layout_width="match_parent"
+    android:orientation="horizontal"
+    android:clipChildren="false"
+    android:clipToPadding="false"
+    android:id="@+id/nav_buttons">
+    <FrameLayout
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0">
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/dpad_left"
+            android:visibility="gone"
+            android:layout_width="48dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="fitCenter"
+            systemui:keyRepeat="true" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/dpad_left"
+            android:visibility="gone"
+            android:layout_width="48dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="fitCenter"
+            systemui:keyRepeat="true" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/one"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="fitCenter" />
+    </FrameLayout>
+    <View
+        android:layout_width="0dp"
+        android:layout_height="match_parent"
+        android:layout_weight="1" />
+    <LinearLayout
+        android:layout_height="match_parent"
+        android:layout_width="wrap_content"
+        android:layout_weight="1"
+        android:clipChildren="false"
+        android:clipToPadding="false"
+        android:id="@+id/mid_nav_buttons"
+        android:gravity="center_horizontal"
+        android:layout_gravity="center_horizontal"
+        android:animateLayoutChanges="true">
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/two"
+            android:scaleType="centerInside"
+            android:layout_width="128dp" android:paddingLeft="25dp" android:paddingRight="25dp"
+            android:layout_height="match_parent"
+            systemui:keyRepeat="true"
+            android:layout_weight="0" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/three"
+            android:scaleType="centerInside"
+            android:layout_width="128dp" android:paddingLeft="25dp" android:paddingRight="25dp"
+            android:layout_height="match_parent"
+            systemui:keyRepeat="true"
+            android:layout_weight="0" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/four"
+            android:scaleType="centerInside"
+            android:layout_width="128dp" android:paddingLeft="25dp" android:paddingRight="25dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            systemui:keyRepeat="true" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/five"
+            android:scaleType="centerInside"
+            android:layout_width="128dp" android:paddingLeft="25dp" android:paddingRight="25dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            systemui:keyRepeat="true" />
+    </LinearLayout>
+    <View
+        android:layout_width="0dp"
+        android:layout_height="match_parent"
+        android:layout_weight="1" />
+    <FrameLayout
+        android:layout_width="@dimen/navigation_extra_key_width"
+        android:layout_height="match_parent"
+        android:layout_weight="0"
+        android:layout_marginEnd="2dp" >
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/ime_switcher"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_ime_switcher_default"
+            android:visibility="invisible"
+            android:contentDescription="@string/accessibility_ime_switch_button" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/six"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/dpad_right"
+            android:visibility="gone"
+            android:layout_width="48dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside"
+            systemui:keyRepeat="true" />
+    </FrameLayout>
+
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout-sw600dp/navigation_bar.xml b/packages/SystemUI/res/layout-sw600dp/navigation_bar.xml
index bc78509..68883ce 100644
--- a/packages/SystemUI/res/layout-sw600dp/navigation_bar.xml
+++ b/packages/SystemUI/res/layout-sw600dp/navigation_bar.xml
@@ -3,23 +3,23 @@
 **
 ** Copyright 2012, The Android Open Source Project
 **
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
+** Licensed under the Apache License, Version 2.0 (the "License"); 
+** you may not use this file except in compliance with the License. 
+** You may obtain a copy of the License at 
 **
-**     http://www.apache.org/licenses/LICENSE-2.0
+**     http://www.apache.org/licenses/LICENSE-2.0 
 **
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
+** Unless required by applicable law or agreed to in writing, software 
+** distributed under the License is distributed on an "AS IS" BASIS, 
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
+** See the License for the specific language governing permissions and 
 ** limitations under the License.
 -->
 
 <!--  navigation bar for sw600dp (small tablets) -->
 <com.android.systemui.statusbar.phone.NavigationBarView
     xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:systemui="http://schemas.android.com/apk/res/com.android.systemui"
+    xmlns:systemui="http://schemas.android.com/apk/res-auto"
     android:layout_height="match_parent"
     android:layout_width="match_parent"
     android:background="@drawable/system_bar_background"
@@ -30,151 +30,71 @@
         android:layout_width="match_parent"
         >
 
-        <RelativeLayout
-            android:layout_height="match_parent"
-            android:layout_width="match_parent">
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:visibility="gone"
-                systemui:viewLocation="2"
-                android:layout_alignParentTop="true" />
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:visibility="gone"
-                systemui:viewLocation="3"
-                android:layout_alignParentBottom="true" />
-        </RelativeLayout>
-
         <LinearLayout
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="horizontal"
             android:clipChildren="false"
             android:clipToPadding="false"
-            android:id="@+id/nav_buttons"
-            android:animateLayoutChanges="true"
+            android:id="@+id/container"
             >
 
-            <!-- navigation controls -->
-            <View
-                android:layout_width="@dimen/navigation_extra_key_width"
-                android:layout_height="match_parent"
-                android:layout_weight="0"
-                android:layout_marginStart="2dp"
-                android:visibility="invisible"
-                />
-            <Space
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/back"
-                android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_back"
-                android:scaleType="centerInside"
-                systemui:keyCode="4"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/home"
-                android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_home"
-                android:scaleType="centerInside"
-                systemui:keyCode="3"
-                systemui:keyRepeat="true"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/recent_apps"
-                android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_recent"
-                android:scaleType="centerInside"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
-                />
-            <Space
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
-            <FrameLayout
-                android:layout_width="@dimen/navigation_extra_key_width"
-                android:layout_height="match_parent"
-                android:layout_weight="0"
-                android:layout_marginEnd="2dp" >
-                <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/menu"
-                    android:layout_width="@dimen/navigation_extra_key_width"
-                    android:layout_height="match_parent"
-                    android:src="@drawable/ic_sysbar_menu"
-                    android:scaleType="centerInside"
-                    android:layout_marginEnd="2dp"
-                    systemui:keyCode="82"
-                    android:visibility="invisible"
-                    android:contentDescription="@string/accessibility_menu"
-                    />
-                <com.android.systemui.statusbar.policy.KeyButtonView
-                    android:id="@+id/ime_switcher"
-                    android:layout_width="@dimen/navigation_extra_key_width"
-                    android:layout_height="match_parent"
-                    android:layout_marginEnd="2dp"
-                    android:scaleType="centerInside"
-                    android:src="@drawable/ic_ime_switcher_default"
-                    android:visibility="invisible"
-                    android:contentDescription="@string/accessibility_ime_switch_button" />
-            </FrameLayout>
+            <include layout="@layout/mid_navigation_bar_port"/>
+
         </LinearLayout>
 
-        <!-- lights out layout to match exactly -->
-        <LinearLayout
+       <LinearLayout
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="horizontal"
-            android:id="@+id/lights_out"
-            android:visibility="gone"
+            android:gravity="center_horizontal"
+            android:layout_gravity="center_horizontal"
             >
-            <Space
-                android:layout_width="match_parent"
+            <View
+                android:layout_width="0dp"
                 android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
-            <ImageView
-                android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
+                android:layout_weight="1" />
+            <!-- lights out layout to match exactly -->
+            <LinearLayout
                 android:layout_height="match_parent"
+                android:layout_width="wrap_content"
+                android:layout_weight="1"
+                android:orientation="horizontal"
+                android:gravity="center_horizontal"
                 android:layout_marginStart="40dp"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
-                />
-            <ImageView
-                android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_large"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
-                />
-            <ImageView
-                android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
                 android:layout_marginEnd="40dp"
+                android:layout_gravity="center_horizontal"
+                android:id="@+id/lights_out"
+                android:visibility="gone">
+                <ImageView
+                    android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+                <ImageView
+                    android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+                <ImageView
+                    android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+                <ImageView
+                    android:layout_width="128dp" android:paddingStart="25dp" android:paddingEnd="25dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+            </LinearLayout>
+            <View
+                android:layout_width="0dp"
                 android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
-                />
-            <Space
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
+                android:layout_weight="1" />
         </LinearLayout>
 
         <com.android.systemui.statusbar.policy.DeadZone
@@ -197,151 +117,76 @@
         android:paddingTop="0dp"
         >
 
-        <RelativeLayout
-            android:layout_height="match_parent"
-            android:layout_width="match_parent">
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:visibility="gone"
-                systemui:viewLocation="2"
-                android:layout_alignParentTop="true" />
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:visibility="gone"
-                systemui:viewLocation="3"
-                android:layout_alignParentBottom="true" />
-
-        </RelativeLayout>
-
         <LinearLayout
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="horizontal"
+            android:gravity="center_horizontal"
+            android:layout_gravity="center_horizontal"
             android:clipChildren="false"
             android:clipToPadding="false"
-            android:id="@+id/nav_buttons"
-            android:animateLayoutChanges="true"
+            android:id="@+id/container"
             >
 
-            <!-- navigation controls -->
-            <View
-                android:layout_width="@dimen/navigation_extra_key_width"
-                android:layout_height="match_parent"
-                android:layout_weight="0"
-                android:layout_marginStart="2dp"
-                android:visibility="invisible"
-                />
-            <Space
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/back"
-                android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_back"
-                android:scaleType="centerInside"
-                systemui:keyCode="4"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/home"
-                android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_home"
-                android:scaleType="centerInside"
-                systemui:keyCode="3"
-                systemui:keyRepeat="true"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/recent_apps"
-                android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_recent"
-                android:scaleType="centerInside"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
-                />
-            <Space
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
-            <FrameLayout
-                android:layout_width="@dimen/navigation_extra_key_width"
-                android:layout_height="match_parent"
-                android:layout_marginEnd="2dp"
-                android:layout_weight="0" >
-                <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/menu"
-                    android:layout_width="@dimen/navigation_extra_key_width"
-                    android:layout_height="match_parent"
-                    android:layout_marginEnd="2dp"
-                    android:src="@drawable/ic_sysbar_menu"
-                    android:scaleType="centerInside"
-                    systemui:keyCode="82"
-                    android:visibility="invisible"
-                    android:contentDescription="@string/accessibility_menu" />
-                <com.android.systemui.statusbar.policy.KeyButtonView
-                    android:id="@+id/ime_switcher"
-                    android:layout_width="@dimen/navigation_extra_key_width"
-                    android:layout_height="match_parent"
-                    android:layout_marginEnd="2dp"
-                    android:src="@drawable/ic_ime_switcher_default"
-                    android:visibility="invisible"
-                    android:contentDescription="@string/accessibility_ime_switch_button"
-                    android:scaleType="centerInside" />
-            </FrameLayout>
+            <include layout="@layout/mid_navigation_bar_land"/>
+
         </LinearLayout>
 
-        <!-- lights out layout to match exactly -->
+                <!-- lights out layout to match exactly -->
         <LinearLayout
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="horizontal"
-            android:id="@+id/lights_out"
-            android:visibility="gone"
+            android:gravity="center_horizontal"
+            android:layout_gravity="center_horizontal"
+            android:visibility="visible"
             >
-            <Space
-                android:layout_width="match_parent"
+            <View
+                android:layout_width="0dp"
                 android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
-            <ImageView
-                android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
+                android:layout_weight="1" />
+            <!-- lights out layout to match exactly -->
+            <LinearLayout
                 android:layout_height="match_parent"
+                android:layout_width="wrap_content"
+                android:layout_weight="1"
+                android:orientation="horizontal"
+                android:gravity="center_horizontal"
+                android:layout_gravity="center_horizontal"
                 android:layout_marginStart="40dp"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
-                />
-            <ImageView
-                android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_large"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
-                />
-            <ImageView
-                android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
                 android:layout_marginEnd="40dp"
+                android:id="@+id/lights_out"
+                android:visibility="gone"
+                >
+                <ImageView
+                    android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+                <ImageView
+                    android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+                <ImageView
+                    android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+                <ImageView
+                    android:layout_width="162dp" android:paddingStart="42dp" android:paddingEnd="42dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_sysbar_lights_out_dot_large"
+                    android:scaleType="center"
+                    />
+            </LinearLayout>
+            <View
+                android:layout_width="0dp"
                 android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
-                />
-            <Space
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                />
+                android:layout_weight="1" />
         </LinearLayout>
 
         <com.android.systemui.statusbar.policy.DeadZone
diff --git a/packages/SystemUI/res/layout/cmland.xml b/packages/SystemUI/res/layout/cmland.xml
new file mode 100644
index 0000000..3c4e561
--- /dev/null
+++ b/packages/SystemUI/res/layout/cmland.xml
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The Android Open Source Project
+     Copyright (C) 2014-2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+        >
+    <com.android.systemui.egg.CMLand
+            android:id="@+id/world"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+    </com.android.systemui.egg.CMLand>
+    <FrameLayout
+            android:id="@+id/welcome"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:visibility="gone"
+            android:background="#a0000000"
+            android:clickable="true"
+            >
+        <FrameLayout
+            android:id="@+id/play_button"
+            android:layout_width="72dp"
+            android:layout_height="72dp"
+            android:layout_gravity="center"
+            android:clickable="true"
+            android:background="@drawable/ripplebg"
+            android:focusable="true"
+            android:onClick="startButtonPressed"
+            >
+            <ImageView
+                android:id="@+id/play_button_image"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:scaleType="fitCenter"
+                android:layout_gravity="center"
+                android:tint="#000000"
+                android:src="@drawable/play"
+                />
+            <TextView
+                android:id="@+id/play_button_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:alpha="0"
+                android:textSize="40dp"
+                android:textColor="#000000"
+                />
+        </FrameLayout>
+    </FrameLayout>
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="top|center_horizontal"
+        android:orientation="horizontal"
+        android:gravity="center_vertical"
+        android:id="@+id/player_setup"
+        >
+        <ImageButton
+            style="@android:style/Widget.Material.Button.Borderless"
+            android:id="@+id/player_minus_button"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:padding="10dp"
+            android:scaleType="centerInside"
+            android:onClick="playerMinus"
+            android:src="@drawable/minus"
+            />
+        <LinearLayout
+            android:id="@+id/scores"
+            android:layout_width="wrap_content"
+            android:layout_height="64dp"
+            android:padding="12dp"
+            android:orientation="horizontal"
+            android:clipToPadding="false"
+            >
+        </LinearLayout>
+        <ImageButton
+            style="@android:style/Widget.Material.Button.Borderless"
+            android:id="@+id/player_plus_button"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:padding="10dp"
+            android:scaleType="centerInside"
+            android:onClick="playerPlus"
+            android:src="@drawable/plus"
+            />
+    </LinearLayout>
+</FrameLayout>
diff --git a/packages/SystemUI/res/layout/keyguard_status_bar.xml b/packages/SystemUI/res/layout/keyguard_status_bar.xml
index d330bc7..fcd7e62 100644
--- a/packages/SystemUI/res/layout/keyguard_status_bar.xml
+++ b/packages/SystemUI/res/layout/keyguard_status_bar.xml
@@ -74,7 +74,7 @@
             android:importantForAccessibility="noHideDescendants"/>
     </LinearLayout>
 
-    <com.android.systemui.statusbar.widget.CarrierLabel
+    <com.android.keyguard.CarrierText
         android:id="@+id/keyguard_carrier_text"
         android:layout_width="match_parent"
         android:layout_height="@dimen/status_bar_header_height_keyguard"
@@ -82,7 +82,8 @@
         android:layout_toStartOf="@id/system_icons_super_container"
         android:gravity="center_vertical"
         android:ellipsize="marquee"
-        android:textAppearance="@style/TextAppearance.StatusBar.CarrierLabel"
+        android:textAppearance="?android:attr/textAppearanceSmall"
+        android:textColor="@color/keyguard_carrier_text_color"
         android:singleLine="true" />
 
 </com.android.systemui.statusbar.phone.KeyguardStatusBarView>
diff --git a/packages/SystemUI/res/layout/mid_navigation_bar_land.xml b/packages/SystemUI/res/layout/mid_navigation_bar_land.xml
index 7cd2866..6a1f7aa 100644
--- a/packages/SystemUI/res/layout/mid_navigation_bar_land.xml
+++ b/packages/SystemUI/res/layout/mid_navigation_bar_land.xml
@@ -18,7 +18,7 @@
 -->
 <LinearLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:systemui="http://schemas.android.com/apk/res/com.android.systemui"
+    xmlns:systemui="http://schemas.android.com/apk/res-auto"
     android:layout_height="match_parent"
     android:layout_width="match_parent"
     android:orientation="vertical"
@@ -68,7 +68,7 @@
             android:scaleType="centerInside"
             android:layout_height="80dp"
             android:layout_width="match_parent"
-            android:layout_weight="2"
+            android:layout_weight="0"
             systemui:keyRepeat="true" />
         <View
             android:layout_height="0dp"
@@ -104,7 +104,7 @@
             android:scaleType="centerInside"
             android:layout_height="80dp"
             android:layout_width="match_parent"
-            android:layout_weight="2"
+            android:layout_weight="0"
             systemui:keyRepeat="true" />
     </LinearLayout>
     <FrameLayout
diff --git a/packages/SystemUI/res/layout/mid_navigation_bar_port.xml b/packages/SystemUI/res/layout/mid_navigation_bar_port.xml
new file mode 100644
index 0000000..6dfdc16
--- /dev/null
+++ b/packages/SystemUI/res/layout/mid_navigation_bar_port.xml
@@ -0,0 +1,126 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/*
+** Copyright 2015 The CyanogenMod Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:systemui="http://schemas.android.com/apk/res-auto"
+    android:layout_height="match_parent"
+    android:layout_width="match_parent"
+    android:orientation="horizontal"
+    android:clipChildren="false"
+    android:clipToPadding="false"
+    android:id="@+id/nav_buttons">
+    <FrameLayout
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent" >
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/dpad_left"
+            android:visibility="gone"
+            android:layout_width="40dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside"
+            systemui:keyRepeat="true" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/one"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside" />
+    </FrameLayout>
+    <LinearLayout
+        android:layout_height="match_parent"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:clipChildren="false"
+        android:clipToPadding="false"
+        android:id="@+id/mid_nav_buttons"
+        android:gravity="center_horizontal"
+        android:layout_gravity="center_horizontal"
+        android:animateLayoutChanges="true">
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/two"
+            android:scaleType="centerInside"
+            android:layout_width="@dimen/navigation_key_width"
+            android:layout_height="match_parent"
+            systemui:keyRepeat="true"
+            android:layout_weight="0" />
+        <View
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/three"
+            android:scaleType="centerInside"
+            android:layout_width="@dimen/navigation_key_width"
+            android:layout_height="match_parent"
+            systemui:keyRepeat="true"
+            android:layout_weight="0" />
+        <View
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/four"
+            android:scaleType="centerInside"
+            android:layout_width="@dimen/navigation_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            systemui:keyRepeat="true" />
+        <View
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/five"
+            android:scaleType="centerInside"
+            android:layout_width="@dimen/navigation_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            systemui:keyRepeat="true" />
+    </LinearLayout>
+    <FrameLayout
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent" >
+        <com.android.systemui.statusbar.policy.KeyButtonView
+                android:background="#FFAA0000"
+                android:id="@+id/ime_switcher"
+                android:layout_width="@dimen/navigation_extra_key_width"
+                android:layout_weight="0"
+                android:layout_height="match_parent"
+                android:contentDescription="@string/accessibility_ime_switch_button"
+                android:scaleType="centerInside"
+                android:src="@drawable/ic_ime_switcher_default"
+                android:visibility="invisible" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/six"
+            android:layout_width="@dimen/navigation_extra_key_width"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside" />
+        <com.android.systemui.statusbar.policy.KeyButtonView
+            android:id="@+id/dpad_right"
+            android:visibility="gone"
+            android:layout_width="40dp"
+            android:layout_height="match_parent"
+            android:layout_weight="0"
+            android:scaleType="centerInside"
+            systemui:keyRepeat="true"/>
+    </FrameLayout>
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout/navigation_bar.xml b/packages/SystemUI/res/layout/navigation_bar.xml
index 8288a3b..f8f59da 100644
--- a/packages/SystemUI/res/layout/navigation_bar.xml
+++ b/packages/SystemUI/res/layout/navigation_bar.xml
@@ -4,7 +4,7 @@
 **
 ** Copyright 2011, The Android Open Source Project
 **
-** Licensed under the Apache License, Version 2.0 (the "License");
+** Licensed under the Apache License, Version 2.0 (the "License"); 
 ** you may not use this file except in compliance with the License.
 ** You may obtain a copy of the License at
 **
@@ -20,7 +20,7 @@
 
 <com.android.systemui.statusbar.phone.NavigationBarView
     xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:systemui="http://schemas.android.com/apk/res/com.android.systemui"
+    xmlns:systemui="http://schemas.android.com/apk/res-auto"
     android:layout_height="match_parent"
     android:layout_width="match_parent"
     android:background="@drawable/system_bar_background"
@@ -31,106 +31,16 @@
         android:layout_width="match_parent"
         >
 
-        <RelativeLayout
-            android:layout_height="match_parent"
-            android:layout_width="match_parent">
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:visibility="gone"
-                systemui:viewLocation="2"
-                android:layout_alignParentTop="true" />
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:visibility="gone"
-                systemui:viewLocation="3"
-                android:layout_alignParentBottom="true" />
-        </RelativeLayout>
-
         <LinearLayout
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="horizontal"
             android:clipChildren="false"
             android:clipToPadding="false"
-            android:id="@+id/nav_buttons"
-            android:animateLayoutChanges="true"
+            android:id="@+id/container"
             >
 
-            <!-- navigation controls -->
-            <View
-                android:layout_width="@dimen/navigation_side_padding"
-                android:layout_height="match_parent"
-                android:layout_weight="0"
-                android:visibility="invisible"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/back"
-                android:layout_width="@dimen/navigation_key_width"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_back"
-                systemui:keyCode="4"
-                android:layout_weight="0"
-                android:scaleType="center"
-                android:contentDescription="@string/accessibility_back"
-                />
-            <View
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                android:visibility="invisible"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/home"
-                android:layout_width="@dimen/navigation_key_width"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_home"
-                systemui:keyCode="3"
-                systemui:keyRepeat="false"
-                android:layout_weight="0"
-                android:scaleType="center"
-                android:contentDescription="@string/accessibility_home"
-                />
-            <View
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                android:visibility="invisible"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/recent_apps"
-                android:layout_width="@dimen/navigation_key_width"
-                android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_recent"
-                android:layout_weight="0"
-                android:scaleType="center"
-                android:contentDescription="@string/accessibility_recent"
-                />
-            <FrameLayout
-                android:layout_width="@dimen/navigation_side_padding"
-                android:layout_height="match_parent"
-                android:layout_weight="0" >
-                <com.android.systemui.statusbar.policy.KeyButtonView
-                    android:id="@+id/menu"
-                    android:layout_width="@dimen/navigation_extra_key_width"
-                    android:layout_height="match_parent"
-                    android:contentDescription="@string/accessibility_menu"
-                    android:src="@drawable/ic_sysbar_menu"
-                    android:visibility="invisible"
-                    android:scaleType="centerInside"
-                    android:layout_gravity="end"
-                    systemui:keyCode="82" />
-
-                <com.android.systemui.statusbar.policy.KeyButtonView
-                    android:id="@+id/ime_switcher"
-                    android:layout_width="@dimen/navigation_extra_key_width"
-                    android:layout_height="match_parent"
-                    android:contentDescription="@string/accessibility_ime_switch_button"
-                    android:scaleType="centerInside"
-                    android:src="@drawable/ic_ime_switcher_default"
-                    android:visibility="invisible"
-                    android:layout_gravity="end" />
-            </FrameLayout>
+            <include layout="@layout/mid_navigation_bar_port"/>
 
         </LinearLayout>
 
@@ -139,20 +49,21 @@
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="horizontal"
+            android:gravity="center_horizontal"
+            android:layout_marginStart="40dp"
+            android:layout_marginEnd="40dp"
+            android:layout_gravity="center_horizontal"
             android:id="@+id/lights_out"
             android:visibility="gone"
             >
             <ImageView
                 android:layout_width="@dimen/navigation_key_width"
                 android:layout_height="match_parent"
-                android:layout_marginStart="@dimen/navigation_side_padding"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
+                android:src="@drawable/ic_sysbar_lights_out_dot_large"
                 android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
                 />
             <View
-                android:layout_width="match_parent"
+                android:layout_width="0dp"
                 android:layout_height="match_parent"
                 android:layout_weight="1"
                 android:visibility="invisible"
@@ -162,23 +73,18 @@
                 android:layout_height="match_parent"
                 android:src="@drawable/ic_sysbar_lights_out_dot_large"
                 android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
                 />
             <View
-                android:layout_width="match_parent"
+                android:layout_width="0dp"
                 android:layout_height="match_parent"
                 android:layout_weight="1"
                 android:visibility="invisible"
                 />
             <ImageView
                 android:layout_width="@dimen/navigation_key_width"
-                android:layout_marginEnd="@dimen/navigation_side_padding"
                 android:layout_height="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
+                android:src="@drawable/ic_sysbar_lights_out_dot_large"
                 android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
                 />
         </LinearLayout>
 
@@ -202,133 +108,41 @@
         android:paddingTop="0dp"
         >
 
-        <RelativeLayout
-            android:layout_height="match_parent"
-            android:layout_width="match_parent">
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="wrap_content"
-                android:layout_height="match_parent"
-                android:orientation="vertical"
-                android:visibility="gone"
-                android:layout_alignParentLeft="true"
-                systemui:viewLocation="2"
-                android:rotation="180" />
-
-            <com.android.systemui.statusbar.policy.BatteryBarController
-                android:layout_width="wrap_content"
-                android:layout_height="match_parent"
-                android:orientation="vertical"
-                android:visibility="gone"
-                android:layout_alignParentRight="true"
-                systemui:viewLocation="3"
-                android:rotation="180" />
-
-        </RelativeLayout>
-
-        <LinearLayout
+        <LinearLayout 
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="vertical"
+            android:gravity="center_vertical"
+            android:layout_gravity="center_vertical"
             android:clipChildren="false"
             android:clipToPadding="false"
-            android:id="@+id/nav_buttons"
-            android:animateLayoutChanges="true"
+            android:id="@+id/container"
             >
 
-            <!-- navigation controls -->
-            <FrameLayout
-                android:layout_weight="0"
-                android:layout_width="match_parent"
-                android:layout_height="@dimen/navigation_side_padding" >
-                <com.android.systemui.statusbar.policy.KeyButtonView
-                    android:id="@+id/ime_switcher"
-                    android:layout_width="match_parent"
-                    android:layout_height="@dimen/navigation_extra_key_width"
-                    android:contentDescription="@string/accessibility_ime_switch_button"
-                    android:scaleType="centerInside"
-                    android:src="@drawable/ic_ime_switcher_default"
-                    android:layout_gravity="top"
-                    android:visibility="invisible" />
-
-                <com.android.systemui.statusbar.policy.KeyButtonView
-                    android:id="@+id/menu"
-                    android:layout_width="match_parent"
-                    android:layout_height="40dp"
-                    android:contentDescription="@string/accessibility_menu"
-                    android:src="@drawable/ic_sysbar_menu_land"
-                    android:scaleType="centerInside"
-                    android:layout_gravity="top"
-                    android:visibility="invisible"
-                    systemui:keyCode="82" />
-            </FrameLayout>
+            <include layout="@layout/mid_navigation_bar_land"/>
 
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/recent_apps"
-                android:layout_height="@dimen/navigation_key_width"
-                android:layout_width="match_parent"
-                android:src="@drawable/ic_sysbar_recent_land"
-                android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
-                />
-            <View
-                android:layout_height="match_parent"
-                android:layout_width="match_parent"
-                android:layout_weight="1"
-                android:visibility="invisible"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/home"
-                android:layout_height="@dimen/navigation_key_width"
-                android:layout_width="match_parent"
-                android:src="@drawable/ic_sysbar_home_land"
-                android:scaleType="center"
-                systemui:keyCode="3"
-                systemui:keyRepeat="false"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
-                />
-            <View
-                android:layout_height="match_parent"
-                android:layout_width="match_parent"
-                android:layout_weight="1"
-                android:visibility="invisible"
-                />
-            <com.android.systemui.statusbar.policy.KeyButtonView android:id="@+id/back"
-                android:layout_height="@dimen/navigation_key_width"
-                android:layout_width="match_parent"
-                android:src="@drawable/ic_sysbar_back_land"
-                android:scaleType="center"
-                systemui:keyCode="4"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
-                />
-            <View
-                android:layout_height="@dimen/navigation_side_padding"
-                android:layout_width="match_parent"
-                android:layout_weight="0"
-                android:visibility="invisible"
-                />
         </LinearLayout>
 
         <!-- lights out layout to match exactly -->
-        <LinearLayout
+        <LinearLayout 
             android:layout_height="match_parent"
             android:layout_width="match_parent"
             android:orientation="vertical"
+            android:gravity="center_vertical"
+            android:layout_gravity="center_vertical"
+            android:layout_marginTop="40dp"
+            android:layout_marginBottom="40dp"
             android:id="@+id/lights_out"
             android:visibility="gone"
             >
             <ImageView
                 android:layout_height="@dimen/navigation_key_width"
-                android:layout_marginTop="@dimen/navigation_side_padding"
                 android:layout_width="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
+                android:src="@drawable/ic_sysbar_lights_out_dot_large"
                 android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_recent"
                 />
             <View
-                android:layout_height="match_parent"
+                android:layout_height="0dp"
                 android:layout_width="match_parent"
                 android:layout_weight="1"
                 android:visibility="invisible"
@@ -338,23 +152,18 @@
                 android:layout_width="match_parent"
                 android:src="@drawable/ic_sysbar_lights_out_dot_large"
                 android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_home"
                 />
             <View
-                android:layout_height="match_parent"
+                android:layout_height="0dp"
                 android:layout_width="match_parent"
                 android:layout_weight="1"
                 android:visibility="invisible"
                 />
             <ImageView
                 android:layout_height="@dimen/navigation_key_width"
-                android:layout_marginBottom="@dimen/navigation_side_padding"
                 android:layout_width="match_parent"
-                android:src="@drawable/ic_sysbar_lights_out_dot_small"
+                android:src="@drawable/ic_sysbar_lights_out_dot_large"
                 android:scaleType="center"
-                android:layout_weight="0"
-                android:contentDescription="@string/accessibility_back"
                 />
         </LinearLayout>
 
@@ -371,4 +180,4 @@
             />
     </FrameLayout>
 
-</com.android.systemui.statusbar.phone.NavigationBarView>
\ No newline at end of file
+</com.android.systemui.statusbar.phone.NavigationBarView>
diff --git a/packages/SystemUI/res/layout/notification_guts.xml b/packages/SystemUI/res/layout/notification_guts.xml
index acbdf15..effa302 100644
--- a/packages/SystemUI/res/layout/notification_guts.xml
+++ b/packages/SystemUI/res/layout/notification_guts.xml
@@ -105,16 +105,5 @@
                 android:contentDescription="@string/status_bar_notification_inspect_item_title"
                 android:src="@drawable/ic_info"
                 />
-
-        <ImageButton style="@android:style/Widget.Material.Light.Button.Borderless.Small"
-                android:id="@+id/notification_float_item"
-                android:layout_width="52dp"
-                android:layout_height="match_parent"
-                android:layout_weight="0"
-                android:gravity="center"
-                android:contentDescription="@string/recent_float_mode_title"
-                android:src="@drawable/ic_qs_floating_on"
-                />
-
     </LinearLayout>
 </com.android.systemui.statusbar.NotificationGuts>
diff --git a/packages/SystemUI/res/layout/qs_detail.xml b/packages/SystemUI/res/layout/qs_detail.xml
index ddff0f0..7ff9345 100644
--- a/packages/SystemUI/res/layout/qs_detail.xml
+++ b/packages/SystemUI/res/layout/qs_detail.xml
@@ -18,7 +18,8 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:background="@drawable/qs_detail_background"
-        android:paddingBottom="8dp"
+        android:paddingTop="@dimen/detail_exterior_padding"
+        android:paddingBottom="@dimen/detail_exterior_padding"
         android:orientation="vertical">
 
     <FrameLayout
@@ -28,6 +29,7 @@
             android:layout_weight="1" />
 
     <LinearLayout
+            android:id="@+id/buttons"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:paddingEnd="8dp"
@@ -44,6 +46,16 @@
                 android:focusable="true" />
 
         <TextView
+                android:id="@android:id/button3"
+                style="@style/QSBorderlessButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="8dp"
+                android:minWidth="88dp"
+                android:textAppearance="@style/TextAppearance.QS.DetailButton"
+                android:focusable="true" />
+
+        <TextView
                 android:id="@android:id/button1"
                 style="@style/QSBorderlessButton"
                 android:layout_width="wrap_content"
diff --git a/packages/SystemUI/res/layout/qs_detail_header.xml b/packages/SystemUI/res/layout/qs_detail_header.xml
index 5a96dc3..6f07543 100644
--- a/packages/SystemUI/res/layout/qs_detail_header.xml
+++ b/packages/SystemUI/res/layout/qs_detail_header.xml
@@ -37,4 +37,15 @@
         android:clickable="false"
         android:textAppearance="@style/TextAppearance.QS.DetailHeader" />
 
-</com.android.keyguard.AlphaOptimizedLinearLayout>
\ No newline at end of file
+    <TextView
+        android:id="@+id/done"
+        android:text="@string/quick_settings_done"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:minWidth="88dp"
+        android:paddingRight="12dp"
+        android:textAppearance="@style/TextAppearance.QS.DetailButton"
+        android:clickable="false"
+        android:focusable="false" />
+</com.android.keyguard.AlphaOptimizedLinearLayout>
diff --git a/packages/SystemUI/res/layout/qs_detail_items.xml b/packages/SystemUI/res/layout/qs_detail_items.xml
index c22e42c..4ad82cb 100644
--- a/packages/SystemUI/res/layout/qs_detail_items.xml
+++ b/packages/SystemUI/res/layout/qs_detail_items.xml
@@ -18,9 +18,9 @@
 <com.android.systemui.qs.QSDetailItems xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:paddingTop="16dp"
-    android:paddingStart="16dp"
-    android:paddingEnd="16dp">
+    android:paddingTop="@dimen/detail_exterior_padding"
+    android:paddingStart="@dimen/detail_exterior_padding"
+    android:paddingEnd="@dimen/detail_exterior_padding">
 
     <LinearLayout
         android:id="@android:id/list"
diff --git a/packages/SystemUI/res/layout/qs_detail_items_list.xml b/packages/SystemUI/res/layout/qs_detail_items_list.xml
index 535f28d..33dd579 100644
--- a/packages/SystemUI/res/layout/qs_detail_items_list.xml
+++ b/packages/SystemUI/res/layout/qs_detail_items_list.xml
@@ -18,23 +18,24 @@
 <com.android.systemui.qs.QSDetailItemsList xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:minHeight="200dp"
+    android:minHeight="100dp"
     android:paddingTop="16dp"
     android:paddingStart="16dp"
     android:paddingEnd="16dp">
 
     <ListView
         android:id="@android:id/list"
+        android:divider="@null"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:orientation="vertical" />
 
     <LinearLayout
             android:id="@android:id/empty"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
             android:layout_gravity="center"
-            android:gravity="center_horizontal"
+            android:gravity="center"
             android:orientation="vertical" >
 
         <ImageView
diff --git a/packages/SystemUI/res/layout/qs_panel.xml b/packages/SystemUI/res/layout/qs_panel.xml
index 0036412..2807bb0 100644
--- a/packages/SystemUI/res/layout/qs_panel.xml
+++ b/packages/SystemUI/res/layout/qs_panel.xml
@@ -1,9 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2015 The Android Open Source Project
+<!-- Copyright (C) 2014 The Android Open Source Project
+
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
+
           http://www.apache.org/licenses/LICENSE-2.0
+
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -16,100 +19,12 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:background="@drawable/qs_background_primary"
-        android:paddingTop="8dp"
-        android:paddingBottom="8dp"
+        android:paddingBottom="12dp"
         android:elevation="2dp">
-  
-      <ImageView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/rr_panel_logo"
-            android:layout_gravity="center"
-            android:src="@drawable/ic_qs_rr_panel_logo"
-            android:adjustViewBounds="true"
-            android:layout_marginLeft="40dp"
-            android:layout_marginTop="40dp"
-            android:layout_marginRight="40dp"
-            android:layout_marginBottom="0dp"
-            android:scaleType="fitEnd"
-	    android:visibility="gone" />
-
-      <ImageView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/rr_panel_logo_1"
-            android:layout_gravity="center"
-            android:src="@drawable/ic_qs_rr_panel_logo_1"
-            android:adjustViewBounds="true"
-            android:layout_marginLeft="40dp"
-            android:layout_marginTop="40dp"
-            android:layout_marginRight="40dp"
-            android:layout_marginBottom="0dp"
-            android:scaleType="fitEnd" 
-	    android:visibility="gone" />
-
-      <ImageView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/rr_panel_logo_2"
-            android:layout_gravity="center"
-            android:src="@drawable/ic_qs_rr_panel_logo_2"
-            android:adjustViewBounds="true"
-            android:layout_marginLeft="40dp"
-            android:layout_marginTop="40dp"
-            android:layout_marginRight="40dp"
-            android:layout_marginBottom="0dp"
-            android:scaleType="fitEnd" 
-	    android:visibility="gone" />
-
-      <ImageView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/rr_panel_logo_3"
-            android:layout_gravity="center"
-            android:src="@drawable/ic_qs_rr_panel_logo_3"
-            android:adjustViewBounds="true"
-            android:layout_marginLeft="40dp"
-            android:layout_marginTop="40dp"
-            android:layout_marginRight="40dp"
-            android:layout_marginBottom="0dp"
-            android:scaleType="fitEnd"  
-	    android:visibility="gone"  />
-
-      <ImageView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/rr_panel_logo_4"
-            android:layout_gravity="center"
-            android:src="@drawable/ic_qs_rr_panel_logo_4"
-            android:adjustViewBounds="true"
-            android:layout_marginLeft="40dp"
-            android:layout_marginTop="40dp"
-            android:layout_marginRight="40dp"
-            android:layout_marginBottom="0dp"
-            android:scaleType="fitEnd"  
-	    android:visibility="gone" />
 
-    <com.android.systemui.qs.QSPanel
+    <com.android.systemui.qs.QSDragPanel
             android:id="@+id/quick_settings_panel"
             android:background="@color/quick_settings_panel_background"
             android:layout_width="match_parent"
             android:layout_height="wrap_content" />
-
-<LinearLayout
-        android:id="@+id/task_manager_panel"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:visibility="gone" >
-        <include
-            layout="@layout/memory_usage_item"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-        <LinearLayout
-            android:id="@+id/task_manager_list"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" />
-    </LinearLayout>
 </com.android.systemui.qs.QSContainer>
diff --git a/packages/SystemUI/res/layout/qs_settings.xml b/packages/SystemUI/res/layout/qs_settings.xml
new file mode 100644
index 0000000..bd7cbec
--- /dev/null
+++ b/packages/SystemUI/res/layout/qs_settings.xml
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<com.android.systemui.qs.QSSettings
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:systemui="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/quick_settings_settings_recursion_container"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+    <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
+        <TextView
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:paddingLeft="16dp"
+                android:paddingRight="16dp"
+                android:gravity="center_vertical"
+                android:textColor="@color/qs_title_text_color"
+                android:text="@string/quick_settings_title_header"/>
+
+        <!-- show weather -->
+        <com.android.systemui.qs.QSBooleanSettingRow
+                android:id="@+id/show_weather"
+                style="@style/SettingRow"
+                android:key="status_bar_show_weather"
+                android:title="@string/quick_settings_title_show_weather"
+                systemui:defaultValue="0"
+                systemui:table="cm_system"/>
+
+        <!-- brightness slider -->
+        <com.android.systemui.qs.QSBooleanSettingRow
+                style="@style/SettingRow"
+                android:key="qs_show_brightness_slider"
+                android:title="@string/quick_settings_title_show_brightness_slider"
+                systemui:defaultValue="1"
+                systemui:table="cm_system"/>
+
+        <TextView
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:paddingLeft="16dp"
+                android:paddingRight="16dp"
+                android:gravity="center_vertical"
+                android:textColor="@color/qs_title_text_color"
+                android:text="@string/quick_settings_title_tiles"/>
+
+        <!-- first row large -->
+        <com.android.systemui.qs.QSBooleanSettingRow
+                style="@style/SettingRow"
+                android:title="@string/quick_settings_title_enlarge_first_row"
+                android:key="sysui_qs_main_tiles"
+                systemui:defaultValue="1"
+                systemui:table="cm_secure"/>
+
+        <com.android.systemui.qs.QSBooleanSettingRow
+                style="@style/SettingRow"
+                android:title="@string/quick_settings_title_advanced_location"
+                android:key="qs_location_advanced"
+                systemui:defaultValue="0"
+                systemui:table="cm_secure"/>
+
+        <LinearLayout
+                android:id="@+id/reset_tiles"
+                style="@style/SettingRow">
+            <TextView
+                    android:layout_width="0dp"
+                    android:layout_height="24dp"
+                    android:gravity="center_vertical"
+                    android:layout_gravity="center_vertical"
+                    android:layout_weight="1"
+                    android:id="@+id/title"
+                    android:textColor="@color/qs_tile_reset_to_default_text_color"
+                    android:text="@string/quick_settings_tile_reset_to_default"
+                    android:contentDescription="@null"/>
+
+        </LinearLayout>
+
+    </LinearLayout>
+</com.android.systemui.qs.QSSettings>
+
diff --git a/packages/SystemUI/res/layout/qs_settings_row.xml b/packages/SystemUI/res/layout/qs_settings_row.xml
new file mode 100644
index 0000000..bc7f909
--- /dev/null
+++ b/packages/SystemUI/res/layout/qs_settings_row.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<merge xmlns:android="http://schemas.android.com/apk/res/android">
+    <TextView
+            android:layout_width="0dp"
+            android:layout_height="24dp"
+            android:gravity="center_vertical"
+            android:layout_gravity="center_vertical"
+            android:layout_weight="1"
+            android:id="@+id/title"
+            android:textColor="@color/qs_row_text_color"
+            android:contentDescription="@null"/>
+
+    <Switch
+            android:id="@+id/switcher"
+            android:layout_width="wrap_content"
+            android:layout_height="24dp"
+            android:gravity="center_vertical"
+            android:layout_gravity="center_vertical"
+    />
+</merge>
diff --git a/packages/SystemUI/res/layout/qs_tile_category_row.xml b/packages/SystemUI/res/layout/qs_tile_category_row.xml
new file mode 100644
index 0000000..1736221
--- /dev/null
+++ b/packages/SystemUI/res/layout/qs_tile_category_row.xml
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:minHeight="@dimen/qs_detail_item_height"
+    android:background="@drawable/btn_borderless_rect"
+    android:gravity="center_vertical"
+    android:orientation="horizontal" >
+
+    <ImageView
+        android:id="@android:id/icon"
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:layout_marginStart="12dp"
+        android:layout_marginEnd="12dp" />
+
+    <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="12dp"
+        android:layout_weight="1"
+        android:orientation="vertical" >
+
+        <TextView
+            android:id="@android:id/title"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textStyle="bold"
+            android:ellipsize="end"
+            android:textAppearance="@style/TextAppearance.QS.DetailItemPrimary" />
+    </LinearLayout>
+
+    <ImageView
+        android:id="@android:id/icon2"
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:layout_marginStart="12dp"
+        android:layout_marginEnd="12dp" />
+
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout/qs_tile_child_row.xml b/packages/SystemUI/res/layout/qs_tile_child_row.xml
new file mode 100644
index 0000000..bb30729
--- /dev/null
+++ b/packages/SystemUI/res/layout/qs_tile_child_row.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:minHeight="@dimen/qs_detail_item_height"
+    android:background="@drawable/btn_borderless_rect"
+    android:gravity="center_vertical"
+    android:orientation="horizontal" >
+
+    <ImageView
+        android:id="@android:id/icon"
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:layout_marginStart="72dp"
+        android:layout_marginEnd="12dp" />
+
+    <TextView
+        android:id="@android:id/title"
+        android:layout_weight="1"
+        android:layout_marginStart="12dp"
+        android:layout_width="0dp"
+        android:gravity="center_vertical"
+        android:layout_height="wrap_content"
+        android:ellipsize="end"
+        android:textAppearance="@style/TextAppearance.QS.DetailItemPrimary" />
+
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout/qs_tile_top.xml b/packages/SystemUI/res/layout/qs_tile_top.xml
new file mode 100644
index 0000000..d9a7ad8
--- /dev/null
+++ b/packages/SystemUI/res/layout/qs_tile_top.xml
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2015 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<com.android.systemui.qs.QSPanelTopView
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        android:id="@+id/qs_panel_top"
+        android:layout_width="match_parent"
+        android:paddingTop="@dimen/qs_brightness_padding_top"
+        android:clipToPadding="false"
+        android:layout_height="wrap_content">
+
+    <!-- brightness -->
+    <include android:id="@+id/brightness_container"
+             layout="@layout/quick_settings_brightness_dialog"/>
+
+    <!-- delete target -->
+    <LinearLayout
+            android:id="@+id/delete_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:paddingLeft="16dp"
+            android:paddingRight="16dp"
+            android:orientation="horizontal">
+
+        <ImageView
+                android:id="@+id/delete_target"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:gravity="center"
+                android:layout_gravity="center"
+                android:src="@drawable/ic_delete"
+        />
+    </LinearLayout>
+
+    <!-- edit instructions & add target -->
+    <LinearLayout
+            android:id="@+id/edit_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:paddingLeft="16dp"
+            android:paddingRight="16dp"
+            android:orientation="horizontal">
+
+        <TextView
+                android:id="@+id/edit_text_instruction"
+                android:layout_width="0dp"
+                android:layout_height="match_parent"
+                android:layout_marginEnd="16dp"
+                android:gravity="center_vertical"
+                android:layout_weight="1"
+                android:textColor="@color/qs_edit_header_instruction_text_color"
+                android:contentDescription="@null"/>
+
+        <ImageView
+                android:id="@+id/add_target"
+                android:layout_width="20dp"
+                android:layout_height="match_parent"
+                android:gravity="center_vertical"
+                android:src="@drawable/ic_add_circle_qs"
+        />
+    </LinearLayout>
+
+    <TextView
+            android:id="@+id/qs_toast"
+            android:layout_height="wrap_content"
+            android:paddingLeft="16dp"
+            android:paddingRight="16dp"
+            android:gravity="center_vertical"
+            android:layout_gravity="center_vertical"
+            android:layout_width="match_parent"
+            android:textColor="@color/quick_settings_toast_color"/>
+
+
+</com.android.systemui.qs.QSPanelTopView>
+
diff --git a/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml b/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml
index dd8601b..0bef513 100644
--- a/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml
+++ b/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml
@@ -21,15 +21,13 @@
 
     <ImageView
         android:id="@+id/brightness_icon"
-        android:layout_width="48dp"
-        android:layout_height="48dp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
         android:layout_gravity="center_vertical"
-        android:src="@drawable/ic_qs_brightness_auto_off_new"
+        android:layout_marginEnd="8dp"
+        android:src="@drawable/ic_qs_brightness_auto_off"
         android:contentDescription="@null"
-        android:visibility="gone"
-        android:scaleType="center"
-        android:layout_marginStart="8dp"
-        android:background="?android:attr/selectableItemBackgroundBorderless" />
+        android:visibility="gone" />
 
     <com.android.systemui.settings.ToggleSlider
         android:id="@+id/brightness_slider"
diff --git a/packages/SystemUI/res/layout/recents.xml b/packages/SystemUI/res/layout/recents.xml
index 7744563..bdda527 100644
--- a/packages/SystemUI/res/layout/recents.xml
+++ b/packages/SystemUI/res/layout/recents.xml
@@ -26,15 +26,13 @@
         android:scaleType="fitXY"
         android:src="@drawable/recents_status_gradient" />
 
+    <!-- Recents View -->
     <com.android.systemui.recents.views.RecentsView
         android:id="@+id/recents_view"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:focusable="true" />
-
-    <include layout="@layout/recents_membar" />
-
-    <include layout="@layout/recents_time_layout" />
+        android:focusable="true">
+    </com.android.systemui.recents.views.RecentsView>
 
     <!-- Empty View -->
     <ViewStub android:id="@+id/empty_view_stub"
@@ -56,6 +54,4 @@
         android:layout_gravity="center_horizontal|bottom"
         android:scaleType="fitXY"
         android:src="@drawable/recents_lower_gradient" />
-
-    <include layout="@layout/floating_action_button" />
-</FrameLayout>
+</FrameLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/recents_empty.xml b/packages/SystemUI/res/layout/recents_empty.xml
index d52a56a..bd3e3bc 100644
--- a/packages/SystemUI/res/layout/recents_empty.xml
+++ b/packages/SystemUI/res/layout/recents_empty.xml
@@ -12,31 +12,17 @@
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
- -->
- 
-<RelativeLayout 
+-->
+
+<TextView
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="#40000000"
     android:layout_gravity="center"
-    android:visibility="gone"
-    android:orientation="vertical" >
-    <ImageView
-        android:id="@+id/recentsEmptyImage"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:layout_centerInParent="true"
-        android:paddingBottom="25dp"
-        android:src="@drawable/recents_empty" />
-    <TextView android:layout_below="@id/recentsEmptyImage" 
-        android:layout_centerInParent="true" 
-        android:textSize="16.0sp" 
-        android:textColor="@color/no_recents_text_color" 
-        android:gravity="center" 
-        android:layout_gravity="center" 
-        android:layout_width="wrap_content" 
-        android:layout_height="wrap_content" 
-        android:text="@string/recents_empty_message"/>
-</RelativeLayout>
+    android:gravity="center"
+    android:textSize="16sp"
+    android:textColor="@color/recents_empty_message_text_color"
+    android:text="@string/recents_empty_message"
+    android:fontFamily="sans-serif"
+    android:background="@color/recents_empty_background_color"
+    android:visibility="gone" />
diff --git a/packages/SystemUI/res/layout/recents_task_view.xml b/packages/SystemUI/res/layout/recents_task_view.xml
index e87b632..2b82b05 100644
--- a/packages/SystemUI/res/layout/recents_task_view.xml
+++ b/packages/SystemUI/res/layout/recents_task_view.xml
@@ -27,6 +27,22 @@
             android:layout_width="match_parent"
             android:layout_height="match_parent" />
         <include layout="@layout/recents_task_view_header" />
+        <com.android.systemui.statusbar.AlphaOptimizedFrameLayout
+            android:id="@+id/lock_to_app_fab"
+            android:layout_width="@dimen/recents_lock_to_app_size"
+            android:layout_height="@dimen/recents_lock_to_app_size"
+            android:layout_gravity="bottom|right"
+            android:layout_marginRight="15dp"
+            android:layout_marginBottom="15dp"
+            android:translationZ="2dp"
+            android:contentDescription="@string/recents_lock_to_app_button_label"
+            android:background="@drawable/recents_lock_to_task_button_bg">
+            <ImageView
+                android:layout_width="@dimen/recents_lock_to_app_icon_size"
+                android:layout_height="@dimen/recents_lock_to_app_icon_size"
+                android:layout_gravity="center"
+                android:src="@drawable/recents_lock_to_app_pin" />
+        </com.android.systemui.statusbar.AlphaOptimizedFrameLayout>
     </FrameLayout>
 </com.android.systemui.recents.views.TaskView>
 
diff --git a/packages/SystemUI/res/layout/recents_task_view_header.xml b/packages/SystemUI/res/layout/recents_task_view_header.xml
index 6475df0..423ecb8 100644
--- a/packages/SystemUI/res/layout/recents_task_view_header.xml
+++ b/packages/SystemUI/res/layout/recents_task_view_header.xml
@@ -47,40 +47,20 @@
         android:id="@+id/move_task"
         android:layout_width="48dp"
         android:layout_height="48dp"
-        android:layout_marginEnd="100dp"
+        android:layout_marginEnd="52dp"
         android:layout_gravity="center_vertical|end"
         android:padding="12dp"
         android:background="@drawable/recents_button_bg"
-        android:visibility="gone"
-        android:src="@drawable/star" />
+        android:src="@drawable/star"
+        android:visibility="gone" />
     <com.android.systemui.recents.views.FixedSizeImageView
         android:id="@+id/dismiss_task"
         android:layout_width="48dp"
         android:layout_height="48dp"
         android:layout_marginEnd="4dp"
         android:layout_gravity="center_vertical|end"
-        android:padding="10dp"
-        android:background="@drawable/recents_button_bg"
-        android:visibility="gone"
-        android:src="@drawable/recents_dismiss_light" />
-    <com.android.systemui.recents.views.FixedSizeImageView
-        android:id="@+id/float_task"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        android:layout_marginEnd="70dp"
-        android:layout_gravity="center_vertical|end"
-        android:padding="8dp"
+        android:padding="12dp"
         android:background="@drawable/recents_button_bg"
         android:visibility="invisible"
-        android:src="@drawable/ic_floating_on" />
-    <com.android.systemui.recents.views.FixedSizeImageView 
-        android:id="@+id/lock_to_app_fab" 
-        android:layout_width="48.0dip" 
-        android:layout_height="48.0dip" 
-        android:layout_marginEnd="35.0dip"
-        android:layout_gravity="end|center" 
-        android:padding="12dip" 
-        android:background="@drawable/recents_button_bg" 
-        android:visibility="invisible"
-        android:src="@drawable/ic_pin" />
+        android:src="@drawable/recents_dismiss_light" />
 </com.android.systemui.recents.views.TaskViewHeader>
diff --git a/packages/SystemUI/res/layout/status_bar.xml b/packages/SystemUI/res/layout/status_bar.xml
index b845b52..d5e799a 100644
--- a/packages/SystemUI/res/layout/status_bar.xml
+++ b/packages/SystemUI/res/layout/status_bar.xml
@@ -29,15 +29,6 @@
     android:descendantFocusability="afterDescendants"
     >
 
-    <ImageView android:id="@+id/background_image"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"     
-        android:background="@drawable/status_gradient"
-        android:scaleType="centerCrop"
-	android.visibility="gone"  
-	/>
-
     <ImageView
         android:id="@+id/notification_lights_out"
         android:layout_width="@dimen/status_bar_icon_size"
@@ -71,70 +62,22 @@
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
                 >
-            
-                <ImageView
-                    android:id="@+id/left_rr_logo"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:paddingEnd="4dip"
-                    android:src="@drawable/ic_status_bar_rr_logo"
-                    android:scaleType="center"
-                    android:visibility="gone"
-                    />
-                 <include layout="@layout/custom_icons" />
-
-                <com.android.systemui.statusbar.widget.CarrierLabel
-                    android:id="@+id/status_bar_carrier_label"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_gravity="center_vertical"
-                    android:paddingEnd="4dip"
-                    android:textAppearance="@style/TextAppearance.StatusBar.CarrierLabel"
-                    android:visibility="gone"
-                    android:singleLine="true" />
-
-                <com.android.systemui.statusbar.widget.CarrierLabel
-                    android:id="@+id/statusbar_carrier_text"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_gravity="center_vertical"
-                    android:paddingEnd="4dip"
-                    android:textAppearance="@style/TextAppearance.StatusBar.CarrierLabel"
-                    android:visibility="gone"
-                    android:singleLine="true"
-                    />
-                    
-                 <com.android.systemui.statusbar.policy.Clock
+                <com.android.systemui.statusbar.policy.Clock
                     android:id="@+id/left_clock"
                     android:textAppearance="@style/TextAppearance.StatusBar.Clock"
                     android:layout_width="wrap_content"
                     android:layout_height="fill_parent"
                     android:singleLine="true"
-                    android:paddingEnd="4dip"
+                    android:paddingEnd="6dip"
                     android:gravity="center"
                     android:visibility="gone"
-                    />                       
-
-                <TextView
-                    android:id="@+id/left_weather_temp"
-                    android:layout_width="wrap_content"
-                    android:layout_height="match_parent"
-                    android:singleLine="true"
-                    android:gravity="center"
-                    android:textAppearance="@style/TextAppearance.StatusBar.WeatherTemp"
-                    android:paddingStart="4dp"
-                    android:paddingEnd="4dp"
-                    android:visibility="gone"
                     />
-
                 <com.android.systemui.statusbar.StatusBarIconView android:id="@+id/moreIcon"
                     android:layout_width="@dimen/status_bar_icon_size"
                     android:layout_height="match_parent"
                     android:src="@drawable/stat_notify_more"
                     android:visibility="gone"
                     />
-                    
-
                 <com.android.systemui.statusbar.phone.IconMerger android:id="@+id/notificationIcons"
                     android:layout_width="match_parent"
                     android:layout_height="match_parent"
@@ -150,43 +93,13 @@
             android:orientation="horizontal"
             >
 
- 	        <ImageView
-                    android:id="@+id/before_icons_rr_logo"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:paddingEnd="4dip"
-                    android:src="@drawable/ic_status_bar_rr_logo"
-                    android:scaleType="center"
-                    android:visibility="gone"
-                    />
-            <com.android.systemui.statusbar.policy.NetworkTraffic
-                android:id="@+id/networkTraffic"
-                android:layout_width="wrap_content"
-                android:layout_height="match_parent"
-                android:singleLine="false"
-                android:fontFamily="sans-serif-condensed"
-                android:gravity="right|center_vertical"/>
-
-
-            <TextView
-                android:id="@+id/weather_temp"
-                android:layout_width="wrap_content"
-                android:layout_height="match_parent"
-                android:singleLine="true"
-                android:gravity="right|center_vertical"
-                android:textAppearance="@style/TextAppearance.StatusBar.WeatherTemp"
-                android:paddingStart="2dp"
-                android:paddingEnd="4dp"
-                android:visibility="gone" />
-
-
             <include layout="@layout/system_icons" />
 
             <com.android.systemui.BatteryLevelTextView android:id="@+id/battery_level_text"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_gravity="center_vertical"
-                android:layout_marginStart="@dimen/signal_cluster_battery_padding"
+                android:layout_marginStart="@dimen/header_battery_margin_keyguard"
                 android:textColor="@color/status_bar_battery_level_text_color"
                 android:textSize="@dimen/battery_level_text_size" />
 
@@ -208,28 +121,6 @@
                 android:paddingStart="3dp"
                 android:gravity="center_vertical|start"
                 />
-
-      	  <ImageView
-                    android:id="@+id/rr_logo"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:paddingEnd="4dip"
-                    android:src="@drawable/ic_status_bar_rr_logo"
-                    android:scaleType="center"
-                    android:visibility="gone"
-                    />
-
-       	<com.android.systemui.statusbar.widget.CarrierLabel
-                android:id="@+id/statusbar_carrier_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical"
-                android:textAppearance="@style/TextAppearance.StatusBar.CarrierLabel"
-                android:paddingStart="4dp"
-                android:visibility="gone"
-                android:singleLine="true"
-                /> 
-
         </com.android.keyguard.AlphaOptimizedLinearLayout>
     </LinearLayout>
 
@@ -241,17 +132,6 @@
         android:layout_height="match_parent"
         >
 
-
- 	<ImageView
-                    android:id="@+id/center_rr_logo"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:paddingEnd="4dip"
-                    android:src="@drawable/ic_status_bar_rr_logo"
-                    android:scaleType="center"
-                    android:visibility="gone"
-                    />
-
         <com.android.systemui.statusbar.policy.Clock
             android:id="@+id/center_clock"
             android:textAppearance="@style/TextAppearance.StatusBar.Clock"
@@ -262,10 +142,4 @@
             android:visibility="gone"
             />
     </com.android.keyguard.AlphaOptimizedLinearLayout>
-
-    <com.android.systemui.statusbar.policy.BatteryBarController
-        android:layout_width="match_parent"
-        android:layout_height="1dp"
-        systemui:viewLocation="1" />
 </com.android.systemui.statusbar.phone.PhoneStatusBarView>
-
diff --git a/packages/SystemUI/res/layout/status_bar_expanded_header.xml b/packages/SystemUI/res/layout/status_bar_expanded_header.xml
index 585308d..a017a2e 100644
--- a/packages/SystemUI/res/layout/status_bar_expanded_header.xml
+++ b/packages/SystemUI/res/layout/status_bar_expanded_header.xml
@@ -32,14 +32,6 @@
     android:focusable="true"
     >
 
-    <ImageView android:id="@+id/background_image"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:scaleType="centerCrop"
-        android:visibility="gone"
-        android:adjustViewBounds="true" />
-
     <com.android.systemui.statusbar.phone.MultiUserSwitch android:id="@+id/multi_user_switch"
         android:layout_width="@dimen/multi_user_switch_width_collapsed"
         android:layout_height="@dimen/status_bar_header_height"
@@ -52,54 +44,40 @@
             android:scaleType="centerInside"/>
     </com.android.systemui.statusbar.phone.MultiUserSwitch>
 
-
-    <com.android.keyguard.AlphaOptimizedImageButton android:id="@+id/settings_button"
-        style="@android:style/Widget.Material.Button.Borderless"
-        android:layout_toStartOf="@id/multi_user_switch"
+    <com.android.systemui.statusbar.AlphaOptimizedFrameLayout
+        android:id="@+id/settings_button_container"
         android:layout_width="48dp"
         android:layout_height="@dimen/status_bar_header_height"
-        android:background="@drawable/ripple_drawable"
-        android:src="@drawable/ic_settings"
-        android:contentDescription="@string/accessibility_desc_settings" />
-
-    <com.android.keyguard.AlphaOptimizedImageButton android:id="@+id/halo_button"
-        android:src="@drawable/ic_notify_halo"
-        android:contentDescription="@string/accessibility_halo"
-        android:layout_width="40dp"
-        android:layout_height="@dimen/status_bar_header_height"
-        android:layout_toStartOf="@id/settings_button"
-        style="@android:style/Widget.Material.Button.Borderless"
-	android:layout_marginStart="7dp"
-        android:background="@drawable/ripple_drawable"
-	android:visibility="gone" />
+        android:clipChildren="false"
+        android:clipToPadding="false"
+        android:layout_toStartOf="@id/multi_user_switch">
 
-    <com.android.keyguard.AlphaOptimizedImageButton android:id="@+id/heads_up_button"
-        style="@android:style/Widget.Material.Button.Borderless"
-        android:layout_toStartOf="@id/halo_button"
-        android:layout_width="48dp"
-        android:layout_height="@dimen/status_bar_header_height"
-        android:background="@drawable/ripple_drawable"
-        android:layout_marginStart="7dp"
-        android:visibility="gone"/>
+        <com.android.systemui.statusbar.phone.SettingsButton android:id="@+id/settings_button"
+            style="@android:style/Widget.Material.Button.Borderless"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:background="@drawable/ripple_drawable"
+            android:src="@drawable/ic_settings"
+            android:contentDescription="@string/accessibility_desc_settings" />
+        <com.android.systemui.statusbar.AlphaOptimizedImageView android:id="@+id/tuner_icon"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:paddingStart="36dp"
+            android:tint="@color/tuner_icon_tint"
+            android:tintMode="src_in"
+            android:visibility="invisible"
+            android:src="@drawable/tuner" />
 
-    <com.android.keyguard.AlphaOptimizedImageButton android:id="@+id/task_manager_button"
-        style="@android:style/Widget.Material.Button.Borderless"
-        android:layout_toStartOf="@id/heads_up_button"
-        android:layout_width="48dp"
-        android:layout_height="@dimen/status_bar_header_height"
-        android:background="@drawable/ripple_drawable"
-        android:layout_marginStart="7dp"
-        android:src="@drawable/ic_tasklist_switch_normal"
-        android:visibility="gone"/>
+    </com.android.systemui.statusbar.AlphaOptimizedFrameLayout>
 
     <LinearLayout android:id="@+id/system_icons_super_container"
         android:layout_width="wrap_content"
         android:layout_height="@dimen/status_bar_header_height"
         android:layout_toStartOf="@id/multi_user_switch"
         android:layout_alignWithParentIfMissing="true"
-        android:layout_marginStart="10dp"
+        android:layout_marginStart="16dp"
         android:background="@drawable/ripple_drawable"
-        android:paddingEnd="2dp" >
+        android:paddingEnd="4dp" >
         <FrameLayout android:id="@+id/system_icons_container"
             android:layout_width="wrap_content"
             android:layout_height="@dimen/status_bar_height"
@@ -222,25 +200,6 @@
             android:textSize="@dimen/weather_text_size"
             android:textAppearance="@style/TextAppearance.StatusBar.Expanded.WeatherTemp"
             android:importantForAccessibility="noHideDescendants"/>
-
-    <FrameLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:paddingEnd="10dp"
-        android:gravity="center">
-
-     <ImageButton
-        android:id="@+id/no_weather_image"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="center"
-        android:paddingEnd="10dp"
-        android:visibility="gone"
-        android:background="@drawable/ripple_drawable"
-        android:src="@drawable/weather_off"/>
-        
-</FrameLayout>
-
     <TextView
             android:id="@+id/weather_line_2"
             android:layout_width="match_parent"
diff --git a/packages/SystemUI/res/layout/status_bar_notification_speed_bump.xml b/packages/SystemUI/res/layout/status_bar_notification_speed_bump.xml
index 9816b89..d99a9f6 100644
--- a/packages/SystemUI/res/layout/status_bar_notification_speed_bump.xml
+++ b/packages/SystemUI/res/layout/status_bar_notification_speed_bump.xml
@@ -25,6 +25,6 @@
         android:id="@+id/speedbump_line"
         android:layout_width="match_parent"
         android:layout_height="1dp"
-        android:background="#6f222222"
+        android:background="@color/speedbump_line_divider"
         android:layout_gravity="center_vertical"/>
 </com.android.systemui.statusbar.SpeedBumpView>
diff --git a/packages/SystemUI/res/layout/system_icons.xml b/packages/SystemUI/res/layout/system_icons.xml
index 24ecabd..1f3f810 100644
--- a/packages/SystemUI/res/layout/system_icons.xml
+++ b/packages/SystemUI/res/layout/system_icons.xml
@@ -37,17 +37,7 @@
         android:layout_height="18dp"
         android:layout_width="18dp"
         android:layout_marginBottom="@dimen/battery_margin_bottom"
-        android:layout_marginStart="@dimen/signal_cluster_battery_padding"
-        android:visibility="gone"/>
-
-    <!-- 3Minit proprietary battery icon hook -->
-    <com.android.systemui.statusbar.policy.MinitBattery
-        android:id="@+id/minitBattery"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="@dimen/battery_margin_bottom"
-        android:layout_marginStart="@dimen/signal_cluster_battery_padding"
-        android:visibility="gone"/>
+        android:layout_marginStart="@dimen/signal_cluster_battery_padding"/>
 
     <com.android.systemui.DockBatteryMeterView android:id="@+id/dock_battery"
         android:layout_height="18dp"
diff --git a/packages/SystemUI/res/menu/recent_popup_menu.xml b/packages/SystemUI/res/menu/recent_popup_menu.xml
index db42adb..9b605f9 100644
--- a/packages/SystemUI/res/menu/recent_popup_menu.xml
+++ b/packages/SystemUI/res/menu/recent_popup_menu.xml
@@ -23,5 +23,4 @@
     <item android:id="@+id/recent_force_stop" android:title="@string/advanced_dev_option_force_stop" />
     <item android:id="@+id/recent_wipe_app" android:title="@string/advanced_dev_option_wipe_app" />
     <item android:id="@+id/recent_uninstall" android:title="@string/advanced_dev_option_uninstall" />
-    <item android:id="@+id/recent_float_mode" android:title="@string/recent_float_mode_title" />
 </menu>
diff --git a/packages/SystemUI/res/values-af/cm_arrays.xml b/packages/SystemUI/res/values-af/cm_arrays.xml
index 26bbc04..3008606 100644
--- a/packages/SystemUI/res/values-af/cm_arrays.xml
+++ b/packages/SystemUI/res/values-af/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-af/cm_strings.xml b/packages/SystemUI/res/values-af/cm_strings.xml
index b091b38..c0ada53 100644
--- a/packages/SystemUI/res/values-af/cm_strings.xml
+++ b/packages/SystemUI/res/values-af/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Volgende alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">Kies IME</string>
   <string name="dynamic_qs_tile_su_label">\'Root\' toegang</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay af.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: outo modus.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: dag modus.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nag modus.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: buitelug modus.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay afgeskakel.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay verander na outo modus.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay verander na dag modus.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay verander na dag modus.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay verander na buitelug modus.</string>
   <string name="quick_settings_title_advanced_location">Drie-staat ligging</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Liggingverslaggewing: battery besparing.</string>
diff --git a/packages/SystemUI/res/values-am/cm_arrays.xml b/packages/SystemUI/res/values-am/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-am/cm_arrays.xml
+++ b/packages/SystemUI/res/values-am/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-am/cm_strings.xml b/packages/SystemUI/res/values-am/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-am/cm_strings.xml
+++ b/packages/SystemUI/res/values-am/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-ar/cm_arrays.xml b/packages/SystemUI/res/values-ar/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-ar/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ar/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ar/cm_strings.xml b/packages/SystemUI/res/values-ar/cm_strings.xml
index c251bfa..5df04a3 100644
--- a/packages/SystemUI/res/values-ar/cm_strings.xml
+++ b/packages/SystemUI/res/values-ar/cm_strings.xml
@@ -175,17 +175,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">التنبيه المقبل</string>
   <string name="dynamic_qs_tile_ime_selector_label">محدد IME</string>
   <string name="dynamic_qs_tile_su_label">الوصول إلى root</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">تعطيل LiveDisplay.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: الوضع التلقائي.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: الوضع النهاري.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: الوضع الليلي.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: وضع الأماكن المفتوحة.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">تم تعطيل LiveDisplay.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">تغيير LiveDisplay إلى الوضع التلقائي.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">تغيير LiveDisplay إلى الوضع النهاري.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">تغيير LiveDisplay إلى الوضع الليلي.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">تغيير LiveDisplay إلى وضع الأماكن المفتوحة.</string>
   <string name="quick_settings_title_advanced_location">الموقع الثلاثى</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">تحديد الموقع: وضع توفير البطارية.</string>
diff --git a/packages/SystemUI/res/values-as-rIN/cm_arrays.xml b/packages/SystemUI/res/values-as-rIN/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-as-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-as-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-as-rIN/cm_strings.xml b/packages/SystemUI/res/values-as-rIN/cm_strings.xml
index f09628e..3937ca4 100644
--- a/packages/SystemUI/res/values-as-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-as-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">পৰৱৰ্তী এলাৰ্ম</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME চয়নকাৰী</string>
   <string name="dynamic_qs_tile_su_label">ৰুট প্ৰৱেশ কৰক</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">লাইভপ্রদর্শন অফ।</string>
-  <string name="accessibility_quick_settings_live_display_auto">লাইভপ্রদর্শন: স্বয়ং মোড।</string>
-  <string name="accessibility_quick_settings_live_display_day">লাইভপ্রদর্শন: দিন মোড।</string>
-  <string name="accessibility_quick_settings_live_display_night">লাইভপ্রদর্শন: ৰাতি মোড।</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">লাইভপ্রদর্শন: আউটডোৰ মোড।</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">লাইভপ্রদর্শন অফ কৰা হৈছে।</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">লাইভপ্রদর্শন স্বয়ং মোডলৈ পৰিৱৰ্তন কৰা হৈছে।</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">লাইভপ্রদর্শন দিন মোডলৈ পৰিৱৰ্তন কৰা হৈছে।</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">লাইভপ্রদর্শন ৰাতি মোডলৈ পৰিৱৰ্তন কৰা হৈছে।</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">লাইভপ্রদর্শন আউটডোৰ মোডলৈ পৰিৱৰ্তন কৰা হৈছে।</string>
   <string name="quick_settings_title_advanced_location">ট্ৰাই-ষ্টেট অৱস্থান</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">অৱস্থান ৰিপোৰ্টিং: বেটাৰি ছেভিং মোড।</string>
diff --git a/packages/SystemUI/res/values-ast-rES/cm_arrays.xml b/packages/SystemUI/res/values-ast-rES/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-ast-rES/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ast-rES/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-az-rAZ/cm_arrays.xml b/packages/SystemUI/res/values-az-rAZ/cm_arrays.xml
index 358045b..4d75e51 100644
--- a/packages/SystemUI/res/values-az-rAZ/cm_arrays.xml
+++ b/packages/SystemUI/res/values-az-rAZ/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-az-rAZ/cm_strings.xml b/packages/SystemUI/res/values-az-rAZ/cm_strings.xml
index e1de9d1..d9b0088 100644
--- a/packages/SystemUI/res/values-az-rAZ/cm_strings.xml
+++ b/packages/SystemUI/res/values-az-rAZ/cm_strings.xml
@@ -152,17 +152,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Növbəti zəngli saat</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME seçici</string>
   <string name="dynamic_qs_tile_su_label">Root müraciəti</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay bağlıdır.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: avtomatik rejim.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: gündüz rejimi.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: gecə rejimi.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: açıq hava rejimi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay bağlanıldı.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay avtomatik rejimə keçdi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay gündüz rejiminə keçdi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay gecə rejiminə keçdi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay açıq hava rejiminə keçdi.</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Yer hesabatı: batareyaya qənaət rejimi.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-be/cm_arrays.xml b/packages/SystemUI/res/values-be/cm_arrays.xml
index 57fadd4..e41fd7f 100644
--- a/packages/SystemUI/res/values-be/cm_arrays.xml
+++ b/packages/SystemUI/res/values-be/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-be/cm_strings.xml b/packages/SystemUI/res/values-be/cm_strings.xml
index a451bb7..4db516e 100644
--- a/packages/SystemUI/res/values-be/cm_strings.xml
+++ b/packages/SystemUI/res/values-be/cm_strings.xml
@@ -170,17 +170,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Наступны будзільнік</string>
   <string name="dynamic_qs_tile_ime_selector_label">Выбар метаду ўводу</string>
   <string name="dynamic_qs_tile_su_label">Суперкарыстальнік</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay выключаны.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay працуе ў аўтаматычным рэжыме.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay працуе ў дзённым рэжыме.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay працуе ў начным рэжыме.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay працуе ў рэжыме \"на вуліцы\".</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay выключаны.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay пераключаны ў аўтаматычны рэжым.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay пераключаны ў дзённы рэжым.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay пераключаны ў начны рэжым.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay пераключаны ў рэжым \"на вуліцы\".</string>
   <string name="quick_settings_title_advanced_location">Налады адсылання геададзеных</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Адпраўка месцазнаходжання: рэжым эканоміі батарэі.</string>
diff --git a/packages/SystemUI/res/values-bg/cm_arrays.xml b/packages/SystemUI/res/values-bg/cm_arrays.xml
index 706ab4c..5558075 100644
--- a/packages/SystemUI/res/values-bg/cm_arrays.xml
+++ b/packages/SystemUI/res/values-bg/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-bg/cm_strings.xml b/packages/SystemUI/res/values-bg/cm_strings.xml
index a20aac9..9b7731e 100644
--- a/packages/SystemUI/res/values-bg/cm_strings.xml
+++ b/packages/SystemUI/res/values-bg/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Следваща аларма</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME селектор</string>
   <string name="dynamic_qs_tile_su_label">Администраторски достъп</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">Изключи адаптивен екран.</string>
-  <string name="accessibility_quick_settings_live_display_auto">Адаптивен екран: автоматичен режим.</string>
-  <string name="accessibility_quick_settings_live_display_day">Адаптивен екран: дневен режим.</string>
-  <string name="accessibility_quick_settings_live_display_night">Адаптивен екран: нощен режим.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">Адаптивен екран: външен режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">Адаптивен екран е изключен.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">Адаптивен екран е променен на автоматичен режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">Адаптивен екран е променен на дневен режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">Адаптивен екран е променен на нощен режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">Адаптивен екран е променен на външен режим.</string>
   <string name="quick_settings_title_advanced_location">Три-посочно местоположение</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Настройка на местоположение: икономичен режим на батерията.</string>
diff --git a/packages/SystemUI/res/values-bn-rBD/cm_arrays.xml b/packages/SystemUI/res/values-bn-rBD/cm_arrays.xml
index 45ad7b3..26a6a84 100644
--- a/packages/SystemUI/res/values-bn-rBD/cm_arrays.xml
+++ b/packages/SystemUI/res/values-bn-rBD/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-bn-rBD/cm_strings.xml b/packages/SystemUI/res/values-bn-rBD/cm_strings.xml
index d700f15..4fcb247 100644
--- a/packages/SystemUI/res/values-bn-rBD/cm_strings.xml
+++ b/packages/SystemUI/res/values-bn-rBD/cm_strings.xml
@@ -86,7 +86,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-br-rFR/cm_arrays.xml b/packages/SystemUI/res/values-br-rFR/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-br-rFR/cm_arrays.xml
+++ b/packages/SystemUI/res/values-br-rFR/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-br-rFR/cm_strings.xml b/packages/SystemUI/res/values-br-rFR/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-br-rFR/cm_strings.xml
+++ b/packages/SystemUI/res/values-br-rFR/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-ca/cm_arrays.xml b/packages/SystemUI/res/values-ca/cm_arrays.xml
index 8fd1f0d..85897e7 100644
--- a/packages/SystemUI/res/values-ca/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ca/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ca/cm_strings.xml b/packages/SystemUI/res/values-ca/cm_strings.xml
index 5163df2..b8faa5c 100644
--- a/packages/SystemUI/res/values-ca/cm_strings.xml
+++ b/packages/SystemUI/res/values-ca/cm_strings.xml
@@ -35,7 +35,7 @@
   <string name="lockscreen_choose_action_title">Tria una acció</string>
   <string name="lockscreen_none_target">Cap</string>
   <!-- Dialog title for navigation bar button selection -->
-  <string name="navbar_dialog_title">Escull l\'acció a assignar</string>
+  <string name="navbar_dialog_title">Tria l\'acció a assignar</string>
   <string name="navbar_home_button">Botó Inici</string>
   <string name="navbar_recent_button">Botó Recent</string>
   <string name="navbar_search_button">Botó Cerca</string>
@@ -70,8 +70,8 @@
   <string name="qs_tile_edit_header_instruction">Prem i aguanta les cel·les per reordenar-les</string>
   <string name="quick_settings_edit_label">Edita cel·les</string>
   <string name="quick_settings_cannot_delete_edit_tile">No s\'ha pogut esborrar la cel·la Edita</string>
-  <string name="qs_tiles_reset_confirmation">Vols restablir les cel·les d\'ajustaments ràpids a la configuració predeterminada?</string>
-  <string name="quick_settings_tile_reset_to_default">Restableix la disposició per defecte</string>
+  <string name="qs_tiles_reset_confirmation">Vols restaurar les cel·les d\'ajustaments ràpids a la configuració predeterminada?</string>
+  <string name="quick_settings_tile_reset_to_default">Restaura la disposició per defecte</string>
   <string name="quick_settings_title_header">Capçalera</string>
   <string name="quick_settings_title_tiles">Cel·les</string>
   <string name="quick_settings_title_show_weather">Mostra el temps</string>
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Propera alarma</string>
   <string name="dynamic_qs_tile_ime_selector_label">Selector de l\'IME</string>
   <string name="dynamic_qs_tile_su_label">Accés Superusuari</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay desactivat.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: mode automàtic.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: mode diurn.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: mode nocturn.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: mode exterior.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">S\'ha desactivat el LiveDisplay.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay canviat al mode automàtic.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay canviat al mode diurn.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay canviat al mode nocturn.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay canviat al mode exterior.</string>
   <string name="quick_settings_title_advanced_location">Localització per triangulació</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Informes d\'ubicació: Mode d\'estalvi de bateria.</string>
diff --git a/packages/SystemUI/res/values-cs/cm_arrays.xml b/packages/SystemUI/res/values-cs/cm_arrays.xml
index ae6cfe8..3c17f45 100644
--- a/packages/SystemUI/res/values-cs/cm_arrays.xml
+++ b/packages/SystemUI/res/values-cs/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-cs/cm_strings.xml b/packages/SystemUI/res/values-cs/cm_strings.xml
index e747439..4a0fc63 100644
--- a/packages/SystemUI/res/values-cs/cm_strings.xml
+++ b/packages/SystemUI/res/values-cs/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Další budík</string>
   <string name="dynamic_qs_tile_ime_selector_label">Výběr IME</string>
   <string name="dynamic_qs_tile_su_label">Root přístup</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay vyp.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automatický režim.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: režim ve dne.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: režim v noci.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: režim venku.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay vypnutý.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay změněn na automatický režim.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay změněn na režim ve dne.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay změněn na režim v noci.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay změněn na režim venku.</string>
   <string name="quick_settings_title_advanced_location">Třístavové nastavení určení polohy</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Zjištění polohy: úsporný režim.</string>
diff --git a/packages/SystemUI/res/values-csb-rPL/cm_arrays.xml b/packages/SystemUI/res/values-csb-rPL/cm_arrays.xml
new file mode 100644
index 0000000..44e4c6a
--- /dev/null
+++ b/packages/SystemUI/res/values-csb-rPL/cm_arrays.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+     Copyright (C) 2012-2014 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Cardinal directions for the compass tile -->
+  <!-- Performance profiles description-->
+  <!-- Performance profiles announcement-->
+  <!-- Dynamic tiles -->
+</resources>
diff --git a/packages/SystemUI/res/values-csb-rPL/strings.xml b/packages/SystemUI/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..7758366
--- /dev/null
+++ b/packages/SystemUI/res/values-csb-rPL/strings.xml
@@ -0,0 +1,459 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!--
+/**
+ * Copyright (c) 2009, The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); 
+ * you may not use this file except in compliance with the License. 
+ * You may obtain a copy of the License at 
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0 
+ *
+ * Unless required by applicable law or agreed to in writing, software 
+ * distributed under the License is distributed on an "AS IS" BASIS, 
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
+ * See the License for the specific language governing permissions and 
+ * limitations under the License.
+ */
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Name of the status bar as seen in the applications info settings page. [CHAR LIMIT=12] -->
+  <!-- The text for the button in the notification window-shade that clears
+         all of the currently visible notifications. [CHAR LIMIT=10]-->
+  <!-- Title shown in recents popup for removing an application from the list -->
+  <!-- Title shown in recents popup for inspecting an application's properties -->
+  <!-- Message shown in the middle of the screen after clicking on the recent apps button
+         when there are no recent apps to show. Also used for accessibility. [CHAR LIMIT=45]-->
+  <!-- Content description for the button to dismiss Recent Apps (only present on large
+         devices) -->
+  <!-- Message that is read when you enter recent apps in TalkBack -->
+  <!-- The label in the bar at the top of the status bar when there are no notifications
+         showing.  [CHAR LIMIT=40]-->
+  <!-- The label for the group of notifications for ongoing events in the opened version of
+         the status bar.  An ongoing call is the prime example of this.  The MP3 music player
+         might be another example.   [CHAR LIMIT=40] -->
+  <!-- The label for the group of notifications for recent events in the opened version of
+         the status bar.  Recently received text messsages (SMS), emails, calendar alerts, etc.
+         [CHAR LIMIT=40] -->
+  <!-- When the battery is low, this is displayed to the user in a dialog.  The title of the low battery alert.  [CHAR LIMIT=NONE]-->
+  <!-- A message that appears when the battery level is getting low in a dialog.  This is
+        appened to the subtitle of the low battery alert.  "percentage" is the percentage of battery
+        remaining [CHAR LIMIT=none]-->
+  <!-- Same as battery_low_percent_format, with a notice about battery saver if on. [CHAR LIMIT=none]-->
+  <!-- A message that appears when a USB charger is plugged in and the device does not
+    support charging on it.  That is, a charger that fits into the USB port and goes into
+    a wall socket, not into a computer. (This happens because some devices require more
+    current than the USB spec allows.  [CHAR LIMIT=NONE] -->
+  <!-- First line of invalid_charger, used in the notification form.  [CHAR LIMIT=NONE]-->
+  <!-- Second line of invalid_charger, used in the notification form.  [CHAR LIMIT=NONE]-->
+  <!-- When the battery is low, this is the label of the button to go to the
+         power usage activity to find out what drained the battery.  [CHAR LIMIT=30] -->
+  <!-- Battery saver confirmation dialog title [CHAR LIMIT=NONE]-->
+  <!-- Battery saver confirmation dialog ok text [CHAR LIMIT=40]-->
+  <!-- Battery saver notification action [CHAR LIMIT=NONE]-->
+  <!-- Name of the button that links to the Settings app. [CHAR LIMIT=NONE] -->
+  <!-- Name of the button that links to the Wifi settings screen. [CHAR LIMIT=NONE] -->
+  <!-- Label in system panel saying the device will use the orientation sensor to rotate [CHAR LIMIT=30] -->
+  <!-- Abbreviation / label for mute brightness mode button. Should be all caps. [CHAR LIMIT=6] -->
+  <!-- Abbreviation / label for automatic brightness mode button. Should be all caps. [CHAR LIMIT=6] -->
+  <!-- Label in system panel saying the device will show notifications [CHAR LIMIT=30] -->
+  <!-- Separator for PLMN and SPN in network name. -->
+  <!-- Network connection string for Bluetooth Reverse Tethering -->
+  <!-- Title of a button to open the settings for input methods [CHAR LIMIT=30] -->
+  <!-- Label of a toggle switch to disable use of the physical keyboard in favor of the IME. [CHAR LIMIT=25] -->
+  <!-- Prompt for the USB device permission dialog [CHAR LIMIT=80] -->
+  <!-- Prompt for the USB accessory permission dialog [CHAR LIMIT=80] -->
+  <!-- Prompt for the USB device confirm dialog [CHAR LIMIT=80] -->
+  <!-- Prompt for the USB accessory confirm dialog [CHAR LIMIT=80] -->
+  <!-- Prompt for the USB accessory URI dialog [CHAR LIMIT=80] -->
+  <!-- Title for USB accessory dialog.  Used when the name of the accessory cannot be determined.  [CHAR LIMIT=50] -->
+  <!-- View button label for USB dialogs.  [CHAR LIMIT=15] -->
+  <!-- Checkbox label for USB device dialogs.  [CHAR LIMIT=50] -->
+  <!-- Checkbox label for USB accessory dialogs.  [CHAR LIMIT=50] -->
+  <!-- Title of confirmation dialog for USB debugging -->
+  <!-- Message of confirmation dialog for USB debugging -->
+  <!-- Option to always allow USB debugging from the attached computer -->
+  <!-- Title of notification shown when trying to enable USB debugging but a secondary user is the current foreground user. -->
+  <!-- Message of notification shown when trying to enable USB debugging but a secondary user is the current foreground user. -->
+  <!-- Checkbox label for application compatibility mode ON (zooming app to look like it's running
+         on a phone).  [CHAR LIMIT=25] -->
+  <!-- Checkbox label for application compatibility mode OFF (normal mode on tablets).
+         [CHAR LIMIT=25] -->
+  <!-- Notification ticker displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=30] -->
+  <!-- Notification title displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=50] -->
+  <!-- Notification text displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=100] -->
+  <!-- Notification title displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=50] -->
+  <!-- Notification text displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=100] -->
+  <!-- Notification title displayed when we fail to take a screenshot. [CHAR LIMIT=50] -->
+  <!-- Notification text displayed when we fail to take a screenshot. [CHAR LIMIT=100] -->
+  <!-- Title for the USB function chooser in UsbPreferenceActivity. [CHAR LIMIT=30] -->
+  <!-- Label for the MTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50] -->
+  <!-- Label for the PTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50] -->
+  <!-- Label for the installer CD image option in UsbPreferenceActivity. [CHAR LIMIT=50] -->
+  <!-- Content description of the back button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the home button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the menu button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the recents button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the search button for accessibility. [CHAR LIMIT=NONE] -->
+  <!-- Content description of the camera button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the unlock button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the unlock button when fingerpint is on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Accessibility action of the unlock button when fingerpint is on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Click action label for accessibility for the unlock button. [CHAR LIMIT=NONE] -->
+  <!-- Click action label for accessibility for the phone button. [CHAR LIMIT=NONE] -->
+  <!-- Click action label for accessibility for the voice assist button. This is not shown on-screen and is an accessibility label for the icon which launches the voice assist from the lock screen.[CHAR LIMIT=NONE] -->
+  <!-- Click action label for accessibility for the phone button. [CHAR LIMIT=NONE] -->
+  <!-- Caption for "Recents resize" developer debug feature. [CHAR LIMIT=NONE] -->
+  <!-- Button name for "Cancel". [CHAR LIMIT=NONE] -->
+  <!-- Content description of the compatibility zoom button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of picture of the compatibility zoom example for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth icon when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth icon when connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery when no battery for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the phone signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the wifi label showing what we are connected to. [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth label showing what we are connected to. [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WiMAX signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WiMAX signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WiMAX signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WiMAX signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the WiMAX signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the Ethernet connection when disconnected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the Ethernet connection when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with no signal and no connection for accessibility (not shown on the screen) [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with zero signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with one signal bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with two signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with three signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item with full signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item that is turned on for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item that is turned off for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item that is connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of an item that is connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type GPRS for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type 1x for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type HSPA and its variants for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type 3G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type 3.5G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type 4G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type LTE for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type CDMA for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the roaming data connection type for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type Edge for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection type WiFi for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the data connection with no SIM for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth tethering icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the airplane mode icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the no sim icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the carrier network changing icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery level icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the button for showing a settings panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the button for showing a notifications panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the button for removing a notification in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the enabled GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the acquiring GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the TeleTypewriter(TTY) enabled icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the ringer vibrate icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the ringer silent icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the cast icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description to tell the user that this button will remove an application from recents -->
+  <!-- Content description to tell the user an application has been removed from recents -->
+  <!-- Content description to tell the user all applications has been removed from recents -->
+  <!-- Content description to tell the user an application has been launched from recents -->
+  <!-- Content description of individual recents task. -->
+  <!-- Content description to tell the user a notification has been removed from the notification shade -->
+  <!-- Content description for the notification shade panel (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description for the quick settings panel (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description for the lock screen (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description for the settings button in the status bar header. [CHAR LIMIT=NONE] -->
+  <!-- Content description for the recent apps panel (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description for the close button in the zen mode panel introduction message. [CHAR LIMIT=NONE] -->
+  <!-- Content description of the user tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the wifi tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the wifi is turned off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the wifi is turned on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the mobile data tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the battery tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the airplane mode tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the airplane mode tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the airplane mode changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the airplane mode changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the do not disturb tile in quick settings when on in priority (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the do not disturb tile in quick settings when on in none (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the do not disturb tile in quick settings when on in alarms only (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the do not disturb tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when do not disturb changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when do not disturb changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth tile in quick settings when connecting (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the bluetooth tile in quick settings when connected (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the bluetooth is turned off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the bluetooth is turned on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the location tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the location tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the location tile changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the location tile changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the alarm tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of quick settings detail panel close button (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of zen mode time condition plus button (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of zen mode time condition minus button (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the flashlight tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the flashlight tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the flashlight state changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the flashlight state changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the color inversion state changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the color inversion state changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the hotspot state changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the hotspot state changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the screen stopped casting (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of the display brightness slider (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Title of dialog shown when 2G-3G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] -->
+  <!-- Title of dialog shown when 4G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] -->
+  <!-- Title of dialog shown when mobile data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] -->
+  <!-- Title of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] -->
+  <!-- Body of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=NONE] -->
+  <!-- Dialog button indicating that data connection should be re-enabled. [CHAR LIMIT=28] -->
+  <!-- Text to display underneath the graphical signal strength meter when
+         no connection is available. [CHAR LIMIT=20] -->
+  <!-- Text to display underneath the graphical signal strength meter when
+         it is displaying Wi-Fi status and Wi-Fi is connected to a network
+         whose SSID is not available.
+         [CHAR LIMIT=20] -->
+  <!-- Notification text: when GPS is getting a fix [CHAR LIMIT=50] -->
+  <!-- Notification text: when GPS has found a fix [CHAR LIMIT=50] -->
+  <!-- Accessibility text describing the presence of active location requests by one or more apps -->
+  <!-- Content description of the clear button in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Content description of button in notification inspector for system settings relating to
+         notifications from this application [CHAR LIMIT=NONE] -->
+  <!-- Content description of button in notification inspetor for application-provided settings
+         for its own notifications [CHAR LIMIT=NONE] -->
+  <!-- Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is on. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE] -->
+  <!-- Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the screen is rotating automatically again (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the rotation lock state changes to landscape only (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <!-- Announcement made when the rotation lock state changes to portrait only (not shown on the screen).  [CHAR LIMIT=NONE] -->
+  <!-- Name of the K-release easter egg: a display case for all our tastiest desserts. [CHAR LIMIT=30] -->
+  <!-- Name of the launcher shortcut icon that allows dreams to be started immediately [CHAR LIMIT=20] -->
+  <!-- Textual description of Ethernet connections -->
+  <!-- QuickSettings: Do not disturb [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Do not disturb - Priority only [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Do not disturb - Alarms only [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Do not disturb - Total silence [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Bluetooth [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Bluetooth (Multiple) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Bluetooth (Off) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Bluetooth detail panel, text when there are no items [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Brightness [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Rotation Unlocked [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Rotation Locked [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Locked to Portrait [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Locked to Landscape [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: IME [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Location [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Location (Off) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Media device [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: RSSI [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: RSSI (No network) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Settings [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Time [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: User [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Title of the user detail panel [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Label on the item for adding a new user [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Wifi [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Wifi (Not connected) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Wifi (No network) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Wifi (Off) [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Wifi detail panel, text when there are no items [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cast title [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cast detail panel, status text when casting [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cast detail panel, default device name [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cast detail panel, default device description [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cast detail panel, text when there are no items [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Brightness dialog title [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Brightness dialog auto brightness button [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Label for the toggle that controls whether display inversion is enabled. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Label for the toggle that controls whether display color correction is enabled. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Control panel: Label for button that navigates to settings. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Control panel: Label for button that dismisses control panel. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Control panel: Label for connected device. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Control panel: Label for connecting device. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Tethering. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Hotspot. [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Notifications [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Flashlight [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel title [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel, data usage title [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel, remaining data title [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel, over limit title [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel, data used format string [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel, data limit format string [CHAR LIMIT=NONE] -->
+  <!-- QuickSettings: Cellular detail panel, data warning format string [CHAR LIMIT=NONE] -->
+  <!-- Recents: The empty recents string. [CHAR LIMIT=NONE] -->
+  <!-- Recents: The info panel app info button string. [CHAR LIMIT=NONE] -->
+  <!-- Recents: The screen pinning button. [CHAR LIMIT=NONE] -->
+  <!-- Recents: Temporary string for the button in the recents search bar. [CHAR LIMIT=NONE] -->
+  <!-- Recents: Launch error string. [CHAR LIMIT=NONE] -->
+  <!-- Recents: Dismiss all button. [CHAR LIMIT=NONE] -->
+  <!-- Recents: MultiStack add stack split horizontal radio button. [CHAR LIMIT=NONE] -->
+  <!-- Recents: MultiStack add stack split vertical radio button. [CHAR LIMIT=NONE] -->
+  <!-- Recents: MultiStack add stack split custom radio button. [CHAR LIMIT=NONE] -->
+  <!-- Expanded Status Bar Header: Battery Charged [CHAR LIMIT=40] -->
+  <!-- Expanded Status Bar Header: Charging, no known time [CHAR LIMIT=40] -->
+  <!-- Expanded Status Bar Header: Charging, showing time left until charged [CHAR LIMIT=40] -->
+  <!-- Expanded Status Bar Header: Not charging [CHAR LIMIT=40] -->
+  <!-- Glyph to be overlaid atop the battery when the level is extremely low. Do not translate. -->
+  <!-- Shows up when there is a user SSL CA Cert installed on the
+         device.  Indicates to the user that SSL traffic can be intercepted.
+         If the text fits on one line (~14 chars), it should start with a
+         linebreak to position it correctly.  [CHAR LIMIT=45] -->
+  <!-- Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] -->
+  <!-- Description of the up direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] -->
+  <!-- Description of the left direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] -->
+  <!-- Zen mode: Priority only introduction message on first use -->
+  <!-- Zen mode: Priority only customization button label -->
+  <!-- Zen mode: Total silence introduction message on first use (voice capable devices) -->
+  <!-- Zen mode: Total silence introduction message on first use (non-voice capable devices) -->
+  <!-- Text for overflow card on Keyguard when there is not enough space for all notifications on Keyguard. [CHAR LIMIT=1] -->
+  <!-- An explanation for the visual speed bump in the notifications, which will appear when you click on it. [CHAR LIMIT=50] -->
+  <!-- Shows to explain the double tap interaction with notifications: After tapping a notification on Keyguard, this will explain users to tap again to launch a notification. [CHAR LIMIT=60] -->
+  <!-- Shows when people have pressed the unlock icon to explain how to unlock. [CHAR LIMIT=60] -->
+  <!-- Shows when people have clicked on the phone icon [CHAR LIMIT=60] -->
+  <!-- Shows when people have clicked on the voice assist icon [CHAR LIMIT=60] -->
+  <!-- Shows when people have clicked on the camera icon [CHAR LIMIT=60] -->
+  <!-- Accessibility content description for Interruption level: None. [CHAR LIMIT=NONE] -->
+  <!-- Interruption level: None. [CHAR LIMIT=40] -->
+  <!-- Interruption level: Priority. [CHAR LIMIT=40] -->
+  <!-- Interruption level: Alarms only. [CHAR LIMIT=40] -->
+  <!-- Interruption level: None.  Optimized for narrow two-line display. [CHAR LIMIT=40] -->
+  <!-- Interruption level: Priority.  Optimized for narrow two-line display. [CHAR LIMIT=40] -->
+  <!-- Interruption level: Alarms only.  Optimized for narrow two-line display. [CHAR LIMIT=40] -->
+  <!-- Indication on the keyguard that is shown when the device is charging. [CHAR LIMIT=40]-->
+  <!-- Indication on the keyguard that is shown when the device is charging rapidly. Should match keyguard_plugged_in_charging_fast [CHAR LIMIT=40]-->
+  <!-- Indication on the keyguard that is shown when the device is charging slowly. Should match keyguard_plugged_in_charging_slowly [CHAR LIMIT=40]-->
+  <!-- Related to user switcher -->
+  <!-- Accessibility label for the button that opens the user switcher. -->
+  <!-- Accessibility label for the button that opens the user switcher and announces the current user. -->
+  <!-- Accessibility label for the user icon on the lock screen. -->
+  <!-- Accessibility label for the button that opens the quick contact of the user. -->
+  <!-- Label for the adding a new user in the user switcher [CHAR LIMIT=35] -->
+  <!-- Name for a freshly added user [CHAR LIMIT=30] -->
+  <!-- Name for the guest user [CHAR LIMIT=35] -->
+  <!-- Label for adding a new guest in the user switcher [CHAR LIMIT=35] -->
+  <!-- Label for exiting and removing the  guest session in the user switcher [CHAR LIMIT=35] -->
+  <!-- Title of the confirmation dialog when exiting guest session [CHAR LIMIT=NONE] -->
+  <!-- Message of the confirmation dialog when exiting guest session [CHAR LIMIT=NONE] -->
+  <!-- Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35] -->
+  <!-- Title of the notification when resuming an existing guest session [CHAR LIMIT=NONE] -->
+  <!-- Message of the notification when resuming an existing guest session [CHAR LIMIT=NONE] -->
+  <!-- Notification when resuming an existing guest session: Action that starts a new session [CHAR LIMIT=35] -->
+  <!-- Notification when resuming an existing guest session: Action that continues with the current session [CHAR LIMIT=35] -->
+  <!-- Title of the notification shown to a new guest user [CHAR LIMIT=60] -->
+  <!-- Text of the notification shown to a new guest user [CHAR LIMIT=60] -->
+  <!-- Remove action in the notification shown to a new guest user [CHAR LIMIT=30] -->
+  <!-- Title for add user confirmation dialog [CHAR LIMIT=30] -->
+  <!-- Message for add user confirmation dialog - short version. [CHAR LIMIT=none] -->
+  <!-- Battery saver notification title. [CHAR LIMIT=60]-->
+  <!-- Battery saver notification text. [CHAR LIMIT=60] -->
+  <!-- Battery saver notification action text. [CHAR LIMIT=60] -->
+  <!-- Text shown in place of notification contents when the notification is hidden on a secure lockscreen -->
+  <!-- Media projection permission dialog warning text. [CHAR LIMIT=NONE] -->
+  <!-- Media projection permission dialog permanent grant check box. [CHAR LIMIT=NONE] -->
+  <!-- The text to clear all notifications. [CHAR LIMIT=60] -->
+  <!-- Media projection permission dialog action text. [CHAR LIMIT=60] -->
+  <!-- Text which is shown in the notification shade when there are no notifications. [CHAR LIMIT=30] -->
+  <!-- Footer device owned text [CHAR LIMIT=50] -->
+  <!-- Footer profile owned text [CHAR LIMIT=50] -->
+  <!-- Footer vpn present text [CHAR LIMIT=50] -->
+  <!-- Monitoring dialog title for device owned devices [CHAR LIMIT=35] -->
+  <!-- Monitoring dialog title for profile owned devices [CHAR LIMIT=35] -->
+  <!-- Monitoring dialog title for normal devices  [CHAR LIMIT=35]-->
+  <!-- Monitoring dialog disable vpn button [CHAR LIMIT=30] -->
+  <!-- Monitoring dialog disconnect vpn button [CHAR LIMIT=30] -->
+  <!-- Monitoring dialog device owner body text [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog VPN text [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog VPN with device owner text [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog VPN with profile owner text [CHAR LIMIT=400] -->
+  <!-- Name for a generic legacy VPN connection [CHAR LIMIT=20] -->
+  <!-- Monitoring dialog text for single app (no profile or device owner) [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog text for single app (inside personal profile) [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog text for single app (inside work profile) [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog text for multiple apps (in personal and work profiles) [CHAR LIMIT=400] -->
+  <!-- Monitoring dialog text for single app (with device owner) [CHAR LIMIT=400] -->
+  <!-- Indication on the keyguard that appears when the user disables trust agents until the next time they unlock manually. [CHAR LIMIT=NONE] -->
+  <!-- Title of notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=40] -->
+  <!-- Body of notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=60] -->
+  <!-- Cancel action for notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=20] -->
+  <!-- continue action for notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=20] -->
+  <!-- Text for the button to expand the notifications to show notification children [CHAR LIMIT=20] -->
+  <!-- Text for the button to expand the notifications to hide notification children [CHAR LIMIT=20] -->
+  <!-- Accessibility string for current zen mode and selected exit condition. A template that simply concatenates existing mode string and the current condition description. [CHAR LIMIT=20] -->
+  <!-- Button label for ending zen mode in the volume dialog -->
+  <!-- Content description for accessibility (not shown on the screen): volume dialog expand button. [CHAR LIMIT=NONE] -->
+  <!-- Content description for accessibility (not shown on the screen): volume dialog collapse button. [CHAR LIMIT=NONE] -->
+  <!-- Screen pinning dialog title. -->
+  <!-- Screen pinning dialog description. -->
+  <!-- Screen pinning dialog description when in accessibility mode. -->
+  <!-- Screen pinning positive response. -->
+  <!-- Screen pinning negative response. -->
+  <!-- Hide quick settings tile confirmation title -->
+  <!-- Hide quick settings tile confirmation message -->
+  <!-- Hide quick settings tile confirmation button -->
+  <!-- VolumeUI activation dialog: warning message -->
+  <!-- VolumeUI activation dialog: allow button label -->
+  <!-- VolumeUI activation dialog: deny button label -->
+  <!-- VolumeUI restoration notification: title -->
+  <!-- VolumeUI restoration notification: text -->
+  <!-- Toast shown when user unlocks screen and managed profile activity is in the foreground -->
+  <!-- Name of special SystemUI debug settings -->
+  <!-- Preference to show/hide embedded battery percentage [CHAR LIMIT=50] -->
+  <!-- Summary for battery percentage preference [CHAR LIMIT=NONE] -->
+  <!-- Name of quick settings -->
+  <!-- Name of status bar -->
+  <!-- Name of demo mode (mode with preset icons for screenshots) -->
+  <!-- Enable demo mode -->
+  <!-- Show demo mode icons -->
+  <!-- Name of the ethernet status bar icon. -->
+  <!-- Name of the alarm status bar icon. -->
+  <!-- Name of the work status bar icon. -->
+  <!-- Name of the airplane status bar icon. -->
+  <!-- Description for adding  a quick settings tile -->
+  <!-- Name of a quick settings tile controlled by broadcast -->
+  <!-- For preview release. DO NOT TRANSLATE -->
+  <!-- Warning text when an alarm might be silenced by Do Not Disturb [CHAR LIMIT=NONE] -->
+  <!-- Warning text when an alarm might be silenced by Do Not Disturb due to a time-based condition [CHAR LIMIT=NONE] -->
+  <!-- Alarm template for near alarms [CHAR LIMIT=25] -->
+  <!-- Alarm template for far alarms [CHAR LIMIT=25] -->
+  <!-- Accessibility label for Quick Settings detail screens [CHAR LIMIT=NONE] -->
+  <!-- Accessibility label for hotspot icon [CHAR LIMIT=NONE] -->
+  <!-- Accessibility label for managed profile icon (not shown on screen) [CHAR LIMIT=NONE] -->
+  <!-- Title of warning when entering System UI tuner for first time [CHAR LIMIT=NONE] -->
+  <!-- Warning for users entering the System UI tuner for the first time [CHAR LIMIT=NONE]-->
+  <!-- Warning for users entering the System UI tuner [CHAR LIMIT=NONE]-->
+  <!-- Generic "got it" acceptance of dialog or cling [CHAR LIMIT=NONE] -->
+  <!-- Toast describing tuner has been enabled [CHAR LIMIT=NONE] -->
+  <!-- Option to remove the tuner from settings [CHAR LIMIT=NONE] -->
+  <!-- Dialog asking if the tuner should really be removed from settings [CHAR LIMIT=NONE]-->
+  <!-- Dialog title asking if Bluetooth should be enabled [CHAR LIMIT=NONE] -->
+  <!-- Dialog message explaining why Bluetooth should be enabled when a packaged keyboard is
+         conncted to the device [CHAR LIMIT=NONE] -->
+  <!-- Bluetooth enablement ok text [CHAR LIMIT=40] -->
+</resources>
diff --git a/packages/SystemUI/res/values-cy/cm_arrays.xml b/packages/SystemUI/res/values-cy/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-cy/cm_arrays.xml
+++ b/packages/SystemUI/res/values-cy/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-cy/cm_strings.xml b/packages/SystemUI/res/values-cy/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-cy/cm_strings.xml
+++ b/packages/SystemUI/res/values-cy/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-da/cm_arrays.xml b/packages/SystemUI/res/values-da/cm_arrays.xml
index a0ad465..1d89f10 100644
--- a/packages/SystemUI/res/values-da/cm_arrays.xml
+++ b/packages/SystemUI/res/values-da/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-da/cm_strings.xml b/packages/SystemUI/res/values-da/cm_strings.xml
index 4abbbde..3ba89a0 100644
--- a/packages/SystemUI/res/values-da/cm_strings.xml
+++ b/packages/SystemUI/res/values-da/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Næste alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME-vælger</string>
   <string name="dynamic_qs_tile_su_label">Root-adgang</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay fra.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automatisk tilstand.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: dag tilstand.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nat tilstand.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: udendørstilstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay er slået fra.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay ændret til auto tilstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay ændret til dag tilstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay ændret til nat tilstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay ændret til udendørstilstand.</string>
   <string name="quick_settings_title_advanced_location">Lokation via triangulering</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Placeringsrapportering: Batterisparetilstand.</string>
diff --git a/packages/SystemUI/res/values-de/cm_arrays.xml b/packages/SystemUI/res/values-de/cm_arrays.xml
index 26bbc04..3008606 100644
--- a/packages/SystemUI/res/values-de/cm_arrays.xml
+++ b/packages/SystemUI/res/values-de/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-de/cm_strings.xml b/packages/SystemUI/res/values-de/cm_strings.xml
index 4a99d40..430475d 100644
--- a/packages/SystemUI/res/values-de/cm_strings.xml
+++ b/packages/SystemUI/res/values-de/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Nächster Alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">Eingabemethode</string>
   <string name="dynamic_qs_tile_su_label">Root-Zugriff</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay aus.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: Automatisch.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: Tag.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: Nacht.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: Außen.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay ausgeschaltet.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay auf Auto-Modus geändert.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay auf Tag-Modus geändert.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay auf Nacht-Modus geändert.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay auf Außen-Modus geändert.</string>
   <string name="quick_settings_title_advanced_location">Standort mit drei Zuständen</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Standortdienste: Energiesparmodus.</string>
diff --git a/packages/SystemUI/res/values-el/cm_arrays.xml b/packages/SystemUI/res/values-el/cm_arrays.xml
index fd774d4..82272d5 100644
--- a/packages/SystemUI/res/values-el/cm_arrays.xml
+++ b/packages/SystemUI/res/values-el/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-el/cm_strings.xml b/packages/SystemUI/res/values-el/cm_strings.xml
index c94380a..4e58947 100644
--- a/packages/SystemUI/res/values-el/cm_strings.xml
+++ b/packages/SystemUI/res/values-el/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Επόμενο ξυπνητήρι</string>
   <string name="dynamic_qs_tile_ime_selector_label">Επιλογέας μεθόδου εισόδου</string>
   <string name="dynamic_qs_tile_su_label">Πρόσβαση root</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">Ανενεργό LiveDisplay.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: αυτόματη λειτουργία.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: λειτουργία ημέρας.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: λειτουργία νύχτας.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: λειτουργία εξωτερικού χώρου.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">Το LiveDisplay απενεργοποιήθηκε.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">Το LiveDisplay άλλαξε σε αυτόματη λειτουργία.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">Το LiveDisplay άλλαξε σε λειτουργία ημέρας.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">Το LiveDisplay άλλαξε σε λειτουργία νύχτας.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">Το LiveDisplay άλλαξε σε λειτουργία εξωτερικού χώρου.</string>
   <string name="quick_settings_title_advanced_location">Προηγμένη ρύθμιση τοποθεσίας</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Αναφορά τοποθεσίας: λειτουργία εξοικονόμησης μπαταρίας.</string>
diff --git a/packages/SystemUI/res/values-en-rAU/cm_arrays.xml b/packages/SystemUI/res/values-en-rAU/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-en-rAU/cm_arrays.xml
+++ b/packages/SystemUI/res/values-en-rAU/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-en-rAU/cm_strings.xml b/packages/SystemUI/res/values-en-rAU/cm_strings.xml
index f192f9d..5607867 100644
--- a/packages/SystemUI/res/values-en-rAU/cm_strings.xml
+++ b/packages/SystemUI/res/values-en-rAU/cm_strings.xml
@@ -101,7 +101,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Location reporting: Battery-saving mode.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-en-rGB/cm_arrays.xml b/packages/SystemUI/res/values-en-rGB/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-en-rGB/cm_arrays.xml
+++ b/packages/SystemUI/res/values-en-rGB/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-en-rGB/cm_strings.xml b/packages/SystemUI/res/values-en-rGB/cm_strings.xml
index d96b91d..4b3b506 100644
--- a/packages/SystemUI/res/values-en-rGB/cm_strings.xml
+++ b/packages/SystemUI/res/values-en-rGB/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-en-rIN/cm_arrays.xml b/packages/SystemUI/res/values-en-rIN/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-en-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-en-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-en-rIN/cm_strings.xml b/packages/SystemUI/res/values-en-rIN/cm_strings.xml
index 74a1fa2..37769e0 100644
--- a/packages/SystemUI/res/values-en-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-en-rIN/cm_strings.xml
@@ -168,17 +168,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Next alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME selector</string>
   <string name="dynamic_qs_tile_su_label">Root access</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay off.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: auto mode.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: day mode.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: night mode.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: outdoor mode.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay turned off.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay changed to auto mode.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay changed to day mode.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay changed to night mode.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay changed to outdoor mode.</string>
   <string name="quick_settings_title_advanced_location">Tri-state location</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Location reporting: battery saving mode.</string>
diff --git a/packages/SystemUI/res/values-en-rPT/cm_arrays.xml b/packages/SystemUI/res/values-en-rPT/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-en-rPT/cm_arrays.xml
+++ b/packages/SystemUI/res/values-en-rPT/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-en-rPT/cm_strings.xml b/packages/SystemUI/res/values-en-rPT/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-en-rPT/cm_strings.xml
+++ b/packages/SystemUI/res/values-en-rPT/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-eo/cm_arrays.xml b/packages/SystemUI/res/values-eo/cm_arrays.xml
index 5bf57a1..90be37c 100644
--- a/packages/SystemUI/res/values-eo/cm_arrays.xml
+++ b/packages/SystemUI/res/values-eo/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-eo/cm_strings.xml b/packages/SystemUI/res/values-eo/cm_strings.xml
index d5a9a90..a44e4c8 100644
--- a/packages/SystemUI/res/values-eo/cm_strings.xml
+++ b/packages/SystemUI/res/values-eo/cm_strings.xml
@@ -140,17 +140,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Venonta alarmo</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME elektilo</string>
   <string name="dynamic_qs_tile_su_label">Radikuzanta atingo</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay malaktiva.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: aŭtomata reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: taga reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nokta reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: ekstera reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay malŝaltita.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay ŝanĝita al aŭtomata reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay ŝanĝita al taga reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay ŝanĝita al nokta reĝimo.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay ŝanĝita al ekstera reĝimo.</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Lokalizado: reĝimo de bateria ŝparado.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-es-rMX/cm_arrays.xml b/packages/SystemUI/res/values-es-rMX/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-es-rMX/cm_arrays.xml
+++ b/packages/SystemUI/res/values-es-rMX/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-es-rMX/cm_strings.xml b/packages/SystemUI/res/values-es-rMX/cm_strings.xml
index 22137ab..f7de9c2 100644
--- a/packages/SystemUI/res/values-es-rMX/cm_strings.xml
+++ b/packages/SystemUI/res/values-es-rMX/cm_strings.xml
@@ -93,7 +93,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <string name="quick_settings_title_advanced_location">Ubicación por triangulación</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-es-rUS/cm_arrays.xml b/packages/SystemUI/res/values-es-rUS/cm_arrays.xml
index 8fd1f0d..85897e7 100644
--- a/packages/SystemUI/res/values-es-rUS/cm_arrays.xml
+++ b/packages/SystemUI/res/values-es-rUS/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-es-rUS/cm_strings.xml b/packages/SystemUI/res/values-es-rUS/cm_strings.xml
index 48b59e1..a193b19 100644
--- a/packages/SystemUI/res/values-es-rUS/cm_strings.xml
+++ b/packages/SystemUI/res/values-es-rUS/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Próxima alarma</string>
   <string name="dynamic_qs_tile_ime_selector_label">Selector IME</string>
   <string name="dynamic_qs_tile_su_label">Acceso a raíz</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay desactivado.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: modo diurno.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: modo nocturno.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: modo aire libre.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay desactivado.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay cambió a modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay cambió a modo diurno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay cambió a modo nocturno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay cambió a modo aire libre.</string>
   <string name="quick_settings_title_advanced_location">Localización trizona</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Informes de ubicación: modo de ahorro de batería.</string>
diff --git a/packages/SystemUI/res/values-es/cm_arrays.xml b/packages/SystemUI/res/values-es/cm_arrays.xml
index 8fd1f0d..85897e7 100644
--- a/packages/SystemUI/res/values-es/cm_arrays.xml
+++ b/packages/SystemUI/res/values-es/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-es/cm_strings.xml b/packages/SystemUI/res/values-es/cm_strings.xml
index 9acbcf5..a9b7a8d 100644
--- a/packages/SystemUI/res/values-es/cm_strings.xml
+++ b/packages/SystemUI/res/values-es/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Próxima alarma</string>
   <string name="dynamic_qs_tile_ime_selector_label">Selector IME</string>
   <string name="dynamic_qs_tile_su_label">Acceso administrativo</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay desactivado.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: modo diurno.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: modo nocturno.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: modo aire libre.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay desactivado.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay cambió a modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay ha cambiado a modo diurno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay ha cambiado a modo nocturno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay cambiado a modo aire libre.</string>
   <string name="quick_settings_title_advanced_location">Ubicación por triangulación</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Informes de ubicación: modo de ahorro de batería.</string>
diff --git a/packages/SystemUI/res/values-et-rEE/cm_arrays.xml b/packages/SystemUI/res/values-et-rEE/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-et-rEE/cm_arrays.xml
+++ b/packages/SystemUI/res/values-et-rEE/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-et-rEE/cm_strings.xml b/packages/SystemUI/res/values-et-rEE/cm_strings.xml
index 53c22a0..62ea1ad 100644
--- a/packages/SystemUI/res/values-et-rEE/cm_strings.xml
+++ b/packages/SystemUI/res/values-et-rEE/cm_strings.xml
@@ -17,9 +17,7 @@
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <!-- Content description of the data connection type HSPA+ for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_data_connection_hspap">HSPA+</string>
   <!-- Content description of the data connection type 4G+ for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_data_connection_4g_plus">4G+</string>
   <!-- Weather string format in expanded statusbar header -->
   <string name="status_bar_expanded_header_weather_format"><xliff:g id="temp">%1$s</xliff:g> - <xliff:g id="condition">%2$s</xliff:g></string>
   <!-- Text to use when the number in a notification info is too large
@@ -29,8 +27,6 @@
   <!-- Strings for lockscreen shortcut hints -->
   <string name="left_shortcut_hint">Libista paremale et käivitada %1$s</string>
   <string name="right_shortcut_hint">Libista vasakule et käivitada %1$s</string>
-  <string name="lockscreen_message">Koputage vasaku või parema ikooni peale, et muuta lukustusekraani lühiteid.</string>
-  <string name="lockscreen_default_target">Vaikimisi</string>
   <string name="select_application">Valige rakendus</string>
   <string name="lockscreen_choose_action_title">Valige toiming</string>
   <string name="lockscreen_none_target">Puudub</string>
@@ -54,7 +50,6 @@
   <!-- Title shown in recents popup for uninstalling the application -->
   <string name="advanced_dev_option_uninstall">Eemalda</string>
   <!-- Content description of the light brightness slider (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_notification_brightness">Teavitustule heledus</string>
   <!-- Content description of the profiles tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_profiles_off">Profiilid väljas.</string>
   <!-- Content description of the profiles tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -65,18 +60,6 @@
   <string name="accessibility_quick_settings_profiles_changed">Profiil muudetud: <xliff:g id="profile" example="Default">%s</xliff:g>.</string>
   <string name="quick_settings_compass_init">Määratlen\u2026</string>
   <!-- Lights settings, LED notification -->
-  <string name="led_notification_title">Teavitustule sätted</string>
-  <string name="led_notification_text">LED tule lubamine</string>
-  <string name="qs_tile_edit_header_instruction">Hoia plaatide ümber paigutamiseks</string>
-  <string name="quick_settings_edit_label">Redigeeri plaate</string>
-  <string name="quick_settings_cannot_delete_edit_tile">Ei saa kustutada Redigeerimise plaati</string>
-  <string name="qs_tiles_reset_confirmation">Taasta kiirseadistuse plaatide vaikekonfoguratsioon?</string>
-  <string name="quick_settings_tile_reset_to_default">Taasta plaatide vaikeseadistus</string>
-  <string name="quick_settings_title_header">Päis</string>
-  <string name="quick_settings_title_tiles">Plaadid</string>
-  <string name="quick_settings_title_show_weather">Näita Ilmateadet</string>
-  <string name="quick_settings_title_show_brightness_slider">Kuva heleduse liugur</string>
-  <string name="quick_settings_title_enlarge_first_row">Suurenda esimene rida</string>
   <!-- Screen pinning dialog description (for devices without navbar) -->
   <string name="screen_pinning_description_no_navbar">See hoiab vaate kuni vabastamiseni. Vajuta ja hoia tagasi nuppu vabastamiseks.</string>
   <string name="quick_settings_custom_tile_detail_title">Kohandatud plaat</string>
@@ -89,8 +72,6 @@
   <string name="quick_settings_heads_up_label">Etteteavitus</string>
   <string name="quick_settings_battery_saver_label">Akusäästja</string>
   <!-- quick settings battery saver label to show when device is charging and tile is disabled -->
-  <string name="quick_settings_battery_saver_label_charging">Akusäästja (laadimine)</string>
-  <string name="quick_settings_caffeine_label">Kofeiin</string>
   <!-- Content description of the sync tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_sync_off">Sünk väljas.</string>
   <!-- Content description of the sync tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -106,7 +87,6 @@
   <string name="quick_settings_lockscreen_label">Lukustusekraan</string>
   <string name="quick_settings_ambient_display_label">Ambient kuva</string>
   <string name="quick_settings_lockscreen_label_enforced">Lukustusekraan sunnitud</string>
-  <string name="quick_settings_lockscreen_label_locked_by_profile">Profiili poolt keelatud</string>
   <!-- Content description of the screen timeout tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_screen_timeout">Ekraani ajalõpp: <xliff:g id="timeout" example="30 seconds">%s</xliff:g>.</string>
   <!-- Announcement made when the screen timeout tile changes (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -158,9 +138,7 @@
   <!-- Announcement made when heads up changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_heads_up_changed_on">Etteteavitus on sisselülitatud.</string>
   <!-- Content description of the caffeine tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_caffeine_off">Kofeiin välja.</string>
   <!-- Content description of the caffeine tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_caffeine_on">Kofeiin sisse.</string>
   <!-- Content description of the battery saver tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_battery_saver_off">Akusäästja väljas.</string>
   <!-- Content description of the battery saver tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -174,17 +152,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Järgmine alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME valija</string>
   <string name="dynamic_qs_tile_su_label">Root ligipääs</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay väljas.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automaatrežiim.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: päev-režiim.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: Öörežiim.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: õues režiim.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay välja lülitatud.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay muudetud automaatrežiimi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay muudetud päev-režiimi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay muudetud Öörežiimi.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay muudetud õues režiimi.</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Asukoha teatamine: aku säästmise režiim.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -205,21 +172,11 @@
   <string name="accessibility_quick_settings_location_changed_gps_only">Asukoha teavitus muudetud vaid sensorite režiimi.</string>
   <!-- Announcement made when the location tile changes to high accuracy (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_changed_high_accuracy">Asukoha teavitus muudetud kõrge täpsusega režiimi.</string>
-  <string name="quick_settings_tiles_category_system">Süsteemi plaadid</string>
   <!-- detail header when adding a tile -->
-  <string name="quick_settings_tiles_add_tiles">Lisa plaat</string>
   <!-- Hotspot dialog message -->
-  <string name="hotspot_apm_message">Ei saa ühenduda mobiilsidevõrguga kuni lennukirežiim on lubatud. Lülita lennukirežiim välja ja proovi uuesti.</string>
   <!-- Notification which notifies user flashlight is enabled -->
-  <string name="quick_settings_tile_flashlight_not_title">Taskulamp põleb</string>
-  <string name="quick_settings_tile_flashlight_not_summary">Väljalülitamiseks koputage</string>
   <!-- Wi-Fi hotspot label when enabled -->
-  <plurals name="wifi_hotspot_connected_clients_label">
-    <item quantity="one">%1$d seade</item>
-    <item quantity="other">%1$d seadmed</item>
-  </plurals>
   <!-- CellularTile data sim not configured state string -->
-  <string name="data_sim_not_configured">Andmeside puudub</string>
   <!-- Content description of the dock battery level icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_dock_battery_level">Doki aku <xliff:g id="number">%d</xliff:g> protsenti.</string>
   <!-- Play queue -->
@@ -228,8 +185,4 @@
   <!-- Path data for landscape battery -->
   <!-- Path data for circle battery -->
   <!-- Weather string format in keyguard -->
-  <string name="keyguard_status_view_weather_format"><xliff:g id="temp">%1$s</xliff:g> <xliff:g id="condition">%2$s</xliff:g></string>
-  <string name="expand_hint">Laiendamiseks tõmmake alla</string>
-  <string name="swipe_left_hint">Tõmmake vasakule. et avada rakendus <xliff:g id="app_name">%1$s </xliff:g></string>
-  <string name="swipe_right_hint">Teadete nägemiseks tõmmake paremale</string>
 </resources>
diff --git a/packages/SystemUI/res/values-eu-rES/cm_arrays.xml b/packages/SystemUI/res/values-eu-rES/cm_arrays.xml
index da96e7d..ba9d5de 100644
--- a/packages/SystemUI/res/values-eu-rES/cm_arrays.xml
+++ b/packages/SystemUI/res/values-eu-rES/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-eu-rES/cm_strings.xml b/packages/SystemUI/res/values-eu-rES/cm_strings.xml
index a5b51aa..82677fa 100644
--- a/packages/SystemUI/res/values-eu-rES/cm_strings.xml
+++ b/packages/SystemUI/res/values-eu-rES/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Hurrengo alarma</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME hautatzailea</string>
   <string name="dynamic_qs_tile_su_label">Root sarbidea</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay ezgaituta.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modu automatikoa.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: eguna modua.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: gaua modua.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: kaleko modua.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay ezgaituta.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay modu automatikora aldatu da.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay eguna modura aldatu da.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay gaua modura aldatu da.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay kaleko modura aldatu da.</string>
   <string name="quick_settings_title_advanced_location">Hiru egoeratako kokapena</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Kokaleku txostena: bateria aurrezteko modua.</string>
diff --git a/packages/SystemUI/res/values-fa/cm_arrays.xml b/packages/SystemUI/res/values-fa/cm_arrays.xml
index f6944d0..24aeeac 100644
--- a/packages/SystemUI/res/values-fa/cm_arrays.xml
+++ b/packages/SystemUI/res/values-fa/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-fa/cm_strings.xml b/packages/SystemUI/res/values-fa/cm_strings.xml
index e318d9d..24235ea 100644
--- a/packages/SystemUI/res/values-fa/cm_strings.xml
+++ b/packages/SystemUI/res/values-fa/cm_strings.xml
@@ -152,17 +152,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">هشدار بعدی</string>
   <string name="dynamic_qs_tile_ime_selector_label">انتخابگر تغییر روش ورودی</string>
   <string name="dynamic_qs_tile_su_label">دسترسی روت</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">نمایش پویا خاموش.</string>
-  <string name="accessibility_quick_settings_live_display_auto">نمایش پویا: حالت خودکار.</string>
-  <string name="accessibility_quick_settings_live_display_day">نمایش پویا: حالت روز.</string>
-  <string name="accessibility_quick_settings_live_display_night">نمایش پویا: حالت شب.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">نمایش پویا: حالت فضای باز.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">نمایش پویا خاموش شد.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">نمایش پویا به حالت خودکار تغییر کرد.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">نمایش پویا به حالت روز تغییر کرد.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">نمایش پویا به حالت شب تغییر کرد.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">نمایش پویا به حالت فضای باز تغییر کرد.</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">گزارش مکان: حالت صرفه‌جویی در باتری.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-fi/cm_arrays.xml b/packages/SystemUI/res/values-fi/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-fi/cm_arrays.xml
+++ b/packages/SystemUI/res/values-fi/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-fi/cm_strings.xml b/packages/SystemUI/res/values-fi/cm_strings.xml
index f133471..c6e454d 100644
--- a/packages/SystemUI/res/values-fi/cm_strings.xml
+++ b/packages/SystemUI/res/values-fi/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Seuraava hälytys</string>
   <string name="dynamic_qs_tile_ime_selector_label">Syöttötavan valitsin</string>
   <string name="dynamic_qs_tile_su_label">Root-oikeudet</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay pois.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automaattitila.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: päivätila.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: yötila.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: ulkoilmatila.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay pois päältä.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay asetettu automaattitilaan.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay asetettu päivätilaan.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay asetettu yötilaan.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay asetettu ulkoilmatilaan.</string>
   <string name="quick_settings_title_advanced_location">Sijainnin lisäasetukset</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Sijainnin raportointi: virransäästötila.</string>
diff --git a/packages/SystemUI/res/values-fil-rPH/cm_arrays.xml b/packages/SystemUI/res/values-fil-rPH/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-fil-rPH/cm_arrays.xml
+++ b/packages/SystemUI/res/values-fil-rPH/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-fil-rPH/cm_strings.xml b/packages/SystemUI/res/values-fil-rPH/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-fil-rPH/cm_strings.xml
+++ b/packages/SystemUI/res/values-fil-rPH/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-fr-rCA/cm_arrays.xml b/packages/SystemUI/res/values-fr-rCA/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-fr-rCA/cm_arrays.xml
+++ b/packages/SystemUI/res/values-fr-rCA/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-fr-rCA/cm_strings.xml b/packages/SystemUI/res/values-fr-rCA/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-fr-rCA/cm_strings.xml
+++ b/packages/SystemUI/res/values-fr-rCA/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-fr/cm_arrays.xml b/packages/SystemUI/res/values-fr/cm_arrays.xml
index 8fd1f0d..85897e7 100644
--- a/packages/SystemUI/res/values-fr/cm_arrays.xml
+++ b/packages/SystemUI/res/values-fr/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-fr/cm_strings.xml b/packages/SystemUI/res/values-fr/cm_strings.xml
index c3d0543..178a379 100644
--- a/packages/SystemUI/res/values-fr/cm_strings.xml
+++ b/packages/SystemUI/res/values-fr/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Prochaine alarme</string>
   <string name="dynamic_qs_tile_ime_selector_label">Mode de saisie</string>
   <string name="dynamic_qs_tile_su_label">Accès root</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay désactivé.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay : mode automatique.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay : mode jour.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay : mode nuit.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay : mode plein air.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay désactivé.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay changé en mode automatique.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay changé en mode jour.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay changé en mode nuit.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay changé en mode plein air.</string>
   <string name="quick_settings_title_advanced_location">Localisation à trois états</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Localisation : mode économie de batterie.</string>
diff --git a/packages/SystemUI/res/values-frp-rIT/cm_arrays.xml b/packages/SystemUI/res/values-frp-rIT/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-frp-rIT/cm_arrays.xml
+++ b/packages/SystemUI/res/values-frp-rIT/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-frp-rIT/cm_strings.xml b/packages/SystemUI/res/values-frp-rIT/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-frp-rIT/cm_strings.xml
+++ b/packages/SystemUI/res/values-frp-rIT/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-fy-rNL/cm_arrays.xml b/packages/SystemUI/res/values-fy-rNL/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-fy-rNL/cm_arrays.xml
+++ b/packages/SystemUI/res/values-fy-rNL/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-fy-rNL/cm_strings.xml b/packages/SystemUI/res/values-fy-rNL/cm_strings.xml
index 74f11b7..9c17875 100644
--- a/packages/SystemUI/res/values-fy-rNL/cm_strings.xml
+++ b/packages/SystemUI/res/values-fy-rNL/cm_strings.xml
@@ -73,7 +73,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-gd-rGB/cm_arrays.xml b/packages/SystemUI/res/values-gd-rGB/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-gd-rGB/cm_arrays.xml
+++ b/packages/SystemUI/res/values-gd-rGB/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-gd-rGB/cm_strings.xml b/packages/SystemUI/res/values-gd-rGB/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-gd-rGB/cm_strings.xml
+++ b/packages/SystemUI/res/values-gd-rGB/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-gl-rES/cm_arrays.xml b/packages/SystemUI/res/values-gl-rES/cm_arrays.xml
index a616cd9..f57af4d 100644
--- a/packages/SystemUI/res/values-gl-rES/cm_arrays.xml
+++ b/packages/SystemUI/res/values-gl-rES/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-gl-rES/cm_strings.xml b/packages/SystemUI/res/values-gl-rES/cm_strings.xml
index 5183219..ce46691 100644
--- a/packages/SystemUI/res/values-gl-rES/cm_strings.xml
+++ b/packages/SystemUI/res/values-gl-rES/cm_strings.xml
@@ -168,17 +168,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Próxima alarma</string>
   <string name="dynamic_qs_tile_ime_selector_label">Selector IME</string>
   <string name="dynamic_qs_tile_su_label">Acceso de superusuario</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay desactivado.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: modo día.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: modo noite.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: modo exteriores.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay desactivado.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay cambiado a modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay cambiado a modo día.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay cambiado a modo noite.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay cambiado a modo exteriores.</string>
   <string name="quick_settings_title_advanced_location">Localización por triangulación</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Informe de localización: en modo aforro de batería.</string>
diff --git a/packages/SystemUI/res/values-gu-rIN/cm_arrays.xml b/packages/SystemUI/res/values-gu-rIN/cm_arrays.xml
index bcc70d0..606537e 100644
--- a/packages/SystemUI/res/values-gu-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-gu-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-gu-rIN/cm_strings.xml b/packages/SystemUI/res/values-gu-rIN/cm_strings.xml
index 14b00a7..ba08659 100644
--- a/packages/SystemUI/res/values-gu-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-gu-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">આગામી ઍલાર્મ</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME સિલેક્ટર</string>
   <string name="dynamic_qs_tile_su_label">રૂટ ઍક્સેસ</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">લાઇવડિસ્પ્લે બંધ.</string>
-  <string name="accessibility_quick_settings_live_display_auto">લાઇવડિસ્પ્લે: ઑટો મોડ.</string>
-  <string name="accessibility_quick_settings_live_display_day">લાઇવડિસ્પ્લે: ડે મોડ.</string>
-  <string name="accessibility_quick_settings_live_display_night">લાઇવડિસ્પ્લે: નાઇટ મોડ.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">લાઇવડિસ્પ્લે: આઉટડોર મોડ.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">લાઇવડિસ્પ્લે બંધ કરાયું.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">લાઇવડિસ્પ્લે ઑટો મોડ તરીકે બદલાયું.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">લાઇવડિસ્પ્લે ડે મોડ તરીકે બદલાયું.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">લાઇવડિસ્પ્લે નાઇટ મોડ તરીકે બદલાયું.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">લાઇવડિસ્પ્લે આઉટડોર મોડ તરીકે બદલાયું.</string>
   <string name="quick_settings_title_advanced_location">Tri-state સ્થાન</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">સ્થાન રિપોર્ટિંગ: બૅટરી બચત મોડ.</string>
diff --git a/packages/SystemUI/res/values-hi/cm_arrays.xml b/packages/SystemUI/res/values-hi/cm_arrays.xml
index 17b8d3e..1e8bded 100644
--- a/packages/SystemUI/res/values-hi/cm_arrays.xml
+++ b/packages/SystemUI/res/values-hi/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-hi/cm_strings.xml b/packages/SystemUI/res/values-hi/cm_strings.xml
index 08ddbc3..3502636 100644
--- a/packages/SystemUI/res/values-hi/cm_strings.xml
+++ b/packages/SystemUI/res/values-hi/cm_strings.xml
@@ -140,17 +140,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">अलगा अलार्म</string>
   <string name="dynamic_qs_tile_ime_selector_label">आईएमई चयनक</string>
   <string name="dynamic_qs_tile_su_label">मूल पहुँच</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">लाइवडिस्प्ले बंद है।</string>
-  <string name="accessibility_quick_settings_live_display_auto">लाइवडिस्प्ले: स्वतः मोड।</string>
-  <string name="accessibility_quick_settings_live_display_day">लाइवडिस्प्ले: दिन मोड।</string>
-  <string name="accessibility_quick_settings_live_display_night">लाइवडिस्प्ले: रात मोड।</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">लाइवडिस्प्ले: बाहरी मोड।</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">लाइवडिस्प्ले को बंद किया गया है।</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">लाइवडिस्प्ले को स्वतः मोड में बदला गया।</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">लाइवडिस्प्ले को दिन मोड में बदला गया।</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">लाइवडिस्प्ले को रात मोड में बदला गया।</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">लाइवडिस्प्ले को बाहरी मोड में बदला गया।</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">स्थान रिपोर्टिंग: बैटरी बचानेवाला मोड।</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-hr/cm_arrays.xml b/packages/SystemUI/res/values-hr/cm_arrays.xml
index 3627928..ebe3e06 100644
--- a/packages/SystemUI/res/values-hr/cm_arrays.xml
+++ b/packages/SystemUI/res/values-hr/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-hr/cm_strings.xml b/packages/SystemUI/res/values-hr/cm_strings.xml
index b777737..1cd844e 100644
--- a/packages/SystemUI/res/values-hr/cm_strings.xml
+++ b/packages/SystemUI/res/values-hr/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Sljedeći alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME za odabir</string>
   <string name="dynamic_qs_tile_su_label">Root pristup</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay isključen.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: auto.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: dnevni način.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: noćni način.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: vanjski način.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay isključen.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay promijenjen u auto.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay promijenjen u dnevni način.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay promijenjen u noćni način rada.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay promijenjen u vanjski način.</string>
   <string name="quick_settings_title_advanced_location">Način lokacije</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Prijavljivanje lokacije: štednja baterije.</string>
diff --git a/packages/SystemUI/res/values-hu/cm_arrays.xml b/packages/SystemUI/res/values-hu/cm_arrays.xml
index 19d7ad4..9ff5fe9 100644
--- a/packages/SystemUI/res/values-hu/cm_arrays.xml
+++ b/packages/SystemUI/res/values-hu/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-hu/cm_strings.xml b/packages/SystemUI/res/values-hu/cm_strings.xml
index cbc98da..0d07d7b 100644
--- a/packages/SystemUI/res/values-hu/cm_strings.xml
+++ b/packages/SystemUI/res/values-hu/cm_strings.xml
@@ -174,7 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Következő riasztás</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME választó</string>
   <string name="dynamic_qs_tile_su_label">Rendszergazda hozzáférés</string>
-  <string name="dynamic_qs_tile_themes_label">Témák</string>
   <string name="quick_settings_title_advanced_location">Bővített helymeghatározás</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Helymeghatározás jelentése: energiatakarékos.</string>
@@ -219,8 +218,4 @@
   <!-- Path data for landscape battery -->
   <!-- Path data for circle battery -->
   <!-- Weather string format in keyguard -->
-  <string name="keyguard_status_view_weather_format"><xliff:g id="temp">%1$s</xliff:g> <xliff:g id="condition">%2$s</xliff:g></string>
-  <string name="expand_hint">Csúsztasson lefelé a kiterjesztéshez</string>
-  <string name="swipe_left_hint">Csúsztasson balra: <xliff:g id="app_name">%1$s</xliff:g></string>
-  <string name="swipe_right_hint">Csúsztasson jobbra az értesítésekhez</string>
 </resources>
diff --git a/packages/SystemUI/res/values-hy-rAM/cm_arrays.xml b/packages/SystemUI/res/values-hy-rAM/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-hy-rAM/cm_arrays.xml
+++ b/packages/SystemUI/res/values-hy-rAM/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-hy-rAM/cm_strings.xml b/packages/SystemUI/res/values-hy-rAM/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-hy-rAM/cm_strings.xml
+++ b/packages/SystemUI/res/values-hy-rAM/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-in/cm_arrays.xml b/packages/SystemUI/res/values-in/cm_arrays.xml
index 54aac33..279bb0d 100644
--- a/packages/SystemUI/res/values-in/cm_arrays.xml
+++ b/packages/SystemUI/res/values-in/cm_arrays.xml
@@ -17,10 +17,25 @@
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <!-- Cardinal directions for the compass tile -->
+  <string-array name="cardinal_directions">
+    <item>U</item>
+    <!-- North -->
+    <item>TL</item>
+    <!-- North east -->
+    <item>T</item>
+    <!-- East -->
+    <item>TG</item>
+    <!-- South east -->
+    <item>S</item>
+    <!-- South -->
+    <item>BD</item>
+    <!-- South west -->
+    <item>B</item>
+    <!-- West -->
+    <item>BL</item>
+    <!-- North west -->
+  </string-array>
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-in/cm_strings.xml b/packages/SystemUI/res/values-in/cm_strings.xml
index 38880b4..dc1fedb 100644
--- a/packages/SystemUI/res/values-in/cm_strings.xml
+++ b/packages/SystemUI/res/values-in/cm_strings.xml
@@ -27,17 +27,17 @@
          values/config.xml) and must be truncated.
          [CHAR LIMIT=4] -->
   <!-- Strings for lockscreen shortcut hints -->
-  <string name="left_shortcut_hint">Geser ke kanan untuk %1$s</string>
-  <string name="right_shortcut_hint">Geser ke kiri untuk %1$s</string>
+  <string name="left_shortcut_hint">Usap ke kanan untuk %1$s</string>
+  <string name="right_shortcut_hint">Usap ke kiri untuk %1$s</string>
   <string name="lockscreen_message">Ketuk ikon di sebelah kiri atau kanan untuk menugaskan kembali pintasan layar kunci.</string>
-  <string name="lockscreen_default_target">Standar</string>
+  <string name="lockscreen_default_target">Baku</string>
   <string name="select_application">Pilih aplikasi</string>
   <string name="lockscreen_choose_action_title">Pilih tindakan</string>
   <string name="lockscreen_none_target">Tidak Ada</string>
   <!-- Dialog title for navigation bar button selection -->
   <string name="navbar_dialog_title">Pilih tindakan untuk ditambahkan</string>
   <string name="navbar_home_button">Tombol beranda</string>
-  <string name="navbar_recent_button">Tombol riwayat</string>
+  <string name="navbar_recent_button">Tombol terbaru</string>
   <string name="navbar_search_button">Tombol penelusuran</string>
   <string name="navbar_back_button">Tombol kembali</string>
   <string name="navbar_empty_button">Tombol kosong</string>
@@ -50,7 +50,7 @@
   <!-- Title shown in recents popup for wiping application's data -->
   <string name="advanced_dev_option_wipe_app">Hapus data aplikasi</string>
   <!-- Title shown in recents popup for force stopping the application -->
-  <string name="advanced_dev_option_force_stop">Paksa berhenti</string>
+  <string name="advanced_dev_option_force_stop">Paksa untuk berhenti</string>
   <!-- Title shown in recents popup for uninstalling the application -->
   <string name="advanced_dev_option_uninstall">Hapus instalasi</string>
   <!-- Content description of the light brightness slider (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -67,100 +67,100 @@
   <!-- Lights settings, LED notification -->
   <string name="led_notification_title">Pengaturan cahaya</string>
   <string name="led_notification_text">Lampu LED diaktifkan oleh pengaturan</string>
-  <string name="qs_tile_edit_header_instruction">Tekan dan tahan tile untuk mengatur ulang</string>
-  <string name="quick_settings_edit_label">Edit tile</string>
-  <string name="quick_settings_cannot_delete_edit_tile">Tidak dapat menghapus tile</string>
-  <string name="qs_tiles_reset_confirmation">Setel ulang pengaturan tile ke konfigurasi standar?</string>
-  <string name="quick_settings_tile_reset_to_default">Atur ulang ke standar</string>
+  <string name="qs_tile_edit_header_instruction">Tekan dan tahan petak untuk mengatur ulang</string>
+  <string name="quick_settings_edit_label">Edit petak</string>
+  <string name="quick_settings_cannot_delete_edit_tile">Tidak dapat menghapus ubin Edit</string>
+  <string name="qs_tiles_reset_confirmation">Mengatur ulang petak pengaturan cepat ke konfigurasi baku?</string>
+  <string name="quick_settings_tile_reset_to_default">Mengatur ulang ke tata letak baku</string>
   <string name="quick_settings_title_header">Kepala</string>
-  <string name="quick_settings_title_tiles">Tiles</string>
+  <string name="quick_settings_title_tiles">Petak</string>
   <string name="quick_settings_title_show_weather">Tampilkan cuaca</string>
-  <string name="quick_settings_title_show_brightness_slider">Tampilkan panel kecerahan</string>
+  <string name="quick_settings_title_show_brightness_slider">Tampilkan penyalindra kecerahan</string>
   <string name="quick_settings_title_enlarge_first_row">Perbesar baris pertama</string>
   <!-- Screen pinning dialog description (for devices without navbar) -->
   <string name="screen_pinning_description_no_navbar">Hal ini membuatnya tetap dalam pandangan sampai Anda melepas sematan. Sentuh dan tahan tombol kembali untuk melepas sematan.</string>
-  <string name="quick_settings_custom_tile_detail_title">Tile kustom</string>
-  <string name="quick_settings_remove">Hapus tile</string>
+  <string name="quick_settings_custom_tile_detail_title">Ubin khusus</string>
+  <string name="quick_settings_remove">Hapus ubin</string>
   <string name="quick_settings_network_adb_label">ADB melalui jaringan</string>
   <string name="quick_settings_compass_label">Kompas</string>
   <string name="quick_settings_nfc_label">NFC</string>
   <string name="quick_settings_profiles">Profil sistem</string>
-  <string name="quick_settings_profiles_off">Profil dimatikan</string>
+  <string name="quick_settings_profiles_off">Profil dinonaktifkan</string>
   <string name="quick_settings_heads_up_label">Notifikasi mengambang</string>
   <string name="quick_settings_battery_saver_label">Penghemat baterai</string>
   <!-- quick settings battery saver label to show when device is charging and tile is disabled -->
-  <string name="quick_settings_battery_saver_label_charging">Penghemat baterai (mengisi)</string>
+  <string name="quick_settings_battery_saver_label_charging">Penghemat baterai (sedang mengisi)</string>
   <string name="quick_settings_caffeine_label">Kafein</string>
   <!-- Content description of the sync tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_sync_off">Sinkronisasi mati.</string>
   <!-- Content description of the sync tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_sync_on">Sinkronisasi hidup.</string>
+  <string name="accessibility_quick_settings_sync_on">Singkron aktif.</string>
   <!-- Announcement made when sync changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_sync_changed_off">Sinkronisasi dimatikan.</string>
   <!-- Announcement made when sync changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_sync_changed_on">Sinkronisasi dihidupkan.</string>
+  <string name="accessibility_quick_settings_sync_changed_on">Sinkronisasi diaktifkan.</string>
   <string name="quick_settings_sync_label">Sinkronisasi</string>
   <string name="quick_settings_volume_panel_label">Panel volume</string>
-  <string name="quick_settings_usb_tether_label">Tethering USB</string>
-  <string name="quick_settings_screen_timeout_detail_title">Waktu layar mati</string>
+  <string name="quick_settings_usb_tether_label">Peranggitan USB</string>
+  <string name="quick_settings_screen_timeout_detail_title">Waktu pejam layar</string>
   <string name="quick_settings_lockscreen_label">Kunci layar</string>
-  <string name="quick_settings_ambient_display_label">Tampilan ambien</string>
+  <string name="quick_settings_ambient_display_label">Tampilan kala takaktif</string>
   <string name="quick_settings_lockscreen_label_enforced">Kunci layar diterapkan</string>
-  <string name="quick_settings_lockscreen_label_locked_by_profile">Dimatikan oleh profil</string>
+  <string name="quick_settings_lockscreen_label_locked_by_profile">Dinonaktifkan oleh profil</string>
   <!-- Content description of the screen timeout tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_screen_timeout">Batas waktu layar: <xliff:g id="timeout" example="30 seconds">%s</xliff:g>.</string>
+  <string name="accessibility_quick_settings_screen_timeout">Waktu pejam layar: <xliff:g id="timeout" example="30 seconds">%s</xliff:g>.</string>
   <!-- Announcement made when the screen timeout tile changes (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_screen_timeout_changed">Batas waktu layar diubah menjadi <xliff:g id="timeout" example="30 seconds">%s</xliff:g>.</string>
-  <string name="qs_tile_performance">Mode Baterai</string>
+  <string name="accessibility_quick_settings_screen_timeout_changed">Waktu pejam layar diubah menjadi <xliff:g id="timeout" example="30 seconds">%s</xliff:g>.</string>
+  <string name="qs_tile_performance">Modus Baterai</string>
   <!-- Content description of the battery mode tile in quick settings when on, power save mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_pwrsv">Mode baterai: hemat daya.</string>
+  <string name="accessibility_quick_settings_perf_profile_pwrsv">Modus baterai: modus hemat daya.</string>
   <!-- Content description of the battery mode tile in quick settings when on, balanced mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_bal">Mode Baterai: seimbang.</string>
+  <string name="accessibility_quick_settings_perf_profile_bal">Modus Baterai: modus seimbang.</string>
   <!-- Content description of the battery mode tile in quick settings when on, performance mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_perf">Mode Baterai: Performa.</string>
+  <string name="accessibility_quick_settings_perf_profile_perf">Modus Baterai: Modus Performa.</string>
   <!-- Content description of the battery mode tile in quick settings when on, efficiency mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_bias_power">Mode baterai: efisien.</string>
+  <string name="accessibility_quick_settings_perf_profile_bias_power">Modus baterai: modus efisien.</string>
   <!-- Content description of the battery mode tile in quick settings when on, quick mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_bias_perf">Mode baterai: mode cepat.</string>
+  <string name="accessibility_quick_settings_perf_profile_bias_perf">Modus baterai: modus cepat.</string>
   <!-- Announcement made when the battery mode tile changes to power save (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_changed_pwrsv">Mode baterai diubah menjadi mode hemat daya.</string>
+  <string name="accessibility_quick_settings_perf_profile_changed_pwrsv">Modus baterai diubah menjadi modus hemat daya.</string>
   <!-- Announcement made when the battery mode tile changes to balanced (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_changed_bal">Mode baterai diubah menjadi mode seimbang.</string>
+  <string name="accessibility_quick_settings_perf_profile_changed_bal">Modus baterai diubah menjadi modus seimbang.</string>
   <!-- Announcement made when the battery mode tile changes to performance (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_changed_perf">Mode baterai diubah menjadi mode performa.</string>
+  <string name="accessibility_quick_settings_perf_profile_changed_perf">Modus baterai diubah menjadi modus performa.</string>
   <!-- Announcement made when the battery mode tile changes to efficiency (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_changed_bias_power">Mode baterai diubah menjadi mode efisien.</string>
+  <string name="accessibility_quick_settings_perf_profile_changed_bias_power">Modus baterai diubah ke modus efisien.</string>
   <!-- Announcement made when the battery mode tile changes to quick (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_perf_profile_changed_bias_perf">Mode baterai diubah menjadi mode cepat.</string>
-  <string name="quick_settings_performance_profile_detail_title">Mode Baterai</string>
+  <string name="accessibility_quick_settings_perf_profile_changed_bias_perf">Modus baterai diubah ke modus cepat.</string>
+  <string name="quick_settings_performance_profile_detail_title">Modus Baterai</string>
   <!-- Content description of the lock screen tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_lock_screen_off">Kunci layar mati.</string>
   <!-- Content description of the lock screen tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_lock_screen_on">Kunci layar hidup.</string>
+  <string name="accessibility_quick_settings_lock_screen_on">Kunci layar aktif.</string>
   <!-- Announcement made when lock screen changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_lock_screen_changed_off">Kunci layar dimatikan.</string>
   <!-- Announcement made when lock screen changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_lock_screen_changed_on">Kunci layar dihidupkan.</string>
+  <string name="accessibility_quick_settings_lock_screen_changed_on">Kunci layar diaktifkan.</string>
   <!-- Content description of the ambient display tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_off">Tampilan ambien mati.</string>
+  <string name="accessibility_quick_settings_ambient_display_off">Tampilan kala takaktif mati.</string>
   <!-- Content description of the ambient display tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_on">Tampilan ambien hidup.</string>
+  <string name="accessibility_quick_settings_ambient_display_on">Tampilan kala takaktif nyala.</string>
   <!-- Announcement made when ambient display changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_changed_off">Tampilan ambien dimatikan.</string>
+  <string name="accessibility_quick_settings_ambient_display_changed_off">Tampilan kala takaktif dimatikan.</string>
   <!-- Announcement made when ambient display changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_changed_on">Tampilan ambien dihidupkan.</string>
+  <string name="accessibility_quick_settings_ambient_display_changed_on">Tampilan kala takaktif dinyalakan.</string>
   <!-- Content description of the heads up tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_off">Notifikasi mengambang mati.</string>
+  <string name="accessibility_quick_settings_heads_up_off">Notifikasi mengambang tidak aktif.</string>
   <!-- Content description of the heads up tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_on">Notifikasi mengambang hidup.</string>
+  <string name="accessibility_quick_settings_heads_up_on">Notifikasi mengambang aktif.</string>
   <!-- Announcement made when heads up changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_changed_off">Notifikasi mengambang dimatikan.</string>
+  <string name="accessibility_quick_settings_heads_up_changed_off">Notifikasi mengambang dinonaktifkan.</string>
   <!-- Announcement made when heads up changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_changed_on">Notifikasi mengambang dihidupkan.</string>
+  <string name="accessibility_quick_settings_heads_up_changed_on">Notifikasi mengambang diaktifkan.</string>
   <!-- Content description of the caffeine tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_caffeine_off">Kafein mati.</string>
+  <string name="accessibility_quick_settings_caffeine_off">Kafein nonaktif.</string>
   <!-- Content description of the caffeine tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_caffeine_on">Kafein hidup.</string>
+  <string name="accessibility_quick_settings_caffeine_on">Kafein aktif.</string>
   <!-- Content description of the battery saver tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_battery_saver_off">Penghemat baterai mati.</string>
   <!-- Content description of the battery saver tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -170,19 +170,19 @@
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_battery_saver_changed_on">Penghemat baterai dihidupkan.</string>
   <!-- Dynamic tiles -->
-  <string name="quick_settings_dynamic_tile_detail_title">Tile Dinamis</string>
+  <string name="quick_settings_dynamic_tile_detail_title">Ubin dinamis</string>
   <string name="dynamic_qs_tile_next_alarm_label">Alarm selanjutnya</string>
   <string name="dynamic_qs_tile_ime_selector_label">Pemilih IME</string>
-  <string name="dynamic_qs_tile_su_label">Akses root</string>
+  <string name="dynamic_qs_tile_su_label">Akses punca (root)</string>
   <string name="quick_settings_title_advanced_location">Lokasi Tri-state</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_location_battery_saving">Laporan Lokasi: mode hemat baterai.</string>
+  <string name="accessibility_quick_settings_location_battery_saving">Pelaporan lokasi: modus hemat baterai.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_location_gps_only">Laporan Lokasi: mode hanya sensor.</string>
+  <string name="accessibility_quick_settings_location_gps_only">Pelaporan lokasi: modus hanya sensor.</string>
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_location_high_accuracy">Laporan Lokasi: mode akurasi tinggi.</string>
+  <string name="accessibility_quick_settings_location_high_accuracy">Pelaporan lokasi: modus akurasi tinggi.</string>
   <!-- QuickSettings: Location detail panel title [CHAR LIMIT=NONE] -->
-  <string name="quick_settings_location_detail_title">Mode lokasi</string>
+  <string name="quick_settings_location_detail_title">Modus lokasi</string>
   <!-- QuickSettings: Location (On, low-power) [CHAR LIMIT=NONE] -->
   <string name="quick_settings_location_battery_saving_label">Hemat baterai</string>
   <!-- QuickSettings: Location (On, gps-only) [CHAR LIMIT=NONE] -->
@@ -190,25 +190,25 @@
   <!-- QuickSettings: Location (On, high-accuracy) [CHAR LIMIT=NONE] -->
   <string name="quick_settings_location_high_accuracy_label">Akurasi tinggi</string>
   <!-- Announcement made when the location tile changes to battery saving (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_location_changed_battery_saving">Laporan lokasi diubah menjadi mode hemat baterai.</string>
+  <string name="accessibility_quick_settings_location_changed_battery_saving">Pelaporan lokasi diubah menjadi modus hemat baterai.</string>
   <!-- Announcement made when the location tile changes to sensors only (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_location_changed_gps_only">Laporan lokasi diubah menjadi mode hanya sensor.</string>
+  <string name="accessibility_quick_settings_location_changed_gps_only">Pelaporan lokasi diubah menjadi modus hanya sensor.</string>
   <!-- Announcement made when the location tile changes to high accuracy (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_location_changed_high_accuracy">Laporan lokasi diubah menjadi mode akurasi tinggi.</string>
-  <string name="quick_settings_tiles_category_system">Tiles sistem</string>
+  <string name="accessibility_quick_settings_location_changed_high_accuracy">Pelaporan lokasi diubah menjadi modus akurasi tinggi.</string>
+  <string name="quick_settings_tiles_category_system">Petak sistem</string>
   <!-- detail header when adding a tile -->
-  <string name="quick_settings_tiles_add_tiles">Tambahkan tile</string>
+  <string name="quick_settings_tiles_add_tiles">Tambahkan petak</string>
   <!-- Hotspot dialog message -->
-  <string name="hotspot_apm_message">Tidak dapat tersambung ke jaringan seluler ketika mode Pesawat diaktifkan. Nonaktifkan mode Pesawat dan coba lagi.</string>
+  <string name="hotspot_apm_message">Tidak dapat tersambung ke jaringan seluler ketika modus Pesawat diaktifkan. Nonaktifkan modus Pesawat lalu coba lagi.</string>
   <!-- Notification which notifies user flashlight is enabled -->
   <string name="quick_settings_tile_flashlight_not_title">Senter aktif</string>
-  <string name="quick_settings_tile_flashlight_not_summary">Ketuk untuk mematikan</string>
+  <string name="quick_settings_tile_flashlight_not_summary">Ketuk untuk menonaktifkan</string>
   <!-- Wi-Fi hotspot label when enabled -->
   <plurals name="wifi_hotspot_connected_clients_label">
     <item quantity="other">%1$d klien</item>
   </plurals>
   <!-- CellularTile data sim not configured state string -->
-  <string name="data_sim_not_configured">Tidak ada data SIM</string>
+  <string name="data_sim_not_configured">Tak ada SIM Internet</string>
   <!-- Content description of the dock battery level icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_dock_battery_level">Dok baterai <xliff:g id="number">%d</xliff:g> persen.</string>
   <!-- Play queue -->
@@ -217,8 +217,4 @@
   <!-- Path data for landscape battery -->
   <!-- Path data for circle battery -->
   <!-- Weather string format in keyguard -->
-  <string name="keyguard_status_view_weather_format"><xliff:g id="temp">%1$s</xliff:g><xliff:g id="condition">%2$s</xliff:g></string>
-  <string name="expand_hint">Geser ke bawah untuk memperluas</string>
-  <string name="swipe_left_hint">Geser ke kiri untuk <xliff:g id="app_name">%1$s</xliff:g></string>
-  <string name="swipe_right_hint">Geser ke kanan untuk notifikasi</string>
 </resources>
diff --git a/packages/SystemUI/res/values-is-rIS/cm_arrays.xml b/packages/SystemUI/res/values-is-rIS/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-is-rIS/cm_arrays.xml
+++ b/packages/SystemUI/res/values-is-rIS/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-is-rIS/cm_strings.xml b/packages/SystemUI/res/values-is-rIS/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-is-rIS/cm_strings.xml
+++ b/packages/SystemUI/res/values-is-rIS/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-it/cm_arrays.xml b/packages/SystemUI/res/values-it/cm_arrays.xml
index 8fd1f0d..85897e7 100644
--- a/packages/SystemUI/res/values-it/cm_arrays.xml
+++ b/packages/SystemUI/res/values-it/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-it/cm_strings.xml b/packages/SystemUI/res/values-it/cm_strings.xml
index e3f7fb0..3cbcecd 100644
--- a/packages/SystemUI/res/values-it/cm_strings.xml
+++ b/packages/SystemUI/res/values-it/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Prossima sveglia</string>
   <string name="dynamic_qs_tile_ime_selector_label">Selettore IME</string>
   <string name="dynamic_qs_tile_su_label">Accesso root</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay OFF.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modalità automatica.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: modalità giorno.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: modalità notte.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: modalità esterno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay disattivato.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay cambiato in modalità automatica.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay cambiato in modalità giorno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay cambiato in modalità notte.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay cambiato in modalità esterno.</string>
   <string name="quick_settings_title_advanced_location">Localizzazione avanzata</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Geolocalizzazione: modalità risparmio batteria.</string>
diff --git a/packages/SystemUI/res/values-iw/cm_arrays.xml b/packages/SystemUI/res/values-iw/cm_arrays.xml
index 9c06baf..a673711 100644
--- a/packages/SystemUI/res/values-iw/cm_arrays.xml
+++ b/packages/SystemUI/res/values-iw/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-iw/cm_strings.xml b/packages/SystemUI/res/values-iw/cm_strings.xml
index d2db533..61600dd 100644
--- a/packages/SystemUI/res/values-iw/cm_strings.xml
+++ b/packages/SystemUI/res/values-iw/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">השעון המעורר הבא</string>
   <string name="dynamic_qs_tile_ime_selector_label">בורר שיטות קלט</string>
   <string name="dynamic_qs_tile_su_label">גישת שורש</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay כבוי.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: מצב אוטומטי.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: מצב יום.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: מצב לילה.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: מצב חוץ.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay כובה.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay שונה למצב אוטומטי.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay שונה למצב יום.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay שונה למצב לילה.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay שונה למצב חוץ.</string>
   <string name="quick_settings_title_advanced_location">שלושה מצבי מיקום</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">דיווח מיקום: מצב חיסכון בסוללה.</string>
diff --git a/packages/SystemUI/res/values-ja/cm_arrays.xml b/packages/SystemUI/res/values-ja/cm_arrays.xml
index 60bea53..46ed55e 100644
--- a/packages/SystemUI/res/values-ja/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ja/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ja/cm_strings.xml b/packages/SystemUI/res/values-ja/cm_strings.xml
index b594ecb..8dd5869 100644
--- a/packages/SystemUI/res/values-ja/cm_strings.xml
+++ b/packages/SystemUI/res/values-ja/cm_strings.xml
@@ -89,6 +89,7 @@
   <string name="quick_settings_heads_up_label">ヘッドアップ</string>
   <string name="quick_settings_battery_saver_label">バッテリーセーバー</string>
   <!-- quick settings battery saver label to show when device is charging and tile is disabled -->
+  <string name="quick_settings_battery_saver_label_charging">バッテリーセーバー（充電中）</string>
   <string name="quick_settings_caffeine_label">カフェイン</string>
   <!-- Content description of the sync tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_sync_off">同期はOFFです。</string>
@@ -173,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">次のアラーム</string>
   <string name="dynamic_qs_tile_ime_selector_label">入力方法の選択</string>
   <string name="dynamic_qs_tile_su_label">ルートアクセス</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplayはOFFです。</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: 自動モードです。</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: 昼モードです。</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: 夜モードです。</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: 屋外モードです。</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplayがOFFになりました。</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplayが自動モードに変更されました。</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplayが昼モードに変更されました。</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplayが夜モードに変更されました。</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplayが屋外モードに変更されました。</string>
   <string name="quick_settings_title_advanced_location">3方式の位置情報</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">位置情報レポート: バッテリー節約モードです。</string>
diff --git a/packages/SystemUI/res/values-ka-rGE/cm_arrays.xml b/packages/SystemUI/res/values-ka-rGE/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-ka-rGE/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ka-rGE/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ka-rGE/cm_strings.xml b/packages/SystemUI/res/values-ka-rGE/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-ka-rGE/cm_strings.xml
+++ b/packages/SystemUI/res/values-ka-rGE/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-kk-rKZ/cm_arrays.xml b/packages/SystemUI/res/values-kk-rKZ/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-kk-rKZ/cm_arrays.xml
+++ b/packages/SystemUI/res/values-kk-rKZ/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-kk-rKZ/cm_strings.xml b/packages/SystemUI/res/values-kk-rKZ/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-kk-rKZ/cm_strings.xml
+++ b/packages/SystemUI/res/values-kk-rKZ/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-km-rKH/cm_arrays.xml b/packages/SystemUI/res/values-km-rKH/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-km-rKH/cm_arrays.xml
+++ b/packages/SystemUI/res/values-km-rKH/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-km-rKH/cm_strings.xml b/packages/SystemUI/res/values-km-rKH/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-km-rKH/cm_strings.xml
+++ b/packages/SystemUI/res/values-km-rKH/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-kn-rIN/cm_arrays.xml b/packages/SystemUI/res/values-kn-rIN/cm_arrays.xml
index ca96dbb..65a842c 100644
--- a/packages/SystemUI/res/values-kn-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-kn-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-kn-rIN/cm_strings.xml b/packages/SystemUI/res/values-kn-rIN/cm_strings.xml
index 690994c..ed69527 100644
--- a/packages/SystemUI/res/values-kn-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-kn-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">ಮುಂದಿನ ಅಲಾರಂ</string>
   <string name="dynamic_qs_tile_ime_selector_label">ಇಎಂಇ ಆಯ್ಕೆ</string>
   <string name="dynamic_qs_tile_su_label">ರೂಟ್ ಪ್ರವೇಶ</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ ಆಫ್.</string>
-  <string name="accessibility_quick_settings_live_display_auto">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ: ಸ್ವಯಂ ಮೋಡ್.</string>
-  <string name="accessibility_quick_settings_live_display_day">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ: ಹಗಲು ಮೋಡ್.</string>
-  <string name="accessibility_quick_settings_live_display_night">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ: ರಾತ್ರಿ ಮೋಡ್.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ: ಹೊರಾಂಗಣ ಮೋಡ್.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ ಆಫ್ ಆಗಿದೆ.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ ಸ್ವಯಂ ಮೋಡ್‍ಗೆ ಬದಲಾಗಿದೆ.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ ಹಗಲು ಮೋಡ್‍ಗೆ ಬದಲಾಗಿದೆ.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ ರಾತ್ರಿ ಮೋಡ್‍ಗೆ ಬದಲಾಗಿದೆ.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">ಲೈವ್‍ಡಿಸ್ಪ್ಲೇ ಹೊರಾಂಗಣ ಮೋಡ್‍ಗೆ ಬದಲಾಗಿದೆ.</string>
   <string name="quick_settings_title_advanced_location">ಟ್ರೈ-ಸ್ಟೇಟ್‌ ಸ್ಥಳ</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">ಸ್ಥಳ ವರದಿಸಲ್ಲಿಸುವಿಕೆ: ಬ್ಯಾಟರಿ ಉಳಿತಾಯ ಮೋಡ್.</string>
diff --git a/packages/SystemUI/res/values-ko/cm_arrays.xml b/packages/SystemUI/res/values-ko/cm_arrays.xml
index fc740d5..8a3ff49 100644
--- a/packages/SystemUI/res/values-ko/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ko/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ko/cm_strings.xml b/packages/SystemUI/res/values-ko/cm_strings.xml
index 526f2ff..bcc7dbd 100644
--- a/packages/SystemUI/res/values-ko/cm_strings.xml
+++ b/packages/SystemUI/res/values-ko/cm_strings.xml
@@ -2,10 +2,13 @@
 <!--Generated by crowdin.com-->
 <!--
      Copyright (C) 2012-2015 The CyanogenMod Project
+
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
+
           http://www.apache.org/licenses/LICENSE-2.0
+
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -171,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">다음 알람</string>
   <string name="dynamic_qs_tile_ime_selector_label">입력 방법 선택</string>
   <string name="dynamic_qs_tile_su_label">루트 권한</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">라이브 디스플레이 꺼짐.</string>
-  <string name="accessibility_quick_settings_live_display_auto">라이브 디스플레이: 자동 모드.</string>
-  <string name="accessibility_quick_settings_live_display_day">라이브 디스플레이: 낮 모드.</string>
-  <string name="accessibility_quick_settings_live_display_night">라이브 디스플레이: 밤 모드.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">라이브 디스플레이: 야외 모드.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">라이브 디스플레이 꺼짐.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">라이브 디스플레이가 자동 모드로 바뀜.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">라이브 디스플레이가 낮 모드로 바뀜.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">라이브 디스플레이가 밤 모드로 바뀜.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">라이브 디스플레이가 야외 모드로 바뀜.</string>
   <string name="quick_settings_title_advanced_location">3가지 위치 설정</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">위치 보고: 배터리 절약 모드.</string>
diff --git a/packages/SystemUI/res/values-ko/strings.xml b/packages/SystemUI/res/values-ko/strings.xml
index 490f1ba..5c49e51 100644
--- a/packages/SystemUI/res/values-ko/strings.xml
+++ b/packages/SystemUI/res/values-ko/strings.xml
@@ -431,11 +431,4 @@
     <string name="enable_bluetooth_title" msgid="5027037706500635269">"블루투스를 켜시겠습니까?"</string>
     <string name="enable_bluetooth_message" msgid="9106595990708985385">"키보드를 태블릿에 연결하려면 먼저 블루투스를 켜야 합니다."</string>
     <string name="enable_bluetooth_confirmation_ok" msgid="6258074250948309715">"사용"</string>
-
-    <!-- Task Manager -->
-    <string name="task_manager_title">작업 관리자</string>
-    <string name="message_switch_fail">인터페이스가 없어 이 작업으로 전환할 수 없습니다.</string>
-    <string name="tasklist_killall">모두 종료</string>
-    <string name="tasklist_memory_usage"><b>"사용가능/총 메모리 : </b><xliff:g id="number">%s</xliff:g>/<xliff:g id="name">%s</xliff:g>"</string>
-    <string name="message_keep_one_launcher">최소한 한개의 홈 액티비티를 유지해야합니다!</string>
 </resources>
diff --git a/packages/SystemUI/res/values-ku/cm_arrays.xml b/packages/SystemUI/res/values-ku/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-ku/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ku/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ku/cm_strings.xml b/packages/SystemUI/res/values-ku/cm_strings.xml
index 126fd5d..7d2fc15 100644
--- a/packages/SystemUI/res/values-ku/cm_strings.xml
+++ b/packages/SystemUI/res/values-ku/cm_strings.xml
@@ -107,7 +107,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">دۆزینەوەی شوێن: شێوازی پاراستنی ووزە.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-ky-rKG/cm_arrays.xml b/packages/SystemUI/res/values-ky-rKG/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-ky-rKG/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ky-rKG/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ky-rKG/cm_strings.xml b/packages/SystemUI/res/values-ky-rKG/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-ky-rKG/cm_strings.xml
+++ b/packages/SystemUI/res/values-ky-rKG/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-land/config.xml b/packages/SystemUI/res/values-land/config.xml
index a530223..d608e25 100644
--- a/packages/SystemUI/res/values-land/config.xml
+++ b/packages/SystemUI/res/values-land/config.xml
@@ -30,9 +30,6 @@
     <!-- The number of columns that the top level tiles span in the QuickSettings -->
     <integer name="quick_settings_user_time_settings_tile_span">2</integer>
 
-    <!-- Default value how much apps show the app screenshot on recents view entry -->
-    <integer name="expanded_items_default">1</integer>
-
     <!-- We have only space for one notification on phone landscape layouts. -->
     <integer name="keyguard_max_notification_count">1</integer>
 </resources>
diff --git a/packages/SystemUI/res/values-lb/cm_arrays.xml b/packages/SystemUI/res/values-lb/cm_arrays.xml
index 26bbc04..3008606 100644
--- a/packages/SystemUI/res/values-lb/cm_arrays.xml
+++ b/packages/SystemUI/res/values-lb/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-lb/cm_strings.xml b/packages/SystemUI/res/values-lb/cm_strings.xml
index 10bd450..9756cd2 100644
--- a/packages/SystemUI/res/values-lb/cm_strings.xml
+++ b/packages/SystemUI/res/values-lb/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Nächste Wecker</string>
   <string name="dynamic_qs_tile_ime_selector_label">Method fir anzeginn</string>
   <string name="dynamic_qs_tile_su_label">Root-Zougrëff</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay aus.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: Automatesch.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: Dag.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: Nuecht.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: Dobaussen.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay ausgeschalt.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay-Modus op \"Automatesch\" geännert.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay-Modus op \"Dag\" geännert.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay-Modus op \"Nuecht\" geännert.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay-Modus op \"Dobaussen\" geännert.</string>
   <string name="quick_settings_title_advanced_location">Standuert mat dräi Zoustänn</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Standuertbericht: Akku spueren.</string>
diff --git a/packages/SystemUI/res/values-lo-rLA/cm_arrays.xml b/packages/SystemUI/res/values-lo-rLA/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-lo-rLA/cm_arrays.xml
+++ b/packages/SystemUI/res/values-lo-rLA/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-lo-rLA/cm_strings.xml b/packages/SystemUI/res/values-lo-rLA/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-lo-rLA/cm_strings.xml
+++ b/packages/SystemUI/res/values-lo-rLA/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-lt/cm_arrays.xml b/packages/SystemUI/res/values-lt/cm_arrays.xml
index 418e644..4dfe58f 100644
--- a/packages/SystemUI/res/values-lt/cm_arrays.xml
+++ b/packages/SystemUI/res/values-lt/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-lt/cm_strings.xml b/packages/SystemUI/res/values-lt/cm_strings.xml
index 30b8d08..8ace97c 100644
--- a/packages/SystemUI/res/values-lt/cm_strings.xml
+++ b/packages/SystemUI/res/values-lt/cm_strings.xml
@@ -152,17 +152,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Kitas signalas</string>
   <string name="dynamic_qs_tile_ime_selector_label">Įvesties metodas</string>
   <string name="dynamic_qs_tile_su_label">Prieiga prie „Root“</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">„LiveDisplay“ išjungtas.</string>
-  <string name="accessibility_quick_settings_live_display_auto">„LiveDisplay“: automatinis režimas.</string>
-  <string name="accessibility_quick_settings_live_display_day">„LiveDisplay“: dienos režimas.</string>
-  <string name="accessibility_quick_settings_live_display_night">„LiveDisplay“: nakties režimas.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">„LiveDisplay“: lauko režimas.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">„LiveDisplay“ išjungtas.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">„LiveDisplay“ pakeistas į automatinį režimą.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">„LiveDisplay“ pakeistas į dienos režimą.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">„LiveDisplay“ pakeistas į nakties režimą.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">„LiveDisplay“ pakeistas į lauko režimą.</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Vietovės ataskaitos: akumuliatoriaus tausojimo režimas.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-lv/cm_arrays.xml b/packages/SystemUI/res/values-lv/cm_arrays.xml
index 980916f..55d53d7 100644
--- a/packages/SystemUI/res/values-lv/cm_arrays.xml
+++ b/packages/SystemUI/res/values-lv/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-lv/cm_strings.xml b/packages/SystemUI/res/values-lv/cm_strings.xml
index 8a8565a..be09e24 100644
--- a/packages/SystemUI/res/values-lv/cm_strings.xml
+++ b/packages/SystemUI/res/values-lv/cm_strings.xml
@@ -86,7 +86,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-mk-rMK/cm_arrays.xml b/packages/SystemUI/res/values-mk-rMK/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-mk-rMK/cm_arrays.xml
+++ b/packages/SystemUI/res/values-mk-rMK/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-mk-rMK/cm_strings.xml b/packages/SystemUI/res/values-mk-rMK/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-mk-rMK/cm_strings.xml
+++ b/packages/SystemUI/res/values-mk-rMK/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-ml-rIN/cm_arrays.xml b/packages/SystemUI/res/values-ml-rIN/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-ml-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ml-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ml-rIN/cm_strings.xml b/packages/SystemUI/res/values-ml-rIN/cm_strings.xml
index a61d386..c97efdb 100644
--- a/packages/SystemUI/res/values-ml-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-ml-rIN/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">അടുത്ത അലാറം</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME സെലക്ടർ</string>
   <string name="dynamic_qs_tile_su_label">റൂട്ട് പ്രവേശനം</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">ലൈവ്ഡിസ്പ്ലേ ഓഫ്.</string>
-  <string name="accessibility_quick_settings_live_display_auto">ലൈവ്ഡിസ്പ്ലേ: ഓട്ടോ മോഡ്.</string>
-  <string name="accessibility_quick_settings_live_display_day">ലൈവ്ഡിസ്പ്ലേ: പകല്‍ മോഡ്.</string>
-  <string name="accessibility_quick_settings_live_display_night">ലൈവ്ഡിസ്പ്ലേ: രാത്രി മോഡ്.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">ലൈവ്ഡിസ്പ്ലേ: ഔട്ട്‌ഡോര്‍ മോഡ്.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">ലൈവ്ഡിസ്പ്ലേ ഓഫ് ചെയ്തു.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">ലൈവ്ഡിസ്പ്ലേ ആട്ടോ മോഡിലേക്ക് മാറ്റി.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">ലൈവ്ഡിസ്പ്ലേ പകല്‍ മോഡിലേക്ക് മാറ്റി.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">ലൈവ്ഡിസ്പ്ലേ രാത്രി മോഡിലേക്ക് മാറ്റി.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">ലൈവ്ഡിസ്പ്ലേ ഔട്ട്‌ഡോര്‍ മോഡിലേക്ക് മാറ്റി.</string>
   <string name="quick_settings_title_advanced_location">ട്രൈ-സ്റ്റേറ്റ് സ്ഥാനം</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">സ്ഥാനം റിപ്പോർട്ടിംഗ്: ബാറ്ററി ലാഭിക്കല്‍ മോഡ്.</string>
diff --git a/packages/SystemUI/res/values-mn-rMN/cm_arrays.xml b/packages/SystemUI/res/values-mn-rMN/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-mn-rMN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-mn-rMN/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-mn-rMN/cm_strings.xml b/packages/SystemUI/res/values-mn-rMN/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-mn-rMN/cm_strings.xml
+++ b/packages/SystemUI/res/values-mn-rMN/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-mr-rIN/cm_arrays.xml b/packages/SystemUI/res/values-mr-rIN/cm_arrays.xml
index 4403c45..198ac30 100644
--- a/packages/SystemUI/res/values-mr-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-mr-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-mr-rIN/cm_strings.xml b/packages/SystemUI/res/values-mr-rIN/cm_strings.xml
index a6c6734..b2ff8aa 100644
--- a/packages/SystemUI/res/values-mr-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-mr-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">पुढील अलार्म</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME निवडक</string>
   <string name="dynamic_qs_tile_su_label">रूट ऍक्सेस</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">थेटप्रदर्शन बंद.</string>
-  <string name="accessibility_quick_settings_live_display_auto">थेटप्रदर्शन: ऑटो मोड.</string>
-  <string name="accessibility_quick_settings_live_display_day">थेटप्रदर्शन: दिवस मोड.</string>
-  <string name="accessibility_quick_settings_live_display_night">थेटप्रदर्शन: रात्र मोड.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">थेटप्रदर्शन: आऊटडोअर मोड.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">थेटप्रदर्शन बंद केले.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">थेटप्रदर्शन ऑटो मोडला बदलले.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">थेटप्रदर्शन दिवस मोडला बदलले.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">थेटप्रदर्शन रात्र मोडला बदलले.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">थेटप्रदर्शन आऊटडोअर मोडला बदलले.</string>
   <string name="quick_settings_title_advanced_location">तिरंगी-राज्य स्थान</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">स्थान अहवाल देणे: बॅटरी बचत मोड.</string>
diff --git a/packages/SystemUI/res/values-ms-rMY/cm_arrays.xml b/packages/SystemUI/res/values-ms-rMY/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-ms-rMY/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ms-rMY/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ms-rMY/cm_strings.xml b/packages/SystemUI/res/values-ms-rMY/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-ms-rMY/cm_strings.xml
+++ b/packages/SystemUI/res/values-ms-rMY/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-my-rMM/cm_arrays.xml b/packages/SystemUI/res/values-my-rMM/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-my-rMM/cm_arrays.xml
+++ b/packages/SystemUI/res/values-my-rMM/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-my-rMM/cm_strings.xml b/packages/SystemUI/res/values-my-rMM/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-my-rMM/cm_strings.xml
+++ b/packages/SystemUI/res/values-my-rMM/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-nb/cm_arrays.xml b/packages/SystemUI/res/values-nb/cm_arrays.xml
index a0ad465..1d89f10 100644
--- a/packages/SystemUI/res/values-nb/cm_arrays.xml
+++ b/packages/SystemUI/res/values-nb/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-nb/cm_strings.xml b/packages/SystemUI/res/values-nb/cm_strings.xml
index ebef919..95daae2 100644
--- a/packages/SystemUI/res/values-nb/cm_strings.xml
+++ b/packages/SystemUI/res/values-nb/cm_strings.xml
@@ -174,7 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Neste alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME-velger</string>
   <string name="dynamic_qs_tile_su_label">Root-tilgang</string>
-  <string name="dynamic_qs_tile_themes_label">Temaer</string>
   <string name="quick_settings_title_advanced_location">Tre nivåer stedsangivelse</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Lokasjonsmodus: strømsparemodus.</string>
diff --git a/packages/SystemUI/res/values-ne-rNP/cm_arrays.xml b/packages/SystemUI/res/values-ne-rNP/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-ne-rNP/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ne-rNP/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ne-rNP/cm_strings.xml b/packages/SystemUI/res/values-ne-rNP/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-ne-rNP/cm_strings.xml
+++ b/packages/SystemUI/res/values-ne-rNP/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-nl/cm_arrays.xml b/packages/SystemUI/res/values-nl/cm_arrays.xml
index 9780b50..81ca7d2 100644
--- a/packages/SystemUI/res/values-nl/cm_arrays.xml
+++ b/packages/SystemUI/res/values-nl/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-nl/cm_strings.xml b/packages/SystemUI/res/values-nl/cm_strings.xml
index 53b18c3..5e60c37 100644
--- a/packages/SystemUI/res/values-nl/cm_strings.xml
+++ b/packages/SystemUI/res/values-nl/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Volgend alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">Invoermethode</string>
   <string name="dynamic_qs_tile_su_label">Root-toegang</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay uit.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automatisch.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: dagstand.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nachtstand.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: buitenstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay uitgeschakeld.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay gewijzigd naar automatisch.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay gewijzigd naar dagstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay gewijzigd naar nachtstand.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay gewijzigd naar buitenstand.</string>
   <string name="quick_settings_title_advanced_location">Locatie met 3 standen</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Locatiemelding: accubesparing.</string>
diff --git a/packages/SystemUI/res/values-oc-rFR/cm_arrays.xml b/packages/SystemUI/res/values-oc-rFR/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-oc-rFR/cm_arrays.xml
+++ b/packages/SystemUI/res/values-oc-rFR/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-oc-rFR/cm_strings.xml b/packages/SystemUI/res/values-oc-rFR/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-oc-rFR/cm_strings.xml
+++ b/packages/SystemUI/res/values-oc-rFR/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-or-rIN/cm_arrays.xml b/packages/SystemUI/res/values-or-rIN/cm_arrays.xml
index 11debb1..c0cb650 100644
--- a/packages/SystemUI/res/values-or-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-or-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-or-rIN/cm_strings.xml b/packages/SystemUI/res/values-or-rIN/cm_strings.xml
index 642a832..7bed354 100644
--- a/packages/SystemUI/res/values-or-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-or-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">ପରବର୍ତ୍ତୀ ଆଲରାମ୍:</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME ସିଲେକ୍ଟର</string>
   <string name="dynamic_qs_tile_su_label">ରୁଟ୍‍ ଆକ୍‍ସେସ୍‍</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ ଅଫ୍‍ ଅଛି।</string>
-  <string name="accessibility_quick_settings_live_display_auto">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ: ସ୍ୱତଃପ୍ରବୃତ୍ତ ମୋଡ୍‍।</string>
-  <string name="accessibility_quick_settings_live_display_day">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ: ଦିନ ମୋଡ୍‍।</string>
-  <string name="accessibility_quick_settings_live_display_night">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ: ରାତ୍ରି ମୋଡ୍‍।</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ: ଆଉଟ୍‍ଡୋର୍‍ ମୋଡ୍‍।</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ ଅଫ୍‍ କରାଯାଇଛି।</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ ସ୍ୱତଃପ୍ରବୃତ୍ତ ମୋଡ୍‍କୁ ପରିବର୍ତ୍ତନ କରାଯାଇଛି।</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ  ଦିନ ମୋଡ୍‍.କୁ ପରିବର୍ତ୍ତନ କରାଯାଇଛି।</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ ରାତ୍ରି ମୋଡ୍‍.କୁ ପରିବର୍ତ୍ତନ କରାଯାଇଛି।</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">ଲାଇଭ୍‍ ଡିସ୍‍ପ୍ଲେ ଆଉଟ୍‍ଡୋର୍‍ ମୋଡ୍‍.କୁ ପରିବର୍ତ୍ତନ କରାଯାଇଛି।</string>
   <string name="quick_settings_title_advanced_location">ତିନି-ସ୍ତରୀୟ ଅବସ୍ଥାନ</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">ଅବସ୍ଥାନ ରିପୋର୍ଟିଂ: ବ୍ୟାଟେରୀ ସଂରକ୍ଷଣ ମୋଡ୍‍</string>
diff --git a/packages/SystemUI/res/values-pa-rIN/cm_arrays.xml b/packages/SystemUI/res/values-pa-rIN/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-pa-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-pa-rIN/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-pa-rIN/cm_strings.xml b/packages/SystemUI/res/values-pa-rIN/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-pa-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-pa-rIN/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-pl/cm_arrays.xml b/packages/SystemUI/res/values-pl/cm_arrays.xml
index bc2a88a..d5537a3 100644
--- a/packages/SystemUI/res/values-pl/cm_arrays.xml
+++ b/packages/SystemUI/res/values-pl/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-pl/cm_strings.xml b/packages/SystemUI/res/values-pl/cm_strings.xml
index 12a2b76..3ab20eb 100644
--- a/packages/SystemUI/res/values-pl/cm_strings.xml
+++ b/packages/SystemUI/res/values-pl/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Następny alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">Przełącznik klawiatury</string>
   <string name="dynamic_qs_tile_su_label">Dostęp do roota</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay wyłączony.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: tryb automatyczny.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: tryb dzienny.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: tryb nocny.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: tryb zewnętrzny.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay został wyłączony.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay zmieniony na tryb automatyczny.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay zmieniony na tryb dzienny.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay zmieniony na tryb nocny.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay zmieniony na tryb zewnętrzny.</string>
   <string name="quick_settings_title_advanced_location">Trójstanowa lokalizacja</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Raportowanie lokalizacji: tryb oszczędzania baterii.</string>
@@ -232,6 +221,4 @@
   <!-- Weather string format in keyguard -->
   <string name="keyguard_status_view_weather_format"><xliff:g id="temp">%1$s</xliff:g> <xliff:g id="condition">%2$s</xliff:g></string>
   <string name="expand_hint">Przesuń w dół, aby rozwinąć</string>
-  <string name="swipe_left_hint">Przesuń w lewo, aby uruchomić <xliff:g id="app_name">%1$s</xliff:g></string>
-  <string name="swipe_right_hint">Przesuń w prawo, aby zobaczyć powiadomienia</string>
 </resources>
diff --git a/packages/SystemUI/res/values-pt-rBR/cm_arrays.xml b/packages/SystemUI/res/values-pt-rBR/cm_arrays.xml
index 41b5ca2..1fd49e9 100644
--- a/packages/SystemUI/res/values-pt-rBR/cm_arrays.xml
+++ b/packages/SystemUI/res/values-pt-rBR/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-pt-rBR/cm_strings.xml b/packages/SystemUI/res/values-pt-rBR/cm_strings.xml
index 53a3454..6bfdf3d 100644
--- a/packages/SystemUI/res/values-pt-rBR/cm_strings.xml
+++ b/packages/SystemUI/res/values-pt-rBR/cm_strings.xml
@@ -54,7 +54,7 @@
   <!-- Title shown in recents popup for uninstalling the application -->
   <string name="advanced_dev_option_uninstall">Desinstalar</string>
   <!-- Content description of the light brightness slider (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_notification_brightness">Brilho</string>
+  <string name="accessibility_notification_brightness">Brilho da luz</string>
   <!-- Content description of the profiles tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_profiles_off">Perfis desligados.</string>
   <!-- Content description of the profiles tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -65,7 +65,7 @@
   <string name="accessibility_quick_settings_profiles_changed">Perfil alterado para <xliff:g id="profile" example="Default">%s</xliff:g>.</string>
   <string name="quick_settings_compass_init">Inicializando\u2026</string>
   <!-- Lights settings, LED notification -->
-  <string name="led_notification_title">Configurações de brilho</string>
+  <string name="led_notification_title">Configurações de luz</string>
   <string name="led_notification_text">Luz de LED ativada pelas configurações</string>
   <string name="qs_tile_edit_header_instruction">Pressione e segure os botões para reorganizar</string>
   <string name="quick_settings_edit_label">Editar botões</string>
@@ -74,7 +74,7 @@
   <string name="quick_settings_tile_reset_to_default">Redefinir para a organização padrão</string>
   <string name="quick_settings_title_header">Cabeçalho</string>
   <string name="quick_settings_title_tiles">Botões</string>
-  <string name="quick_settings_title_show_weather">Mostrar tempo</string>
+  <string name="quick_settings_title_show_weather">Mostrar clima</string>
   <string name="quick_settings_title_show_brightness_slider">Mostrar o controle deslizante de brilho</string>
   <string name="quick_settings_title_enlarge_first_row">Ampliar a primeira linha</string>
   <!-- Screen pinning dialog description (for devices without navbar) -->
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Próximo alarme</string>
   <string name="dynamic_qs_tile_ime_selector_label">Seletor de IME</string>
   <string name="dynamic_qs_tile_su_label">Acesso super usuário</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay desligado.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: modo diurno.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: modo noturno.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: modo ao ar livre.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay foi desligado.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay alterado para modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay alterado para modo diurno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay alterado para modo noturno.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay alterado para modo ao ar livre.</string>
   <string name="quick_settings_title_advanced_location">Localização em 3 estados</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Relatório de localização: modo economia de bateria.</string>
diff --git a/packages/SystemUI/res/values-pt-rPT/cm_arrays.xml b/packages/SystemUI/res/values-pt-rPT/cm_arrays.xml
index 8fd1f0d..85897e7 100644
--- a/packages/SystemUI/res/values-pt-rPT/cm_arrays.xml
+++ b/packages/SystemUI/res/values-pt-rPT/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-pt-rPT/cm_strings.xml b/packages/SystemUI/res/values-pt-rPT/cm_strings.xml
index 6e28ac8..e3b7b3e 100644
--- a/packages/SystemUI/res/values-pt-rPT/cm_strings.xml
+++ b/packages/SystemUI/res/values-pt-rPT/cm_strings.xml
@@ -67,7 +67,7 @@
   <!-- Lights settings, LED notification -->
   <string name="led_notification_title">Definições de luz</string>
   <string name="led_notification_text">Luz do LED ativada pelas definições</string>
-  <string name="qs_tile_edit_header_instruction">Arraste os mosaicos para reorganizá-los</string>
+  <string name="qs_tile_edit_header_instruction">Mantenha os mosaicos premidos para os reorganizar</string>
   <string name="quick_settings_edit_label">Editar os mosaicos</string>
   <string name="quick_settings_cannot_delete_edit_tile">Não é possível eliminar o mosaico de Editar</string>
   <string name="qs_tiles_reset_confirmation">Repor os valores de origem dos mosaicos de definições rápidas?</string>
@@ -78,7 +78,7 @@
   <string name="quick_settings_title_show_brightness_slider">Mostrar o controlo deslizante de brilho</string>
   <string name="quick_settings_title_enlarge_first_row">Ampliar a primeira linha</string>
   <!-- Screen pinning dialog description (for devices without navbar) -->
-  <string name="screen_pinning_description_no_navbar">Isto mantém visível até soltar. Toque e segure o botão Voltar até soltar.</string>
+  <string name="screen_pinning_description_no_navbar">Irá ficar visível até que o solte. Toque e segure o botão Voltar para soltar.</string>
   <string name="quick_settings_custom_tile_detail_title">Mosaicos personalizados</string>
   <string name="quick_settings_remove">Remover mosaico</string>
   <string name="quick_settings_network_adb_label">ADB através da rede</string>
@@ -92,13 +92,13 @@
   <string name="quick_settings_battery_saver_label_charging">Economizador de bateria (a carregar)</string>
   <string name="quick_settings_caffeine_label">Cafeína</string>
   <!-- Content description of the sync tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_sync_off">Sincronização desligada.</string>
+  <string name="accessibility_quick_settings_sync_off">Sincronização desativada.</string>
   <!-- Content description of the sync tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_sync_on">Sincronização ligada.</string>
+  <string name="accessibility_quick_settings_sync_on">Sincronização ativada.</string>
   <!-- Announcement made when sync changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_sync_changed_off">Sincronização foi desligada.</string>
+  <string name="accessibility_quick_settings_sync_changed_off">A sincronização foi desativada.</string>
   <!-- Announcement made when sync changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_sync_changed_on">Sincronização foi ligada.</string>
+  <string name="accessibility_quick_settings_sync_changed_on">A sincronização foi ativada.</string>
   <string name="quick_settings_sync_label">Sincronização</string>
   <string name="quick_settings_volume_panel_label">Painel de volume</string>
   <string name="quick_settings_usb_tether_label">Partilha de internet por USB</string>
@@ -134,29 +134,29 @@
   <string name="accessibility_quick_settings_perf_profile_changed_bias_perf">Modo de bateria alterado para o modo rápido.</string>
   <string name="quick_settings_performance_profile_detail_title">Modo de bateria</string>
   <!-- Content description of the lock screen tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_lock_screen_off">Ecrã de bloqueio desligado.</string>
+  <string name="accessibility_quick_settings_lock_screen_off">Ecrã de bloqueio desativado.</string>
   <!-- Content description of the lock screen tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_lock_screen_on">Ecrã de bloqueio ligado.</string>
+  <string name="accessibility_quick_settings_lock_screen_on">Ecrã de bloqueio ativado.</string>
   <!-- Announcement made when lock screen changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_lock_screen_changed_off">Ecrã de bloqueio foi desligado.</string>
+  <string name="accessibility_quick_settings_lock_screen_changed_off">O ecrã de bloqueio foi desativado.</string>
   <!-- Announcement made when lock screen changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_lock_screen_changed_on">Ecrã de bloqueio foi ligado.</string>
+  <string name="accessibility_quick_settings_lock_screen_changed_on">O ecrã de bloqueio foi ativado.</string>
   <!-- Content description of the ambient display tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_off">Visualização de ambiente desligada.</string>
+  <string name="accessibility_quick_settings_ambient_display_off">Visualização de ambiente desativada.</string>
   <!-- Content description of the ambient display tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_on">Visualização de ambiente ligada.</string>
+  <string name="accessibility_quick_settings_ambient_display_on">Visualização de ambiente ativada.</string>
   <!-- Announcement made when ambient display changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_changed_off">A visualização de ambiente foi desligada.</string>
+  <string name="accessibility_quick_settings_ambient_display_changed_off">A visualização de ambiente foi desativada.</string>
   <!-- Announcement made when ambient display changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_ambient_display_changed_on">A visualização de ambiente foi ligada.</string>
+  <string name="accessibility_quick_settings_ambient_display_changed_on">A visualização de ambiente foi ativada.</string>
   <!-- Content description of the heads up tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_off">Notificações pop-up desligadas.</string>
+  <string name="accessibility_quick_settings_heads_up_off">Notificações pop-up desativadas.</string>
   <!-- Content description of the heads up tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_on">Notificações pop-up ligadas.</string>
+  <string name="accessibility_quick_settings_heads_up_on">Notificações pop-up ativadas.</string>
   <!-- Announcement made when heads up changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_changed_off">Notificações pop-up desligaram.</string>
+  <string name="accessibility_quick_settings_heads_up_changed_off">As notificações pop-up foram desativadas.</string>
   <!-- Announcement made when heads up changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
-  <string name="accessibility_quick_settings_heads_up_changed_on">Notificações pop-up ligaram.</string>
+  <string name="accessibility_quick_settings_heads_up_changed_on">As notificações pop-up foram ativadas.</string>
   <!-- Content description of the caffeine tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_caffeine_off">Cafeína desligada.</string>
   <!-- Content description of the caffeine tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -174,21 +174,11 @@
   <string name="dynamic_qs_tile_next_alarm_label">Próximo alarme</string>
   <string name="dynamic_qs_tile_ime_selector_label">Seletor de método de entrada</string>
   <string name="dynamic_qs_tile_su_label">Acesso root</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay desligado.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: modo dia.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: modo noite.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: modo exterior.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay foi desligado.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay alterado para modo automático.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay alterado para modo dia.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay alterado para modo noite.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay alterado para modo exterior.</string>
   <string name="quick_settings_title_advanced_location">Localização com 3 estados</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Localização: poupança de bateria.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <string name="accessibility_quick_settings_location_gps_only">Localização: apenas dispositivo.</string>
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_high_accuracy">Localização: alta precisão.</string>
   <!-- QuickSettings: Location detail panel title [CHAR LIMIT=NONE] -->
@@ -202,6 +192,7 @@
   <!-- Announcement made when the location tile changes to battery saving (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_changed_battery_saving">Modo de localização alterado para poupança de bateria.</string>
   <!-- Announcement made when the location tile changes to sensors only (not shown on the screen). [CHAR LIMIT=NONE] -->
+  <string name="accessibility_quick_settings_location_changed_gps_only">Modo de localização alterado para apenas dispositivo.</string>
   <!-- Announcement made when the location tile changes to high accuracy (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_changed_high_accuracy">Modo de localização alterado para alta precisão.</string>
   <string name="quick_settings_tiles_category_system">Mosaicos do sistema</string>
diff --git a/packages/SystemUI/res/values-rm/cm_arrays.xml b/packages/SystemUI/res/values-rm/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-rm/cm_arrays.xml
+++ b/packages/SystemUI/res/values-rm/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-rm/cm_strings.xml b/packages/SystemUI/res/values-rm/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-rm/cm_strings.xml
+++ b/packages/SystemUI/res/values-rm/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-ro/cm_arrays.xml b/packages/SystemUI/res/values-ro/cm_arrays.xml
index e803eb0..acce4b6 100644
--- a/packages/SystemUI/res/values-ro/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ro/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ro/cm_strings.xml b/packages/SystemUI/res/values-ro/cm_strings.xml
index 860b830..2ef4e1d 100644
--- a/packages/SystemUI/res/values-ro/cm_strings.xml
+++ b/packages/SystemUI/res/values-ro/cm_strings.xml
@@ -161,7 +161,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Următoarea alarmă</string>
   <string name="dynamic_qs_tile_ime_selector_label">Selector IME</string>
   <string name="dynamic_qs_tile_su_label">Acces root</string>
-  <!-- LiveDisplay strings -->
   <string name="quick_settings_title_advanced_location">Starea celor 3 moduri de locație</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Raportarea locației: mod economisire baterie.</string>
diff --git a/packages/SystemUI/res/values-ru/cm_arrays.xml b/packages/SystemUI/res/values-ru/cm_arrays.xml
index 0434a21..7fa348b 100644
--- a/packages/SystemUI/res/values-ru/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ru/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ru/cm_strings.xml b/packages/SystemUI/res/values-ru/cm_strings.xml
index 5665223..dd49d4d 100644
--- a/packages/SystemUI/res/values-ru/cm_strings.xml
+++ b/packages/SystemUI/res/values-ru/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Следующий будильник</string>
   <string name="dynamic_qs_tile_ime_selector_label">Выбор метода ввода</string>
   <string name="dynamic_qs_tile_su_label">Суперпользователь</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay выключен.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay работает в автоматическом режиме.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay работает в дневном режиме.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay работает в ночном режиме.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay работает в режиме «на улице».</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay выключен.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay переключён в автоматический режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay переключён в дневной режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay переключён в ночной режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay переключён в режим «на улице».</string>
   <string name="quick_settings_title_advanced_location">Параметры отправки геоданных</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Отправка местоположения: режим экономии батареи.</string>
@@ -231,7 +220,4 @@
   <!-- Path data for circle battery -->
   <!-- Weather string format in keyguard -->
   <string name="keyguard_status_view_weather_format"><xliff:g id="temp">%1$s</xliff:g>, <xliff:g id="condition">%2$s</xliff:g></string>
-  <string name="expand_hint">Проведите вниз, чтобы развернуть</string>
-  <string name="swipe_left_hint">Проведите влево, чтобы перейти к <xliff:g id="app_name">%1$s </xliff:g></string>
-  <string name="swipe_right_hint">Проведите вправо, чтобы перейти к уведомлениям</string>
 </resources>
diff --git a/packages/SystemUI/res/values-si-rLK/cm_arrays.xml b/packages/SystemUI/res/values-si-rLK/cm_arrays.xml
index f1badaa..edf575a 100644
--- a/packages/SystemUI/res/values-si-rLK/cm_arrays.xml
+++ b/packages/SystemUI/res/values-si-rLK/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-si-rLK/cm_strings.xml b/packages/SystemUI/res/values-si-rLK/cm_strings.xml
index abf267c..e4b7e46 100644
--- a/packages/SystemUI/res/values-si-rLK/cm_strings.xml
+++ b/packages/SystemUI/res/values-si-rLK/cm_strings.xml
@@ -86,7 +86,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-sk/cm_arrays.xml b/packages/SystemUI/res/values-sk/cm_arrays.xml
index ae6cfe8..3c17f45 100644
--- a/packages/SystemUI/res/values-sk/cm_arrays.xml
+++ b/packages/SystemUI/res/values-sk/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-sk/cm_strings.xml b/packages/SystemUI/res/values-sk/cm_strings.xml
index c22e855..68e99e4 100644
--- a/packages/SystemUI/res/values-sk/cm_strings.xml
+++ b/packages/SystemUI/res/values-sk/cm_strings.xml
@@ -152,17 +152,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Ďalší budík</string>
   <string name="dynamic_qs_tile_ime_selector_label">Výber IME</string>
   <string name="dynamic_qs_tile_su_label">Root prístup</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay vyp.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automatický režim.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: denný režim.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nočný režim.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: režim vonku.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay vypnutý.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay sa zmenil na automatický režim.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay sa zmenil na denný režim.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay sa zmenil na nočný režim.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay sa zmenil na režim vonku.</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Hlásenie polohy: režim šetrenia batérie.</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-sl/cm_arrays.xml b/packages/SystemUI/res/values-sl/cm_arrays.xml
index ae6cfe8..3c17f45 100644
--- a/packages/SystemUI/res/values-sl/cm_arrays.xml
+++ b/packages/SystemUI/res/values-sl/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-sl/cm_strings.xml b/packages/SystemUI/res/values-sl/cm_strings.xml
index 61d1177..d915fec 100644
--- a/packages/SystemUI/res/values-sl/cm_strings.xml
+++ b/packages/SystemUI/res/values-sl/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Naslednja budilka</string>
   <string name="dynamic_qs_tile_ime_selector_label">Izbirnik IME</string>
   <string name="dynamic_qs_tile_su_label">Skrbniški dostop</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay izklopljen.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: samodejni način.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: dnevni način.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nočni način.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: zunanji način.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay izklopljen.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay spremenjen v samodejni način.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay spremenjen v dnevni način.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay spremenjen v nočni način.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay spremenjen v zunanji način.</string>
   <string name="quick_settings_title_advanced_location">Tri stanja lokacije</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Poročanje o lokaciji: način varčevanja energije.</string>
diff --git a/packages/SystemUI/res/values-sq-rAL/cm_arrays.xml b/packages/SystemUI/res/values-sq-rAL/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-sq-rAL/cm_arrays.xml
+++ b/packages/SystemUI/res/values-sq-rAL/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-sq-rAL/cm_strings.xml b/packages/SystemUI/res/values-sq-rAL/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-sq-rAL/cm_strings.xml
+++ b/packages/SystemUI/res/values-sq-rAL/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-sr/cm_arrays.xml b/packages/SystemUI/res/values-sr/cm_arrays.xml
index d881e35..ed1ef4d 100644
--- a/packages/SystemUI/res/values-sr/cm_arrays.xml
+++ b/packages/SystemUI/res/values-sr/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-sr/cm_strings.xml b/packages/SystemUI/res/values-sr/cm_strings.xml
index 235ea9d..dfb8472 100644
--- a/packages/SystemUI/res/values-sr/cm_strings.xml
+++ b/packages/SystemUI/res/values-sr/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Следећи аларм</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME бирач</string>
   <string name="dynamic_qs_tile_su_label">Root приступ</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">Активни екран искључен.</string>
-  <string name="accessibility_quick_settings_live_display_auto">Активни Екран: ауто режим.</string>
-  <string name="accessibility_quick_settings_live_display_day">Активни Екран: дневни режим.</string>
-  <string name="accessibility_quick_settings_live_display_night">Активни Екран: ноћни режим.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">Активни Екран: режим на отвореном.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">Активни Екран је искључен.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">Активни Екран промењен у ауто режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">Активни Екран промењен у дневни режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">Активни Екран промењен у ноћни режим.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">Активни Екран промењен у режим на отвореном.</string>
   <string name="quick_settings_title_advanced_location">Локација три-државе</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Локација извештај: режим чувања батерије.</string>
diff --git a/packages/SystemUI/res/values-sv/cm_arrays.xml b/packages/SystemUI/res/values-sv/cm_arrays.xml
index 27c677e..bdbe6b4 100644
--- a/packages/SystemUI/res/values-sv/cm_arrays.xml
+++ b/packages/SystemUI/res/values-sv/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-sv/cm_strings.xml b/packages/SystemUI/res/values-sv/cm_strings.xml
index a9f9946..0363610 100644
--- a/packages/SystemUI/res/values-sv/cm_strings.xml
+++ b/packages/SystemUI/res/values-sv/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Nästa alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME-väljare</string>
   <string name="dynamic_qs_tile_su_label">Root-åtkomst</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay av.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: automatiskt läge.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: dagläge.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: nattläge.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: utomhusläge.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay inaktiverad.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay ändrad till auto-läge.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay ändrad till dagläge.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay ändrad till nattläge.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay ändrad till utomhusläge.</string>
   <string name="quick_settings_title_advanced_location">Tri-state placering</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Platsrapportering: batterisparläge.</string>
diff --git a/packages/SystemUI/res/values-sw/cm_arrays.xml b/packages/SystemUI/res/values-sw/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-sw/cm_arrays.xml
+++ b/packages/SystemUI/res/values-sw/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-sw/cm_strings.xml b/packages/SystemUI/res/values-sw/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-sw/cm_strings.xml
+++ b/packages/SystemUI/res/values-sw/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-sw600dp-land/config.xml b/packages/SystemUI/res/values-sw600dp-land/config.xml
index 9731d82..f9b01c8 100644
--- a/packages/SystemUI/res/values-sw600dp-land/config.xml
+++ b/packages/SystemUI/res/values-sw600dp-land/config.xml
@@ -18,7 +18,4 @@
     <!-- The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
          card. -->
     <integer name="keyguard_max_notification_count">3</integer>
-    <!-- Default value how much apps show the app screenshot on recents view entry -->
-    <integer name="expanded_items_default">2</integer>
-
 </resources>
diff --git a/packages/SystemUI/res/values-sw600dp/config.xml b/packages/SystemUI/res/values-sw600dp/config.xml
index e920e65..83477c0 100644
--- a/packages/SystemUI/res/values-sw600dp/config.xml
+++ b/packages/SystemUI/res/values-sw600dp/config.xml
@@ -37,13 +37,4 @@
     <bool name="recents_has_transposed_search_bar">true</bool>
     <!-- Transposes the nav bar in landscape (only used for purposes of layout). -->
     <bool name="recents_has_transposed_nav_bar">false</bool>
-
-    <!-- Default value how much apps show the app screenshot on recents view entry -->
-    <integer name="expanded_items_default">3</integer>
-
-    <!-- Enable Pie relocation to either stick to a physical side or default to the right side -->
-    <bool name="config_relocatePieOnRotation">false</bool>
-
-    <!-- Enable force pie centered -->
-    <bool name="config_forcePieCentered">false</bool>
 </resources>
diff --git a/packages/SystemUI/res/values-ta-rIN/cm_arrays.xml b/packages/SystemUI/res/values-ta-rIN/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-ta-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ta-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ta-rIN/cm_strings.xml b/packages/SystemUI/res/values-ta-rIN/cm_strings.xml
index 4d65c6c..eb45d15 100644
--- a/packages/SystemUI/res/values-ta-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-ta-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">அடுத்த அலாரம்</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME தேர்ந்தெடுப்பான்</string>
   <string name="dynamic_qs_tile_su_label">மூல அணுகல்</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay ஆஃப்.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: தானியக்க பயன்முறை</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: பகல் பயன்முறை</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: இரவு பயன்முறை</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: வெளியிட பயன்முறை</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay ஆஃப் செய்யப்பட்டது.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay தானியக்க பயன்முறைக்கு மாற்றப்பட்டது.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay பகல் பயன்முறைக்கு மாற்றப்பட்டது.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay இரவு பயன்முறைக்கு மாற்றப்பட்டது.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay வெளியிட பயன்முறைக்கு மாற்றப்பட்டது</string>
   <string name="quick_settings_title_advanced_location">மூன்று-நிலை இருப்பிடம்</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">இருப்பிடம் அறிவித்தல்: மின்கல சேமிப்பு பயன்முறை.</string>
diff --git a/packages/SystemUI/res/values-te-rIN/cm_arrays.xml b/packages/SystemUI/res/values-te-rIN/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-te-rIN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-te-rIN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-te-rIN/cm_strings.xml b/packages/SystemUI/res/values-te-rIN/cm_strings.xml
index fe83d85..aee0b52 100644
--- a/packages/SystemUI/res/values-te-rIN/cm_strings.xml
+++ b/packages/SystemUI/res/values-te-rIN/cm_strings.xml
@@ -173,17 +173,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">తరువాతి అలారం</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME సెలక్టర్</string>
   <string name="dynamic_qs_tile_su_label">మూల ప్రాప్తి</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">ప్రత్యక్ష ప్రదర్శన ఆఫ్.</string>
-  <string name="accessibility_quick_settings_live_display_auto">ప్రత్యక్ష ప్రదర్శన: స్వయంచాలక మోడ్.</string>
-  <string name="accessibility_quick_settings_live_display_day">ప్రత్యక్ష ప్రదర్శన: పగటి మోడ్.</string>
-  <string name="accessibility_quick_settings_live_display_night">ప్రత్యక్ష ప్రదర్శన: రాత్రి మోడ్.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">ప్రత్యక్ష ప్రదర్శన: ఆరుబయటి మోడ్.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">ప్రత్యక్ష ప్రదర్శన ఆపివేయబడింది.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">ప్రత్యక్ష ప్రదర్శన స్వయంచాలక మోడుకు మార్చబడింది.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">ప్రత్యక్ష ప్రదర్శన పగటి మోడుకు మార్చబడింది.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">ప్రత్యక్ష ప్రదర్శన రాత్రి మోడుకు మార్చబడింది.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">ప్రత్యక్ష ప్రదర్శన ఆరుబయటి మోడుకు మార్చబడింది.</string>
   <string name="quick_settings_title_advanced_location">మూడు-స్థితుల స్థానం</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">స్థాన నివేదిక: బ్యాటరీ సేవింగ్ మోడ్.</string>
diff --git a/packages/SystemUI/res/values-th/cm_arrays.xml b/packages/SystemUI/res/values-th/cm_arrays.xml
index e44b7db..3110756 100644
--- a/packages/SystemUI/res/values-th/cm_arrays.xml
+++ b/packages/SystemUI/res/values-th/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-th/cm_strings.xml b/packages/SystemUI/res/values-th/cm_strings.xml
index 2d44a55..a70602e 100644
--- a/packages/SystemUI/res/values-th/cm_strings.xml
+++ b/packages/SystemUI/res/values-th/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">การปลุกครั้งต่อไป</string>
   <string name="dynamic_qs_tile_ime_selector_label">ตัวเลือก IME</string>
   <string name="dynamic_qs_tile_su_label">สิทธิผู้ดูแลระบบ</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay ปิดอยู่</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: รูปแบบอัตโนมัติ</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: รูปแบบกลางวัน</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: รูปแบบกลางคืน</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: รูปแบบกลางแจ้ง</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay ถูกปิด</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay เปลี่ยนเป็นรูปแบบอัตโนมัติ</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay เปลี่ยนเป็นรูปแบบกลางวัน</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay เปลี่ยนเป็นรูปแบบกลางคืน</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay เปลี่ยนเป็นรูปแบบกลางแจ้ง</string>
   <string name="quick_settings_title_advanced_location">ตำแหน่งแบบสามสถานะ</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">การระบุตำแหน่ง: รูปแบบประหยัดแบตเตอรี่</string>
diff --git a/packages/SystemUI/res/values-tr/cm_arrays.xml b/packages/SystemUI/res/values-tr/cm_arrays.xml
index 1063005..8658c49 100644
--- a/packages/SystemUI/res/values-tr/cm_arrays.xml
+++ b/packages/SystemUI/res/values-tr/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-tr/cm_strings.xml b/packages/SystemUI/res/values-tr/cm_strings.xml
index abedfbc..a126402 100644
--- a/packages/SystemUI/res/values-tr/cm_strings.xml
+++ b/packages/SystemUI/res/values-tr/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Sonraki alarm</string>
   <string name="dynamic_qs_tile_ime_selector_label">IME seçici</string>
   <string name="dynamic_qs_tile_su_label">Root erişimi</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay kapalı.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: otomatik mod.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: gündüz modu.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: gece modu.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: açık hava modu.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay kapatıldı.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay otomatik moda geçti.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay gündüz moduna geçti.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay gece moduna geçti.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay açık hava moduna geçti.</string>
   <string name="quick_settings_title_advanced_location">3-durumlu konum</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Konum bildirimi: pil tasarruf modu.</string>
diff --git a/packages/SystemUI/res/values-ug/cm_arrays.xml b/packages/SystemUI/res/values-ug/cm_arrays.xml
index 2aaaefa..0d61eb4 100644
--- a/packages/SystemUI/res/values-ug/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ug/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ug/cm_strings.xml b/packages/SystemUI/res/values-ug/cm_strings.xml
index 2a0501e..bb0eb55 100644
--- a/packages/SystemUI/res/values-ug/cm_strings.xml
+++ b/packages/SystemUI/res/values-ug/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">كىيىنكى قوڭغۇراق</string>
   <string name="dynamic_qs_tile_ime_selector_label">كىرگۈزگۈچ تاللىغۇچ</string>
   <string name="dynamic_qs_tile_su_label">Root ھوقۇقى</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay تاقاق.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: ئاپتۇماتېك ھالەت.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: كۈندۈز.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: كېچە.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: تالا.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay تاقالدى.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay ئاپتۇماتېك ھالەتكە ئۆزگەرتىلدى.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay كۈندۈزگە ئۆزگەرتىلدى.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay كېچىگە ئۆزگەرتىلدى.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay تالاغا ئۆزگەرتىلدى.</string>
   <string name="quick_settings_title_advanced_location">ئۈچ ھالەت ئورۇن بەلگىلەش</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">ئورۇن دوكلاتى: توك تېجەش ھالىتى.</string>
diff --git a/packages/SystemUI/res/values-uk/cm_arrays.xml b/packages/SystemUI/res/values-uk/cm_arrays.xml
index b07b52c..6f9b23f 100644
--- a/packages/SystemUI/res/values-uk/cm_arrays.xml
+++ b/packages/SystemUI/res/values-uk/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-uk/cm_strings.xml b/packages/SystemUI/res/values-uk/cm_strings.xml
index d097401..57b9cb5 100644
--- a/packages/SystemUI/res/values-uk/cm_strings.xml
+++ b/packages/SystemUI/res/values-uk/cm_strings.xml
@@ -168,17 +168,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Наступний сигнал</string>
   <string name="dynamic_qs_tile_ime_selector_label">Вибір способу вводу</string>
   <string name="dynamic_qs_tile_su_label">Root доступ</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay вимкнено.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: автоматичний режим.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: денний режим.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: нічний режим.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: режим «На вулиці».</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay вимкнено.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay у автоматичниому режимі.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay у денному режимі.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay у нічному режимі.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay у режимі «На вулиці».</string>
   <string name="quick_settings_title_advanced_location">Параметри відправки геоданих</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Надсилання місця розташування: економія батареї.</string>
diff --git a/packages/SystemUI/res/values-ur-rPK/cm_arrays.xml b/packages/SystemUI/res/values-ur-rPK/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-ur-rPK/cm_arrays.xml
+++ b/packages/SystemUI/res/values-ur-rPK/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-ur-rPK/cm_strings.xml b/packages/SystemUI/res/values-ur-rPK/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-ur-rPK/cm_strings.xml
+++ b/packages/SystemUI/res/values-ur-rPK/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-uz-rUZ/cm_arrays.xml b/packages/SystemUI/res/values-uz-rUZ/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-uz-rUZ/cm_arrays.xml
+++ b/packages/SystemUI/res/values-uz-rUZ/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-uz-rUZ/cm_strings.xml b/packages/SystemUI/res/values-uz-rUZ/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-uz-rUZ/cm_strings.xml
+++ b/packages/SystemUI/res/values-uz-rUZ/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-vi/cm_arrays.xml b/packages/SystemUI/res/values-vi/cm_arrays.xml
index 7060374..073293f 100644
--- a/packages/SystemUI/res/values-vi/cm_arrays.xml
+++ b/packages/SystemUI/res/values-vi/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-vi/cm_strings.xml b/packages/SystemUI/res/values-vi/cm_strings.xml
index 2b8e78c..e60cee2 100644
--- a/packages/SystemUI/res/values-vi/cm_strings.xml
+++ b/packages/SystemUI/res/values-vi/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">Báo thức tiếp theo</string>
   <string name="dynamic_qs_tile_ime_selector_label">Trình chọn IME</string>
   <string name="dynamic_qs_tile_su_label">Truy cập root</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay tắt.</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: chế độ tự động.</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: chế độ ban ngày.</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: chế độ ban đêm.</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: chế độ ngoài trời.</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay đã tắt.</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay đã đổi sang chế độ tự động.</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay đã đổi sang chế độ ban ngày.</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay đã đổi sang chế độ ban đêm.</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay đã đổi sang chế độ ngoài trời.</string>
   <string name="quick_settings_title_advanced_location">Ba trạng thái cho cài đặt vị trí</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">Báo cáo vị trí: chế độ tiết kiệm pin.</string>
diff --git a/packages/SystemUI/res/values-zh-rCN/cm_arrays.xml b/packages/SystemUI/res/values-zh-rCN/cm_arrays.xml
index 70f421e..26094b4 100644
--- a/packages/SystemUI/res/values-zh-rCN/cm_arrays.xml
+++ b/packages/SystemUI/res/values-zh-rCN/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-zh-rCN/cm_strings.xml b/packages/SystemUI/res/values-zh-rCN/cm_strings.xml
index 0543440..b214b0e 100644
--- a/packages/SystemUI/res/values-zh-rCN/cm_strings.xml
+++ b/packages/SystemUI/res/values-zh-rCN/cm_strings.xml
@@ -174,17 +174,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">下一个闹铃</string>
   <string name="dynamic_qs_tile_ime_selector_label">输入法选择器</string>
   <string name="dynamic_qs_tile_su_label">Root 授权</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">LiveDisplay 关闭。</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay：自动模式。</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay：白天模式。</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay：夜晚模式。</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay：户外模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay 已关闭。</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay 已修改为自动模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay 已修改为白天模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay 已修改为夜晚模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay 已修改为户外模式。</string>
   <string name="quick_settings_title_advanced_location">三种状态的位置设置</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">位置报告：节电模式。</string>
diff --git a/packages/SystemUI/res/values-zh-rCN/strings.xml b/packages/SystemUI/res/values-zh-rCN/strings.xml
index 1321873..980da9d 100644
--- a/packages/SystemUI/res/values-zh-rCN/strings.xml
+++ b/packages/SystemUI/res/values-zh-rCN/strings.xml
@@ -357,11 +357,6 @@
     <string name="clear_all_notifications_text" msgid="814192889771462828">"全部清除"</string>
     <string name="media_projection_action_text" msgid="8470872969457985954">"立即开始"</string>
     <string name="empty_shade_text" msgid="708135716272867002">"没有通知"</string>
-    <string name="tasklistview_title">"任务管理器"</string>
-    <string name="message_switch_fail">"无法切换至此任务，接口不存在！"</string>
-    <string name="tasklist_killall">"全部关闭"</string>
-    <string name="tasklist_memory_usage">"剩余/总内存: [<xliff:g id="NUMBER">%s</xliff:g>] / [<xliff:g id="NAME">%s</xliff:g>]"</string>
-    <string name="message_keep_one_launcher">"至少保留一个桌面主屏！"</string>
     <string name="device_owned_footer" msgid="3802752663326030053">"设备可能会受到监控"</string>
     <string name="profile_owned_footer" msgid="8021888108553696069">"资料可能会受到监控"</string>
     <string name="vpn_footer" msgid="2388611096129106812">"网络可能会受到监控"</string>
diff --git a/packages/SystemUI/res/values-zh-rHK/cm_arrays.xml b/packages/SystemUI/res/values-zh-rHK/cm_arrays.xml
index 19f6205..4280641 100644
--- a/packages/SystemUI/res/values-zh-rHK/cm_arrays.xml
+++ b/packages/SystemUI/res/values-zh-rHK/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-zh-rHK/cm_strings.xml b/packages/SystemUI/res/values-zh-rHK/cm_strings.xml
index 33da33e..ecd9d00 100644
--- a/packages/SystemUI/res/values-zh-rHK/cm_strings.xml
+++ b/packages/SystemUI/res/values-zh-rHK/cm_strings.xml
@@ -130,17 +130,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">下一個鬧鐘</string>
   <string name="dynamic_qs_tile_ime_selector_label">輸入法選擇器</string>
   <string name="dynamic_qs_tile_su_label">Root 權限</string>
-  <!-- LiveDisplay strings -->
-  <string name="accessibility_quick_settings_live_display_off">已關閉 LiveDisplay。</string>
-  <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: 自動模式。</string>
-  <string name="accessibility_quick_settings_live_display_day">LiveDisplay: 日間模式。</string>
-  <string name="accessibility_quick_settings_live_display_night">LiveDisplay: 夜間模式。</string>
-  <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: 戶外模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay 已關閉。</string>
-  <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay 已改為自動模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay 已改為日間模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay 已改為夜間模式。</string>
-  <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay 已改為戶外模式。</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">定位報告：省電模式。</string>
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values-zh-rTW/cm_arrays.xml b/packages/SystemUI/res/values-zh-rTW/cm_arrays.xml
index 19f6205..4280641 100644
--- a/packages/SystemUI/res/values-zh-rTW/cm_arrays.xml
+++ b/packages/SystemUI/res/values-zh-rTW/cm_arrays.xml
@@ -38,7 +38,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-zh-rTW/cm_strings.xml b/packages/SystemUI/res/values-zh-rTW/cm_strings.xml
index f40863f..09770c6 100644
--- a/packages/SystemUI/res/values-zh-rTW/cm_strings.xml
+++ b/packages/SystemUI/res/values-zh-rTW/cm_strings.xml
@@ -145,7 +145,6 @@
   <string name="dynamic_qs_tile_next_alarm_label">下一個鬧鐘</string>
   <string name="dynamic_qs_tile_ime_selector_label">輸入法選擇器</string>
   <string name="dynamic_qs_tile_su_label">Root 權限</string>
-  <!-- LiveDisplay strings -->
   <string name="quick_settings_title_advanced_location">定位模式</string>
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <string name="accessibility_quick_settings_location_battery_saving">位置回報：節約耗電量</string>
diff --git a/packages/SystemUI/res/values-zu/cm_arrays.xml b/packages/SystemUI/res/values-zu/cm_arrays.xml
index 54aac33..44e4c6a 100644
--- a/packages/SystemUI/res/values-zu/cm_arrays.xml
+++ b/packages/SystemUI/res/values-zu/cm_arrays.xml
@@ -20,7 +20,4 @@
   <!-- Performance profiles description-->
   <!-- Performance profiles announcement-->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay drawables -->
-  <!-- LiveDisplay description-->
-  <!-- LiveDisplay announcement-->
 </resources>
diff --git a/packages/SystemUI/res/values-zu/cm_strings.xml b/packages/SystemUI/res/values-zu/cm_strings.xml
index 745db4c..b75332c 100644
--- a/packages/SystemUI/res/values-zu/cm_strings.xml
+++ b/packages/SystemUI/res/values-zu/cm_strings.xml
@@ -72,7 +72,6 @@
   <!-- Announcement made when battery saver changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Dynamic tiles -->
-  <!-- LiveDisplay strings -->
   <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, sensors only mode (not shown on the screen). [CHAR LIMIT=NONE] -->
   <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
diff --git a/packages/SystemUI/res/values/cm_arrays.xml b/packages/SystemUI/res/values/cm_arrays.xml
index 7508a65..d4be9d5 100644
--- a/packages/SystemUI/res/values/cm_arrays.xml
+++ b/packages/SystemUI/res/values/cm_arrays.xml
@@ -61,45 +61,24 @@
         <item>@string/dynamic_qs_tile_ime_selector_label</item>
         <item>@string/dynamic_qs_tile_su_label</item>
         <item>@string/dynamic_qs_tile_adb_label</item>
+        <item>@string/dynamic_qs_tile_live_display_label</item>
+        <item>@string/dynamic_qs_tile_themes_label</item>
     </string-array>
     <string-array name="dynamic_qs_tiles_icons_resources_ids" translatable="false">
         <item>ic_dynamic_qs_next_alarm</item>
         <item>ic_dynamic_qs_ime_selector</item>
         <item>ic_dynamic_qs_su</item>
         <item>ic_dynamic_qs_adb</item>
+        <item>ic_dynamic_qs_live_display</item>
+        <item>ic_dynamic_qs_themes</item>
     </string-array>
     <string-array name="dynamic_qs_tiles_values" translatable="false">
         <item>next_alarm</item>
         <item>ime_selector</item>
         <item>su</item>
         <item>adb</item>
-    </string-array>
-
-    <!-- LiveDisplay drawables -->
-    <string-array name="live_display_drawables" translatable="false">
-        <item>@drawable/ic_livedisplay_auto</item>
-        <item>@drawable/ic_livedisplay_off</item>
-        <item>@drawable/ic_livedisplay_day</item>
-        <item>@drawable/ic_livedisplay_night</item>
-        <item>@drawable/ic_livedisplay_outdoor</item>
-    </string-array>
-
-    <!-- LiveDisplay description-->
-    <string-array name="live_display_description" translatable="false">
-        <item>@string/accessibility_quick_settings_live_display_auto</item>
-        <item>@string/accessibility_quick_settings_live_display_off</item>
-        <item>@string/accessibility_quick_settings_live_display_day</item>
-        <item>@string/accessibility_quick_settings_live_display_night</item>
-        <item>@string/accessibility_quick_settings_live_display_outdoor</item>
-    </string-array>
-
-    <!-- LiveDisplay announcement-->
-    <string-array name="live_display_announcement" translatable="false">
-        <item>@string/accessibility_quick_settings_live_display_changed_auto</item>
-        <item>@string/accessibility_quick_settings_live_display_changed_off</item>
-        <item>@string/accessibility_quick_settings_live_display_changed_day</item>
-        <item>@string/accessibility_quick_settings_live_display_changed_night</item>
-        <item>@string/accessibility_quick_settings_live_display_changed_outdoor</item>
+        <item>live_display</item>
+        <item>themes</item>
     </string-array>
 
     <array name="dockbatterymeter_bolt_points" translatable="false">
diff --git a/packages/SystemUI/res/values/cm_attrs.xml b/packages/SystemUI/res/values/cm_attrs.xml
index d327d4e..36edac0 100644
--- a/packages/SystemUI/res/values/cm_attrs.xml
+++ b/packages/SystemUI/res/values/cm_attrs.xml
@@ -15,6 +15,22 @@
 -->
 
 <resources>
+    <declare-styleable name="QuickSettingsRow">
+        <attr name="table" format="enum">
+            <enum name="system" value="0"/>
+            <enum name="global" value="1"/>
+            <enum name="secure" value="2"/>
+
+            <enum name="cm_system" value="3"/>
+            <enum name="cm_global" value="4"/>
+            <enum name="cm_secure" value="5"/>
+        </attr>
+
+        <attr name="android:key"/>
+        <attr name="android:title" />
+        <attr name="defaultValue" format="integer"/>
+    </declare-styleable>
+
     <declare-styleable name="BatteryMeterViewDrawable">
         <attr name="android:gravity"/>
         <!-- Blending mode used for drawing charging bolt and percentage text -->
diff --git a/packages/SystemUI/res/values/cm_colors.xml b/packages/SystemUI/res/values/cm_colors.xml
index 0ac64ec..5b6e2c0 100644
--- a/packages/SystemUI/res/values/cm_colors.xml
+++ b/packages/SystemUI/res/values/cm_colors.xml
@@ -62,10 +62,26 @@
     <!-- Expanded Status Bar Battery Level Text Color -->
     <color name="status_bar_battery_level_text_color">#ffffff</color>
 
+    <!-- QS Toast Text color -->
+    <color name="quick_settings_toast_color">#ffbe1b</color>
 
     <!-- SystemUI Tuner Icon Tint Color -->
     <color name="tuner_icon_tint">#4dffffff</color>
 
+    <!-- QS Settings Text Colors -->
+    <color name="qs_tile_reset_to_default_text_color">@android:color/white</color>
+    <color name="qs_title_text_color">#80cbc4</color>
+    <color name="qs_edit_header_instruction_text_color">@android:color/white</color>
+    <color name="qs_row_text_color">@android:color/white</color>
+
+    <!-- natural color of the trash can -->
+    <color name="qs_tile_trash_normal_tint">@android:color/transparent</color>
+    <!-- tint to color trash can when tile is hovering over it -->
+    <color name="qs_tile_trash_delete_tint">#EF5350</color>
+    <!-- Tint to color trash can when hovering edit tile, user cannot delete it.
+         Transparent because we have an animation by default. -->
+    <color name="qs_tile_trash_delete_tint_warning">@android:color/transparent</color>
+
     <!-- More exposed hard coded colors -->
     <color name="toggle_slider_text_color">#666666</color>
     <color name="no_recent_apps_text_color">@android:color/holo_blue_light</color>
@@ -90,6 +106,15 @@
     <color name="zen_ic_close_tint_color">@android:color/white</color>
     <color name="header_debug_info_text_color">#00A040</color>
 
+    <!-- QS Detailed View Text and Icon Colors -->
+    <color name="qs_detailed_default_text_color">@android:color/white</color>
+    <color name="qs_detailed_expansion_indicator_color">@color/qs_title_text_color</color>
+    <color name="qs_detailed_title_text_color">@color/qs_title_text_color</color>
+    <color name="qs_detailed_icon_tint_color">@color/qs_title_text_color</color>
+
+    <!-- Quick tile text color when the tile is disabled -->
+    <color name="qs_tile_text_disabled">#ff747474</color>
+
     <!-- Active color for volume slider -->
     <color name="volume_slider_active">@color/system_accent_color</color>
 
diff --git a/packages/SystemUI/res/values/cm_dimens.xml b/packages/SystemUI/res/values/cm_dimens.xml
index 34cff44..60774cd 100644
--- a/packages/SystemUI/res/values/cm_dimens.xml
+++ b/packages/SystemUI/res/values/cm_dimens.xml
@@ -39,6 +39,9 @@
     <!-- Padding end for weather text -->
     <dimen name="status_bar_weather_padding_end">16dp</dimen>
 
+    <!-- height of the qs page indicator -->
+    <dimen name="qs_panel_page_indicator_height">8dp</dimen>
+
     <dimen name="lockscreen_icon_side_padding">10dp</dimen>
     <dimen name="lockscreen_icon_size">35dp</dimen>
     <dimen name="phone_side_padding">10dp</dimen>
@@ -49,7 +52,7 @@
     <dimen name="qs_detail_item_height_twoline">72dp</dimen>
 
     <dimen name="detail_exterior_padding">8dp</dimen>
-    
+
     <dimen name="queue_row_height">52dp</dimen>
     <dimen name="queue_top_shadow">3dp</dimen>
 </resources>
diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index 7745a6b..2996d21 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -1,21 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!--
-
-/**
- * Copyright (c) 2009, The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License"); 
- * you may not use this file except in compliance with the License. 
- * You may obtain a copy of the License at 
- *
- *     http://www.apache.org/licenses/LICENSE-2.0 
- *
- * Unless required by applicable law or agreed to in writing, software 
- * distributed under the License is distributed on an "AS IS" BASIS, 
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
- * See the License for the specific language governing permissions and 
- * limitations under the License.
- */
      Copyright (C) 2012-2015 The CyanogenMod Project
 
      Licensed under the Apache License, Version 2.0 (the "License");
@@ -29,15 +13,9 @@
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
-
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
 
-    <!-- Content description of the power button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
-    <string name="accessibility_power">Power</string>
-    <!-- Content description of the notification button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
-    <string name="accessibility_notifications">Notifications</string>
-
     <!-- Content description of the data connection type HSPA+ for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_data_connection_hspap">HSPA+</string>
     <!-- Content description of the data connection type 4G+ for accessibility (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -52,9 +30,6 @@
          [CHAR LIMIT=4] -->
     <string name="status_bar_notification_info_overflow" translatable="false">\u221E</string>
 
-    <!-- Content description of the superuser tile -->
-    <string name="accessibility_su_active">Superuser session active</string>
-
     <!-- Strings for lockscreen shortcut hints -->
     <string name="left_shortcut_hint">Swipe right for %1$s</string>
     <string name="right_shortcut_hint">Swipe left for %1$s</string>
@@ -75,16 +50,10 @@
     <string name="navbar_menu_conditional_button">Menu (autoHide) button</string>
     <string name="navbar_menu_always_button">Menu (alwaysShow) button</string>
     <string name="navbar_menu_big_button">Menu button</string>
-    <string name="navbar_power_button">Power button</string>
-    <string name="navbar_notifications_button">Notifications button</string>
     <string name="accessibility_dpad_left">Cursor left</string>
     <string name="accessibility_dpad_right">Cursor right</string>
 
     <!-- Development shortcuts -->
-    <!-- Title shown in recents popup for removing an application from the list -->
-    <string name="status_bar_recent_remove_item_title">Remove from list</string>
-    <!-- Title shown in recents popup for inspecting an application's properties -->
-    <string name="status_bar_recent_inspect_item_title">App info</string>
     <!-- Title shown in recents popup for wiping application's data -->
     <string name="advanced_dev_option_wipe_app">Wipe app data</string>
     <!-- Title shown in recents popup for force stopping the application -->
@@ -92,8 +61,6 @@
     <!-- Title shown in recents popup for uninstalling the application -->
     <string name="advanced_dev_option_uninstall">Uninstall</string>
 
-
-
     <!-- Content description of the light brightness slider (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_notification_brightness">Light brightness</string>
 
@@ -108,19 +75,22 @@
     <string name="accessibility_quick_settings_profiles_changed">Profile changed to <xliff:g id="profile" example="Default">%s</xliff:g>.</string>
 
     <string name="quick_settings_compass_value" translatable="false"><xliff:g id="degrees">%1$.0f</xliff:g>\u00b0 <xliff:g id="direction">%2$s</xliff:g></string>
-    <string name="quick_settings_compass_off">Compass off</string>
     <string name="quick_settings_compass_init">Initializing\u2026</string>
 
     <!-- Lights settings, LED notification -->
     <string name="led_notification_title">Light settings</string>
     <string name="led_notification_text">LED light enabled by settings</string>
 
-    <!-- The text for the button in the notification window-shade that clears
-         all of the currently visible notifications. [CHAR LIMIT=10]-->
-    <string name="clear_recents">Close all recent</string>
-     
-    <!-- Weather string format in expanded statusbar header -->
-    <string name="weather_info_not_available">Not connected</string>
+    <string name="qs_tile_edit_header_instruction">Press and hold tiles to rearrange</string>
+    <string name="quick_settings_edit_label">Edit tiles</string>
+    <string name="quick_settings_cannot_delete_edit_tile">Cannot delete the Edit tile</string>
+    <string name="qs_tiles_reset_confirmation">Reset quick settings tiles to default configuration?</string>
+    <string name="quick_settings_tile_reset_to_default">Reset to default layout</string>
+    <string name="quick_settings_title_header">Header</string>
+    <string name="quick_settings_title_tiles">Tiles</string>
+    <string name="quick_settings_title_show_weather">Show weather</string>
+    <string name="quick_settings_title_show_brightness_slider">Show brightness slider</string>
+    <string name="quick_settings_title_enlarge_first_row">Enlarge first row</string>
 
     <!-- Screen pinning dialog description (for devices without navbar) -->
     <string name="screen_pinning_description_no_navbar">This keeps it in view until you unpin. Touch and hold the Back button to unpin.</string>
@@ -128,16 +98,11 @@
     <string name="quick_settings_custom_tile_detail_title">Custom tile</string>
     <string name="quick_settings_remove">Remove tile</string>
     <string name="quick_settings_network_adb_label">ADB over network</string>
-    <string name="quick_settings_network_adb_enabled_label">Enabled</string>
-    <string name="quick_settings_network_adb_disabled_label">Disabled</string>
-    <string name="qs_tile_adb_over_network">ADB over network</string>
-    <string name="qs_tile_compass">Compass</string>
     <string name="quick_settings_compass_label">Compass</string>
-    <string name="quick_settings_nfc">NFC</string>
     <string name="quick_settings_nfc_label">NFC</string>
-    <string name="quick_settings_nfc_off">NFC off</string>
     <string name="quick_settings_profiles">System profiles</string>
     <string name="quick_settings_profiles_off">Profiles disabled</string>
+    <string name="quick_settings_heads_up_label">Heads up</string>
     <string name="quick_settings_battery_saver_label">Battery saver</string>
     <!-- quick settings battery saver label to show when device is charging and tile is disabled -->
     <string name="quick_settings_battery_saver_label_charging">Battery saver (charging)</string>
@@ -156,8 +121,6 @@
     <string name="quick_settings_volume_panel_label">Volume panel</string>
     <string name="quick_settings_usb_tether_label">USB tethering</string>
     <string name="quick_settings_screen_timeout_detail_title">Screen timeout</string>
-
-
     <string name="quick_settings_lockscreen_label">Lock screen</string>
     <string name="quick_settings_ambient_display_label">Ambient display</string>
     <string name="quick_settings_lockscreen_label_enforced">Lock screen enforced</string>
@@ -212,6 +175,15 @@
     <!-- Announcement made when ambient display changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_quick_settings_ambient_display_changed_on">Ambient display turned on.</string>
 
+    <!-- Content description of the heads up tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
+    <string name="accessibility_quick_settings_heads_up_off">Heads up off.</string>
+    <!-- Content description of the heads up tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] -->
+    <string name="accessibility_quick_settings_heads_up_on">Heads up on.</string>
+
+    <!-- Announcement made when heads up changes to off (not shown on the screen). [CHAR LIMIT=NONE] -->
+    <string name="accessibility_quick_settings_heads_up_changed_off">Heads up turned off.</string>
+    <!-- Announcement made when heads up changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
+    <string name="accessibility_quick_settings_heads_up_changed_on">Heads up turned on.</string>
 
     <!-- Content description of the caffeine tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_quick_settings_caffeine_off">Caffeine off.</string>
@@ -227,25 +199,16 @@
     <string name="accessibility_quick_settings_battery_saver_changed_off">Battery saver turned off.</string>
     <!-- Announcement made when battery saver changes to on (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_quick_settings_battery_saver_changed_on">Battery saver turned on.</string>
+
     <!-- Dynamic tiles -->
     <string name="quick_settings_dynamic_tile_detail_title">Dynamic tile</string>
     <string name="dynamic_qs_tile_next_alarm_label">Next alarm</string>
     <string name="dynamic_qs_tile_ime_selector_label">IME selector</string>
-    <string name="dynamic_qs_tile_su_label">Root</string>
+    <string name="dynamic_qs_tile_su_label">Root access</string>
     <string name="dynamic_qs_tile_adb_label" translatable="false">ADB</string>
+    <string name="dynamic_qs_tile_live_display_label" translatable="false">LiveDisplay</string>
+    <string name="dynamic_qs_tile_themes_label">Themes</string>
 
-    <!-- LiveDisplay strings -->
-    <string name="live_display_title" translatable="false">LiveDisplay</string>
-    <string name="accessibility_quick_settings_live_display_off">LiveDisplay off.</string>
-    <string name="accessibility_quick_settings_live_display_auto">LiveDisplay: auto mode.</string>
-    <string name="accessibility_quick_settings_live_display_day">LiveDisplay: day mode.</string>
-    <string name="accessibility_quick_settings_live_display_night">LiveDisplay: night mode.</string>
-    <string name="accessibility_quick_settings_live_display_outdoor">LiveDisplay: outdoor mode.</string>
-    <string name="accessibility_quick_settings_live_display_changed_off">LiveDisplay turned off.</string>
-    <string name="accessibility_quick_settings_live_display_changed_auto">LiveDisplay changed to auto mode.</string>
-    <string name="accessibility_quick_settings_live_display_changed_day">LiveDisplay changed to day mode.</string>
-    <string name="accessibility_quick_settings_live_display_changed_night">LiveDisplay changed to night mode.</string>
-    <string name="accessibility_quick_settings_live_display_changed_outdoor">LiveDisplay changed to outdoor mode.</string>
     <string name="quick_settings_title_advanced_location">Tri-state location</string>
 
     <!-- Content description of the location tile in quick settings when on, battery saving mode (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -255,29 +218,15 @@
     <!-- Content description of the location tile in quick settings when on, high accuracy mode (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_quick_settings_location_high_accuracy">Location reporting: high accuracy mode.</string>
 
+    <!-- QuickSettings: Location detail panel title [CHAR LIMIT=NONE] -->
+    <string name="quick_settings_location_detail_title">Location mode</string>
     <!-- QuickSettings: Location (On, low-power) [CHAR LIMIT=NONE] -->
     <string name="quick_settings_location_battery_saving_label">Battery saving</string>
     <!-- QuickSettings: Location (On, gps-only) [CHAR LIMIT=NONE] -->
-    <string name="quick_settings_location_gps_only_label">GPS only</string>
+    <string name="quick_settings_location_gps_only_label">Device only</string>
     <!-- QuickSettings: Location (On, high-accuracy) [CHAR LIMIT=NONE] -->
     <string name="quick_settings_location_high_accuracy_label">High accuracy</string>
 
-    <!-- QuickSettings: Location detail panel title [CHAR LIMIT=NONE] -->
-    <string name="quick_settings_location_detail_title">Location</string>
-    <!-- QuickSettings: Location detail panel menu title [CHAR LIMIT=NONE] -->
-    <string name="quick_settings_location_detail_menu_title">Select mode:</string>
-    <!-- [CHAR LIMIT=30] Location detail panel, high accuracy location mode -->
-    <string name="quick_settings_location_detail_mode_high_accuracy_title">High accuracy</string>
-    <!-- [CHAR LIMIT=30] Location detail panel, battery saving location mode -->
-    <string name="quick_settings_location_detail_mode_battery_saving_title">Battery saving</string>
-    <!-- [CHAR LIMIT=30] Location detail panel, device only location mode -->
-    <string name="quick_settings_location_detail_mode_sensors_only_title">Device only</string>
-    <!-- [CHAR LIMIT=130] Location detail panel, description for high accuracy mode -->
-    <string name="quick_settings_location_detail_mode_high_accuracy_description">Use GPS, Wi\u2011Fi, and cellular networks to determine location </string>
-    <!-- [CHAR LIMIT=130] Location detail panel, description for battery saving mode -->
-    <string name="quick_settings_location_detail_mode_battery_saving_description">Use Wi\u2011Fi and cellular networks to determine location</string>
-    <!-- [CHAR LIMIT=130] Location detail panel, description for sensors only mode -->
-    <string name="quick_settings_location_detail_mode_sensors_only_description">Use GPS to determine your location</string>
     <!-- Announcement made when the location tile changes to battery saving (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_quick_settings_location_changed_battery_saving">Location reporting changed to battery saving mode.</string>
     <!-- Announcement made when the location tile changes to sensors only (not shown on the screen). [CHAR LIMIT=NONE] -->
@@ -285,6 +234,9 @@
     <!-- Announcement made when the location tile changes to high accuracy (not shown on the screen). [CHAR LIMIT=NONE] -->
     <string name="accessibility_quick_settings_location_changed_high_accuracy">Location reporting changed to high accuracy mode.</string>
 
+    <string name="quick_settings_tiles_category_system">System tiles</string>
+    <!-- detail header when adding a tile -->
+    <string name="quick_settings_tiles_add_tiles">Add a tile</string>
 
     <!-- Hotspot dialog message -->
     <string name="hotspot_apm_message">Unable to connect to cellular networks while Airplane mode is enabled. Disable Airplane mode and try again.</string>
@@ -321,6 +273,9 @@
     <!-- Path data for circle battery -->
     <string name="battery_circle_path" translatable="false">M 12 3.5 C 16.6944203736 3.5 20.5 7.30557962644 20.5 12 C 20.5 16.6944203736 16.6944203736 20.5 12 20.5 C 7.30557962644 20.5 3.5 16.6944203736 3.5 12 C 3.5 7.30557962644 7.30557962644 3.5 12 3.5 Z</string>
 
+    <!-- Weather string format in keyguard -->
+    <string name="keyguard_status_view_weather_format"><xliff:g id="temp">%1$s</xliff:g> <xliff:g id="condition">%2$s</xliff:g></string>
+
     <string name="expand_hint">Swipe down to expand</string>
     <string name="swipe_left_hint">Swipe left to <xliff:g id="app_name">%1$s</xliff:g></string>
     <string name="swipe_right_hint">Swipe right to notifications</string>
diff --git a/packages/SystemUI/res/values/cm_styles.xml b/packages/SystemUI/res/values/cm_styles.xml
index 52af61a..1e63418 100644
--- a/packages/SystemUI/res/values/cm_styles.xml
+++ b/packages/SystemUI/res/values/cm_styles.xml
@@ -16,22 +16,27 @@
 -->
 <resources>
 
+    <style name="SettingRow">
+        <item name="android:layout_width">match_parent</item>
+        <item name="android:layout_height">48dp</item>
+        <item name="android:paddingLeft">16dp</item>
+        <item name="android:paddingRight">16dp</item>
+        <item name="android:background">?android:attr/selectableItemBackground</item>
+        <item name="android:clickable">true</item>
+    </style>
+
     <style name="TextAppearance.StatusBar.Expanded.WeatherTemp">
-        <item name="android:textSize">10sp</item>
+        <item name="android:textSize">12sp</item>
         <item name="android:textStyle">normal</item>
         <item name="android:textColor">@color/status_bar_temperature_text_color</item>
     </style>
 
     <style name="TextAppearance.StatusBar.Expanded.WeatherLocation">
-        <item name="android:textSize">10sp</item>
+        <item name="android:textSize">12sp</item>
         <item name="android:textStyle">normal</item>
         <item name="android:textColor">@color/status_bar_temperature_location_text_color</item>
     </style>
 
-
-    <style name="TextAppearance.StatusBar.WeatherTemp" parent="@*android:style/TextAppearance.StatusBar">
-        <item name="android:textStyle">normal</item>
-	 </style>
     <style name="TextAppearance.QS.DetailItemSub">
         <item name="android:textSize">@dimen/qs_detail_item_secondary_text_size</item>
     </style>
diff --git a/packages/SystemUI/res/values/colors.xml b/packages/SystemUI/res/values/colors.xml
index 4a4ddd8..f116f05 100644
--- a/packages/SystemUI/res/values/colors.xml
+++ b/packages/SystemUI/res/values/colors.xml
@@ -26,7 +26,6 @@
     <color name="notification_panel_solid_background">#ff000000</color>
     <drawable name="status_bar_recents_app_thumbnail_background">#88000000</drawable>
     <color name="status_bar_recents_app_label_color">#ffffffff</color>
-    <color name="status_bar_temp_text_color">#FFFFFFFF</color>
     <drawable name="status_bar_notification_row_background_color">#ff090909</drawable>
     <color name="notification_list_shadow_top">#80000000</color>
     <drawable name="recents_callout_line">#99ffffff</drawable>
@@ -78,7 +77,7 @@
     <color name="keyguard_affordance">#ffffffff</color>
 
     <!-- The color of the legacy notification background -->
-    <color name="notification_legacy_background_color">#ffffffff</color>
+    <color name="notification_legacy_background_color">#ff1a1a1a</color>
 
     <!-- The color of the material notification background -->
     <color name="notification_material_background_color">#fffafafa</color>
@@ -87,7 +86,7 @@
     <color name="notification_material_background_dimmed_color">#d4ffffff</color>
 
     <!-- The color of the material notification background when low priority -->
-    <color name="notification_material_background_low_priority_color">#ff282e34</color>
+    <color name="notification_material_background_low_priority_color">#ffe0e0e0</color>
 
     <!-- The color of the material notification background for media notifications when no custom
          color is specified -->
@@ -145,24 +144,4 @@
     <color name="volume_icon_color">#ffffffff</color>
     <color name="volume_settings_icon_color">#7fffffff</color>
     <color name="volume_slider_inactive">#FFB0BEC5</color><!-- blue grey 200 -->
-
-    <!-- QS Toast Text color -->
-    <color name="quick_settings_toast_color">#ffbe1b</color>
-
-    <!-- Recents -->
-    <color name="recents_empty_dark_color">#ff4d4d4d</color>
-    <color name="recents_empty_light_color">#ffb3b3b3</color>
-
-    <!-- Slim recent -->
-    <color name="recent_background">#80000000</color>
-
-    <!-- Card Color -->
-    <color name="card_background">#ffffffff</color>
-    <color name="card_background_header">#00ffffff</color>
-    <color name="card_backgroundExpand">#00ffffff</color>
-
-    <color name="card_text_color_header">#ff000000</color>
-
-    <!-- Used by selector -->
-    <color name="card_pressed">#7e3c3c3c</color>
 </resources>
diff --git a/packages/SystemUI/res/values/config.xml b/packages/SystemUI/res/values/config.xml
index 6673a6a..8ca58ba 100644
--- a/packages/SystemUI/res/values/config.xml
+++ b/packages/SystemUI/res/values/config.xml
@@ -117,18 +117,8 @@
     <!-- The number of columns that the top level tiles span in the QuickSettings -->
     <integer name="quick_settings_user_time_settings_tile_span">1</integer>
 
-    <!-- The default tiles to display in QuickSettings -->
-    <string name="quick_settings_tiles_default" translatable="false">
-        wifi,bt,inversion,cell,airplane,dnd,rotation,flashlight,location,cast,hotspot,adb_network,compass,nfc,float_mode,pie,profiles,sync,volume_panel,usb_tether,screen_timeout,performance,halo,ambient_display,live_display,music,brightness,screen_off,screenshot,expanded_desktop,reboot,configurations,heads_up,lte,themes,navbar,appcirclebar,kernel_adiutor,screenrecord,gesture_anywhere,battery_saver,power_menu,app_picker,kill_app,caffeine,hw_keys,pulse,sound,visualizer,lockscreen
-    </string>
-
-    <!-- The default tiles to reset to in QuickSettings -->
-    <string name="quick_settings_tiles_reset" translatable="false">
-        wifi,bt,inversion,cell,airplane,dnd,rotation,flashlight,location,cast,hotspot
-    </string>
-
     <!-- The tiles to display in QuickSettings -->
-    <string name="quick_settings_tiles" translatable="false">wifi,bt,cell,airplane,dnd,rotation,flashlight,location,hotspot</string>
+    <string name="quick_settings_tiles" translatable="false">default</string>
 
     <!-- Whether or not the RSSI tile is capitalized or not. -->
     <bool name="quick_settings_rssi_tile_capitalization">true</bool>
@@ -140,6 +130,9 @@
     <!-- The maximum number of items to be displayed in quick settings -->
     <integer name="quick_settings_detail_max_item_count">7</integer>
 
+    <!-- Should "4G" be shown instead of "LTE" when the network is NETWORK_TYPE_LTE? -->
+    <bool name="config_show4GForLTE">true</bool>
+
     <!-- Whether or not we also show rsrp level for LTE. -->
     <bool name="config_showRsrpSignalLevelforLTE">false</bool>
 
@@ -187,7 +180,7 @@
      from home. -->
     <integer name="recents_task_enter_from_home_duration">225</integer>
 
-    <!-- The stagger for each task when animating the task from the bottom of the screen when
+    <!-- The stagger for each task when animating the task from the bottom of the screen when 
      transitioning from home. -->
     <integer name="recents_task_enter_from_home_stagger_delay">12</integer>
 
@@ -199,7 +192,7 @@
     <integer name="recents_nav_bar_scrim_enter_duration">400</integer>
 
     <!-- The animation duration for animating the removal of a task view. -->
-    <integer name="recents_animate_task_view_remove_duration">450</integer>
+    <integer name="recents_animate_task_view_remove_duration">250</integer>
 
     <!-- The animation duration for scrolling the stack to a particular item. -->
     <integer name="recents_animate_task_stack_scroll_duration">225</integer>
@@ -304,9 +297,6 @@
     <!-- Duration of the expansion animation in the volume dialog -->
     <item name="volume_expand_animation_duration" type="integer">300</item>
 
-    <!-- Default value how much apps show the app screenshot on recents view entry -->
-    <integer name="expanded_items_default">2</integer>
-
     <!-- Allow Flashlight service to use wakelock -->
     <bool name="flashlight_use_wakelock">false</bool>
 
@@ -314,3 +304,4 @@
     <bool name="config_showScreenOnLockScreenHints">false</bool>
 
 </resources>
+
diff --git a/packages/SystemUI/res/values/dimens.xml b/packages/SystemUI/res/values/dimens.xml
index 2f0f0e2..a7efccd 100644
--- a/packages/SystemUI/res/values/dimens.xml
+++ b/packages/SystemUI/res/values/dimens.xml
@@ -453,9 +453,6 @@
     <!-- Margin on the right side of the system icon group on Keyguard. -->
     <dimen name="system_icons_keyguard_padding_end">4dp</dimen>
 
-    <!-- The task item height in task list. -->
-    <dimen name="task_manager_item_height">40dip</dimen>
-
     <!-- Additional translation (downwards) for appearing notifications when going to the full shade
          from Keyguard. -->
     <dimen name="go_to_full_shade_appearing_translation">200dp</dimen>
diff --git a/packages/SystemUI/res/values/strings.xml b/packages/SystemUI/res/values/strings.xml
index 2d01c38..dc9c9fd 100644
--- a/packages/SystemUI/res/values/strings.xml
+++ b/packages/SystemUI/res/values/strings.xml
@@ -892,13 +892,6 @@
     <!-- Text which is shown in the notification shade when there are no notifications. [CHAR LIMIT=30] -->
     <string name="empty_shade_text">No notifications</string>
 
-    <!-- Task Manager -->
-    <string name="task_manager_title">Task Manager</string>
-    <string name="message_switch_fail">Cannot switch to this task, because it has no interface.</string>
-    <string name="tasklist_killall">Kill All</string>
-    <string name="tasklist_memory_usage"><b>"Free / Total Memory : </b><xliff:g id="number">%s</xliff:g> / <xliff:g id="name">%s</xliff:g>"</string>
-    <string name="message_keep_one_launcher">Should keep at least one home activity!</string>
-
     <!-- Footer device owned text [CHAR LIMIT=50] -->
     <string name="device_owned_footer">Device may be monitored</string>
 
diff --git a/packages/SystemUI/res/values/styles.xml b/packages/SystemUI/res/values/styles.xml
index ab2ce58..8241ddf 100644
--- a/packages/SystemUI/res/values/styles.xml
+++ b/packages/SystemUI/res/values/styles.xml
@@ -78,6 +78,7 @@
     </style>
 
     <style name="TextAppearance.StatusBar.Clock" parent="@*android:style/TextAppearance.StatusBar.Icon">
+        <item name="android:textSize">@dimen/status_bar_clock_size</item>
         <item name="android:fontFamily">sans-serif-medium</item>
         <item name="android:textColor">@color/status_bar_clock_color</item>
     </style>
@@ -109,7 +110,7 @@
             parent="TextAppearance.StatusBar.Expanded.AboveDateTime" />
 
     <style name="TextAppearance.StatusBar.Expanded.UserSwitcher">
-        <item name="android:textSize">14sp</item>
+        <item name="android:textSize">16sp</item>
         <item name="android:textStyle">normal</item>
         <item name="android:textColor">@color/qs_user_detail_name</item>
     </style>
@@ -138,11 +139,11 @@
     </style>
 
     <style name="TextAppearance.QS.Introduction">
-        <item name="android:textSize">12sp</item>
+        <item name="android:textSize">14sp</item>
     </style>
 
     <style name="TextAppearance.QS.Warning">
-        <item name="android:textSize">12sp</item>
+        <item name="android:textSize">14sp</item>
         <item name="android:textColor">@color/system_warning_color</item>
     </style>
 
@@ -280,17 +281,17 @@
     </style>
 
     <style name="TextAppearance.Volume.Header">
-        <item name="android:textSize">11sp</item>
+        <item name="android:textSize">12sp</item>
         <item name="android:textColor">@color/volume_slider_inactive</item>
     </style>
 
     <style name="TextAppearance.Volume.ZenSummary">
-        <item name="android:textSize">12sp</item>
+        <item name="android:textSize">14sp</item>
         <item name="android:fontFamily">sans-serif-medium</item>
     </style>
 
     <style name="TextAppearance.Volume.ZenDetail">
-        <item name="android:textSize">12sp</item>
+        <item name="android:textSize">14sp</item>
         <item name="android:fontFamily">sans-serif</item>
         <item name="android:textColor">#ffb0b3c5</item>
     </style>
@@ -298,61 +299,5 @@
     <style name="VolumeButtons" parent="@android:style/Widget.Material.Button.Borderless">
         <item name="android:background">@drawable/btn_borderless_rect</item>
     </style>
-    
-    <!-- Slim recents -->
-    <style name="card.header_simple_title">
-        <item name="android:textSize">@dimen/recent_text_size</item>
-        <item name="android:fontFamily">sans-serif-condensed</item>
-        <item name="android:textColor">@color/card_text_color_header</item>
-        <item name="android:layout_width">@dimen/recent_header_width</item>
-        <item name="android:layout_height">@dimen/recent_app_icon_size</item>
-        <item name="android:gravity">start|center_vertical</item>
-        <item name="android:textAlignment">viewStart</item>
-        <item name="android:layout_marginStart">0dp</item>
-        <item name="android:layout_marginTop">4dp</item>
-        <item name="android:layout_marginEnd">0dp</item>
-        <item name="android:layout_marginBottom">6dp</item>
-        <item name="android:ellipsize">end</item>
-        <item name="android:singleLine">false</item>
-        <item name="android:lines">2</item>
-        <item name="android:maxLines">2</item>
-    </style>
-
-    <style name="card.card_header_app_icon">
-        <item name="android:layout_width">@dimen/recent_app_icon_size</item>
-        <item name="android:layout_height">@dimen/recent_app_icon_size</item>
-        <item name="android:layout_marginTop">5dp</item>
-        <item name="android:layout_marginStart">4dp</item>
-        <item name="android:layout_marginEnd">4dp</item>
-        <item name="android:layout_marginBottom">5dp</item>
-    </style>
-
-    <style name="card.card_header_favorite_icon">
-        <item name="android:layout_width">@dimen/recent_favorite_icon_size</item>
-        <item name="android:layout_height">@dimen/recent_favorite_icon_size</item>
-        <item name="android:layout_marginStart">-18dp</item>
-        <item name="android:layout_marginTop">1dp</item>
-    </style>
-
-    <style name="card.header_button_base">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_alignParentEnd">true</item>
-        <item name="android:paddingStart">@dimen/card_header_button_padding_start</item>
-        <item name="android:focusable">false</item>
-        <item name="android:focusableInTouchMode">false</item>
-        <item name="android:clickable">true</item>
-        <item name="android:layout_centerVertical">true</item>
-        <item name="android:layout_marginEnd">0dp</item>
-    </style>
-
-    <style name="RecentBaseStyle"  parent="@*android:style/Theme.Material.Light">
-        <item name="android:popupMenuStyle">@*android:style/Widget.Material.Light.ListPopupWindow</item>
-    </style>
-
-    <style name="card.main_contentExpand_inside">
-        <item name="android:background">@color/card_backgroundExpand</item>
-        <item name="android:padding">@dimen/card_expand_layout_padding</item>
-    </style>
 
 </resources>
diff --git a/packages/SystemUI/res/values/vpi__attrs.xml b/packages/SystemUI/res/values/vpi__attrs.xml
new file mode 100644
index 0000000..911df54
--- /dev/null
+++ b/packages/SystemUI/res/values/vpi__attrs.xml
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2012 Jake Wharton
+     Copyright (C) 2011 Patrik Åkerfeldt
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<resources>
+    <attr name="centered" format="boolean" />
+    <attr name="selectedColor" format="color" />
+    <attr name="strokeWidth" format="dimension" />
+    <attr name="unselectedColor" format="color" />
+
+    <declare-styleable name="CirclePageIndicator">
+        <!-- Whether or not the indicators should be centered. -->
+        <attr name="centered" />
+        <!-- Color of the filled circle that represents the current page. -->
+        <attr name="indicatorFillColor" format="color" />
+        <!-- Color of the filled circles that represents pages. -->
+        <attr name="pageColor" format="color" />
+        <!-- Orientation of the indicator. -->
+        <attr name="android:orientation"/>
+        <!-- Radius of the circles. This is also the spacing between circles. -->
+        <attr name="radius" format="dimension" />
+        <!-- Whether or not the selected indicator snaps to the circles. -->
+        <attr name="snap" format="boolean" />
+        <!-- Color of the open circles. -->
+        <attr name="strokeColor" format="color" />
+        <!-- Width of the stroke used to draw the circles. -->
+        <attr name="strokeWidth" />
+        <!-- View background -->
+        <attr name="android:background"/>
+    </declare-styleable>
+</resources>
diff --git a/packages/SystemUI/res/values/vpi__defaults.xml b/packages/SystemUI/res/values/vpi__defaults.xml
new file mode 100644
index 0000000..7aabee4
--- /dev/null
+++ b/packages/SystemUI/res/values/vpi__defaults.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2012 Jake Wharton
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<resources>
+    <bool name="default_circle_indicator_centered">true</bool>
+    <color name="default_circle_indicator_fill_color">#ffFFFFFF</color>
+    <color name="default_circle_indicator_page_color">#ffcccccc</color>
+    <integer name="default_circle_indicator_orientation">0</integer>
+    <dimen name="default_circle_indicator_radius">3dp</dimen>
+    <bool name="default_circle_indicator_snap">false</bool>
+    <color name="default_circle_indicator_stroke_color">#ffcccccc</color>
+    <dimen name="default_circle_indicator_stroke_width">0dp</dimen>
+</resources>
diff --git a/packages/SystemUI/res/xml/tuner_prefs.xml b/packages/SystemUI/res/xml/tuner_prefs.xml
index ac56a23..2d70faa 100644
--- a/packages/SystemUI/res/xml/tuner_prefs.xml
+++ b/packages/SystemUI/res/xml/tuner_prefs.xml
@@ -1,9 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!-- Copyright (C) 2015 The Android Open Source Project
+
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
+
           http://www.apache.org/licenses/LICENSE-2.0
+
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -17,10 +20,6 @@
     <Preference
         android:key="statusbar_icon_blacklist"
         android:title="@string/status_bar" />
-    
-   <Preference
-        android:key="qs_tuner"
-        android:title="@string/quick_settings" />
 
     <Preference
         android:key="demo_mode"
diff --git a/packages/SystemUI/res/xml/tuner_statusbar_icons.xml b/packages/SystemUI/res/xml/tuner_statusbar_icons.xml
index 52e768b..863c8b0 100644
--- a/packages/SystemUI/res/xml/tuner_statusbar_icons.xml
+++ b/packages/SystemUI/res/xml/tuner_statusbar_icons.xml
@@ -1,9 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
 <!-- Copyright (C) 2016 The CyanogenMod Project
+
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
+
           http://www.apache.org/licenses/LICENSE-2.0
+
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -54,9 +57,4 @@
             android:key="airplane"
             android:title="@string/status_bar_airplane"/>
 
-    <com.android.systemui.rr.SystemSettingSwitchPreference
-        android:key="show_zen_icon"
-        android:title="@string/show_zen_icon_title"
-        android:defaultValue="true" />
-
 </PreferenceScreen>
diff --git a/packages/SystemUI/src/com/android/systemui/BatteryMeterView.java b/packages/SystemUI/src/com/android/systemui/BatteryMeterView.java
index 578c8ab..06c2957 100755
--- a/packages/SystemUI/src/com/android/systemui/BatteryMeterView.java
+++ b/packages/SystemUI/src/com/android/systemui/BatteryMeterView.java
@@ -28,12 +28,9 @@ import android.content.res.ThemeConfig;
 import android.content.res.TypedArray;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
-import android.graphics.DashPathEffect;
 import android.graphics.Color;
-import android.graphics.DashPathEffect;
 import android.graphics.Paint;
 import android.graphics.PorterDuff;
-import android.graphics.PorterDuff.Mode;
 import android.graphics.PorterDuffXfermode;
 import android.graphics.Rect;
 import android.graphics.Typeface;
@@ -48,9 +45,6 @@ import android.util.Log;
 import android.view.Gravity;
 import android.view.View;
 
-
-import android.provider.Settings;
-
 import com.android.systemui.statusbar.policy.BatteryController;
 import com.android.systemui.statusbar.policy.BatteryStateRegistar;
 
@@ -70,7 +64,6 @@ public class BatteryMeterView extends View implements DemoMode,
         BATTERY_METER_ICON_PORTRAIT,
         BATTERY_METER_ICON_LANDSCAPE,
         BATTERY_METER_CIRCLE,
-        BATTERY_METER_DOTTED_CIRCLE,
         BATTERY_METER_TEXT
     }
 
@@ -100,8 +93,6 @@ public class BatteryMeterView extends View implements DemoMode,
     protected BatteryTracker mTracker = new BatteryTracker();
     private BatteryMeterDrawable mBatteryMeterDrawable;
     private int mIconTint = Color.WHITE;
-    private int mBatteryIconColor;
-    public boolean mColorSwitch = false;
 
     private int mCurrentBackgroundColor = 0;
     private int mCurrentFillColor = 0;
@@ -278,6 +269,7 @@ public class BatteryMeterView extends View implements DemoMode,
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int width = MeasureSpec.getSize(widthMeasureSpec);
         int height = MeasureSpec.getSize(heightMeasureSpec);
+
         if (mMeterMode == BatteryMeterMode.BATTERY_METER_TEXT) {
             onSizeChanged(width, height, 0, 0); // Force a size changed event
         }
@@ -326,9 +318,6 @@ public class BatteryMeterView extends View implements DemoMode,
             case BatteryController.STYLE_CIRCLE:
                 meterMode = BatteryMeterMode.BATTERY_METER_CIRCLE;
                 break;
-            case BatteryController.STYLE_DOTTED_CIRCLE:
-                meterMode = BatteryMeterMode.BATTERY_METER_DOTTED_CIRCLE;
-                break;
             case BatteryController.STYLE_GONE:
                 meterMode = BatteryMeterMode.BATTERY_METER_GONE;
                 showInsidePercent = false;
@@ -408,7 +397,7 @@ public class BatteryMeterView extends View implements DemoMode,
     }
 
     public void setDarkIntensity(float darkIntensity) {
-	 if (mBatteryMeterDrawable != null) {
+        if (mBatteryMeterDrawable != null) {
             mCurrentBackgroundColor = getBackgroundColor(darkIntensity);
             mCurrentFillColor = getFillColor(darkIntensity);
             mBatteryMeterDrawable.setDarkIntensity(mCurrentBackgroundColor, mCurrentFillColor);
@@ -422,7 +411,7 @@ public class BatteryMeterView extends View implements DemoMode,
 
     private int getFillColor(float darkIntensity) {
         return getColorForDarkIntensity(
-                darkIntensity, mLightModeFillColor, mDarkModeFillColor);               
+                darkIntensity, mLightModeFillColor, mDarkModeFillColor);
     }
 
     private int getColorForDarkIntensity(float darkIntensity, int lightColor, int darkColor) {
@@ -542,7 +531,7 @@ public class BatteryMeterView extends View implements DemoMode,
         @Override
         public void onDraw(Canvas c, BatteryTracker tracker) {
             if (mDisposed) return;
-            
+
             if (!mInitialized) {
                 init();
             }
@@ -627,8 +616,6 @@ public class BatteryMeterView extends View implements DemoMode,
             }
         }
 
-        private DashPathEffect mPathEffect;
-
         private void loadBatteryDrawables(Resources res, BatteryMeterMode mode) {
             if (isThemeApplied()) {
                 try {
@@ -646,8 +633,6 @@ public class BatteryMeterView extends View implements DemoMode,
                 }
             }
 
-            mBatteryIconColor = Settings.System.getInt(mContext.getContentResolver(),Settings.System.BATTERY_ICON_COLOR, 0xFFFFFFFF);
-	     mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
             int drawableResId = getBatteryDrawableResourceForMode(mode);
             mBatteryDrawable = (LayerDrawable) res.getDrawable(drawableResId);
             mFrameDrawable = mBatteryDrawable.findDrawableByLayerId(R.id.battery_frame);
@@ -657,11 +642,6 @@ public class BatteryMeterView extends View implements DemoMode,
             // set the animated vector drawable we will be stop animating
             Drawable levelDrawable = mBatteryDrawable.findDrawableByLayerId(R.id.battery_fill);
             mLevelDrawable = new StopMotionVectorDrawable(levelDrawable);
-            if(mColorSwitch) {
-		  if(levelDrawable != null) {
-		  levelDrawable.setColorFilter(mBatteryIconColor,Mode.SRC_ATOP);
-		  }
-            }        
             mBoltDrawable = mBatteryDrawable.findDrawableByLayerId(R.id.battery_charge_indicator);
         }
 
@@ -725,7 +705,6 @@ public class BatteryMeterView extends View implements DemoMode,
             // not much we can do with zero width or height, we'll get another pass later
             if (mWidth <= 0 || mHeight <=0) return;
 
-            mPathEffect = new DashPathEffect(new float[]{3,2},0);
             final float widthDiv2 = mWidth / 2f;
             // text size is width / 2 - 2dp for wiggle room
             final float textSize = widthDiv2 - getResources().getDisplayMetrics().density * 2;
@@ -772,7 +751,6 @@ public class BatteryMeterView extends View implements DemoMode,
             switch (mode) {
                 case BATTERY_METER_ICON_LANDSCAPE:
                     return R.drawable.ic_battery_landscape;
-                case BATTERY_METER_DOTTED_CIRCLE:
                 case BATTERY_METER_CIRCLE:
                     return R.drawable.ic_battery_circle;
                 case BATTERY_METER_ICON_PORTRAIT:
@@ -814,7 +792,6 @@ public class BatteryMeterView extends View implements DemoMode,
         // based drawables
         private void updateBoltDrawableLayer(LayerDrawable batteryDrawable, Drawable boltDrawable) {
             BitmapDrawable newBoltDrawable;
-            Paint paint;
             if (boltDrawable instanceof BitmapDrawable) {
                 newBoltDrawable = (BitmapDrawable) boltDrawable.mutate();
             } else {
@@ -827,12 +804,6 @@ public class BatteryMeterView extends View implements DemoMode,
                 newBoltDrawable = new BitmapDrawable(getResources(), boltBitmap);
                 newBoltDrawable.setBounds(bounds);
             }
-	    paint = new Paint();
-            if (mMeterMode == BatteryMeterMode.BATTERY_METER_DOTTED_CIRCLE) {
-                paint.setPathEffect(mPathEffect);
-            } else {
-                paint.setPathEffect(null);
-            }
             newBoltDrawable.getPaint().set(mTextAndBoltPaint);
             batteryDrawable.setDrawableByLayerId(R.id.battery_charge_indicator, newBoltDrawable);
         }
diff --git a/packages/SystemUI/src/com/android/systemui/BootReceiver.java b/packages/SystemUI/src/com/android/systemui/BootReceiver.java
index 55d648e..8e24eeb 100644
--- a/packages/SystemUI/src/com/android/systemui/BootReceiver.java
+++ b/packages/SystemUI/src/com/android/systemui/BootReceiver.java
@@ -39,12 +39,6 @@ public class BootReceiver extends BroadcastReceiver {
                 Intent loadavg = new Intent(context, com.android.systemui.LoadAverageService.class);
                 context.startService(loadavg);
             }
-            // Start the cpu info overlay, if activated
-            if (Settings.Global.getInt(res, Settings.Global.SHOW_CPU, 0) != 0) {
-                Intent cpuinfo = new Intent(context, com.android.systemui.CPUInfoService.class);
-                context.startService(cpuinfo);
-            }
-
         } catch (Exception e) {
             Log.e(TAG, "Can't start load average service", e);
         }
diff --git a/packages/SystemUI/src/com/android/systemui/RecentsComponent.java b/packages/SystemUI/src/com/android/systemui/RecentsComponent.java
index 353c2fe..dd93389 100644
--- a/packages/SystemUI/src/com/android/systemui/RecentsComponent.java
+++ b/packages/SystemUI/src/com/android/systemui/RecentsComponent.java
@@ -27,7 +27,6 @@ public interface RecentsComponent {
     void showRecents(boolean triggeredFromAltTab, View statusBarView);
     void hideRecents(boolean triggeredFromAltTab, boolean triggeredFromHomeKey);
     void toggleRecents(Display display, int layoutDirection, View statusBarView);
-    void clearRecents();
     void preloadRecents();
     void cancelPreloadingRecents();
     void showNextAffiliatedTask();
diff --git a/packages/SystemUI/src/com/android/systemui/SwipeHelper.java b/packages/SystemUI/src/com/android/systemui/SwipeHelper.java
index fd83356..c3e5043 100644
--- a/packages/SystemUI/src/com/android/systemui/SwipeHelper.java
+++ b/packages/SystemUI/src/com/android/systemui/SwipeHelper.java
@@ -49,10 +49,6 @@ public class SwipeHelper implements Gefingerpoken {
     public static final int SWIPE_ZONE_RIGHT = 0x2;
     public static final int SWIPE_ZONE_TOP = 0x4;
     public static final int SWIPE_ZONE_BOTTOM = 0x8;
-    public static final int LEFT = 0;
-    public static final int RIGHT = 1;
-    public static final int UP = 2;
-    public static final int DOWN = 3;
 
     private static LinearInterpolator sLinearInterpolator = new LinearInterpolator();
     private final Interpolator mFastOutLinearInInterpolator;
@@ -76,13 +72,8 @@ public class SwipeHelper implements Gefingerpoken {
     private Callback mCallback;
     private Handler mHandler;
     private int mSwipeDirection;
-    private int mSwipeDirectionDetail;
     private VelocityTracker mVelocityTracker;
 
-    private boolean mTriggerEnabled = false;
-    private int mTriggerDirection;
-    private boolean mTriggerChild;
-
     private float mInitialTouchPos;
     private float mPerpendicularInitialTouchPos;
     private boolean mDragging;
@@ -145,14 +136,6 @@ public class SwipeHelper implements Gefingerpoken {
         mPagingTouchSlop = pagingTouchSlop;
     }
 
-    public void setTriggerEnabled(boolean triggerEnabled) {
-        mTriggerEnabled = triggerEnabled;
-    }
-
-    public void setTriggerDirection(int triggerDirection) {
-        mTriggerDirection = triggerDirection;
-    }
-
     private float getPos(MotionEvent ev) {
         return mSwipeDirection == X ? ev.getX() : ev.getY();
     }
@@ -231,11 +214,6 @@ public class SwipeHelper implements Gefingerpoken {
         invalidateGlobalRegion(animView);
     }
 
-    private boolean canChildBeDismissed(View view) {
-        return mCallback.canChildBeDismissed(view) &&
-            !(mTriggerEnabled && mSwipeDirectionDetail == mTriggerDirection);
-    }
-
     // invalidate the view's own bounds all the way up the view hierarchy
     public static void invalidateGlobalRegion(View view) {
         invalidateGlobalRegion(
@@ -420,7 +398,7 @@ public class SwipeHelper implements Gefingerpoken {
 
     public void snapChild(final View view, float velocity) {
         final View animView = mCallback.getChildContentView(view);
-        final boolean canAnimViewBeDismissed = canChildBeDismissed(animView);
+        final boolean canAnimViewBeDismissed = mCallback.canChildBeDismissed(animView);
         ObjectAnimator anim = createTranslationAnimation(animView, 0);
         int duration = SNAP_ANIM_LEN;
         anim.setDuration(duration);
@@ -433,9 +411,6 @@ public class SwipeHelper implements Gefingerpoken {
             public void onAnimationEnd(Animator animator) {
                 updateSwipeProgressFromOffset(animView, canAnimViewBeDismissed);
                 mCallback.onChildSnappedBack(animView);
-                if (mTriggerChild) {
-                    mCallback.onChildTriggered(view);
-                }
             }
         });
         anim.start();
@@ -471,11 +446,6 @@ public class SwipeHelper implements Gefingerpoken {
                     float pos = getPos(ev);
                     float altPos = getPerpendicularPos(ev);
                     float delta = getPos(ev) - mInitialTouchPos;
-
-                    mSwipeDirectionDetail = delta < 0 ?
-                        (mSwipeDirection == X ? LEFT : UP) :
-                        (mSwipeDirection == X ? RIGHT : DOWN);
-
                     float absDelta = Math.abs(delta);
                     if (absDelta >= getFalsingThreshold()) {
                         mTouchAboveFalsingThreshold = true;
@@ -499,7 +469,7 @@ public class SwipeHelper implements Gefingerpoken {
 
                     // don't let items that can't be dismissed be dragged more than
                     // maxScrollDistance
-                    if (CONSTRAIN_SWIPE && !canChildBeDismissed(mCurrView)) {
+                    if (CONSTRAIN_SWIPE && !mCallback.canChildBeDismissed(mCurrView)) {
                         float size = getSize(mCurrAnimView);
                         float maxScrollDistance = 0.15f * size;
                         if (absDelta >= size) {
@@ -510,7 +480,7 @@ public class SwipeHelper implements Gefingerpoken {
                     }
                     setTranslation(mCurrAnimView, delta);
 
-                    updateSwipeProgressFromOffset(mCurrAnimView, canChildBeDismissed(mCurrView));
+                    updateSwipeProgressFromOffset(mCurrAnimView, mCanCurrViewBeDimissed);
                 }
                 break;
             case MotionEvent.ACTION_UP:
@@ -531,14 +501,10 @@ public class SwipeHelper implements Gefingerpoken {
                     boolean falsingDetected = mCallback.isAntiFalsingNeeded()
                             && !mTouchAboveFalsingThreshold;
 
-                    boolean dismissChild = canChildBeDismissed(mCurrView)
+                    boolean dismissChild = mCallback.canChildBeDismissed(mCurrView)
                             && !falsingDetected && (childSwipedFastEnough || childSwipedFarEnough)
                             && ev.getActionMasked() == MotionEvent.ACTION_UP;
 
-                    mTriggerChild = mTriggerEnabled &&
-                        mSwipeDirectionDetail == mTriggerDirection &&
-                        (childSwipedFastEnough || childSwipedFarEnough);
-
                     if (dismissChild) {
                         // flingadingy
                         dismissChild(mCurrView, childSwipedFastEnough ? velocity : 0f);
@@ -575,8 +541,6 @@ public class SwipeHelper implements Gefingerpoken {
 
         void onChildDismissed(View v);
 
-        void onChildTriggered(View v);
-
         void onDragCancelled(View v);
 
         void onChildSnappedBack(View animView);
diff --git a/packages/SystemUI/src/com/android/systemui/ViewInvertHelper.java b/packages/SystemUI/src/com/android/systemui/ViewInvertHelper.java
index 8a318e1..eddf2b1 100644
--- a/packages/SystemUI/src/com/android/systemui/ViewInvertHelper.java
+++ b/packages/SystemUI/src/com/android/systemui/ViewInvertHelper.java
@@ -22,8 +22,6 @@ import android.animation.ValueAnimator;
 import android.graphics.ColorMatrix;
 import android.graphics.ColorMatrixColorFilter;
 import android.graphics.Paint;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.view.View;
 import android.view.animation.AnimationUtils;
 import android.view.animation.Interpolator;
@@ -73,7 +71,7 @@ public class ViewInvertHelper {
     }
 
     public void update(boolean invert) {
-        if (invert && isInvertEnabled()) {
+        if (invert) {
             updateInvertPaint(1f);
             mTarget.setLayerType(View.LAYER_TYPE_HARDWARE, mDarkPaint);
         } else {
@@ -98,9 +96,4 @@ public class ViewInvertHelper {
         mMatrix.preConcat(mGrayscaleMatrix);
         mDarkPaint.setColorFilter(new ColorMatrixColorFilter(mMatrix));
     }
-
-    private boolean isInvertEnabled() {
-        return Settings.Secure.getIntForUser(mTarget.getContext().getContentResolver(),
-                Settings.Secure.DOZE_NOTIFICATION_INVERT_ENABLED, 1, UserHandle.USER_CURRENT) == 1;
-    }
-}
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/doze/DozeService.java b/packages/SystemUI/src/com/android/systemui/doze/DozeService.java
index e2b805c..f223400 100644
--- a/packages/SystemUI/src/com/android/systemui/doze/DozeService.java
+++ b/packages/SystemUI/src/com/android/systemui/doze/DozeService.java
@@ -20,12 +20,10 @@ import android.app.AlarmManager;
 import android.app.PendingIntent;
 import android.app.UiModeManager;
 import android.content.BroadcastReceiver;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.res.Configuration;
-import android.database.ContentObserver;
 import android.hardware.Sensor;
 import android.hardware.SensorEvent;
 import android.hardware.SensorEventListener;
@@ -36,14 +34,11 @@ import android.media.AudioAttributes;
 import android.os.Handler;
 import android.os.PowerManager;
 import android.os.SystemClock;
-import android.os.UserHandle;
 import android.os.Vibrator;
-import android.provider.Settings;
 import android.service.dreams.DreamService;
 import android.util.Log;
 import android.view.Display;
 
-import com.android.systemui.R;
 import com.android.systemui.SystemUIApplication;
 import com.android.systemui.statusbar.phone.DozeParameters;
 import com.android.systemui.statusbar.phone.DozeParameters.PulseSchedule;
@@ -97,13 +92,6 @@ public class DozeService extends DreamService {
     private long mEarliestPulseDueToLight;
     private int mScheduleResetsRemaining;
 
-    private boolean mDozeTriggerPickup;
-    private boolean mDozeTriggerSigmotion;
-    private boolean mDozeTriggerNotification;
-    private boolean mDozeSchedule;
-
-    private PulseSchedule mSchedule = null;
-
     public DozeService() {
         if (DEBUG) Log.d(mTag, "new DozeService()");
         setDebug(DEBUG);
@@ -185,10 +173,6 @@ public class DozeService extends DreamService {
             return;
         }
 
-        // Settings observer
-        SettingsObserver observer = new SettingsObserver(mHandler);
-        observer.observe();
-
         mDreaming = true;
         rescheduleNotificationPulse(false /*predicate*/);  // cancel any pending pulse alarms
         mEarliestPulseDueToLight = System.currentTimeMillis() + EARLIEST_LIGHT_PULSE_AFTER_START_MS;
@@ -319,16 +303,10 @@ public class DozeService extends DreamService {
 
     private void listenForPulseSignals(boolean listen) {
         if (DEBUG) Log.d(mTag, "listenForPulseSignals: " + listen);
-        if (mDozeTriggerPickup) {
-            mPickupSensor.setListening(listen);
-        }
-        if (mDozeTriggerSigmotion) {
-            mSigMotionSensor.setListening(listen);
-        }
+        mSigMotionSensor.setListening(listen);
+        mPickupSensor.setListening(listen);
         listenForBroadcasts(listen);
-        if (mDozeTriggerNotification) {
-            listenForNotifications(listen);
-        }
+        listenForNotifications(listen);
     }
 
     private void listenForBroadcasts(boolean listen) {
@@ -415,12 +393,13 @@ public class DozeService extends DreamService {
             if (DEBUG) Log.d(mTag, "  don't reschedule: predicate is false");
             return;
         }
-        if (mSchedule == null) {
-            if (DEBUG) Log.d(mTag, "  don't reschedule: mSchedule is null");
+        final PulseSchedule schedule = mDozeParameters.getPulseSchedule();
+        if (schedule == null) {
+            if (DEBUG) Log.d(mTag, "  don't reschedule: schedule is null");
             return;
         }
         final long now = System.currentTimeMillis();
-        final long time = mSchedule.getNextTime(now, mNotificationPulseTime);
+        final long time = schedule.getNextTime(now, mNotificationPulseTime);
         if (time <= 0) {
             if (DEBUG) Log.d(mTag, "  don't reschedule: time is " + time);
             return;
@@ -504,70 +483,6 @@ public class DozeService extends DreamService {
         }
     };
 
-    /**
-     * Settingsobserver to take care of the user settings.
-     */
-    private class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOZE_TRIGGER_PICKUP),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOZE_TRIGGER_SIGMOTION),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOZE_TRIGGER_NOTIFICATION),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOZE_SCHEDULE),
-                    false, this, UserHandle.USER_ALL);
-            update();
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            super.onChange(selfChange);
-            update();
-        }
-
-        public void update() {
-            ContentResolver resolver = mContext.getContentResolver();
-
-            // Get preferences
-            mDozeTriggerPickup = (Settings.System.getIntForUser(resolver,
-                    Settings.System.DOZE_TRIGGER_PICKUP,
-                    mContext.getResources().getBoolean(
-                    R.bool.doze_pulse_on_pick_up) ? 1 : 0,
-                    UserHandle.USER_CURRENT) == 1);
-            mDozeTriggerSigmotion = (Settings.System.getIntForUser(resolver,
-                    Settings.System.DOZE_TRIGGER_SIGMOTION,
-                    mContext.getResources().getBoolean(
-                    R.bool.doze_pulse_on_significant_motion) ? 1 : 0,
-                    UserHandle.USER_CURRENT) == 1);
-            mDozeTriggerNotification = (Settings.System.getIntForUser(resolver,
-                    Settings.System.DOZE_TRIGGER_NOTIFICATION, 1,
-                    UserHandle.USER_CURRENT) == 1);
-            mDozeSchedule = (Settings.System.getIntForUser(resolver,
-                    Settings.System.DOZE_SCHEDULE, 1,
-                    UserHandle.USER_CURRENT) == 1);
-
-            updateDozeSchedule();
-        }
-
-        private void updateDozeSchedule() {
-            if (mDozeSchedule) {
-                mSchedule = mDozeParameters.getPulseSchedule();
-            } else {
-                mSchedule = mDozeParameters.getAlternatePulseSchedule();
-            }
-        }
-    }
-
     private class TriggerSensor extends TriggerEventListener {
         private final Sensor mSensor;
         private final boolean mConfigured;
diff --git a/packages/SystemUI/src/com/android/systemui/egg/CMLand.java b/packages/SystemUI/src/com/android/systemui/egg/CMLand.java
new file mode 100644
index 0000000..6020b45
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/egg/CMLand.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright (C) 2014-2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.egg;
+
+import com.android.systemui.R;
+
+import android.content.Context;
+import android.util.AttributeSet;
+
+public class CMLand extends MLand {
+    public static final String TAG = "CMLand";
+
+    public CMLand(Context context) {
+        this(context, null);
+    }
+
+    public CMLand(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public CMLand(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
+
+    @Override
+    protected int getEggPlayer() {
+        return R.drawable.cid;
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/egg/MLand.java b/packages/SystemUI/src/com/android/systemui/egg/MLand.java
index b84777b..1b22e04 100644
--- a/packages/SystemUI/src/com/android/systemui/egg/MLand.java
+++ b/packages/SystemUI/src/com/android/systemui/egg/MLand.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 The Android Open Source Project
+ * Copyright (C) 2014-2015 The CyanogenMod Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -210,6 +211,8 @@ public class MLand extends FrameLayout {
         // we assume everything will be laid out left|top
         setLayoutDirection(LAYOUT_DIRECTION_LTR);
 
+        Player.eggPlayer = getEggPlayer();
+
         setupPlayers(DEFAULT_PLAYERS);
 
         MetricsLogger.count(getContext(), "egg_mland_create", 1);
@@ -1007,7 +1010,7 @@ public class MLand extends FrameLayout {
         public void step(long t_ms, long dt_ms, float t, float dt);
     }
 
-    private static class Player extends ImageView implements GameView {
+    protected static class Player extends ImageView implements GameView {
         public float dv;
         public int color;
         private MLand mLand;
@@ -1017,6 +1020,8 @@ public class MLand extends FrameLayout {
         private int mScore;
         private TextView mScoreField;
 
+        protected static int eggPlayer;
+
         private final int[] sColors = new int[] {
                 //0xFF78C557,
                 0xFFDB4437,
@@ -1088,7 +1093,7 @@ public class MLand extends FrameLayout {
         public Player(Context context) {
             super(context);
 
-            setBackgroundResource(R.drawable.android);
+            setBackgroundResource(eggPlayer);
             getBackground().setTintMode(PorterDuff.Mode.SRC_ATOP);
             color = sColors[(sNextColor++%sColors.length)];
             getBackground().setTint(color);
@@ -1438,4 +1443,8 @@ public class MLand extends FrameLayout {
             v = z = 0;
         }
     }
+
+    protected int getEggPlayer() {
+        return R.drawable.android;
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/egg/MLandActivity.java b/packages/SystemUI/src/com/android/systemui/egg/MLandActivity.java
index cdda45f..6fd7387 100644
--- a/packages/SystemUI/src/com/android/systemui/egg/MLandActivity.java
+++ b/packages/SystemUI/src/com/android/systemui/egg/MLandActivity.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2015 The Android Open Source Project
+ * Copyright (C) 2014-2015 The CyanogenMod Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -29,7 +30,14 @@ public class MLandActivity extends Activity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.mland);
+        final boolean isCM = getIntent().getBooleanExtra("is_cm", false);
+        if (isCM) {
+            setContentView(R.layout.cmland);
+            mLand = (CMLand) findViewById(R.id.world);
+        } else {
+            setContentView(R.layout.mland);
+            mLand = (MLand) findViewById(R.id.world);
+        }
         mLand = (MLand) findViewById(R.id.world);
         mLand.setScoreFieldHolder((ViewGroup) findViewById(R.id.scores));
         final View welcome = findViewById(R.id.welcome);
diff --git a/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardService.java b/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardService.java
index 9c5bb89..a6ca6a0 100644
--- a/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardService.java
+++ b/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardService.java
@@ -18,7 +18,6 @@ package com.android.systemui.keyguard;
 
 import android.app.Service;
 import android.content.Intent;
-import android.graphics.Bitmap;
 import android.os.Binder;
 import android.os.Bundle;
 import android.os.Debug;
@@ -192,11 +191,6 @@ public class KeyguardService extends Service {
             checkPermission();
             mKeyguardViewMediator.onActivityDrawn();
         }
-
-        @Override
-        public void setBackgroundBitmap(Bitmap bmp) {
-            mKeyguardViewMediator.setBackgroundBitmap(bmp);
-        }
     };
 }
 
diff --git a/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardViewMediator.java b/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardViewMediator.java
index ac55532..7d09c91 100755
--- a/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardViewMediator.java
+++ b/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardViewMediator.java
@@ -32,7 +32,6 @@ import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.SharedPreferences;
 import android.content.pm.UserInfo;
-import android.graphics.Bitmap;
 import android.database.ContentObserver;
 import android.media.AudioManager;
 import android.media.SoundPool;
@@ -700,9 +699,14 @@ public class KeyguardViewMediator extends SystemUI {
                         CMSettings.Secure.LOCKSCREEN_INTERNALLY_ENABLED,
                         getPersistedDefaultOldSetting() ? 1 : 0,
                         UserHandle.USER_CURRENT) == 0;
-                if (newDisabledState != mInternallyDisabled && mKeyguardBound) {
-                    // it was updated,
-                    setKeyguardEnabledInternal(!newDisabledState);
+
+                synchronized (KeyguardViewMediator.this) {
+                    if (mKeyguardBound) {
+                        if (newDisabledState != mInternallyDisabled) {
+                            // it was updated,
+                            setKeyguardEnabledInternal(!newDisabledState);
+                        }
+                    }
                 }
             }
         };
@@ -1977,8 +1981,4 @@ public class KeyguardViewMediator extends SystemUI {
             }
         }
     }
-
-    public void setBackgroundBitmap(Bitmap bmp) {
-        mStatusBarKeyguardViewManager.setBackgroundBitmap(bmp);
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java b/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java
index dd66563..a12a3f1 100644
--- a/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java
+++ b/packages/SystemUI/src/com/android/systemui/power/PowerNotificationWarnings.java
@@ -137,12 +137,10 @@ public class PowerNotificationWarnings implements PowerUI.WarningsUI {
         if (mInvalidCharger) {
             showInvalidChargerNotification();
             mShowing = SHOWING_INVALID_CHARGER;
-        } else if (mWarning && (Settings.System.getIntForUser(mContext.getContentResolver(),
-        	   Settings.System.BATTERY_LOW_NOTIFICATION, 1, UserHandle.USER_CURRENT) == 1)) {
+        } else if (mWarning) {
             showWarningNotification();
             mShowing = SHOWING_WARNING;
-        } else if (mSaver && (Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.BATTERY_SAVER_NOTIFICATION, 1, UserHandle.USER_CURRENT) == 1)) {
+        } else if (mSaver) {
             showSaverNotification();
             mShowing = SHOWING_SAVER;
         } else {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSBooleanSettingRow.java b/packages/SystemUI/src/com/android/systemui/qs/QSBooleanSettingRow.java
new file mode 100644
index 0000000..50845da
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSBooleanSettingRow.java
@@ -0,0 +1,178 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.systemui.qs;
+
+import android.annotation.Nullable;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.provider.Settings;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.View;
+import android.widget.CompoundButton;
+import android.widget.LinearLayout;
+import android.widget.Switch;
+import android.widget.TextView;
+
+import com.android.systemui.R;
+import cyanogenmod.providers.CMSettings;
+
+public class QSBooleanSettingRow extends LinearLayout implements View.OnClickListener {
+
+    private static final String TAG = "QSSettingRow";
+
+    public static final int TABLE_SYSTEM = 0;
+    public static final int TABLE_GLOBAL = 1;
+    public static final int TABLE_SECURE = 2;
+
+    public static final int TABLE_CM_SYSTEM = 3;
+    public static final int TABLE_CM_GLOBAL = 4;
+    public static final int TABLE_CM_SECURE = 5;
+
+    int mWhichTable;
+    String mTitle;
+    String mKey;
+    private TextView mText;
+    private Switch mSwitch;
+    private int mDefaultValue;
+    private CompoundButton.OnCheckedChangeListener mOnCheckedChangeListener;
+
+    public QSBooleanSettingRow(Context context) {
+        this(context, null);
+    }
+
+    public QSBooleanSettingRow(Context context, @Nullable AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public QSBooleanSettingRow(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
+        this(context, attrs, defStyleAttr, 0);
+    }
+
+    public QSBooleanSettingRow(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+        View.inflate(context, R.layout.qs_settings_row, this);
+
+        setOrientation(HORIZONTAL);
+        setClickable(true);
+        setOnClickListener(this);
+
+        mText = (TextView) findViewById(R.id.title);
+        mSwitch = (Switch) findViewById(R.id.switcher);
+
+        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.QuickSettingsRow,
+                defStyleAttr, defStyleRes);
+
+        mWhichTable = a.getInteger(R.styleable.QuickSettingsRow_table, -1);
+
+        mTitle = a.getString(R.styleable.QuickSettingsRow_android_title);
+        mKey = a.getString(R.styleable.QuickSettingsRow_android_key);
+        mDefaultValue = a.getInt(R.styleable.QuickSettingsRow_defaultValue, 0);
+
+        if (mText != null) {
+            mText.setText(mTitle);
+            mText.setClickable(false);
+            mText.setFocusable(false);
+        }
+
+        if (mSwitch != null) {
+            mSwitch.setClickable(false);
+            mSwitch.setFocusable(false);
+            mSwitch.setChecked(getCurrent());
+            mSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+                @Override
+                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                    if (false) Log.d(TAG, "onCheckedChanged() called with "
+                            + "buttonView = [" + buttonView + "], isChecked = [" + isChecked
+                            + "] and table: " + mWhichTable + ", and key: " + mKey);
+                    applyChange(isChecked);
+                    if (mOnCheckedChangeListener != null) {
+                        mOnCheckedChangeListener.onCheckedChanged(buttonView, isChecked);
+                    }
+                }
+            });
+        }
+
+        a.recycle();
+    }
+
+    public void setChecked(boolean checked) {
+        if (mSwitch.isChecked() == checked) {
+            return;
+        }
+        mSwitch.setChecked(checked);
+    }
+
+    private void applyChange(boolean value) {
+        ContentResolver cr = getContext().getContentResolver();
+        switch (mWhichTable) {
+            case TABLE_GLOBAL:
+                Settings.Global.putInt(cr, mKey, value ? 1 : 0);
+                break;
+            case TABLE_SECURE:
+                Settings.Secure.putInt(cr, mKey, value ? 1 : 0);
+                break;
+            case TABLE_SYSTEM:
+                Settings.System.putInt(cr, mKey, value ? 1 : 0);
+                break;
+            case TABLE_CM_GLOBAL:
+                CMSettings.Global.putInt(cr, mKey, value ? 1 : 0);
+                break;
+            case TABLE_CM_SECURE:
+                CMSettings.Secure.putInt(cr, mKey, value ? 1 : 0);
+                break;
+            case TABLE_CM_SYSTEM:
+                CMSettings.System.putInt(cr, mKey, value ? 1 : 0);
+                break;
+        }
+    }
+
+    private boolean getCurrent() {
+        ContentResolver cr = getContext().getContentResolver();
+        int ret = 0;
+        switch (mWhichTable) {
+            case TABLE_GLOBAL:
+                ret = Settings.Global.getInt(cr, mKey, mDefaultValue);
+                break;
+            case TABLE_SECURE:
+                ret = Settings.Secure.getInt(cr, mKey, mDefaultValue);
+                break;
+            case TABLE_SYSTEM:
+                ret = Settings.System.getInt(cr, mKey, mDefaultValue);
+                break;
+            case TABLE_CM_GLOBAL:
+                ret = CMSettings.Global.getInt(cr, mKey, mDefaultValue);
+                break;
+            case TABLE_CM_SECURE:
+                ret = CMSettings.Secure.getInt(cr, mKey, mDefaultValue);
+                break;
+            case TABLE_CM_SYSTEM:
+                ret = CMSettings.System.getInt(cr, mKey, mDefaultValue);
+                break;
+        }
+        return ret == 1;
+    }
+
+    @Override
+    public void onClick(View v) {
+        mSwitch.setChecked(!mSwitch.isChecked());
+    }
+
+    public void setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener l) {
+        mOnCheckedChangeListener = l;
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSContainer.java b/packages/SystemUI/src/com/android/systemui/qs/QSContainer.java
index cfe8d07..74f4cbb 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSContainer.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSContainer.java
@@ -63,7 +63,7 @@ public class QSContainer extends FrameLayout {
      */
     public int getDesiredHeight() {
         if (mQSPanel.isClosingDetail()) {
-            return mQSPanel.getGridHeight() + getPaddingTop() + getPaddingBottom();
+            return mQSPanel.getGridHeight() + getPaddingBottom();
         } else {
             return getMeasuredHeight();
         }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSDetailClipper.java b/packages/SystemUI/src/com/android/systemui/qs/QSDetailClipper.java
index a318efc..8b89a65 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSDetailClipper.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSDetailClipper.java
@@ -36,6 +36,10 @@ public class QSDetailClipper {
         mBackground = (TransitionDrawable) detail.getBackground();
     }
 
+    public boolean isAnimating() {
+        return mAnimator != null && mAnimator.isRunning();
+    }
+
     public void animateCircularClip(int x, int y, boolean in, AnimatorListener listener) {
         if (mAnimator != null) {
             mAnimator.cancel();
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSDetailItems.java b/packages/SystemUI/src/com/android/systemui/qs/QSDetailItems.java
index 4eee7c5..25b9105 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSDetailItems.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSDetailItems.java
@@ -17,10 +17,8 @@
 package com.android.systemui.qs;
 
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.Configuration;
 import android.graphics.drawable.Drawable;
-import android.graphics.PorterDuff.Mode;
 import android.os.Handler;
 import android.os.Looper;
 import android.os.Message;
@@ -38,8 +36,6 @@ import android.widget.TextView;
 import com.android.systemui.FontSizeUtils;
 import com.android.systemui.R;
 
-import android.provider.Settings;
-
 /**
  * Quick settings common detail view with line items.
  */
@@ -59,11 +55,6 @@ public class QSDetailItems extends FrameLayout {
     private TextView mEmptyText;
     private ImageView mEmptyIcon;
     private int mMaxItems;
-    private int mQsColorSwitch ;
-    private int mLabelColor;
-    private int mQsIconColor;
-    private int mTextColor;
-    private int mEmptyTextColor;
 
     public QSDetailItems(Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -117,27 +108,7 @@ public class QSDetailItems extends FrameLayout {
     public void setEmptyState(int icon, int text) {
         mEmptyIcon.setImageResource(icon);
         mEmptyText.setText(text);
-	mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-        if (mQsColorSwitch != 0) {
-	    mEmptyText.setTextColor(mEmptyTextColor);
-	    if (mQsColorSwitch ==1 ||mQsColorSwitch == 2 ) 
-            mEmptyIcon.setColorFilter(mQsIconColor, Mode.MULTIPLY);
-       	 } 
     }
-    
-    
-   public void updatecolors() {
-	final ContentResolver resolver = mContext.getContentResolver();
-        mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-            mLabelColor = Settings.System.getInt(resolver,
-                    Settings.System.QS_TEXT_COLOR, 0xffffffff);
-            mEmptyTextColor = (153 << 24) | (mLabelColor & 0x00ffffff); 
-            mQsIconColor = Settings.System.getInt(resolver,
-                    Settings.System.QS_ICON_COLOR, 0xffffffff);
-	}
-
 
     /**
      * Set the minimum height of this detail view, in item count.
@@ -209,10 +180,6 @@ public class QSDetailItems extends FrameLayout {
         view.setVisibility(mItemsVisible ? VISIBLE : INVISIBLE);
         final ImageView iv = (ImageView) view.findViewById(android.R.id.icon);
         iv.setImageResource(item.icon);
-        updatecolors();
-         if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-            iv.setColorFilter(mQsIconColor, Mode.SRC_ATOP);
-        }
         iv.getOverlay().clear();
         if (item.overlay != null) {
             item.overlay.setBounds(0, 0, item.overlay.getIntrinsicWidth(),
@@ -221,10 +188,6 @@ public class QSDetailItems extends FrameLayout {
         }
         final TextView title = (TextView) view.findViewById(android.R.id.title);
         title.setText(item.line1);
-        updatecolors();
-	 if (mQsColorSwitch != 0) {
- 	title.setTextColor(mLabelColor);
-	}
         final TextView summary = (TextView) view.findViewById(android.R.id.summary);
         final boolean twoLines = !TextUtils.isEmpty(item.line2);
         title.setMaxLines(twoLines ? 1 : 2);
@@ -240,9 +203,6 @@ public class QSDetailItems extends FrameLayout {
         });
         final ImageView disconnect = (ImageView) view.findViewById(android.R.id.icon2);
         disconnect.setVisibility(item.canDisconnect ? VISIBLE : GONE);
-          if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-            disconnect.setColorFilter(mQsIconColor, Mode.SRC_ATOP);
-        }
         disconnect.setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View v) {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSDetailItemsList.java b/packages/SystemUI/src/com/android/systemui/qs/QSDetailItemsList.java
index 9fe2e4c..3e0ab8b 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSDetailItemsList.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSDetailItemsList.java
@@ -17,13 +17,17 @@
 package com.android.systemui.qs;
 
 import android.content.Context;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
 import android.text.TextUtils;
 import android.util.AttributeSet;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
+import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.ListAdapter;
@@ -32,12 +36,14 @@ import android.widget.ListView;
 import android.widget.TextView;
 import com.android.systemui.R;
 
+import cyanogenmod.app.CustomTile;
+
 import java.util.List;
 
 /**
  * Quick settings common detail list view with line items.
  */
-public class QSDetailItemsList extends LinearLayout {
+public class QSDetailItemsList extends FrameLayout {
     private static final String TAG = "QSDetailItemsList";
 
     private ListView mListView;
@@ -93,19 +99,72 @@ public class QSDetailItemsList extends LinearLayout {
         mListView.setEmptyView(mEmpty);
     }
 
+    public static class QSCustomDetailListAdapter extends ArrayAdapter<CustomTile.ExpandedItem> {
+        private String mPackage;
+
+        public QSCustomDetailListAdapter(String externalPackage, Context context,
+                List<CustomTile.ExpandedItem> objects) {
+            super(context, R.layout.qs_detail_item, objects);
+            mPackage = externalPackage;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            LayoutInflater inflater = LayoutInflater.from(getContext());
+            LinearLayout view = (LinearLayout) inflater.inflate(
+                    R.layout.qs_detail_item, parent, false);
+
+            final CustomTile.ExpandedItem item = getItem(position);
+            Drawable d = null;
+            if (item.itemDrawableResourceId != 0 && item.itemBitmapResource == null) {
+                try {
+                    d = getPackageContext(mPackage, getContext()).getResources()
+                            .getDrawable(item.itemDrawableResourceId);
+                } catch (Throwable t) {
+                    Log.w(TAG, "Error creating package context" + mPackage +
+                            " id=" + item.itemDrawableResourceId, t);
+                }
+            } else {
+                d = new BitmapDrawable(getContext().getResources(), item.itemBitmapResource);
+            }
+            final ImageView iv = (ImageView) view.findViewById(android.R.id.icon);
+            iv.setImageDrawable(d);
+            iv.getOverlay().clear();
+            //TODO: hide icon for the time being until the API supports granular item manipulation
+            final ImageView iv2 = (ImageView) view.findViewById(android.R.id.icon2);
+            iv2.setVisibility(View.GONE);
+            final TextView title = (TextView) view.findViewById(android.R.id.title);
+            title.setText(item.itemTitle);
+            final TextView summary = (TextView) view.findViewById(android.R.id.summary);
+            final boolean twoLines = !TextUtils.isEmpty(item.itemSummary);
+            title.setMaxLines(twoLines ? 1 : 2);
+            summary.setVisibility(twoLines ? VISIBLE : GONE);
+            summary.setText(twoLines ? item.itemSummary : null);
+            view.setMinimumHeight(getContext().getResources().getDimensionPixelSize(
+                    twoLines ? R.dimen.qs_detail_item_height_twoline
+                            : R.dimen.qs_detail_item_height));
+            return view;
+        }
+    }
+
+    private static Context getPackageContext(String pkg, Context context) {
+        Context packageContext;
+        try {
+            packageContext = context.createPackageContext(pkg, 0);
+        } catch (Throwable t) {
+            Log.w(TAG, "Error creating package context" + pkg, t);
+            return null;
+        }
+        return packageContext;
+    }
+
     public static class QSDetailListAdapter extends ArrayAdapter<QSDetailItems.Item> {
         private QSDetailItems.Callback mCallback;
 
-        private boolean biggerHeight = true;
-
         public QSDetailListAdapter(Context context, List<QSDetailItems.Item> objects) {
             super(context, R.layout.qs_detail_item, objects);
         }
 
-        public void setBiggerHeight(boolean bool) {
-            biggerHeight = bool;
-        }
-
         public void setCallback(QSDetailItems.Callback cb) {
             mCallback = cb;
         }
@@ -136,7 +195,7 @@ public class QSDetailItemsList extends LinearLayout {
             summary.setVisibility(twoLines ? VISIBLE : GONE);
             summary.setText(twoLines ? item.line2 : null);
             view.setMinimumHeight(getContext().getResources().getDimensionPixelSize(
-                    twoLines && biggerHeight ? R.dimen.qs_detail_item_height_twoline : R.dimen.qs_detail_item_height));
+                    twoLines ? R.dimen.qs_detail_item_height_twoline : R.dimen.qs_detail_item_height));
 
             final ImageView disconnect = (ImageView) view.findViewById(android.R.id.icon2);
             disconnect.setVisibility(item.canDisconnect ? VISIBLE : GONE);
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSDragPanel.java b/packages/SystemUI/src/com/android/systemui/qs/QSDragPanel.java
new file mode 100644
index 0000000..13f552c
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSDragPanel.java
@@ -0,0 +1,2331 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs;
+
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.app.ActivityManager;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.res.Configuration;
+import android.content.res.Resources;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Point;
+import android.graphics.PointF;
+import android.graphics.PorterDuff;
+import android.graphics.drawable.ColorDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Handler;
+import android.os.UserHandle;
+import android.support.v4.view.PagerAdapter;
+import android.support.v4.view.ViewPager;
+import android.util.ArrayMap;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.DragEvent;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseExpandableListAdapter;
+import android.widget.ExpandableListView;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+import com.android.internal.logging.MetricsLogger;
+import com.android.systemui.FontSizeUtils;
+import com.android.systemui.R;
+import com.android.systemui.cm.UserContentObserver;
+import com.android.systemui.qs.tiles.CustomQSTile;
+import com.android.systemui.qs.tiles.EditTile;
+import com.android.systemui.settings.BrightnessController;
+import com.android.systemui.settings.ToggleSlider;
+import com.android.systemui.statusbar.phone.NotificationPanelView;
+import com.android.systemui.statusbar.phone.QSTileHost;
+import com.android.systemui.statusbar.policy.BrightnessMirrorController;
+import com.android.systemui.tuner.QsTuner;
+import com.viewpagerindicator.CirclePageIndicator;
+import cyanogenmod.app.StatusBarPanelCustomTile;
+import cyanogenmod.providers.CMSettings;
+import org.cyanogenmod.internal.logging.CMMetricsLogger;
+import org.cyanogenmod.internal.util.QSUtils;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.List;
+import java.util.ListIterator;
+import java.util.Map;
+
+import static android.content.res.Configuration.ORIENTATION_LANDSCAPE;
+
+public class QSDragPanel extends QSPanel implements View.OnDragListener, View.OnLongClickListener {
+
+    private static final String TAG = "QSDragPanel";
+
+    public static final boolean DEBUG_TILES = false;
+    public static final boolean DEBUG_DRAG = false;
+
+    private static final int MAX_ROW_COUNT = 3;
+
+    // how long to wait before resetting the page
+    private static final int PAGE_RESET_DELAY = 10000;
+
+    protected final ArrayList<QSPage> mPages = new ArrayList<>();
+
+    private NotificationPanelView mPanelView;
+    protected QSViewPager mViewPager;
+    protected PagerAdapter mPagerAdapter;
+    QSPanelTopView mQsPanelTop;
+    CirclePageIndicator mPageIndicator;
+    private int mPageIndicatorHeight;
+
+    private TextView mDetailRemoveButton;
+    private DragTileRecord mDraggingRecord, mLastDragRecord;
+    private ViewGroup mDetailButtons;
+    private boolean mEditing;
+    private boolean mDragging;
+    private float mLastTouchLocationX, mLastTouchLocationY;
+    private int mLocationHits;
+    private int mLastLeftShift = -1;
+    private int mLastRightShift = -1;
+    private boolean mRestored;
+    private boolean mRestoring;
+    // whether the current view we are dragging in has shifted tiles
+    private boolean mMovedByLocation = false;
+
+    protected boolean mFirstRowLarge = true;
+    private SettingsObserver mSettingsObserver;
+
+    List<TileRecord> mCurrentlyAnimating
+            = Collections.synchronizedList(new ArrayList<TileRecord>());
+
+    private Runnable mResetPage = new Runnable() {
+        @Override
+        public void run() {
+            if (!mExpanded) {
+                // only reset when the user isn't interacting at all
+                mViewPager.setCurrentItem(0);
+                mPagerAdapter.notifyDataSetChanged();
+            }
+        }
+    };
+
+    public QSDragPanel(Context context) {
+        this(context, null);
+    }
+
+    public QSDragPanel(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    @Override
+    protected void setupViews() {
+        updateResources();
+
+        mDetail = LayoutInflater.from(mContext).inflate(R.layout.qs_detail, this, false);
+        mDetailButtons = (ViewGroup) mDetail.findViewById(R.id.buttons);
+        mDetailContent = (ViewGroup) mDetail.findViewById(android.R.id.content);
+        mDetailRemoveButton = (TextView) mDetail.findViewById(android.R.id.button3);
+        mDetailSettingsButton = (TextView) mDetail.findViewById(android.R.id.button2);
+        mDetailDoneButton = (TextView) mDetail.findViewById(android.R.id.button1);
+        updateDetailText();
+        mDetail.setVisibility(GONE);
+        mDetail.setClickable(true);
+
+        mQsPanelTop = (QSPanelTopView) LayoutInflater.from(mContext).inflate(R.layout.qs_tile_top,
+                this, false);
+
+        mBrightnessView = mQsPanelTop.getBrightnessView();
+        mFooter = new QSFooter(this, mContext);
+
+        // add target click listener
+        mQsPanelTop.getAddTarget().setOnClickListener(
+                new OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        TilesListAdapter adapter = new TilesListAdapter(mContext, QSDragPanel.this);
+                        showDetailAdapter(true, adapter, v.getLocationOnScreen());
+                        mDetail.bringToFront();
+                    }
+                });
+        mViewPager = new QSViewPager(getContext());
+        mViewPager.setDragPanel(this);
+
+        mPageIndicator = new CirclePageIndicator(getContext());
+        addView(mDetail);
+        addView(mQsPanelTop);
+        addView(mViewPager);
+        addView(mPageIndicator);
+        addView(mFooter.getView());
+
+        mClipper = new QSDetailClipper(mDetail);
+
+        mBrightnessController = new BrightnessController(getContext(),
+                (ImageView) mQsPanelTop.getBrightnessView().findViewById(R.id.brightness_icon),
+                (ToggleSlider) mQsPanelTop.getBrightnessView().findViewById(R.id.brightness_slider));
+
+        mDetailDoneButton.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                announceForAccessibility(
+                        mContext.getString(R.string.accessibility_desc_quick_settings));
+                closeDetail();
+            }
+        });
+
+        mPagerAdapter = new PagerAdapter() {
+            @Override
+            public Object instantiateItem(ViewGroup container, int position) {
+                if (DEBUG_TILES) {
+                    Log.d(TAG, "instantiateItem() called with "
+                            + "container = [" + container + "], position = [" + position + "]");
+                }
+
+                if (mEditing && position == 0) {
+                    QSSettings qss = (QSSettings)
+                            View.inflate(container.getContext(), R.layout.qs_settings, null);
+                    qss.setHost(mHost);
+                    container.addView(qss, 0);
+                    return qss;
+                } else {
+                    final int adjustedPosition = mEditing ? position - 1 : position;
+                    QSPage page = mPages.get(adjustedPosition);
+                    if (!page.isAttachedToWindow()) {
+                        container.addView(page);
+                    }
+                    return page;
+                }
+            }
+
+            @Override
+            public void destroyItem(ViewGroup container, int position, Object object) {
+                if (DEBUG_TILES) {
+                    Log.d(TAG, "destroyItem() called with " + "container = ["
+                            + container + "], position = [" + position + "], object = ["
+                            + object + "]");
+                }
+                if (object instanceof View) {
+                    container.removeView((View) object);
+                }
+            }
+
+            @Override
+            public int getItemPosition(Object object) {
+                if (object instanceof QSPage) {
+                    if (mEditing != ((QSPage) object).getAdapterEditingState()) {
+                        // position of item changes when we set change the editing mode,
+                        // sync it and send the new position
+                        ((QSPage) object).setAdapterEditingState(mEditing);
+
+                        // calculate new position
+                        int indexOf = ((QSPage) object).getPageIndex();
+                        if (mEditing) return indexOf + 1;
+                        else return indexOf;
+
+                    } else if (!mPages.contains(object) && !mDragging) {
+                        // only return none if we aren't dragging (object may be removed from
+                        // the records array temporarily and we might think we have less pages,
+                        // we don't want to prematurely remove this page
+                        return POSITION_NONE;
+                    } else {
+
+                        return POSITION_UNCHANGED;
+                    }
+
+                } else if (object instanceof QSSettings) {
+                    if (((QSSettings) object).getAdapterEditingState() != mEditing) {
+                        ((QSSettings) object).setAdapterEditingState(mEditing);
+                        if (mEditing) return 0 /* locked at position 0 */;
+                        else return POSITION_NONE;
+                    } else {
+                        return POSITION_UNCHANGED;
+                    }
+                }
+                return super.getItemPosition(object);
+            }
+
+            @Override
+            public int getCount() {
+                final int qsPages = Math.max(getCurrentMaxPageCount(), 1);
+
+                if (mPages != null && qsPages > mPages.size()) {
+                    for(int i = mPages.size(); i < qsPages; i++) {
+                        mPages.add(i, new QSPage(mViewPager.getContext(), QSDragPanel.this, i));
+                    }
+                }
+
+                if (mEditing) return qsPages + 1;
+                return qsPages;
+            }
+
+            @Override
+            public boolean isViewFromObject(View view, Object object) {
+                return view == object;
+            }
+        };
+        mViewPager.setAdapter(mPagerAdapter);
+
+        mPageIndicator.setViewPager(mViewPager);
+        mPageIndicator.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
+
+            @Override
+            public void onPageScrolled(int position, float positionOffset,
+                                       int positionOffsetPixels) {
+                if (DEBUG_DRAG) {
+                    Log.i(TAG, "onPageScrolled() called with " + "position = ["
+                            + position + "], positionOffset = [" + positionOffset
+                            + "], positionOffsetPixels = [" + positionOffsetPixels + "]");
+                }
+
+                if (mEditing) {
+                    float targetTranslationX = 0;
+
+                    // targetTranslationX = where it's supposed to be - diff
+                    int homeLocation = mViewPager.getMeasuredWidth();
+
+                    // how far away from homeLocation is the scroll?
+                    if (positionOffsetPixels < homeLocation
+                            && position == 0) {
+                        targetTranslationX = homeLocation - positionOffsetPixels;
+                    }
+                    mQsPanelTop.setTranslationX(targetTranslationX);
+                }
+            }
+
+            @Override
+            public void onPageSelected(int position) {
+                if (mDragging && position != mDraggingRecord.page
+                        && !mViewPager.isFakeDragging() && !mRestoring) {
+                    if (DEBUG_DRAG) {
+                        Log.w(TAG, "moving drag record to page: " + position);
+                    }
+
+                    // remove it from the previous page and add it here
+                    final QSPage sourceP = getPage(mDraggingRecord.page);
+                    final QSPage targetP = getPage(position);
+
+                    sourceP.removeView(mDraggingRecord.tileView);
+                    mDraggingRecord.page = position;
+                    targetP.addView(mDraggingRecord.tileView);
+
+                    // set coords off screen until we're ready to place it
+                    mDraggingRecord.tileView.setX(-mDraggingRecord.tileView.getMeasuredWidth());
+                    mDraggingRecord.tileView.setY(-mDraggingRecord.tileView.getMeasuredHeight());
+                }
+            }
+
+            @Override
+            public void onPageScrollStateChanged(int state) {
+            }
+        });
+        mViewPager.setOverScrollMode(OVER_SCROLL_NEVER);
+
+        setClipChildren(false);
+
+        mSettingsObserver = new SettingsObserver(new Handler());
+
+        mViewPager.setOnDragListener(QSDragPanel.this);
+        mQsPanelTop.setOnDragListener(QSDragPanel.this);
+        mPageIndicator.setOnDragListener(QSDragPanel.this);
+        setOnDragListener(QSDragPanel.this);
+
+        mViewPager.setOverScrollMode(View.OVER_SCROLL_NEVER);
+    }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return mClipper.isAnimating() || mEditing || !mCurrentlyAnimating.isEmpty();
+    }
+
+    @Override
+    public void setBrightnessMirror(BrightnessMirrorController c) {
+        super.onFinishInflate();
+        ToggleSlider brightnessSlider =
+                (ToggleSlider) mQsPanelTop.findViewById(R.id.brightness_slider);
+        ToggleSlider mirror = (ToggleSlider) c.getMirror().findViewById(R.id.brightness_slider);
+        brightnessSlider.setMirror(mirror);
+        brightnessSlider.setMirrorController(c);
+    }
+
+    protected void drawTile(TileRecord r, QSTile.State state) {
+        if (mEditing) {
+            if ((r.tile instanceof CustomQSTile)
+                    && (((CustomQSTile) r.tile).isUserRemoved()
+                    || ((CustomQSTile) r.tile).getTile() == null)) {
+                // don't modify visibility state if removed, or not yet published
+            } else {
+                state.visible = true;
+                state.enabled = true;
+            }
+        }
+        final int visibility = state.visible ? VISIBLE : GONE;
+        setTileVisibility(r.tileView, visibility);
+        setTileEnabled(r.tileView, state.enabled);
+        r.tileView.onStateChanged(state);
+    }
+
+    @Override
+    public void setListening(boolean listening) {
+        if (mListening == listening) return;
+        mListening = listening;
+        for (TileRecord r : mRecords) {
+            r.tile.setListening(mListening);
+        }
+        mFooter.setListening(mListening);
+        mQsPanelTop.setListening(mListening);
+        if (mListening) {
+            refreshAllTiles();
+        }
+        if (mListening) {
+            mSettingsObserver.observe();
+        } else {
+            mSettingsObserver.unobserve();
+        }
+
+        if (isLaidOut() && listening && showBrightnessSlider()) {
+            mBrightnessController.registerCallbacks();
+        } else {
+            mBrightnessController.unregisterCallbacks();
+        }
+    }
+
+    private void persistRecords() {
+        // persist the new config.
+        List<String> newTiles = new ArrayList<>();
+        for (TileRecord record : mRecords) {
+            newTiles.add(mHost.getSpec(record.tile));
+        }
+        mHost.setTiles(newTiles);
+    }
+
+    public void setEditing(boolean editing) {
+        if (mEditing == editing) return;
+        final boolean isOnSettings = isOnSettingsPage();
+
+        mQsPanelTop.setEditing(editing, isOnSettings);
+        if (!editing) {
+            persistRecords();
+
+            refreshAllTiles();
+
+            mQsPanelTop.setTranslationX(0);
+            if (isOnSettings) {
+                mViewPager.setCurrentItem(1, true);
+            }
+        }
+        mEditing = editing;
+        mPagerAdapter.notifyDataSetChanged();
+
+        mPageIndicator.setEditing(editing);
+        mViewPager.setOffscreenPageLimit(mEditing ? getCurrentMaxPageCount() + 1 : 1);
+        mPagerAdapter.notifyDataSetChanged();
+
+        // clear the record state
+        for (TileRecord record : mRecords) {
+            setupRecord(record);
+            drawTile(record, record.tile.getState());
+        }
+
+        requestLayout();
+    }
+
+    protected void onStartDrag() {
+        mQsPanelTop.onStartDrag();
+    }
+
+    protected void onStopDrag() {
+        mDraggingRecord.tileView.setAlpha(1f);
+
+        mLastDragRecord = mDraggingRecord;
+        mDraggingRecord = null;
+        mDragging = false;
+        mRestored = false;
+
+        mLastLeftShift = -1;
+        mLastRightShift = -1;
+
+        mQsPanelTop.onStopDrag();
+    }
+
+    protected View getDropTarget() {
+        return mQsPanelTop.getDropTarget();
+    }
+
+    public View getBrightnessView() {
+        return mQsPanelTop.getBrightnessView();
+    }
+
+    public boolean isEditing() {
+        return mEditing;
+    }
+
+    protected int getPagesForCount(int tileCount) {
+        if (tileCount == 0) {
+            return 1;
+        }
+        tileCount = Math.max(0, tileCount - getTilesPerPage(true));
+        // first page + rest of tiles
+        return 1 + (int) Math.ceil(tileCount / (double) getTilesPerPage(false));
+    }
+
+    protected int getCurrentMaxPageCount() {
+        int initialSize = mRecords.size();
+        return getPagesForCount(initialSize);
+    }
+
+    @Override
+    protected void updateDetailText() {
+        super.updateDetailText();
+        mDetailRemoveButton.setText(R.string.quick_settings_remove);
+    }
+
+    public void setTiles(final Collection<QSTile<?>> tilesCollection) {
+        // we try to be as efficient as possible here because this can happen while the user
+        // is in edit mode, or maybe even while tiles are animating
+        // step 1: stop all animations
+        // step 2: remove tiles no longer to be used, cache ones that are still valid
+        // step 3: remove empty viewpager pages
+        // step 4: generate new tiles, re-add cached ones
+
+        if (DEBUG_TILES) {
+            Log.i(TAG, "setTiles() called with tiles = [" + tilesCollection + "]");
+        }
+        if (mLastDragRecord != null && mRecords.indexOf(mLastDragRecord) == -1) {
+            // the last removed record might be stored in mLastDragRecord if we just shifted
+            // re-add it to the list so we'll clean it up below
+            mRecords.add(mLastDragRecord);
+            mLastDragRecord = null;
+        }
+
+        // step kinda-1
+        if (mDraggingRecord != null) {
+            // dragging record might be animating back, force it to finished position
+            mDraggingRecord.tileView.animate().cancel();
+        }
+
+        int currentViewPagerPage = mViewPager.getCurrentItem();
+        int removedPages = 0;
+
+        Map<QSTile<?>, DragTileRecord> cachedRecords = new ArrayMap<>();
+        ListIterator<TileRecord> iterator = mRecords.listIterator(mRecords.size());
+
+        int recordsRemoved = 0;
+        // cleanup current records
+        while (iterator.hasPrevious()) { // mRecords
+            DragTileRecord dr = (DragTileRecord) iterator.previous();
+
+            // step 1
+            dr.tileView.animate().cancel();
+
+            // step 2
+            if (tilesCollection.contains(dr.tile)) {
+                if (DEBUG_TILES) {
+                    Log.i(TAG, "caching tile: " + dr.tile);
+                }
+                cachedRecords.put(dr.tile, dr);
+            } else {
+                if (dr.page >= 0) {
+                    if (DEBUG_TILES) {
+                        Log.w(TAG, "removed dr.tileView: " + dr.tileView + " from page: "
+                                + dr.page + " (dest page: " + dr.destinationPage + ")");
+                    }
+
+                    removeTileView(dr.tileView);
+                }
+                if (DEBUG_TILES) {
+                    Log.i(TAG, "removing tile: " + dr.tile);
+                }
+
+                // remove record
+                iterator.remove();
+                recordsRemoved++;
+
+                dr.page = -1;
+                dr.destinationPage = -1;
+            }
+        }
+
+        // at this point cachedRecords should have all retained tiles, no new or old tiles
+        int delta = tilesCollection.size() - cachedRecords.size() - recordsRemoved;
+        if (DEBUG_TILES) {
+            Log.i(TAG, "record map delta: " + delta);
+        }
+
+        // step 3
+        final Iterator<QSPage> pageIterator = mPages.iterator();
+        while (pageIterator.hasNext()) {
+            final QSPage page = pageIterator.next();
+            final int viewpagerIndex = page.getPageIndex() + (mEditing ? 1 : 0);
+            final int childCount = page.getChildCount();
+
+            if (DEBUG_TILES) {
+                Log.d(TAG, "page " + viewpagerIndex + " has " + childCount);
+            }
+            if (page.getPageIndex() >= getCurrentMaxPageCount() - 1) {
+                if (DEBUG_TILES) {
+                    Log.d(TAG, "page : " + page + " has " + childCount + " children");
+                }
+                if (childCount == 0) {
+                    removedPages++;
+
+                    page.removeAllViews();
+                    mPagerAdapter.startUpdate(mViewPager);
+                    mPagerAdapter.destroyItem(mViewPager, viewpagerIndex, page);
+                    mPagerAdapter.finishUpdate(mViewPager);
+                    mPagerAdapter.notifyDataSetChanged();
+                }
+            }
+        }
+
+        if (removedPages > 0) {
+            // even though we explicitly destroy old pages, without this call,
+            // the viewpager doesn't seem to want to pick up the fact that we have less pages
+            // and allows "empty" scrolls to the right where there is no page.
+            if (DEBUG_TILES) {
+                Log.d(TAG, "re-setting adapter, page: " + currentViewPagerPage);
+            }
+            mViewPager.setAdapter(mPagerAdapter);
+            mViewPager.setCurrentItem(Math.min(currentViewPagerPage, mPagerAdapter.getCount()),
+                    false);
+            mPagerAdapter.notifyDataSetChanged();
+        }
+
+        // step 4
+        mRecords.ensureCapacity(tilesCollection.size());
+        int runningCount = 0;
+
+        final Iterator<QSTile<?>> newTileIterator = tilesCollection.iterator();
+        while (newTileIterator.hasNext()) {
+            QSTile<?> tile = newTileIterator.next();
+            if (tile instanceof CustomQSTile) {
+                if (((CustomQSTile) tile).isUserRemoved()
+                        || ((CustomQSTile) tile).getTile() == null) {
+                    // tile not published yet
+                    continue;
+                }
+            }
+            final int tileDestPage = getPagesForCount(runningCount + 1) - 1;
+
+            if (DEBUG_TILES) {
+                Log.d(TAG, "tile at : " + runningCount + ": " + tile
+                        + " to dest page: " + tileDestPage);
+            }
+            DragTileRecord record;
+            if (!cachedRecords.containsKey(tile)) {
+                if (DEBUG_TILES) {
+                    Log.d(TAG, "tile at: " + runningCount + " not cached, adding it to records");
+                }
+                record = makeRecord(tile);
+                record.destinationPage = tileDestPage;
+                mRecords.add(runningCount, record);
+                mPagerAdapter.notifyDataSetChanged();
+            } else {
+                record = cachedRecords.get(tile);
+                if (DEBUG_TILES) {
+                    Log.d(TAG, "tile at : " + runningCount + ": cached, restoring: " + record);
+                }
+
+                mPages.get(record.page).removeView(record.tileView);
+
+                record.page = -1;
+                record.destinationPage = tileDestPage;
+
+                mRecords.remove(record);
+                mRecords.add(runningCount, record);
+                mPagerAdapter.notifyDataSetChanged();
+            }
+            if (record.page == -1) {
+                // add the view
+                mPages.get(record.destinationPage).addView(record.tileView);
+                record.page = record.destinationPage;
+                if (DEBUG_TILES) {
+                    Log.d(TAG, "added view " + record);
+                }
+            }
+            runningCount++;
+        }
+
+        if (isShowingDetail()) {
+            mDetail.bringToFront();
+        }
+        mPagerAdapter.notifyDataSetChanged();
+
+        refreshAllTiles();
+        requestLayout();
+    }
+
+    private DragTileRecord makeRecord(final QSTile<?> tile) {
+        if (DEBUG_TILES) {
+            Log.d(TAG, "+++ makeRecord() called with " + "tile = [" + tile + "]");
+        }
+        final DragTileRecord r = new DragTileRecord();
+
+
+        r.tile = tile;
+        r.page = -1;
+        r.destinationPage = -1;
+        r.tileView = tile.createTileView(mContext);
+        final QSTile.Callback callback = new QSTile.Callback() {
+            @Override
+            public void onStateChanged(QSTile.State state) {
+                if (!r.openingDetail) {
+                    drawTile(r, state);
+                }
+            }
+
+            @Override
+            public void onShowDetail(boolean show) {
+                showDetail(show, r);
+            }
+
+            @Override
+            public void onToggleStateChanged(boolean state) {
+                if (mDetailRecord == r) {
+                    fireToggleStateChanged(state);
+                }
+            }
+
+            @Override
+            public void onScanStateChanged(boolean state) {
+                r.scanState = state;
+                if (mDetailRecord == r) {
+                    fireScanStateChanged(r.scanState);
+                }
+            }
+
+            @Override
+            public void onAnnouncementRequested(CharSequence announcement) {
+                announceForAccessibility(announcement);
+            }
+        };
+        r.tile.setCallback(callback);
+        final OnClickListener click = new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (!mEditing || r.tile instanceof EditTile) {
+                    r.tile.click();
+                }
+            }
+        };
+        final OnClickListener clickSecondary = new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (!mEditing) {
+                    r.tile.secondaryClick();
+                }
+            }
+        };
+        final OnLongClickListener longClick = new OnLongClickListener() {
+            @Override
+            public boolean onLongClick(View v) {
+                if (!mEditing) {
+                    r.tile.longClick();
+                } else {
+                    QSDragPanel.this.onLongClick(r.tileView);
+                }
+                return true;
+            }
+        };
+        r.tileView.init(click, clickSecondary, longClick);
+        r.tile.setListening(mListening);
+        r.tile.refreshState();
+        r.tileView.setVisibility(mEditing ? View.VISIBLE : View.GONE);
+        callback.onStateChanged(r.tile.getState());
+
+        if (DEBUG_TILES) {
+            Log.d(TAG, "--- makeRecord() called with " + "tile = [" + tile + "]");
+        }
+        return r;
+    }
+
+    private void removeTileView(QSTileView v) {
+        for (QSPage page : mPages) {
+            page.removeView(v);
+            page.removeTransientView(v);
+        }
+
+    }
+
+    private void removeDraggingRecord() {
+        // what spec is this tile?
+        String spec = mHost.getSpec(mDraggingRecord.tile);
+        if (DEBUG_TILES) {
+            Log.w(TAG, "removing tile: " + mDraggingRecord + " with spec: " + spec);
+        }
+        onStopDrag();
+        mHost.remove(spec);
+    }
+
+    public int getTilesPerPage(boolean firstPage) {
+        if ((!mFirstRowLarge && firstPage) || !firstPage) {
+            return QSTileHost.TILES_PER_PAGE + 1;
+        }
+        return QSTileHost.TILES_PER_PAGE;
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        final int width = MeasureSpec.getSize(widthMeasureSpec);
+
+        mQsPanelTop.measure(exactly(width), MeasureSpec.UNSPECIFIED);
+        mViewPager.measure(exactly(width), MeasureSpec.UNSPECIFIED);
+        mPageIndicator.measure(exactly(width), atMost(mPageIndicatorHeight));
+        mFooter.getView().measure(exactly(width), MeasureSpec.UNSPECIFIED);
+
+        int h = getRowTop(getCurrentMaxRow() + 1) + mPanelPaddingBottom;
+
+        if (mFooter.hasFooter()) {
+            h += mFooter.getView().getMeasuredHeight();
+        }
+        mGridHeight = h;
+
+        mDetail.measure(exactly(width), MeasureSpec.UNSPECIFIED);
+
+        if (mDetail.getMeasuredHeight() < h) {
+            mDetail.measure(exactly(width), exactly(h));
+        }
+        if (isShowingDetail() && !isClosingDetail() && mExpanded) {
+            h = mDetail.getMeasuredHeight();
+        }
+
+        setMeasuredDimension(width, h);
+        for (TileRecord record : mRecords) {
+            setupRecord(record);
+        }
+    }
+
+    private void setupRecord(TileRecord record) {
+        record.tileView.setEditing(mEditing);
+        record.tileView.setOnDragListener(mEditing ? this : null);
+    }
+
+    public static int exactly(int size) {
+        return MeasureSpec.makeMeasureSpec(size, MeasureSpec.EXACTLY);
+    }
+
+    public static int atMost(int size) {
+        return MeasureSpec.makeMeasureSpec(size, MeasureSpec.AT_MOST);
+    }
+
+    @Override
+    protected void handleShowDetailTile(TileRecord r, boolean show) {
+        if (r instanceof DragTileRecord) {
+            if ((mDetailRecord != null) == show && mDetailRecord == r) return;
+
+            if (show) {
+                r.detailAdapter = r.tile.getDetailAdapter();
+                if (r.detailAdapter == null) return;
+            }
+            r.tile.setDetailListening(show);
+            int x = (int) ((DragTileRecord) r).destination.x + r.tileView.getWidth() / 2;
+            int y = mViewPager.getTop()
+                    + (int) ((DragTileRecord) r).destination.y + r.tileView.getHeight() / 2;
+            handleShowDetailImpl(r, show, x, y);
+        } else {
+            super.handleShowDetailTile(r, show);
+        }
+        mPageIndicator.setVisibility(!show ? View.VISIBLE : View.INVISIBLE);
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int l, int t, int r, int b) {
+        final int w = getWidth();
+
+        mQsPanelTop.layout(0, 0, w, mQsPanelTop.getMeasuredHeight());
+
+        int viewPagerBottom = mQsPanelTop.getMeasuredHeight() + mViewPager.getMeasuredHeight();
+        // view pager laid out from top of brightness view to bottom to page through settings
+        mViewPager.layout(0, 0, w, viewPagerBottom);
+
+        mDetail.layout(0, 0, w, mDetail.getMeasuredHeight());
+
+        if (mFooter.hasFooter()) {
+            View footer = mFooter.getView();
+            footer.layout(0, getMeasuredHeight() - footer.getMeasuredHeight(),
+                    footer.getMeasuredWidth(), getMeasuredHeight());
+        }
+
+        if (!isShowingDetail() && !isClosingDetail()) {
+            mQsPanelTop.bringToFront();
+
+        }
+        // layout page indicator inside viewpager inset
+        mPageIndicator.layout(0, b - mPageIndicatorHeight, w, b);
+    }
+
+    protected int getRowTop(int row) {
+        int baseHeight = mQsPanelTop.getMeasuredHeight();
+        if (row <= 0) return baseHeight;
+        return baseHeight + mLargeCellHeight - mDualTileUnderlap + (row - 1) * mCellHeight;
+    }
+
+    public int getColumnCount() {
+        return mColumns;
+    }
+
+    public int getColumnCount(int page, int row, boolean smart) {
+        int cols = 0;
+        for (Record record : mRecords) {
+            if (record instanceof DragTileRecord) {
+                DragTileRecord dr = (DragTileRecord) record;
+                if (dr.tileView.getVisibility() == GONE) continue;
+                if (dr.destinationPage != page) continue;
+                if (dr.row == row) cols++;
+            }
+        }
+
+        if (smart && isEditing() && (isDragging() || mRestoring) && !isDragRecordAttached()) {
+            // if shifting tiles back, and one moved from previous page
+
+            // if it's the very last row on the last page, we should add an extra column to account
+            // for where teh dragging lastRecord would go
+            DragTileRecord lastRecord = (DragTileRecord) mRecords.get(mRecords.size() - 1);
+            if (lastRecord.destinationPage == page && lastRecord.row == row
+                    && cols < getColumnCount()) {
+                cols++;
+                if (DEBUG_DRAG) {
+                    boolean draggingRecordBefore = isBefore(mDraggingRecord, lastRecord);
+                    Log.w(TAG, "adding another col, cols: " + cols + ", last: " + lastRecord
+                            + ", drag: " + mDraggingRecord
+                            + ", and dragging record before last: " + draggingRecordBefore);
+                }
+            }
+        }
+        return cols;
+    }
+
+    public int getColumnCount(int page, int row) {
+        return getColumnCount(page, row, true);
+    }
+
+    public int getCurrentMaxRow() {
+        int max = 0;
+        for (TileRecord record : mRecords) {
+            if (record.row > max) {
+                max = record.row;
+            }
+        }
+        return max;
+    }
+
+    public int getLeft(int page, int row, int col) {
+        final boolean firstRowLarge = mFirstRowLarge && page == 0 && row == 0;
+        int cols = firstRowLarge ? 2 : mColumns;
+        return getLeft(row, col, cols, firstRowLarge);
+    }
+
+    public int getLeft(int page, int row, int col, int cols) {
+        final boolean firstRowLarge = mFirstRowLarge && page == 0 && row == 0;
+        return getLeft(row, col, cols, firstRowLarge);
+    }
+
+    public int getLeft(int row, int col, int cols, boolean firstRowLarge) {
+        final int cw = row == 0 && firstRowLarge ? mLargeCellWidth : mCellWidth;
+        final int extra = (getWidth() - cw * cols) / (cols + 1);
+        int left = col * cw + (col + 1) * extra;
+        return left;
+    }
+
+    public QSPage getCurrentPage() {
+        return mPages.get(mViewPager.getCurrentItem());
+    }
+
+    public QSPage getPage(int pos) {
+        if (pos >= mPages.size()) {
+            return null;
+        }
+        return mPages.get(pos);
+    }
+
+    private TileRecord getRecord(View v) {
+        for (TileRecord record : mRecords) {
+            if (record.tileView == v) {
+                return record;
+            }
+        }
+        return null;
+    }
+
+    @Override
+    public boolean onDrag(View v, DragEvent event) {
+        final DragTileRecord targetTile = (DragTileRecord) getRecord(v);
+        boolean originatingTileEvent = mDraggingRecord != null && v == mDraggingRecord.tileView;
+
+        final int dragRecordIndex = mRecords.indexOf(mDraggingRecord);
+        boolean dragRecordAttached = dragRecordIndex != -1;
+        switch (event.getAction()) {
+            case DragEvent.ACTION_DRAG_STARTED:
+                if (DEBUG_DRAG) {
+                    Log.v(TAG, "ACTION_DRAG_STARTED on view: " + v);
+                }
+
+                if (originatingTileEvent) {
+                    if (DEBUG_DRAG) {
+                        Log.v(TAG, "ACTION_DRAG_STARTED on target view.");
+                    }
+                    mRestored = false;
+                    mQsPanelTop.setDropIcon(R.drawable.ic_qs_tile_delete_disable, R.color.qs_tile_trash_normal_tint);
+                }
+
+                break;
+
+            case DragEvent.ACTION_DRAG_ENTERED:
+                if (DEBUG_DRAG) {
+                    if (targetTile != null) {
+                        Log.v(TAG, "ACTION_DRAG_ENTERED on view with tile: " + targetTile);
+                    } else {
+                        Log.v(TAG, "ACTION_DRAG_ENTERED on view: " + v);
+                    }
+                }
+                mLocationHits = 0;
+                mMovedByLocation = false;
+
+                if (v == mQsPanelTop) {
+                    int icon, color;
+                    if (mDraggingRecord.tile instanceof EditTile) {
+                        // use a different warning, user can't erase this one
+                        icon = R.drawable.ic_qs_tile_delete_disable_avd;
+                        color = R.color.qs_tile_trash_delete_tint_warning;
+                    } else {
+                        icon = R.drawable.ic_qs_tile_delete_disable;
+                        color = R.color.qs_tile_trash_delete_tint;
+                    }
+
+                    mQsPanelTop.setDropIcon(icon, color);
+                }
+
+                if (!originatingTileEvent && v != getDropTarget() && targetTile != null) {
+                    if (DEBUG_DRAG) {
+                        Log.e(TAG, "entered tile " + targetTile);
+                    }
+                    if (mCurrentlyAnimating.isEmpty()
+                            && !mViewPager.isFakeDragging()
+                            && !dragRecordAttached) {
+                        mMovedByLocation = true;
+                        shiftTiles(targetTile, true);
+                    } else {
+                        if (DEBUG_DRAG) {
+                            Log.w(TAG, "ignoring action enter for animating tiles and fake drags");
+                        }
+                    }
+                }
+
+                break;
+            case DragEvent.ACTION_DRAG_ENDED:
+                if (DEBUG_DRAG) {
+                    Log.v(TAG, "ACTION_DRAG_ENDED on view: " + v + "(tile: "
+                            + targetTile + "), result: " + event.getResult());
+                }
+                if (originatingTileEvent && !event.getResult()) {
+                    // view pager probably ate the event
+                    restoreDraggingTilePosition(v, null);
+                }
+
+                break;
+
+            case DragEvent.ACTION_DROP:
+                if (DEBUG_DRAG) {
+                    Log.v(TAG, "ACTION_DROP, event loc: " + event.getX() + ", " + event.getY()
+                            + " + with tile: " + targetTile + " and view: " + v);
+                }
+                mLastTouchLocationX = event.getX();
+                mLastTouchLocationY = event.getY();
+
+                if (isDropTargetEvent(event, v)) {
+                    if (DEBUG_DRAG) {
+                        Log.d(TAG, "dropping on delete target!!");
+                    }
+                    if (mDraggingRecord.tile instanceof EditTile) {
+                        final QSTileView editTileView = mDraggingRecord.tileView;
+
+                        mQsPanelTop.toast(R.string.quick_settings_cannot_delete_edit_tile);
+                        restoreDraggingTilePosition(v, new Runnable() {
+                            @Override
+                            public void run() {
+                                // move edit tile to the back
+                                final TileRecord editTile = getRecord(editTileView);
+                                if (mRecords.remove(editTile)) {
+                                    // we depend on mHost.setTiles() placing it on the end
+                                    persistRecords();
+                                }
+                            }
+                        });
+                        break;
+                    } else if (mDraggingRecord.tile instanceof CustomQSTile) {
+                        ((CustomQSTile) mDraggingRecord.tile).setUserRemoved(true);
+                        final String spec = mHost.getSpec(mDraggingRecord.tile);
+                        restoreDraggingTilePosition(v, new Runnable() {
+                            @Override
+                            public void run() {
+                                // it might get added back later by the app, but that's ok,
+                                // we just want to reset its position after it has been removed.
+                                mHost.remove(spec);
+                            }
+                        });
+                    } else {
+                        mRestored = true;
+                        removeDraggingRecord();
+                    }
+                } else {
+                    restoreDraggingTilePosition(v, null);
+                }
+                break;
+
+            case DragEvent.ACTION_DRAG_EXITED:
+                if (DEBUG_DRAG) {
+                    if (targetTile != null) {
+                        Log.v(TAG, "ACTION_DRAG_EXITED on view with tile: " + targetTile);
+                    } else {
+                        Log.v(TAG, "ACTION_DRAG_EXITED on view: " + v);
+                    }
+                }
+
+                if (v == mQsPanelTop) {
+                    mQsPanelTop.setDropIcon(R.drawable.ic_qs_tile_delete_disable, R.color.qs_tile_trash_normal_tint);
+                }
+
+                if (originatingTileEvent
+                        && mCurrentlyAnimating.isEmpty()
+                        && !mViewPager.isFakeDragging()
+                        && dragRecordAttached
+                        && mLastLeftShift == -1) {
+
+                    if (DEBUG_DRAG) {
+                        Log.v(TAG, "target: " + targetTile + ", hit mLastRightShift: "
+                                + mLastRightShift + ", mLastLeftShift: "
+                                + mLastLeftShift + ", dragRecordIndex: "
+                                + dragRecordIndex);
+                    }
+
+                    // move tiles back
+                    shiftTiles(mDraggingRecord, false);
+                    break;
+                }
+                // fall through so exit events can trigger a left shift
+            case DragEvent.ACTION_DRAG_LOCATION:
+                mLastTouchLocationX = event.getX();
+                mLastTouchLocationY = event.getY();
+
+                // do nothing if we're animating tiles
+                if (mCurrentlyAnimating.isEmpty() && !mViewPager.isFakeDragging()) {
+                    if (v == mViewPager) {
+                        // do we need to change pages?
+                        int x = (int) event.getX();
+                        int width = mViewPager.getWidth();
+                        int scrollPadding = (int) (width * QSViewPager.SCROLL_PERCENT);
+                        if (x < scrollPadding) {
+                            if (mViewPager.canScrollHorizontally(-1)) {
+                                mViewPager.animatePagerTransition(false);
+                                return true;
+                            }
+                        } else if (x > width - scrollPadding) {
+                            if (mViewPager.canScrollHorizontally(1)) {
+                                mViewPager.animatePagerTransition(true);
+                                return true;
+                            }
+                        }
+                    }
+                    if (DEBUG_DRAG) {
+                        Log.v(TAG, "location hit:// target: " + targetTile
+                                + ", hit mLastRightShift: " + mLastRightShift
+                                + ", mLastLeftShift: " + mLastLeftShift
+                                + ", dragRecordIndex: " + dragRecordIndex
+                                + ", originatingTileEvent: " + originatingTileEvent
+                                + ", mLocationHits: " + mLocationHits
+                                + ", mMovedByLocation: " + mMovedByLocation);
+                    }
+
+                    if (v != getDropTarget() && targetTile != null && !dragRecordAttached) {
+                        // dragging around on another tile
+                        if (mLocationHits++ == 30) {
+                            if (DEBUG_DRAG) {
+                                Log.w(TAG, "shifting right due to location hits.");
+                            }
+                            // add dragging tile to current page
+                            shiftTiles(targetTile, true);
+                            mMovedByLocation = true;
+                        } else {
+                            mLocationHits++;
+                        }
+                    } else if (mLastRightShift != -1 // right has shifted recently
+                            && mLastLeftShift == -1 // -1 means its attached
+                            && dragRecordIndex == mLastRightShift
+                            && !originatingTileEvent
+                            && !mMovedByLocation /* helps avoid continuous shifting */) {
+                        // check if the location is on another tile/view
+                        // that is not the last drag index, shift back left to revert back and
+                        // potentially get ready for shifting right
+                        if (DEBUG_DRAG) {
+                            Log.w(TAG, "conditions met to reverse!!!! shifting left. <<<<<<<");
+                        }
+                        shiftTiles((DragTileRecord) mRecords.get(mLastRightShift), false);
+                        mMovedByLocation = true;
+                    }
+
+                } else {
+                    if (DEBUG_DRAG) {
+                        Log.i(TAG, "ignoring location event because things are animating, size: "
+                                + mCurrentlyAnimating.size());
+                    }
+                }
+                break;
+
+            default:
+                Log.w(TAG, "unhandled event");
+                return false;
+        }
+        return true;
+    }
+
+    private boolean isDropTargetEvent(DragEvent event, View v) {
+        if (DEBUG_DRAG) {
+            Log.d(TAG, "isDropTargetEvent() called with " + "event = [" + event + "], v = [" + v + "]");
+        }
+        if (v == getDropTarget() || v == mQsPanelTop) {
+            if (DEBUG_DRAG) {
+                Log.d(TAG, "isDropTargetEvent() returns true by view");
+            }
+            return true;
+        }
+
+        if (v == mViewPager && mLastTouchLocationY <= getRowTop(0)) {
+            if (DEBUG_DRAG) {
+                Log.d(TAG, "isDropTargetEvent() returns true by loc");
+            }
+            return true;
+        }
+
+        return false;
+    }
+
+    private void restoreDraggingTilePosition(View v, final Runnable onAnimationFinishedRunnable) {
+        if (mRestored) {
+            return;
+        }
+        mRestored = true;
+        mRestoring = true;
+        mCurrentlyAnimating.add(mDraggingRecord);
+
+        if (DEBUG_DRAG) {
+            Log.i(TAG, "restoreDraggingTilePosition() called with "
+                    + "v = [" + (v.getTag() != null ? v.getTag() : v) + "]");
+        }
+        final boolean dragRecordDetached = mRecords.indexOf(mDraggingRecord) == -1;
+
+        if (DEBUG_DRAG) {
+            Log.v(TAG, "mLastLeftShift: " + mLastLeftShift
+                    + ", detached: " + dragRecordDetached + ", drag record: " + mDraggingRecord);
+        }
+
+        final QSPage originalPage = getPage(mDraggingRecord.page);
+        originalPage.removeView(mDraggingRecord.tileView);
+        addTransientView(mDraggingRecord.tileView, 0);
+        mDraggingRecord.tileView.setTransitionVisibility(View.VISIBLE);
+
+        // need to move center of the dragging view to the coords of the event.
+        final float touchEventBoxLeft = v.getX()
+                + (mLastTouchLocationX - (mDraggingRecord.tileView.getWidth() / 2));
+        final float touchEventBoxTop = v.getY()
+                + (mLastTouchLocationY - (mDraggingRecord.tileView.getHeight() / 2));
+
+        mDraggingRecord.tileView.setX(touchEventBoxLeft);
+        mDraggingRecord.tileView.setY(touchEventBoxTop);
+
+        if (dragRecordDetached) {
+            setToLastDestination(mDraggingRecord);
+            if (DEBUG_DRAG) {
+                Log.d(TAG, "setting drag record view to coords: x:" + touchEventBoxLeft
+                        + ", y:" + touchEventBoxTop);
+                Log.d(TAG, "animating drag record to: " + mDraggingRecord + ", loc: "
+                        + mDraggingRecord.destination);
+            }
+        } else {
+            mDraggingRecord.destination.x = getLeft(mDraggingRecord.destinationPage,
+                    mDraggingRecord.row, mDraggingRecord.col,
+                    getColumnCount(mDraggingRecord.destinationPage, mDraggingRecord.row));
+
+            mDraggingRecord.destination.y = getRowTop(mDraggingRecord.row);
+        }
+
+        // setup x destination to animate to
+        float destinationX = mDraggingRecord.destination.x;
+
+        // see if we should animate this to the left or right off the page
+        // the +1's are to account for the edit page
+        if (mDraggingRecord.destinationPage > mViewPager.getCurrentItem() - 1) {
+            if (DEBUG_DRAG) {
+                Log.d(TAG, "adding width to animate out >>>>>");
+            }
+            destinationX += getWidth();
+        } else if (mDraggingRecord.destinationPage < mViewPager.getCurrentItem() - 1) {
+            if (DEBUG_DRAG) {
+                Log.d(TAG, "removing width to animate out <<<<<");
+            }
+            destinationX -= getWidth();
+        }
+
+        // setup y
+        float destinationY = mDraggingRecord.destination.y + mViewPager.getTop();
+
+        mDraggingRecord.tileView.animate()
+                .withLayer()
+                .x(destinationX)
+                .y(destinationY) // part of the viewpager now
+                .setListener(new AnimatorListenerAdapter() {
+                    @Override
+                    public void onAnimationStart(Animator animation) {
+                        mDraggingRecord.tileView.setAlpha(1);
+                    }
+
+                    @Override
+                    public void onAnimationCancel(Animator animation) {
+                        mViewPager.requestDisallowInterceptTouchEvent(false);
+                        removeTransientView(mDraggingRecord.tileView);
+                        mCurrentlyAnimating.remove(mDraggingRecord);
+                        mRestoring = false;
+                        mPagerAdapter.notifyDataSetChanged();
+                        onStopDrag();
+
+                        if (onAnimationFinishedRunnable != null) {
+                            postOnAnimation(onAnimationFinishedRunnable);
+                        }
+                    }
+
+                    @Override
+                    public void onAnimationEnd(Animator animation) {
+                        mViewPager.requestDisallowInterceptTouchEvent(false);
+
+                        removeTransientView(mDraggingRecord.tileView);
+
+                        final QSPage targetP = getPage(mDraggingRecord.destinationPage);
+
+                        if (DEBUG_DRAG) {
+                            if (dragRecordDetached) {
+                                Log.i(TAG, "drag record was detached");
+                            } else {
+                                Log.i(TAG, "drag record was attached");
+                            }
+                        }
+                        targetP.addView(mDraggingRecord.tileView);
+                        mDraggingRecord.page = mDraggingRecord.destinationPage;
+
+                        mDraggingRecord.tileView.setX(mDraggingRecord.destination.x);
+                        // reset this to be in the coords of the page, not viewpager anymore
+                        mDraggingRecord.tileView.setY(mDraggingRecord.destination.y);
+
+                        mCurrentlyAnimating.remove(mDraggingRecord);
+
+                        mRestoring = false;
+
+                        if (dragRecordDetached) {
+                            mRecords.add(mDraggingRecord);
+                            mPagerAdapter.notifyDataSetChanged();
+                        }
+                        onStopDrag();
+
+                        if (onAnimationFinishedRunnable != null) {
+                            postOnAnimation(onAnimationFinishedRunnable);
+                        } else {
+                            requestLayout();
+                        }
+                    }
+                });
+    }
+
+    private void setToNextDestination(DragTileRecord tile) {
+        if (DEBUG_DRAG) {
+            Log.i(TAG, "+++setToNextDestination() called with " + "tile = [" + tile + "], at: "
+                    + tile.destination);
+        }
+        tile.col++;
+        int maxCols = getColumnCount();
+
+        if (tile.col >= maxCols) {
+            tile.col = 0;
+            tile.row++;
+            if (DEBUG_DRAG) {
+                Log.w(TAG, "reached max column count, shifting to next row: " + tile.row);
+            }
+        }
+
+        // clamp this value to the max count we want.
+        int maxRows = Math.min(MAX_ROW_COUNT - 1 /* we are 0 based */, getCurrentMaxRow());
+
+        if (tile.row > maxRows) {
+            tile.destinationPage = tile.destinationPage + 1;
+            tile.row = 0;
+            tile.col = 0;
+
+            if (DEBUG_DRAG) {
+                Log.w(TAG, "tile's destination page moved to: " + tile.destinationPage);
+            }
+        }
+        int columnCount = Math.max(1, getColumnCount(tile.destinationPage, tile.row, false));
+        if (columnCount < maxCols) {
+            // if columncount gives us 1 and we're at col 2
+            columnCount = Math.max((tile.col + 1), columnCount);
+        }
+        if (DEBUG_DRAG) {
+            Log.w(TAG, "columCount at: " + columnCount);
+        }
+
+        boolean firstRowLarge = mFirstRowLarge && tile.row == 0 && tile.destinationPage == 0;
+
+        tile.destination.x = getLeft(tile.row, tile.col, columnCount, firstRowLarge);
+        tile.destination.y = getRowTop(tile.row);
+
+        if (DEBUG_DRAG) {
+            Log.i(TAG, "---setToNextDestination() called with " + "tile = [" + tile + "], now at: "
+                    + tile.destination);
+        }
+    }
+
+    private boolean isBefore(DragTileRecord r1, DragTileRecord r2) {
+        if (DEBUG_DRAG) {
+            Log.d(TAG, "isBefore() called with " + "r1 = [" + r1 + "], r2 = [" + r2 + "]");
+        }
+        boolean isBefore = r1.destinationPage <= r2.destinationPage;
+        if (r1.destinationPage == r2.destinationPage) {
+            isBefore = r1.row <= r2.row;
+            if (r1.row == r2.row) {
+                isBefore = r1.col <= r2.col;
+            }
+        }
+
+        if (DEBUG_DRAG) {
+            Log.d(TAG, "r1 isBefore r2: " + isBefore);
+        }
+        return isBefore;
+    }
+
+    private void setToLastDestination(DragTileRecord record) {
+        DragTileRecord last = (DragTileRecord) mRecords.get(mRecords.size() - 1);
+        if (DEBUG_DRAG) {
+            Log.d(TAG, "setToLastDestination() called with record = ["
+                    + record + "], and last record is: " + last);
+        }
+
+        if (isBefore(record, last)) {
+            // if the record is before the last record in the records list, set it to the
+            // last location, then spoof it one space forward
+            record.destinationPage = last.destinationPage;
+            record.row = last.row;
+            record.col = last.col;
+            record.destination.x = last.destination.x;
+            record.destination.y = last.destination.y;
+            setToNextDestination(record);
+        }
+    }
+
+    @Override
+    public boolean onLongClick(View v) {
+        final DragTileRecord record = (DragTileRecord) getRecord(v);
+        if (record == null) {
+            // TODO couldn't find a matching tag?
+            Log.e(TAG, "got a null record on touch down.");
+            return false;
+        }
+
+        mDraggingRecord = record;
+
+        mDraggingRecord.tileView.setAlpha(0);
+        mDraggingRecord.tileView.setDual(false, false);
+        TileShadow mTileShadow = new TileShadow(mDraggingRecord.tileView);
+
+        v.startDrag(null, mTileShadow, null, 0);
+
+        mViewPager.requestDisallowInterceptTouchEvent(true);
+
+        onStartDrag();
+        mDragging = true;
+        return true;
+    }
+
+    private void shiftTiles(DragTileRecord startingTile, boolean forward) {
+        if (DEBUG_DRAG) {
+            Log.i(TAG, "shiftTiles() called with " + "startingTile = [" + startingTile
+                    + "], forward = [" + forward + "]");
+        }
+
+        if (forward) {
+            // startingTile and all after will need to be shifted one to the right
+            // dragging tile needs room
+
+            final int destP = startingTile.destinationPage;
+            final int rowF = startingTile.row;
+            final int colF = startingTile.col;
+            PointF loc = new PointF(startingTile.destination.x, startingTile.destination.y);
+
+            // the index of the original position of the statingTile before it moved
+            int startingIndex = mRecords.indexOf(startingTile);
+            mLastRightShift = startingIndex;
+            mLastLeftShift = -1;
+
+            shiftAllTilesRight(startingIndex);
+            mRecords.add(startingIndex, mDraggingRecord);
+
+            mPagerAdapter.notifyDataSetChanged();
+
+            mDraggingRecord.col = colF;
+            mDraggingRecord.row = rowF;
+            mDraggingRecord.destination = loc;
+            mDraggingRecord.destinationPage = destP;
+
+            mDraggingRecord.tileView.setX(mDraggingRecord.destination.x);
+            mDraggingRecord.tileView.setY(mDraggingRecord.destination.y);
+
+        } else {
+            // it is also probably the dragging tile
+            final int startingIndex = mRecords.indexOf(startingTile);
+            mLastLeftShift = startingIndex;
+            mLastRightShift = -1;
+
+            final int draggingIndex = mRecords.indexOf(mDraggingRecord);
+
+            if (startingIndex != draggingIndex) {
+                if (DEBUG_DRAG) {
+                    Log.e(TAG, "startinIndex: " + startingIndex + ", draggingIndex: "
+                            + draggingIndex + ", and they differ!!!!");
+                }
+            }
+
+            // startingTile should be the "empty" tile that things should start shifting into
+            shiftAllTilesLeft(startingIndex);
+
+            // remove the dragging record
+            if (mRecords.remove(mDraggingRecord)) {
+                mPagerAdapter.notifyDataSetChanged();
+                if (DEBUG_DRAG) {
+                    Log.v(TAG, "removed dragging record after moving tiles back");
+                }
+            }
+
+            // set coords off screen until we're ready to place it
+            mDraggingRecord.tileView.setX(-mDraggingRecord.tileView.getMeasuredWidth());
+            mDraggingRecord.tileView.setY(-mDraggingRecord.tileView.getMeasuredHeight());
+        }
+
+        mViewPager.getAdapter().notifyDataSetChanged();
+    }
+
+    private void shiftAllTilesRight(int startingIndex) {
+        int desiredColumnCount = -1;
+        for (int j = startingIndex; j < mRecords.size() - 1; j++) {
+            final DragTileRecord ti = (DragTileRecord) mRecords.get(j);
+            final DragTileRecord tnext = (DragTileRecord) mRecords.get(j + 1);
+
+            mCurrentlyAnimating.add(ti);
+            if (tnext.row != ti.row || desiredColumnCount == -1) {
+                desiredColumnCount = getColumnCount(tnext.destinationPage, tnext.row);
+                //Log.w(TAG, "updated desiredColumnCount: " + desiredColumnCount);
+            }
+
+            if (DEBUG_DRAG) {
+                Log.v(TAG, "moving " + ti + " to page " + tnext.destinationPage + ", at coords: "
+                        + tnext.row + ", col: " + tnext.col + ", dest: " + tnext.destination);
+            }
+
+            ti.row = tnext.row;
+            ti.col = tnext.col;
+            ti.destination.x = getLeft(tnext.destinationPage, ti.row, ti.col, desiredColumnCount);
+            ti.destination.y = getRowTop(ti.row);
+
+            if (ti.destinationPage != tnext.destinationPage) {
+                ti.destinationPage = tnext.destinationPage;
+
+                final QSPage tilePageSource = getPage(ti.page);
+                final QSPage tilePageTarget = getPage(ti.destinationPage);
+                tilePageSource.removeView(ti.tileView);
+
+                tilePageSource.addTransientView(ti.tileView, 0);
+                ti.tileView.animate()
+                        .withLayer()
+                        .x(ti.destination.x + getWidth())
+                        .y(ti.destination.y)
+                        .setListener(new AnimatorListenerAdapter() {
+                            @Override
+                            public void onAnimationCancel(Animator animation) {
+                                tilePageSource.removeTransientView(ti.tileView);
+                                mCurrentlyAnimating.remove(ti);
+                            }
+
+                            @Override
+                            public void onAnimationEnd(Animator animation) {
+                                tilePageSource.removeTransientView(ti.tileView);
+                                tilePageTarget.addView(ti.tileView);
+                                ti.page = tilePageTarget.getPageIndex();
+                                ti.tileView.setX(ti.destination.x);
+                                ti.tileView.setY(ti.destination.y);
+
+                                mCurrentlyAnimating.remove(ti);
+                                requestLayout();
+                            }
+                        });
+
+            } else {
+                ti.tileView.animate()
+                        .withLayer()
+                        .x(ti.destination.x)
+                        .y(ti.destination.y)
+                        .setListener(new AnimatorListenerAdapter() {
+                            @Override
+                            public void onAnimationCancel(Animator animation) {
+                                mCurrentlyAnimating.remove(ti);
+                            }
+
+                            @Override
+                            public void onAnimationEnd(Animator animation) {
+                                mCurrentlyAnimating.remove(ti);
+                                final boolean dual = getPage(ti.destinationPage).dualRecord(ti);
+                                if (ti.tileView.setDual(dual, ti.tile.hasDualTargetsDetails())) {
+                                    if (DEBUG_DRAG) {
+                                        Log.w(TAG, ti + " changed dual state to : "
+                                                + ti.tileView.isDual());
+                                    }
+                                }
+                                requestLayout();
+                            }
+                        });
+            }
+        }
+
+        // need to do last tile manually
+        final DragTileRecord last = (DragTileRecord) mRecords.get(mRecords.size() - 1);
+        mCurrentlyAnimating.add(last);
+
+        if (DEBUG_DRAG) {
+            Log.i(TAG, "last tile shifting to the right: " + last);
+        }
+        setToNextDestination(last);
+        if (last.page != last.destinationPage) {
+            final QSPage tilePageSource = getPage(last.page);
+            final QSPage tilePageTarget = getPage(last.destinationPage);
+            tilePageSource.removeView(last.tileView);
+            tilePageSource.addTransientView(last.tileView, 0);
+
+            last.tileView.animate()
+                    .withLayer()
+                    .x(last.destination.x + getWidth())
+                    .y(last.destination.y)
+                    .setListener(new AnimatorListenerAdapter() {
+                        @Override
+                        public void onAnimationCancel(Animator animation) {
+                            tilePageSource.removeTransientView(last.tileView);
+                            mCurrentlyAnimating.remove(last);
+                        }
+
+                        @Override
+                        public void onAnimationEnd(Animator animation) {
+                            tilePageSource.removeTransientView(last.tileView);
+                            tilePageTarget.addView(last.tileView);
+                            last.page = tilePageTarget.getPageIndex();
+                            last.tileView.setX(last.destination.x);
+                            last.tileView.setY(last.destination.y);
+
+                            if (DEBUG_DRAG) {
+                                Log.i(TAG, "page shift finished: " + last);
+                            }
+
+                            mCurrentlyAnimating.remove(last);
+                            requestLayout();
+                        }
+                    });
+        } else {
+            last.tileView.animate()
+                    .withLayer()
+                    .x(last.destination.x)
+                    .y(last.destination.y)
+                    .setListener(new AnimatorListenerAdapter() {
+                        @Override
+                        public void onAnimationCancel(Animator animation) {
+                            mCurrentlyAnimating.remove(last);
+                        }
+
+                        @Override
+                        public void onAnimationEnd(Animator animation) {
+                            if (DEBUG_DRAG) {
+                                Log.i(TAG, "shift finished: " + last);
+                            }
+
+                            mCurrentlyAnimating.remove(last);
+                            requestLayout();
+                        }
+                    });
+        }
+    }
+
+    private void shiftAllTilesLeft(int startingIndex) {
+        DragTileRecord startingTile = (DragTileRecord) mRecords.get(startingIndex);
+
+        final PointF lastLocation = new PointF(startingTile.destination.x,
+                startingTile.destination.y);
+        PointF reallyTempLoc = new PointF();
+        int lastRow = startingTile.row, lastCol = startingTile.col, tempRow,
+                tempCol, lastPage = startingTile.destinationPage, tempPage;
+
+        int desiredColCount = getColumnCount(startingTile.destinationPage, startingTile.row);
+        for (int j = startingIndex + 1; j < mRecords.size(); j++) {
+            final DragTileRecord ti = (DragTileRecord) mRecords.get(j);
+
+            mCurrentlyAnimating.add(ti);
+
+            if (DEBUG_DRAG) {
+                Log.v(TAG, "moving " + ti + " to " + lastPage + ", at coords: "
+                        + lastRow + ", col: " + lastCol);
+                Log.i(TAG, "and will have desiredColCount: " + desiredColCount);
+            }
+
+            final int columnCountF = desiredColCount;
+
+            if (ti.row != lastRow) {
+                desiredColCount = getColumnCount(ti.destinationPage, ti.row);
+                if (DEBUG_DRAG) {
+                    Log.e(TAG, "updating desired colum count to: " + desiredColCount);
+                }
+            }
+
+            // save current tile's loc
+            reallyTempLoc.x = ti.destination.x;
+            reallyTempLoc.y = ti.destination.y;
+
+            tempRow = ti.row;
+            tempCol = ti.col;
+            tempPage = ti.destinationPage;
+
+            ti.row = lastRow;
+            ti.col = lastCol;
+
+            ti.destination.x = getLeft(lastRow, lastCol, columnCountF,
+                    lastPage == 0 && lastRow == 0 && mFirstRowLarge);
+            ti.destination.y = getRowTop(lastRow);
+
+            final boolean dual = getPage(ti.destinationPage).dualRecord(ti);
+
+            if (ti.destinationPage != lastPage) {
+                ti.destinationPage = lastPage;
+
+                ti.tileView.setX(reallyTempLoc.x + getWidth());
+                ti.tileView.setY(reallyTempLoc.y);
+
+                final QSPage originalPage = getPage(ti.page);
+                final QSPage page = getPage(lastPage);
+
+                originalPage.removeView(ti.tileView);
+
+                ti.tileView.animate()
+                        .withLayer()
+                        .x(ti.destination.x)
+                        .y(ti.destination.y)
+                        .setListener(new AnimatorListenerAdapter() {
+                            @Override
+                            public void onAnimationStart(Animator animation) {
+                                page.addTransientView(ti.tileView, 0);
+                            }
+
+                            @Override
+                            public void onAnimationCancel(Animator animation) {
+                                page.removeTransientView(ti.tileView);
+                                mCurrentlyAnimating.remove(ti);
+                            }
+
+                            @Override
+                            public void onAnimationEnd(Animator animation) {
+                                page.removeTransientView(ti.tileView);
+                                page.addView(ti.tileView);
+                                ti.page = page.getPageIndex();
+
+                                mCurrentlyAnimating.remove(ti);
+                                requestLayout();
+                            }
+                        });
+            } else {
+                ti.tileView.animate()
+                        .withLayer()
+                        .x(ti.destination.x)
+                        .y(ti.destination.y)
+                        .setListener(new AnimatorListenerAdapter() {
+                            @Override
+                            public void onAnimationEnd(Animator animation) {
+                                mCurrentlyAnimating.remove(ti);
+                                if (ti.tileView.setDual(dual, ti.tile.hasDualTargetsDetails())) {
+                                    if (DEBUG_DRAG) {
+                                        Log.w(TAG, ti + " changed dual state to : "
+                                                + ti.tileView.isDual());
+                                    }
+                                }
+                                requestLayout();
+                            }
+                        });
+            }
+
+            // update previous location
+            lastLocation.x = reallyTempLoc.x;
+            lastLocation.y = reallyTempLoc.y;
+
+            lastRow = tempRow;
+            lastCol = tempCol;
+            lastPage = tempPage;
+        }
+    }
+
+    @Override
+    protected void handleShowDetailImpl(Record r, boolean show, int x, int y) {
+        super.handleShowDetailImpl(r, show, x, y);
+        if (show) {
+            final StatusBarPanelCustomTile customTile = r.detailAdapter.getCustomTile();
+            mDetailRemoveButton.setVisibility(customTile != null &&
+                    !(customTile.getPackage().equals(mContext.getPackageName())
+                            || customTile.getUid() == android.os.Process.SYSTEM_UID)
+                    ? VISIBLE : GONE);
+            mDetailRemoveButton.setOnClickListener(new OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    mHost.removeCustomTile(customTile);
+                    closeDetail();
+                }
+            });
+        }
+        mPanelView.setDetailRequestedScrollLock(mExpanded && show
+                && getResources().getConfiguration().orientation == ORIENTATION_LANDSCAPE);
+    }
+
+    @Override
+    protected void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        FontSizeUtils.updateFontSize(mDetailRemoveButton, R.dimen.qs_detail_button_text_size);
+        mPanelView.setDetailRequestedScrollLock(mExpanded && isShowingDetail()
+                && getResources().getConfiguration().orientation == ORIENTATION_LANDSCAPE);
+    }
+
+    @Override
+    public void setExpanded(boolean expanded) {
+        super.setExpanded(expanded);
+        // reset the page when inactive for a while
+        if (expanded) {
+            removeCallbacks(mResetPage);
+        } else {
+            postDelayed(mResetPage, PAGE_RESET_DELAY);
+        }
+        if (!expanded) {
+            if (mEditing) {
+                mHost.setEditing(false);
+            }
+        }
+    }
+
+    public void updateResources() {
+        final Resources res = mContext.getResources();
+        final int columns = Math.max(1, res.getInteger(R.integer.quick_settings_num_columns));
+        mCellHeight = res.getDimensionPixelSize(R.dimen.qs_tile_height);
+        mCellWidth = (int) (mCellHeight * TILE_ASPECT);
+        mLargeCellHeight = res.getDimensionPixelSize(R.dimen.qs_dual_tile_height);
+        mLargeCellWidth = (int) (mLargeCellHeight * TILE_ASPECT);
+        mPanelPaddingBottom = res.getDimensionPixelSize(R.dimen.qs_panel_padding_bottom);
+        mDualTileUnderlap = res.getDimensionPixelSize(R.dimen.qs_dual_tile_padding_vertical);
+        mBrightnessPaddingTop = res.getDimensionPixelSize(R.dimen.qs_brightness_padding_top);
+        mPageIndicatorHeight = res.getDimensionPixelSize(R.dimen.qs_panel_page_indicator_height);
+        if (mColumns != columns) {
+            mColumns = columns;
+            if (isLaidOut()) postInvalidate();
+        }
+        if (isLaidOut()) {
+            for (TileRecord r : mRecords) {
+                r.tile.clearState();
+            }
+            updateDetailText();
+            mQsPanelTop.updateResources();
+            if (mListening) {
+                refreshAllTiles();
+            }
+        }
+    }
+
+    public boolean isAnimating(TileRecord t) {
+        return mCurrentlyAnimating.contains(t);
+    }
+
+    public void cleanup() {
+        if (mSettingsObserver != null) {
+            mSettingsObserver.unobserve();
+        }
+    }
+
+    public void setPanelView(NotificationPanelView panelView) {
+        this.mPanelView = panelView;
+    }
+
+    public static class TilesListAdapter extends BaseExpandableListAdapter
+            implements QSTile.DetailAdapter {
+
+        public static final String PACKAGE_ANDROID = "android";
+
+        Context mContext;
+        QSTileHost mHost;
+        QSDragPanel mPanel;
+
+        ArrayMap<String, List<String>> mPackageTileMap = new ArrayMap<>();
+
+        public TilesListAdapter(Context context, QSDragPanel panel) {
+            mContext = context;
+            mHost = panel.getHost();
+            mPanel = panel;
+
+            List<String> currentTileSpec = mHost.getTileSpecs();
+            final Collection<String> tiles = QSUtils.getAvailableTiles(mContext);
+            tiles.removeAll(currentTileSpec);
+
+            // we'll always have a system tiles category
+            mPackageTileMap.put(PACKAGE_ANDROID, new ArrayList<String>());
+
+            final Iterator<String> i = tiles.iterator();
+            while (i.hasNext()) {
+                final String spec = i.next();
+                if (QSUtils.isStaticQsTile(spec)
+                        || QSUtils.isDynamicQsTile(extractTileTagFromSpec(spec))) {
+                    List<String> packageList = mPackageTileMap.get(PACKAGE_ANDROID);
+                    packageList.add(spec);
+                } else {
+                    String tilePackage = getCustomTilePackage(spec);
+                    List<String> packageList = mPackageTileMap.get(tilePackage);
+                    if (packageList == null) {
+                        mPackageTileMap.put(tilePackage, packageList = new ArrayList<>());
+                    }
+                    packageList.add(spec);
+                }
+            }
+
+            final Map<String, ?> stringMap = CustomQSTile.getCustomQSTilePrefs(mContext).getAll();
+            for (Map.Entry<String, ?> entry : stringMap.entrySet()) {
+                if (entry.getValue() instanceof Boolean) {
+                    if ((Boolean)entry.getValue()) {
+                        final String key = entry.getKey();
+                        if (QSUtils.isDynamicQsTile(extractTileTagFromSpec(key))) {
+                            mPackageTileMap.get(PACKAGE_ANDROID).add(key);
+                        } else {
+                            final String customTilePackage = getCustomTilePackage(key);
+                            List<String> packageList = mPackageTileMap.get(customTilePackage);
+                            if (packageList == null) {
+                                mPackageTileMap.put(customTilePackage,
+                                        packageList = new ArrayList<>());
+                            }
+                            packageList.add(key);
+
+                        }
+                    }
+                }
+            };
+
+            final List<String> systemTiles = mPackageTileMap.get(PACKAGE_ANDROID);
+            Collections.sort(systemTiles);
+        }
+
+        private String getCustomTilePackage(String spec) {
+            if (mHost.getCustomTileData().get(spec) != null) {
+                StatusBarPanelCustomTile sbc = mHost.getCustomTileData().get(spec).sbc;
+                return sbc.getPackage();
+            } else {
+                return extractPackageFromCustomTileSpec(spec);
+            }
+        }
+
+        private static String extractPackageFromCustomTileSpec(String spec) {
+            if (spec != null && !spec.isEmpty()) {
+                final String[] split = spec.split("\\|");
+                if (split != null && split.length > 2) {
+                    return split[1];
+                }
+                return spec;
+            }
+            return null;
+        }
+
+        private static String extractTileTagFromSpec(String spec) {
+            if (spec != null && !spec.isEmpty()) {
+                final String[] split = spec.split("\\|");
+                if (split != null && split.length == 5) {
+                    /** for {@link cyanogenmod.app.StatusBarPanelCustomTile#key() **/
+                    return split[3];
+                } else if (split != null && split.length == 3) {
+                    /** for {@link cyanogenmod.app.StatusBarPanelCustomTile#persistableKey()} **/
+                    return split[2];
+                }
+                return spec;
+            }
+            return null;
+        }
+
+        private Drawable getQSTileIcon(String spec) {
+            if (QSUtils.isDynamicQsTile(extractTileTagFromSpec(spec))) {
+                return QSTile.ResourceIcon.get(QSUtils.getDynamicQSTileResIconId(mContext,
+                        UserHandle.myUserId(), extractTileTagFromSpec(spec))).getDrawable(mContext);
+            } else if (QSUtils.isStaticQsTile(spec)) {
+                final int res = QSTileHost.getIconResource(spec);
+                if (res != 0) {
+                    return QSTile.ResourceIcon.get(res).getDrawable(mContext);
+                } else {
+                    return mContext.getPackageManager().getDefaultActivityIcon();
+                }
+            } else {
+                QSTile<?> tile = mHost.getTile(spec);
+                if (tile != null) {
+                    QSTile.State state = tile.getState();
+                    if (state != null && state.icon != null) {
+                        return state.icon.getDrawable(mContext);
+                    }
+                }
+                return getPackageDrawable(getCustomTilePackage(spec));
+            }
+        }
+
+        private String getPackageLabel(String packageName) {
+            try {
+                return mContext.getPackageManager().getApplicationLabel(
+                        mContext.getPackageManager().getApplicationInfo(packageName, 0)).toString();
+            } catch (PackageManager.NameNotFoundException e) {
+                e.printStackTrace();
+            }
+            return null;
+        }
+
+        private Drawable getPackageDrawable(String packageName) {
+            try {
+                return mContext.getPackageManager().getApplicationIcon(packageName);
+            } catch (PackageManager.NameNotFoundException e) {
+                e.printStackTrace();
+            }
+            return null;
+        }
+
+        private String getQSTileLabel(String spec) {
+            if (QSUtils.isStaticQsTile(spec)) {
+                int resource = QSTileHost.getLabelResource(spec);
+                if (resource != 0) {
+                    return mContext.getText(resource).toString();
+                } else {
+                    return spec;
+                }
+            } else if (QSUtils.isDynamicQsTile(extractTileTagFromSpec(spec))) {
+                return QSUtils.getDynamicQSTileLabel(mContext,
+                        UserHandle.myUserId(), extractTileTagFromSpec(spec));
+            } else {
+                return getPackageLabel(getCustomTilePackage(spec));
+            }
+        }
+
+        @Override
+        public int getGroupCount() {
+            return mPackageTileMap.keySet().size();
+        }
+
+        @Override
+        public int getChildrenCount(int groupPosition) {
+            return mPackageTileMap.valueAt(groupPosition).size();
+        }
+
+        @Override
+        public String getGroup(int groupPosition) {
+            return mPackageTileMap.keyAt(groupPosition);
+        }
+
+        @Override
+        public String getChild(int groupPosition, int childPosition) {
+            return mPackageTileMap.valueAt(groupPosition).get(childPosition);
+        }
+
+        @Override
+        public long getGroupId(int groupPosition) {
+            return groupPosition;
+        }
+
+        @Override
+        public long getChildId(int groupPosition, int childPosition) {
+            return mPackageTileMap.valueAt(groupPosition).get(childPosition).hashCode();
+        }
+
+        @Override
+        public boolean hasStableIds() {
+            return true;
+        }
+
+        @Override
+        public View getGroupView(int groupPosition, boolean isExpanded, View convertView,
+                                 ViewGroup parent) {
+            LinearLayout row = (LinearLayout) convertView;
+            if (row == null) {
+                row = (LinearLayout) LayoutInflater.from(mContext)
+                        .inflate(R.layout.qs_tile_category_row, parent, false);
+            }
+            TextView title = (TextView) row.findViewById(android.R.id.title);
+
+            ImageView systemOrAppIcon = (ImageView) row.findViewById(android.R.id.icon);
+            ImageView expansionIndicator = (ImageView) row.findViewById(android.R.id.icon2);
+
+            expansionIndicator.setImageResource(isExpanded ? R.drawable.ic_qs_tile_contract
+                    : R.drawable.ic_qs_tile_expand);
+            // hide indicator when there's only 1 group
+            final boolean singleGroupMode = getGroupCount() == 1;
+            expansionIndicator.setVisibility(singleGroupMode ? View.GONE : View.VISIBLE);
+
+            String group = getGroup(groupPosition);
+            if (group.equals(PACKAGE_ANDROID)) {
+                group = mContext.getText(R.string.quick_settings_tiles_category_system).toString();
+                // special icon
+                systemOrAppIcon.setImageResource(R.drawable.ic_qs_tile_category_system);
+            } else {
+                group = getPackageLabel(group);
+                systemOrAppIcon.setImageResource(R.drawable.ic_qs_tile_category_other);
+            }
+            title.setText(group);
+
+            if (isExpanded) {
+                expansionIndicator.setColorFilter(
+                        mContext.getColor(
+                    R.color.qs_detailed_expansion_indicator_color), PorterDuff.Mode.SRC_ATOP);
+                systemOrAppIcon.setColorFilter(
+                        mContext.getColor(R.color.qs_detailed_icon_tint_color), PorterDuff.Mode.SRC_ATOP);
+                title.setTextColor(mContext.getColor(R.color.qs_detailed_title_text_color));
+            } else {
+                title.setTextColor(mContext.getColor(R.color.qs_detailed_default_text_color));
+                systemOrAppIcon.setColorFilter(null);
+                expansionIndicator.setColorFilter(null);
+            }
+            return row;
+        }
+
+        @Override
+        public View getChildView(int groupPosition, int childPosition, boolean isLastChild,
+                                 View convertView, ViewGroup parent) {
+            LinearLayout child = (LinearLayout) convertView;
+            if (child == null) {
+                child = (LinearLayout) LayoutInflater.from(mContext)
+                        .inflate(R.layout.qs_tile_child_row, parent, false);
+            }
+            String spec = getChild(groupPosition, childPosition);
+
+            TextView title = (TextView) child.findViewById(android.R.id.title);
+            title.setText(getQSTileLabel(spec));
+
+            ImageView icon = (ImageView) child.findViewById(android.R.id.icon);
+            icon.setImageDrawable(getQSTileIcon(spec));
+
+            return child;
+        }
+
+        @Override
+        public boolean isChildSelectable(int groupPosition, int childPosition) {
+            return true;
+        }
+
+        @Override
+        public int getTitle() {
+            return R.string.quick_settings_tiles_add_tiles;
+        }
+
+        @Override
+        public Boolean getToggleState() {
+            return null;
+        }
+
+        @Override
+        public View createDetailView(Context context, View convertView, ViewGroup parent) {
+            ExpandableListView lv = (ExpandableListView) convertView;
+            if (lv == null) {
+                lv = new ExpandableListView(parent.getContext());
+                lv.setOnTouchListener(new OnTouchListener() {
+                    // Setting on Touch Listener for handling the touch inside ScrollView
+                    @Override
+                    public boolean onTouch(View v, MotionEvent event) {
+                        // Disallow the touch request for parent scroll on touch of child view
+                        v.getParent().requestDisallowInterceptTouchEvent(true);
+                        return false;
+                    }
+                });
+            }
+            lv.setAdapter(this);
+            lv.expandGroup(mPackageTileMap.indexOfKey(PACKAGE_ANDROID));
+            lv.setGroupIndicator(null);
+            lv.setChildIndicator(null);
+            lv.setChildDivider(new ColorDrawable(Color.TRANSPARENT));
+            lv.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {
+                @Override
+                public boolean onChildClick(ExpandableListView parent, View v,
+                                            int groupPosition, int childPosition, long id) {
+                    String spec = getChild(groupPosition, childPosition);
+
+                    final QSTile<?> tile = mHost.getTile(spec);
+                    if (tile != null && tile instanceof CustomQSTile) {
+                        // already present
+                        ((CustomQSTile) tile).setUserRemoved(false);
+                        mPanel.refreshAllTiles();
+                    } else {
+                        // reset its state just in case it's not published
+                        CustomQSTile.getCustomQSTilePrefs(mContext)
+                                .edit()
+                                .remove(spec)
+                                .apply();
+                        mPanel.add(spec);
+                        // TODO notify user the app isn't publishing the tile, but it now can be!
+                    }
+                    mPanel.closeDetail();
+                    return true;
+                }
+            });
+            lv.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {
+                @Override
+                public boolean onGroupClick(ExpandableListView parent, View v, int groupPosition,
+                                            long id) {
+                    if (getGroupCount() == 1) {
+                        // disable contracting/expanding group when there's only 1
+                        return true;
+                    }
+                    return false;
+                }
+            });
+            return lv;
+        }
+
+        @Override
+        public Intent getSettingsIntent() {
+            return null;
+        }
+
+        @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
+        public void setToggleState(boolean state) {
+
+        }
+
+        @Override
+        public int getMetricsCategory() {
+            return CMMetricsLogger.DONT_LOG;
+        }
+
+        private boolean isValid(String action) {
+            for (int i = 0; i < action.length(); i++) {
+                char c = action.charAt(i);
+                if (!Character.isAlphabetic(c) && !Character.isDigit(c) && c != '.') {
+                    return false;
+                }
+            }
+            return true;
+        }
+    }
+
+    public void add(String tile) {
+        MetricsLogger.action(getContext(), MetricsLogger.TUNER_QS_ADD, tile);
+        List<String> tiles = new ArrayList<>(mHost.getTileSpecs());
+        tiles.add(tile);
+        mHost.setTiles(tiles);
+    }
+
+    public boolean isDragging() {
+        return mDragging;
+    }
+
+    public boolean isDragRecordAttached() {
+        return mRecords.indexOf(mDraggingRecord) >= 0;
+    }
+
+    public boolean isOnSettingsPage() {
+        return mEditing && mViewPager.getCurrentItem() == 0;
+    }
+
+    public void goToSettingsPage() {
+        if (mEditing) {
+            mViewPager.setCurrentItem(0, true);
+        }
+    }
+
+    class SettingsObserver extends UserContentObserver {
+        SettingsObserver(Handler handler) {
+            super(handler);
+        }
+
+        @Override
+        protected void observe() {
+            super.observe();
+
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.registerContentObserver(CMSettings.Secure.getUriFor(
+                    CMSettings.Secure.QS_USE_MAIN_TILES), false, this, UserHandle.USER_ALL);
+            update();
+        }
+
+        @Override
+        protected void unobserve() {
+            super.unobserve();
+
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.unregisterContentObserver(this);
+        }
+
+        @Override
+        public void update() {
+            ContentResolver resolver = mContext.getContentResolver();
+            int currentUserId = ActivityManager.getCurrentUser();
+            boolean firstRowLarge = CMSettings.Secure.getIntForUser(resolver,
+                    CMSettings.Secure.QS_USE_MAIN_TILES, 1, currentUserId) == 1;
+            if (firstRowLarge != mFirstRowLarge) {
+                mFirstRowLarge = firstRowLarge;
+                setTiles(mHost.getTiles());
+                mPagerAdapter.notifyDataSetChanged();
+            }
+        }
+    }
+
+    public static final class DragTileRecord extends TileRecord {
+        public int page;
+        public int destinationPage;
+        public PointF destination = new PointF();
+
+        @Override
+        public String toString() {
+            String label = tile instanceof QsTuner.DraggableTile ? tile.toString() :
+                    tile.getClass().getSimpleName();
+
+            String p = "at page: " + page;
+            if (destinationPage != page) {
+                p += "{-> " + destinationPage + "} ";
+            }
+
+            return "[" + label + ", coords: (" + row + ", " + col + ") " + p + "]";
+        }
+    }
+
+    private static class TileShadow extends View.DragShadowBuilder {
+
+        public TileShadow(View view) {
+            super(view);
+            Drawable shadow = view.getContext().getDrawable(R.drawable.qs_tile_background_drag);
+            view.setBackground(shadow);
+        }
+
+        @Override
+        public void onDrawShadow(Canvas canvas) {
+            super.onDrawShadow(canvas);
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSPage.java b/packages/SystemUI/src/com/android/systemui/qs/QSPage.java
new file mode 100644
index 0000000..7871a62
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSPage.java
@@ -0,0 +1,161 @@
+package com.android.systemui.qs;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.util.Log;
+import android.view.View;
+import android.view.ViewGroup;
+import com.android.systemui.R;
+
+public class QSPage extends ViewGroup {
+
+    private static final String TAG = "QSPage";
+
+    static final float TILE_ASPECT = 1.2f;
+
+    private int mCellWidth;
+    private int mCellHeight;
+    private int mLargeCellWidth;
+    private int mLargeCellHeight;
+    private int mGridHeight;
+
+    private QSDragPanel mPanel;
+
+    private int mPage;
+
+    private boolean mAdapterEditingState;
+
+    public QSPage(Context context, QSDragPanel panel, int page) {
+        super(context);
+        mPanel = panel;
+        mPage = page;
+        updateResources();
+        setClipChildren(false);
+        setClipToPadding(false);
+        setClipToOutline(false);
+    }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return false;
+    }
+
+    public int getPageIndex() {
+        return mPage;
+    }
+
+    public void updateResources() {
+        final Resources res = mContext.getResources();
+        final int columns = Math.max(1, res.getInteger(R.integer.quick_settings_num_columns));
+        mCellHeight = res.getDimensionPixelSize(R.dimen.qs_tile_height);
+        mCellWidth = (int)(mCellHeight * TILE_ASPECT);
+        mLargeCellHeight = res.getDimensionPixelSize(R.dimen.qs_dual_tile_height);
+        mLargeCellWidth = (int)(mLargeCellHeight * TILE_ASPECT);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        final int width = MeasureSpec.getSize(widthMeasureSpec);
+        if (mPanel.mCurrentlyAnimating.isEmpty() && !mPanel.isDragging()) {
+            int r = -1;
+            int c = -1;
+            int rows = 0;
+            for (QSPanel.TileRecord ts : mPanel.mRecords) {
+                QSDragPanel.DragTileRecord record = (QSDragPanel.DragTileRecord) ts;
+                if (record.page != mPage) continue;
+                if (record.tileView.getVisibility() == GONE) continue;
+
+                if (mPage == 0 && r == 0 && c == 1 && mPanel.mFirstRowLarge) {
+                    r = 1;
+                    c = 0;
+                } else if (r == -1 || c == (mPanel.getColumnCount() - 1)) {
+                    r++;
+                    c = 0;
+                } else {
+                    c++;
+                }
+                record.row = r;
+                record.col = c;
+                rows = r + 1;
+            }
+            mGridHeight = mPanel.getRowTop(rows);
+        }
+
+        View previousView = mPanel.getBrightnessView();
+        for (QSPanel.TileRecord ts : mPanel.mRecords) {
+            QSDragPanel.DragTileRecord record = (QSDragPanel.DragTileRecord) ts;
+            if (record.page != mPage) continue;
+            if (record.page != record.destinationPage) continue;
+
+            final boolean dual = dualRecord(record);
+            if (record.tileView.setDual(dual, record.tile.hasDualTargetsDetails())) {
+                record.tileView.handleStateChanged(record.tile.getState());
+            }
+            if (record.tileView.getVisibility() == GONE) continue;
+            final int cw = dual ? mLargeCellWidth : mCellWidth;
+            final int ch = dual ? mLargeCellHeight : mCellHeight;
+            record.tileView.measure(exactly(cw), exactly(ch));
+            previousView = record.tileView.updateAccessibilityOrder(previousView);
+        }
+        setMeasuredDimension(width, mGridHeight);
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int l, int t, int r, int b) {
+        final int w = getWidth();
+        boolean isRtl = getLayoutDirection() == LAYOUT_DIRECTION_RTL;
+        for (QSPanel.TileRecord ts : mPanel.mRecords) {
+            QSDragPanel.DragTileRecord record = (QSDragPanel.DragTileRecord) ts;
+            if (record.page != mPage) continue;
+            if (record.page != record.destinationPage) continue;
+            if (record.tileView.getVisibility() == GONE) continue;
+
+            final int cols = mPanel.getColumnCount(mPage, record.row);
+
+            int left = mPanel.getLeft(record.row, record.col, cols, dualRecord(record));
+            final int top = mPanel.getRowTop(record.row);
+            int right;
+            int tileWith = record.tileView.getMeasuredWidth();
+            if (isRtl) {
+                right = w - left;
+                left = right - tileWith;
+            } else {
+                right = left + tileWith;
+            }
+            if (mPanel.isAnimating(record)) {
+                record.tileView.layout(record.tileView.getLeft(), record.tileView.getTop(),
+                        record.tileView.getRight(), record.tileView.getBottom());
+                continue;
+            }
+            if (false) {
+                Log.v(TAG + "-" + mPage, "laying out " + record + ", top: " + top + ", left: " + left);
+                Log.d(TAG, record + " wiping translations: "
+                        + record.tileView.getTranslationX()
+                        + ", " + record.tileView.getTranslationY());
+            }
+            record.tileView.setTranslationX(0);
+            record.tileView.setTranslationY(0);
+
+            record.destination.x = record.tileView.getX();
+            record.destination.y = record.tileView.getY();
+
+            record.tileView.layout(left, top, right, top + record.tileView.getMeasuredHeight());
+        }
+    }
+
+    public boolean getAdapterEditingState() {
+        return mAdapterEditingState;
+    }
+
+    public void setAdapterEditingState(boolean editing) {
+        this.mAdapterEditingState = editing;
+    }
+
+    public boolean dualRecord(QSPanel.TileRecord record) {
+        return mPanel.mFirstRowLarge && record.row == 0 && mPage == 0;
+    }
+
+    private static int exactly(int size) {
+        return MeasureSpec.makeMeasureSpec(size, MeasureSpec.EXACTLY);
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSPanel.java b/packages/SystemUI/src/com/android/systemui/qs/QSPanel.java
index 7da8495..77ede93 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSPanel.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSPanel.java
@@ -19,43 +19,25 @@ package com.android.systemui.qs;
 import android.animation.Animator;
 import android.animation.Animator.AnimatorListener;
 import android.animation.AnimatorListenerAdapter;
-import android.animation.ObjectAnimator;
-import android.content.ContentResolver;
 import android.content.Context;
-import android.database.ContentObserver;
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.content.res.Resources;
-import android.net.Uri;
 import android.os.Handler;
 import android.os.Message;
 import android.os.UserHandle;
-import android.os.Vibrator;
 import android.provider.Settings;
 import android.util.AttributeSet;
-import android.util.TypedValue;
-import android.view.animation.AccelerateInterpolator;
-import android.view.animation.AccelerateDecelerateInterpolator;
-import android.view.animation.AnticipateInterpolator;
-import android.view.animation.AnticipateOvershootInterpolator;
-import android.view.animation.BounceInterpolator;
-import android.view.animation.DecelerateInterpolator;
-import android.view.animation.LinearInterpolator;
-import android.view.animation.OvershootInterpolator;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.accessibility.AccessibilityEvent;
 import android.widget.ImageView;
-  
-import android.graphics.PorterDuff.Mode;
-import android.graphics.PorterDuffColorFilter;
 import android.widget.TextView;
 
 import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.FontSizeUtils;
 import com.android.systemui.R;
-import com.android.systemui.qs.QSTile.CustomTitleDetailAdapter;
 import com.android.systemui.qs.QSTile.DetailAdapter;
 import com.android.systemui.settings.BrightnessController;
 import com.android.systemui.settings.ToggleSlider;
@@ -64,54 +46,43 @@ import com.android.systemui.statusbar.policy.BrightnessMirrorController;
 
 import java.util.ArrayList;
 import java.util.Collection;
+
+import cyanogenmod.app.StatusBarPanelCustomTile;
 import cyanogenmod.providers.CMSettings;
 
 /** View that represents the quick settings tile panel. **/
 public class QSPanel extends ViewGroup {
-    private static final float TILE_ASPECT = 1.2f;
-
-    private final Context mContext;
-    protected final ArrayList<TileRecord> mRecords = new ArrayList<TileRecord>();
-    private final View mDetail;
-    private final ViewGroup mDetailContent;
-    private final TextView mDetailSettingsButton;
-    private final TextView mDetailDoneButton;
-    protected final View mBrightnessView;
-    private final QSDetailClipper mClipper;
+    protected static final float TILE_ASPECT = 1.2f;
+
+    protected final ArrayList<TileRecord> mRecords = new ArrayList<>();
+    protected View mDetail;
+    protected ViewGroup mDetailContent;
+    protected TextView mDetailSettingsButton;
+    protected TextView mDetailDoneButton;
+    protected View mBrightnessView;
+    protected QSDetailClipper mClipper;
     private final H mHandler = new H();
 
-    private int mColumns;
-    private int mNumberOfColumns;
-    private int mCellWidth;
-    private int mCellHeight;
-    private int mLargeCellWidth;
-    private int mLargeCellHeight;
-    private int mPanelPaddingBottom;
-    private int mDualTileUnderlap;
-    private int mBrightnessPaddingTop;
-    private int mGridHeight;
-    private boolean mExpanded;
-    private boolean mListening;
+    protected int mColumns;
+    protected int mCellWidth;
+    protected int mCellHeight;
+    protected int mLargeCellWidth;
+    protected int mLargeCellHeight;
+    protected int mPanelPaddingBottom;
+    protected int mDualTileUnderlap;
+    protected int mBrightnessPaddingTop;
+    protected int mGridHeight;
+    protected boolean mExpanded;
+    protected boolean mListening;
     private boolean mClosingDetail;
-    private int  mQsColorSwitch;
-    private int mQsIconColor;
-    private int mLabelColor;
-
-    private boolean mVibrationEnabled;
 
-    private Record mDetailRecord;
+    protected Record mDetailRecord;
     private Callback mCallback;
-    private BrightnessController mBrightnessController;
-    private QSTileHost mHost;
-
-    private QSFooter mFooter;
-    private boolean mGridContentVisible = true;
-
-    protected Vibrator mVibrator;
-
-    private SettingsObserver mSettingsObserver;
+    protected BrightnessController mBrightnessController;
+    protected QSTileHost mHost;
 
-    private boolean mUseMainTiles = false;
+    protected QSFooter mFooter;
+    protected boolean mGridContentVisible = true;
 
     public QSPanel(Context context) {
         this(context, null);
@@ -120,40 +91,28 @@ public class QSPanel extends ViewGroup {
     public QSPanel(Context context, AttributeSet attrs) {
         super(context, attrs);
         mContext = context;
+        setupViews();
+    }
 
-        mDetail = LayoutInflater.from(context).inflate(R.layout.qs_detail, this, false);
+    /**
+     * THIS IS OVERRIDDEN in QSDragPanel
+     */
+    protected void setupViews() {
+        mDetail = LayoutInflater.from(mContext).inflate(R.layout.qs_detail, this, false);
         mDetailContent = (ViewGroup) mDetail.findViewById(android.R.id.content);
         mDetailSettingsButton = (TextView) mDetail.findViewById(android.R.id.button2);
         mDetailDoneButton = (TextView) mDetail.findViewById(android.R.id.button1);
         updateDetailText();
-	mBrightnessView = LayoutInflater.from(mContext).inflate(
-                R.layout.quick_settings_brightness_dialog, this, false);
         mDetail.setVisibility(GONE);
         mDetail.setClickable(true);
-        mFooter = new QSFooter(this, context);
+        mBrightnessView = LayoutInflater.from(mContext).inflate(
+                R.layout.quick_settings_brightness_dialog, this, false);
+        mFooter = new QSFooter(this, mContext);
         addView(mDetail);
         addView(mBrightnessView);
         addView(mFooter.getView());
         mClipper = new QSDetailClipper(mDetail);
-        mVibrator = (Vibrator) mContext.getSystemService(Context.VIBRATOR_SERVICE);
-        mSettingsObserver = new SettingsObserver(mHandler);
         updateResources();
-        updateResources();
-        mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-	mLabelColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF);
-	mQsIconColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_ICON_COLOR, 0xFFFFFFFF);
-	 if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-            mDetailDoneButton.setTextColor(mLabelColor);
-            mDetailSettingsButton.setTextColor(mLabelColor);
-        }
-
-
-        boolean brightnessIconEnabled = Settings.System.getIntForUser(
-            mContext.getContentResolver(), Settings.System.BRIGHTNESS_ICON,
-                0, UserHandle.USER_CURRENT) == 1;
 
         mBrightnessController = new BrightnessController(getContext(),
                 (ImageView) findViewById(R.id.brightness_icon),
@@ -165,7 +124,6 @@ public class QSPanel extends ViewGroup {
                 announceForAccessibility(
                         mContext.getString(R.string.accessibility_desc_quick_settings));
                 closeDetail();
-                vibrateTile(20);
             }
         });
     }
@@ -173,108 +131,23 @@ public class QSPanel extends ViewGroup {
     /**
      * Enable/disable brightness slider.
      */
-    private boolean showBrightnessSlider() {
+    protected boolean showBrightnessSlider() {
         boolean brightnessSliderEnabled = CMSettings.System.getIntForUser(
             mContext.getContentResolver(), CMSettings.System.QS_SHOW_BRIGHTNESS_SLIDER,
                 1, UserHandle.USER_CURRENT) == 1;
-        boolean brightnessIconEnabled = Settings.System.getIntForUser(
-            mContext.getContentResolver(), Settings.System.BRIGHTNESS_ICON,
-                0, UserHandle.USER_CURRENT) == 1;
         ToggleSlider brightnessSlider = (ToggleSlider) findViewById(R.id.brightness_slider);
-        ImageView brightnessIcon = (ImageView) findViewById(R.id.brightness_icon);
-        if(brightnessSlider!=null) {
-	    if (brightnessSliderEnabled) {
-		mBrightnessView.setVisibility(View.VISIBLE);
-		brightnessSlider.setVisibility(View.VISIBLE);
-			if(brightnessIcon!=null) {
-				  if (brightnessIconEnabled) {
-				 brightnessIcon.setVisibility(View.VISIBLE);
-				  } else {
-				  brightnessIcon.setVisibility(View.GONE);
-				  }
-			}
-		} else {
-		mBrightnessView.setVisibility(View.GONE);
-		brightnessSlider.setVisibility(View.GONE);
-		brightnessIcon.setVisibility(View.GONE);
-	      }
+        if (brightnessSliderEnabled) {
+            mBrightnessView.setVisibility(VISIBLE);
+            brightnessSlider.setVisibility(VISIBLE);
+        } else {
+            mBrightnessView.setVisibility(GONE);
+            brightnessSlider.setVisibility(GONE);
         }
         updateResources();
-        updatecolors();
         return brightnessSliderEnabled;
     }
-    
-     public void updatecolors() {
-	refreshAllTiles();
-	ImageView brightnessIcon = (ImageView) findViewById(R.id.brightness_icon);
-        mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-	int mIconColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_BRIGHTNESS_ICON_COLOR, 0xFFFFFFFF);
-        if(brightnessIcon!=null) {        
-		if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {	
-		brightnessIcon.setColorFilter(mIconColor, Mode.SRC_ATOP);
-		}
-	}
-	mBrightnessController.setColors();	
-     }
-     
-        
-  public void setDetailBackgroundColor(int color) {
-	final Resources res = getContext().getResources();
-	int mStockBg = res.getColor(R.color.quick_settings_panel_background);
-        mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-         if (mQsColorSwitch == 1 || mQsColorSwitch == 2)  {
-            if (mDetail != null) {
-                    mDetail.getBackground().setColorFilter(
-                            color, Mode.SRC_ATOP);
-                } 		
-            } else {
-	if (mDetail != null) {
-                    mDetail.getBackground().setColorFilter(
-                           mStockBg, Mode.SRC_ATOP);
-              	  }
-	   } 
-	}
-	
-  public void setQSShadeAlphaValue(int alpha) {
-        if (mDetail != null) {
-            mDetail.getBackground().setAlpha(alpha);
-        }
-    }
-    
-    public void updateicons() {
-	mLabelColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF);
-	mQsIconColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_ICON_COLOR, 0xFFFFFFFF);
-	}
 
-    public void vibrateTile(int duration) {
-        if (!mVibrationEnabled) { return; }
-        if (mVibrator != null) {
-            if (mVibrator.hasVibrator()) { mVibrator.vibrate(duration); }
-        }
-    }
-
-    /**
-     * Use three or four columns.
-     */
-    private int useFourColumns() {
-        final Resources res = mContext.getResources();
-        boolean shouldUseFourColumns = Settings.System.getInt(
-            mContext.getContentResolver(), Settings.System.QS_USE_FOUR_COLUMNS,
-                0) == 1;
-        if (shouldUseFourColumns) {
-            mNumberOfColumns = 4;
-        } else {
-            mNumberOfColumns = res.getInteger(R.integer.quick_settings_num_columns);
-        }
-        return mNumberOfColumns;
-    }
-
-    private void updateDetailText() {
+    protected void updateDetailText() {
         mDetailDoneButton.setText(R.string.quick_settings_done);
         mDetailSettingsButton.setText(R.string.quick_settings_more_settings);
     }
@@ -302,61 +175,25 @@ public class QSPanel extends ViewGroup {
 
     public void updateResources() {
         final Resources res = mContext.getResources();
+        final int columns = Math.max(1, res.getInteger(R.integer.quick_settings_num_columns));
+        mCellHeight = res.getDimensionPixelSize(R.dimen.qs_tile_height);
+        mCellWidth = (int)(mCellHeight * TILE_ASPECT);
         mLargeCellHeight = res.getDimensionPixelSize(R.dimen.qs_dual_tile_height);
         mLargeCellWidth = (int)(mLargeCellHeight * TILE_ASPECT);
         mPanelPaddingBottom = res.getDimensionPixelSize(R.dimen.qs_panel_padding_bottom);
         mDualTileUnderlap = res.getDimensionPixelSize(R.dimen.qs_dual_tile_padding_vertical);
         mBrightnessPaddingTop = res.getDimensionPixelSize(R.dimen.qs_brightness_padding_top);
-        updateNumColumns();
-        if (mListening) {
-            refreshAllTiles();
-            mSettingsObserver.observe();
-        }
-        updateDetailText();
-    }
-
-    public void updateNumColumns() {
-        final Resources res = mContext.getResources();
-        final ContentResolver resolver = mContext.getContentResolver();
-        int defColumns = Math.max(1, res.getInteger(R.integer.quick_settings_num_columns));
-        int columns = Settings.System.getIntForUser(resolver,
-                Settings.System.QS_NUM_TILE_COLUMNS, defColumns,
-                UserHandle.USER_CURRENT);
         if (mColumns != columns) {
             mColumns = columns;
+            postInvalidate();
         }
-        float aspect = getAspectForColumnCount(columns, res);
-        mCellHeight = Math.round(res.getDimensionPixelSize(
-                R.dimen.qs_tile_height) * aspect);
-        mCellWidth = Math.round(mCellHeight * (TILE_ASPECT * aspect));
-        for (TileRecord record : mRecords) {
-            record.tileView.updateDimens(res, aspect);
-            record.tileView.recreateLabel();
-            if (record.tileView.getVisibility() != GONE) {
-                record.tileView.requestLayout();
-            }
+        for (TileRecord r : mRecords) {
+            r.tile.clearState();
         }
-        postInvalidate();
-    }
-
-    private float getAspectForColumnCount(int numColumns, Resources res) {
-        TypedValue tileScaleFactor = new TypedValue();
-        int dimen;
-        switch (numColumns) {
-            case 3:
-                dimen = R.dimen.qs_tile_three_column_scale;
-                break;
-            case 4:
-                dimen = R.dimen.qs_tile_four_column_scale;
-                break;
-            case 5:
-                dimen = R.dimen.qs_tile_five_column_scale;
-                break;
-            default:
-                dimen = R.dimen.qs_tile_three_column_scale;
+        if (mListening) {
+            refreshAllTiles();
         }
-        res.getValue(dimen, tileScaleFactor, true);
-        return tileScaleFactor.getFloat();
+        updateDetailText();
     }
 
     @Override
@@ -397,9 +234,6 @@ public class QSPanel extends ViewGroup {
         mFooter.setListening(mListening);
         if (mListening) {
             refreshAllTiles();
-            mSettingsObserver.observe();
-        } else {
-            mSettingsObserver.unobserve();
         }
         if (listening && showBrightnessSlider()) {
             mBrightnessController.registerCallbacks();
@@ -409,11 +243,7 @@ public class QSPanel extends ViewGroup {
     }
 
     public void refreshAllTiles() {
-        mUseMainTiles = Settings.System.getIntForUser(getContext().getContentResolver(),
-                Settings.System.QS_USE_MAIN_TILES, 1, UserHandle.USER_CURRENT) == 1;
-        for (int i = 0; i < mRecords.size(); i++) {
-            TileRecord r = mRecords.get(i);
-            r.tileView.setDual(mUseMainTiles && i < 2);
+        for (TileRecord r : mRecords) {
             r.tile.refreshState();
         }
         mFooter.refreshState();
@@ -435,11 +265,11 @@ public class QSPanel extends ViewGroup {
         showDetail(show, r);
     }
 
-    private void showDetail(boolean show, Record r) {
+    protected void showDetail(boolean show, Record r) {
         mHandler.obtainMessage(H.SHOW_DETAIL, show ? 1 : 0, 0, r).sendToTarget();
     }
 
-    private void setTileVisibility(View v, int visibility) {
+    protected void setTileVisibility(View v, int visibility) {
         mHandler.obtainMessage(H.SET_TILE_VISIBILITY, visibility, 0, v).sendToTarget();
     }
 
@@ -451,6 +281,15 @@ public class QSPanel extends ViewGroup {
         v.setVisibility(visibility);
     }
 
+    protected void setTileEnabled(View v, boolean enabled) {
+        mHandler.obtainMessage(H.SET_TILE_ENABLED, enabled ? 1 : 0, 0, v).sendToTarget();
+    }
+
+    private void handleSetTileEnabled(View v, boolean enabled) {
+        if (enabled == v.isEnabled()) return;
+        v.setEnabled(enabled);
+    }
+
     public void setTiles(Collection<QSTile<?>> tiles) {
         for (TileRecord record : mRecords) {
             removeView(record.tileView);
@@ -464,63 +303,12 @@ public class QSPanel extends ViewGroup {
         }
     }
 
-    private void drawTile(TileRecord r, QSTile.State state) {
+    protected void drawTile(TileRecord r, QSTile.State state) {
         final int visibility = state.visible ? VISIBLE : GONE;
         setTileVisibility(r.tileView, visibility);
         r.tileView.onStateChanged(state);
     }
 
-    private void setAnimationTile(TileRecord r) {
-        ObjectAnimator animTile = null;
-        int animStyle = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.ANIM_TILE_STYLE, 0, UserHandle.USER_CURRENT);
-        int animDuration = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.ANIM_TILE_DURATION, 1500, UserHandle.USER_CURRENT);
-        int interpolatorType = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.ANIM_TILE_INTERPOLATOR, 0, UserHandle.USER_CURRENT);
-        if (animStyle == 0) {
-            //No animation
-        }
-        if (animStyle == 1) {
-            animTile = ObjectAnimator.ofFloat(r.tileView, "rotationY", 0f, 360f);
-        }
-        if (animStyle == 2) {
-            animTile = ObjectAnimator.ofFloat(r.tileView, "rotation", 0f, 360f);
-        }
-        if (animTile != null) {
-            switch (interpolatorType) {
-                    case 0:
-                        animTile.setInterpolator(new LinearInterpolator());
-                        break;
-                    case 1:
-                        animTile.setInterpolator(new AccelerateInterpolator());
-                        break;
-                    case 2:
-                        animTile.setInterpolator(new DecelerateInterpolator());
-                        break;
-                    case 3:
-                        animTile.setInterpolator(new AccelerateDecelerateInterpolator());
-                        break;
-                    case 4:
-                        animTile.setInterpolator(new BounceInterpolator());
-                        break;
-                    case 5:
-                        animTile.setInterpolator(new OvershootInterpolator());
-                        break;
-                    case 6:
-                        animTile.setInterpolator(new AnticipateInterpolator());
-                        break;
-                    case 7:
-                        animTile.setInterpolator(new AnticipateOvershootInterpolator());
-                        break;
-                    default:
-                        break;
-            }
-            animTile.setDuration(animDuration);
-            animTile.start();
-        }
-    }
-
     private void addTile(final QSTile<?> tile) {
         final TileRecord r = new TileRecord();
         r.tile = tile;
@@ -541,7 +329,6 @@ public class QSPanel extends ViewGroup {
             public void onToggleStateChanged(boolean state) {
                 if (mDetailRecord == r) {
                     fireToggleStateChanged(state);
-                    vibrateTile(20);
                 }
             }
             @Override
@@ -562,24 +349,18 @@ public class QSPanel extends ViewGroup {
             @Override
             public void onClick(View v) {
                 r.tile.click();
-                setAnimationTile(r);
-                vibrateTile(20);
             }
         };
         final View.OnClickListener clickSecondary = new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 r.tile.secondaryClick();
-                setAnimationTile(r);
-                vibrateTile(20);
             }
         };
         final View.OnLongClickListener longClick = new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View v) {
                 r.tile.longClick();
-                setAnimationTile(r);
-                vibrateTile(20);
                 return true;
             }
         };
@@ -622,7 +403,7 @@ public class QSPanel extends ViewGroup {
         }
     }
 
-    private void handleShowDetailTile(TileRecord r, boolean show) {
+    protected void handleShowDetailTile(TileRecord r, boolean show) {
         if ((mDetailRecord != null) == show && mDetailRecord == r) return;
 
         if (show) {
@@ -635,7 +416,7 @@ public class QSPanel extends ViewGroup {
         handleShowDetailImpl(r, show, x, y);
     }
 
-    private void handleShowDetailImpl(Record r, boolean show, int x, int y) {
+    protected void handleShowDetailImpl(Record r, boolean show, int x, int y) {
         boolean visibleDiff = (mDetailRecord != null) != show;
         if (!visibleDiff && mDetailRecord == r) return;  // already in right state
         DetailAdapter detailAdapter = null;
@@ -651,7 +432,6 @@ public class QSPanel extends ViewGroup {
                 @Override
                 public void onClick(View v) {
                     mHost.startActivityDismissingKeyguard(settingsIntent);
-                    vibrateTile(20);
                 }
             });
 
@@ -661,7 +441,7 @@ public class QSPanel extends ViewGroup {
             MetricsLogger.visible(mContext, detailAdapter.getMetricsCategory());
             announceForAccessibility(mContext.getString(
                     R.string.accessibility_quick_settings_detail,
-                    QSTile.getDetailAdapterTitle(mContext, detailAdapter)));
+                    mContext.getString(detailAdapter.getTitle())));
             setDetailRecord(r);
             listener = mHideGridContentWhenDone;
             if (r instanceof TileRecord && visibleDiff) {
@@ -679,14 +459,11 @@ public class QSPanel extends ViewGroup {
         sendAccessibilityEvent(AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED);
         fireShowingDetail(show ? detailAdapter : null);
         if (visibleDiff) {
-	    try {
             mClipper.animateCircularClip(x, y, show, listener);
-            } catch(IllegalStateException e) {
-            }
         }
     }
 
-    private void setGridContentVisibility(boolean visible) {
+    protected void setGridContentVisibility(boolean visible) {
         int newVis = visible ? VISIBLE : INVISIBLE;
         for (int i = 0; i < mRecords.size(); i++) {
             TileRecord tileRecord = mRecords.get(i);
@@ -722,10 +499,7 @@ public class QSPanel extends ViewGroup {
         for (TileRecord record : mRecords) {
             if (record.tileView.getVisibility() == GONE) continue;
             // wrap to next column if we've reached the max # of columns
-            if (mUseMainTiles && r == 0 && c == 1) {
-                r = 1;
-                c = 0;
-            } else if (r == -1 || c == (mColumns - 1)) {
+            if (r == -1 || c == (mColumns - 1)) {
                 r++;
                 c = 0;
             } else {
@@ -738,9 +512,13 @@ public class QSPanel extends ViewGroup {
 
         View previousView = mBrightnessView;
         for (TileRecord record : mRecords) {
+            final boolean dualTarget = record.tile.hasDualTargetsDetails();
+            if (record.tileView.setDual(dualTarget, dualTarget)) {
+                record.tileView.handleStateChanged(record.tile.getState());
+            }
             if (record.tileView.getVisibility() == GONE) continue;
-            final int cw = (mUseMainTiles && record.row == 0) ? mLargeCellWidth : mCellWidth;
-            final int ch = (mUseMainTiles && record.row == 0) ? mLargeCellHeight : mCellHeight;
+            final int cw = record.row == 0 ? mLargeCellWidth : mCellWidth;
+            final int ch = record.row == 0 ? mLargeCellHeight : mCellHeight;
             record.tileView.measure(exactly(cw), exactly(ch));
             previousView = record.tileView.updateAccessibilityOrder(previousView);
         }
@@ -770,7 +548,7 @@ public class QSPanel extends ViewGroup {
         for (TileRecord record : mRecords) {
             if (record.tileView.getVisibility() == GONE) continue;
             final int cols = getColumnCount(record.row);
-            final int cw = (mUseMainTiles && record.row == 0) ? mLargeCellWidth : mCellWidth;
+            final int cw = record.row == 0 ? mLargeCellWidth : mCellWidth;
             final int extra = (w - cw * cols) / (cols + 1);
             int left = record.col * cw + (record.col + 1) * extra;
             final int top = getRowTop(record.row);
@@ -793,11 +571,10 @@ public class QSPanel extends ViewGroup {
         }
     }
 
-    private int getRowTop(int row) {
-        if (row <= 0) return (mBrightnessView.getVisibility() != GONE ? mBrightnessView.getMeasuredHeight() : 0) + mBrightnessPaddingTop;
-        return (mBrightnessView.getVisibility() != GONE ? mBrightnessView.getMeasuredHeight() : 0) + mBrightnessPaddingTop
-                + (mUseMainTiles ? mLargeCellHeight - mDualTileUnderlap : mCellHeight)
-                + (row - 1) * mCellHeight;
+    protected int getRowTop(int row) {
+        if (row <= 0) return mBrightnessView.getMeasuredHeight() + mBrightnessPaddingTop;
+        return mBrightnessView.getMeasuredHeight() + mBrightnessPaddingTop
+                + mLargeCellHeight - mDualTileUnderlap + (row - 1) * mCellHeight;
     }
 
     private int getColumnCount(int row) {
@@ -815,13 +592,13 @@ public class QSPanel extends ViewGroup {
         }
     }
 
-    private void fireToggleStateChanged(boolean state) {
+    protected void fireToggleStateChanged(boolean state) {
         if (mCallback != null) {
             mCallback.onToggleStateChanged(state);
         }
     }
 
-    private void fireScanStateChanged(boolean state) {
+    protected void fireScanStateChanged(boolean state) {
         if (mCallback != null) {
             mCallback.onScanStateChanged(state);
         }
@@ -838,24 +615,27 @@ public class QSPanel extends ViewGroup {
     private class H extends Handler {
         private static final int SHOW_DETAIL = 1;
         private static final int SET_TILE_VISIBILITY = 2;
+        private static final int SET_TILE_ENABLED = 3;
         @Override
         public void handleMessage(Message msg) {
             if (msg.what == SHOW_DETAIL) {
                 handleShowDetail((Record)msg.obj, msg.arg1 != 0);
             } else if (msg.what == SET_TILE_VISIBILITY) {
                 handleSetTileVisibility((View)msg.obj, msg.arg1);
+            } else if (msg.what == SET_TILE_ENABLED) {
+                handleSetTileEnabled((View)msg.obj, msg.arg1 == 1);
             }
         }
     }
 
-    private static class Record {
+    protected static class Record {
         View detailView;
         DetailAdapter detailAdapter;
         int x;
         int y;
     }
 
-    protected static final class TileRecord extends Record {
+    protected static class TileRecord extends Record {
         public QSTile<?> tile;
         public QSTileView tileView;
         public int row;
@@ -884,7 +664,7 @@ public class QSPanel extends ViewGroup {
         public void onAnimationEnd(Animator animation) {
             // Only hide content if still in detail state.
             if (mDetailRecord != null) {
-                setGridContentVisibility(true);
+                setGridContentVisibility(false);
                 redrawTile();
             }
         }
@@ -903,48 +683,4 @@ public class QSPanel extends ViewGroup {
         void onToggleStateChanged(boolean state);
         void onScanStateChanged(boolean state);
     }
-
-    private class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QUICK_SETTINGS_TILES_VIBRATE),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_USE_MAIN_TILES),
-                    false, this, UserHandle.USER_ALL);
-            update();
-        }
-
-        void unobserve() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.unregisterContentObserver(this);
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            super.onChange(selfChange);
-            update();
-        }
-
-        @Override
-        public void onChange(boolean selfChange, Uri uri) {
-            update();
-        }
-
-        public void update() {
-            ContentResolver resolver = mContext.getContentResolver();
-            mVibrationEnabled = Settings.System.getIntForUser(
-            mContext.getContentResolver(), Settings.System.QUICK_SETTINGS_TILES_VIBRATE,
-                0, UserHandle.USER_CURRENT) == 1;
-           mUseMainTiles = Settings.System.getIntForUser(
-            mContext.getContentResolver(), Settings.System.QS_USE_MAIN_TILES,
-                1, UserHandle.USER_CURRENT) == 1;
-        }
-    }
 }
-
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSPanelTopView.java b/packages/SystemUI/src/com/android/systemui/qs/QSPanelTopView.java
new file mode 100644
index 0000000..b00483c
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSPanelTopView.java
@@ -0,0 +1,377 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.systemui.qs;
+
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
+import android.annotation.Nullable;
+import android.app.ActivityManager;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.graphics.PorterDuff;
+import android.graphics.drawable.Animatable;
+import android.graphics.drawable.Drawable;
+import android.os.Handler;
+import android.os.UserHandle;
+import android.support.v4.graphics.drawable.DrawableCompat;
+import android.support.v4.view.animation.FastOutSlowInInterpolator;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.TextView;
+import com.android.systemui.R;
+import com.android.systemui.cm.UserContentObserver;
+import com.android.systemui.settings.ToggleSlider;
+
+import cyanogenmod.providers.CMSettings;
+
+public class QSPanelTopView extends FrameLayout {
+
+    private static final String TAG = "QSPanelTopView";
+
+    public static final int TOAST_DURATION = 2000;
+
+    protected View mEditTileInstructionView;
+    protected View mDropTarget;
+    protected View mBrightnessView;
+    protected TextView mToastView;
+    protected View mAddTarget;
+    protected TextView mEditInstructionText;
+
+    private boolean mEditing = false;
+    private boolean mDisplayingInstructions = false;
+    private boolean mDisplayingTrash = false;
+    private boolean mDisplayingToast = false;
+    public boolean mHasBrightnessSliderToDisplay = true;
+
+    private AnimatorSet mAnimator;
+    private ImageView mDropTargetIcon;
+
+    private SettingsObserver mSettingsObserver;
+    private boolean mListening;
+    private boolean mSkipAnimations;
+
+    public QSPanelTopView(Context context, @Nullable AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public QSPanelTopView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
+        this(context, attrs, defStyleAttr, 0);
+    }
+
+    public QSPanelTopView(Context context, @Nullable AttributeSet attrs, int defStyleAttr,
+                          int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+        setFocusable(true);
+        mSettingsObserver = new SettingsObserver(new Handler());
+    }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return mEditing;
+    }
+
+    public View getDropTarget() {
+        return mDropTarget;
+    }
+
+    public ImageView getDropTargetIcon() {
+        return mDropTargetIcon;
+    }
+
+    public View getBrightnessView() {
+        return mBrightnessView;
+    }
+
+    public View getAddTarget() {
+        return mAddTarget;
+    }
+
+    @Override
+    protected void onFinishInflate() {
+        super.onFinishInflate();
+        mDropTarget = findViewById(R.id.delete_container);
+        mDropTargetIcon = (ImageView) findViewById(R.id.delete_target);
+        mEditTileInstructionView = findViewById(R.id.edit_container);
+        mBrightnessView = findViewById(R.id.brightness_container);
+        mToastView = (TextView) findViewById(R.id.qs_toast);
+        mAddTarget = findViewById(R.id.add_target);
+        mEditInstructionText = (TextView) findViewById(R.id.edit_text_instruction);
+        updateResources();
+    }
+
+    public void updateResources() {
+        if (mEditInstructionText != null) {
+            mEditInstructionText.setText(R.string.qs_tile_edit_header_instruction);
+        }
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        final int width = MeasureSpec.getSize(widthMeasureSpec);
+        mBrightnessView.measure(QSDragPanel.exactly(width), MeasureSpec.UNSPECIFIED);
+        mEditTileInstructionView.measure(QSDragPanel.exactly(width), MeasureSpec.UNSPECIFIED);
+        mToastView.measure(QSDragPanel.exactly(width), MeasureSpec.UNSPECIFIED);
+
+        // if we are showing a brightness slider, always fit to that, otherwise only
+        // declare a height when editing.
+        int dh = mHasBrightnessSliderToDisplay ? mBrightnessView.getMeasuredHeight()
+                : mEditing ? mEditTileInstructionView.getMeasuredHeight() : 0;
+
+        mDropTarget.measure(QSDragPanel.exactly(width), QSDragPanel.atMost(dh));
+        mEditTileInstructionView.measure(QSDragPanel.exactly(width), QSDragPanel.atMost(dh));
+        mToastView.measure(QSDragPanel.exactly(width), QSDragPanel.atMost(dh));
+
+        setMeasuredDimension(width, dh);
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+        boolean animateToState = !isLaidOut();
+        super.onLayout(changed, left, top, right, bottom);
+        if (animateToState) {
+            goToState();
+        }
+    }
+
+    public void setEditing(boolean editing, boolean skipAnim) {
+        mEditing = editing;
+        if (editing) {
+            mDisplayingInstructions = true;
+            mDisplayingTrash = false;
+        } else {
+            mDisplayingInstructions = false;
+            mDisplayingTrash = false;
+        }
+        if (skipAnim) {
+            goToState();
+        } else {
+            animateToState();
+        }
+    }
+
+    public void onStopDrag() {
+        mDisplayingTrash = false;
+        animateToState();
+    }
+
+    public void onStartDrag() {
+        mDisplayingTrash = true;
+        animateToState();
+    }
+
+    public void setDropIcon(int resourceId, int colorResourceId) {
+        mDropTargetIcon.setImageResource(resourceId);
+        final Drawable drawable = mDropTargetIcon.getDrawable();
+
+        DrawableCompat.setTintMode(drawable, PorterDuff.Mode.SRC_ATOP);
+        DrawableCompat.setTint(drawable, mContext.getColor(colorResourceId));
+
+        if (drawable instanceof Animatable) {
+            ((Animatable) drawable).start();
+        }
+    }
+
+    public void toast(int textStrResId) {
+        mDisplayingToast = true;
+        mToastView.setText(textStrResId);
+        animateToState();
+    }
+
+    private Runnable mAnimateRunnable = new Runnable() {
+        @Override
+        public void run() {
+            if (mAnimator != null) {
+                mAnimator.cancel();
+            }
+            mAnimator = new AnimatorSet();
+
+            final boolean showToast = mDisplayingToast;
+            final boolean showTrash = mDisplayingTrash && !mDisplayingToast;
+            final boolean showBrightness = !mEditing && !mDisplayingToast;
+            final boolean showInstructions = mEditing
+                    && mDisplayingInstructions
+                    && !mDisplayingTrash
+                    && !mDisplayingToast;
+
+            /*Log.d(TAG, "animating to state: "
+                    + " showBrightness: " + showBrightness
+                    + " showInstructions: " + showInstructions
+                    + " showTrash: " + showTrash
+                    + " showToast: " + showToast
+            );*/
+
+            final Animator brightnessAnimator = showBrightnessSlider(showBrightness);
+            final Animator instructionAnimator = showInstructions(showInstructions);
+            final Animator trashAnimator = showTrash(showTrash);
+            final Animator toastAnimator = showToast(showToast);
+
+            mAnimator.addListener(new AnimatorListenerAdapter() {
+                @Override
+                public void onAnimationStart(Animator animation) {
+                    // if the view is already visible, keep it visible on animation start
+                    // to animate it out, otherwise set it as invisible (to not affect view height)
+                    mEditTileInstructionView.setVisibility(
+                            getVisibilityForAnimation(mEditTileInstructionView, showInstructions));
+                    mDropTarget.setVisibility(
+                            getVisibilityForAnimation(mDropTarget, showTrash));
+                    mToastView.setVisibility(
+                            getVisibilityForAnimation(mToastView, showToast));
+                    if (mHasBrightnessSliderToDisplay) {
+                        mBrightnessView.setVisibility(
+                                getVisibilityForAnimation(mBrightnessView, showBrightness));
+                    }
+                }
+
+                @Override
+                public void onAnimationEnd(Animator animation) {
+                    mToastView.setVisibility(showToast ? View.VISIBLE : View.GONE);
+                    mEditTileInstructionView.setVisibility(showInstructions
+                            ? View.VISIBLE : View.GONE);
+                    mDropTarget.setVisibility(showTrash ? View.VISIBLE : View.GONE);
+                    if (mHasBrightnessSliderToDisplay) {
+                        mBrightnessView.setVisibility(showBrightness ? View.VISIBLE : View.GONE);
+                    }
+
+                    mAnimator = null;
+
+                    requestLayout();
+
+                    if (showToast) {
+                        mToastView.bringToFront();
+                        mToastView.postDelayed(new Runnable() {
+                            @Override
+                            public void run() {
+                                mDisplayingToast = false;
+                                animateToState();
+                            }
+                        }, TOAST_DURATION);
+                    }
+                }
+            });
+
+            mAnimator.setDuration(mSkipAnimations ? 0 : 500);
+            mAnimator.setInterpolator(new FastOutSlowInInterpolator());
+            mAnimator.setStartDelay(mSkipAnimations ? 0 : 100);
+            mAnimator.playTogether(instructionAnimator, trashAnimator,
+                    brightnessAnimator, toastAnimator);
+            mAnimator.start();
+        }
+    };
+
+    private int getVisibilityForAnimation(View view, boolean show) {
+        if (show || view.getVisibility() != View.GONE) {
+            return View.VISIBLE;
+        }
+        return View.INVISIBLE;
+    }
+
+    private void animateToState() {
+        mSkipAnimations = false;
+        post(mAnimateRunnable);
+    }
+
+    private void goToState() {
+        mSkipAnimations = true;
+        post(mAnimateRunnable);
+    }
+
+    private Animator animateView(View v, boolean show) {
+        return ObjectAnimator.ofFloat(v, "translationY", show ? 0 : -getMeasuredHeight());
+    }
+
+    private Animator showBrightnessSlider(boolean show) {
+        return animateView(mBrightnessView, show);
+    }
+
+    private Animator showInstructions(boolean show) {
+        return animateView(mEditTileInstructionView, show);
+    }
+
+    private Animator showTrash(boolean show) {
+        return animateView(mDropTarget, show);
+    }
+
+    private Animator showToast(boolean show) {
+        return animateView(mToastView, show);
+    }
+
+    public void setListening(boolean listening) {
+        if (mListening == listening) return;
+        mListening = listening;
+        if (mListening) {
+            mSettingsObserver.observe();
+        } else {
+            mSettingsObserver.unobserve();
+        }
+
+    }
+
+    class SettingsObserver extends UserContentObserver {
+        SettingsObserver(Handler handler) {
+            super(handler);
+        }
+
+        @Override
+        protected void observe() {
+            super.observe();
+
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.System.QS_SHOW_BRIGHTNESS_SLIDER), false, this, UserHandle.USER_ALL);
+            update();
+        }
+
+        @Override
+        protected void unobserve() {
+            super.unobserve();
+
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.unregisterContentObserver(this);
+        }
+
+        @Override
+        public void update() {
+            ContentResolver resolver = mContext.getContentResolver();
+            int currentUserId = ActivityManager.getCurrentUser();
+            boolean showSlider = CMSettings.System.getIntForUser(resolver,
+                    CMSettings.System.QS_SHOW_BRIGHTNESS_SLIDER, 1, currentUserId) == 1;
+            if (showSlider != mHasBrightnessSliderToDisplay) {
+                if (mAnimator != null) {
+                    mAnimator.cancel(); // cancel everything we're animating
+                    mAnimator = null;
+                }
+                mHasBrightnessSliderToDisplay = showSlider;
+                if (mBrightnessView != null) {
+                    mBrightnessView.setVisibility(showSlider ? View.VISIBLE : View.GONE);
+
+                    // as per showBrightnessSlider() in QSPanel.java, we look it up on-the-go
+                    ToggleSlider brightnessSlider = (ToggleSlider) findViewById(R.id.brightness_slider);
+                    if (brightnessSlider != null) {
+                        brightnessSlider.setVisibility(showSlider ? View.VISIBLE : View.GONE);
+                    }
+
+                }
+                getParent().requestLayout();
+                animateToState();
+            }
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSSettings.java b/packages/SystemUI/src/com/android/systemui/qs/QSSettings.java
new file mode 100644
index 0000000..0a2b937
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSSettings.java
@@ -0,0 +1,141 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.systemui.qs;
+
+import android.Manifest;
+import android.annotation.Nullable;
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.os.ResultReceiver;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.CompoundButton;
+import android.widget.ScrollView;
+
+import com.android.systemui.R;
+import com.android.systemui.statusbar.phone.QSTileHost;
+import com.android.systemui.statusbar.phone.SystemUIDialog;
+
+public class QSSettings extends ScrollView {
+
+    private static final String RESULT_RECEIVER_EXTRA = "result_receiver";
+    private static final String LOCK_CLOCK_PACKAGENAME = "com.cyanogenmod.lockclock";
+    private static final String LOCK_CLOCK_PERM_CLASS = LOCK_CLOCK_PACKAGENAME
+            + ".weather.PermissionRequestActivity";
+
+    private QSTileHost mHost;
+
+    private boolean mAdapterEditingState;
+    private QSBooleanSettingRow mShowWeather;
+    private ResultReceiver mResultReceiver;
+
+    public QSSettings(Context context, @Nullable AttributeSet attrs) {
+        super(context, attrs);
+        setFillViewport(true);
+    }
+
+    @Override
+    protected void onFinishInflate() {
+        super.onFinishInflate();
+
+        findViewById(R.id.reset_tiles).setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                initiateTileReset();
+            }
+        });
+
+        mShowWeather = (QSBooleanSettingRow) findViewById(R.id.show_weather);
+        mShowWeather.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                if (isChecked) {
+                    PackageManager packageManager = getContext().getPackageManager();
+                    if (packageManager.checkPermission(Manifest.permission.ACCESS_COARSE_LOCATION,
+                            LOCK_CLOCK_PACKAGENAME) != PackageManager.PERMISSION_GRANTED) {
+                        mShowWeather.setChecked(false);
+                        requestPermission();
+                        mHost.collapsePanels();
+                    }
+                }
+            }
+        });
+    }
+
+    public Parcelable getResultReceiverForSending() {
+        if (mResultReceiver == null) {
+            mResultReceiver = new ResultReceiver(new Handler()) {
+                @Override
+                protected void onReceiveResult(int resultCode, Bundle resultData) {
+                    super.onReceiveResult(resultCode, resultData);
+                    if (resultCode == Activity.RESULT_OK) {
+                        mShowWeather.setChecked(true);
+                    }
+                    mResultReceiver = null;
+                }
+            };
+        }
+        Parcel parcel = Parcel.obtain();
+        mResultReceiver.writeToParcel(parcel, 0);
+        parcel.setDataPosition(0);
+        ResultReceiver receiverForSending = ResultReceiver.CREATOR.createFromParcel(parcel);
+        parcel.recycle();
+        return receiverForSending;
+    }
+
+    private void requestPermission() {
+        Intent i = new Intent();
+        i.setClassName(LOCK_CLOCK_PACKAGENAME, LOCK_CLOCK_PERM_CLASS);
+        i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        i.putExtra(RESULT_RECEIVER_EXTRA, getResultReceiverForSending());
+        getContext().startActivity(i);
+    }
+
+    private void initiateTileReset() {
+        final AlertDialog d = new AlertDialog.Builder(mContext)
+                .setMessage(R.string.qs_tiles_reset_confirmation)
+                .setNegativeButton(R.string.cancel, null)
+                .setPositiveButton(com.android.internal.R.string.reset,
+                        new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                mHost.initiateReset();
+                            }
+                        }).create();
+        SystemUIDialog.makeSystemUIDialog(d);
+        d.show();
+    }
+
+    public void setHost(QSTileHost host) {
+        mHost = host;
+    }
+
+    public boolean getAdapterEditingState() {
+        return mAdapterEditingState;
+    }
+
+    public void setAdapterEditingState(boolean editing) {
+        this.mAdapterEditingState = editing;
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSTile.java b/packages/SystemUI/src/com/android/systemui/qs/QSTile.java
index 089b38e..01a170f 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSTile.java
@@ -20,7 +20,9 @@ import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
 import android.graphics.drawable.Animatable;
+import android.graphics.Bitmap;
 import android.graphics.drawable.AnimatedVectorDrawable;
+import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
 import android.os.Looper;
@@ -30,6 +32,7 @@ import android.util.SparseArray;
 import android.view.View;
 import android.view.ViewGroup;
 
+import android.widget.RemoteViews;
 import com.android.systemui.qs.QSTile.State;
 import com.android.systemui.statusbar.policy.BatteryController;
 import com.android.systemui.statusbar.policy.BluetoothController;
@@ -42,6 +45,7 @@ import com.android.systemui.statusbar.policy.LocationController;
 import com.android.systemui.statusbar.policy.NetworkController;
 import com.android.systemui.statusbar.policy.RotationLockController;
 import com.android.systemui.statusbar.policy.ZenModeController;
+import cyanogenmod.app.StatusBarPanelCustomTile;
 
 import java.util.Collection;
 import java.util.Objects;
@@ -54,7 +58,6 @@ import java.util.Objects;
  * state update pass on tile looper.
  */
 public abstract class QSTile<TState extends State> implements Listenable {
-    public static int USES_CUSTOM_DETAIL_ADAPTER_TITLE = -2;
     protected final String TAG = "QSTile." + getClass().getSimpleName();
     protected static final boolean DEBUG = Log.isLoggable("QSTile", Log.DEBUG);
 
@@ -87,6 +90,10 @@ public abstract class QSTile<TState extends State> implements Listenable {
         mHandler = new H(host.getLooper());
     }
 
+    public boolean hasDualTargetsDetails() {
+        return false;
+    }
+
     public Host getHost() {
         return mHost;
     }
@@ -104,30 +111,11 @@ public abstract class QSTile<TState extends State> implements Listenable {
         Boolean getToggleState();
         View createDetailView(Context context, View convertView, ViewGroup parent);
         Intent getSettingsIntent();
+        StatusBarPanelCustomTile getCustomTile();
         void setToggleState(boolean state);
         int getMetricsCategory();
     }
 
-    /**
-     *
-     * Return USES_CUSTOM_DETAIL_ADAPTER_TITLE in parent getTitle() to invoke this method
-     * This design is a bit "creative" but better than writing an abstract class
-     * and redesigning half of the tiles
-     *
-     */
-    public interface CustomTitleDetailAdapter extends DetailAdapter {
-        String getCustomTitle();
-    }
-
-    public static String getDetailAdapterTitle(Context context, DetailAdapter adapter) {
-        int res = adapter.getTitle();
-        if (res == USES_CUSTOM_DETAIL_ADAPTER_TITLE && adapter instanceof CustomTitleDetailAdapter) {
-            return ((CustomTitleDetailAdapter) adapter).getCustomTitle();
-        } else {
-            return context.getString(res);
-        }
-    }
-
     // safe to call from any thread
 
     public void setCallback(Callback callback) {
@@ -338,10 +326,12 @@ public abstract class QSTile<TState extends State> implements Listenable {
     }
 
     public interface Host {
+        void removeCustomTile(StatusBarPanelCustomTile customTile);
         void startActivityDismissingKeyguard(Intent intent);
         void startActivityDismissingKeyguard(PendingIntent intent);
         void warn(String message, Throwable t);
         void collapsePanels();
+        RemoteViews.OnClickHandler getOnClickHandler();
         Looper getLooper();
         Context getContext();
         Collection<QSTile<?>> getTiles();
@@ -356,9 +346,17 @@ public abstract class QSTile<TState extends State> implements Listenable {
         FlashlightController getFlashlightController();
         KeyguardMonitor getKeyguardMonitor();
         BatteryController getBatteryController();
+        boolean isEditing();
+        void setEditing(boolean editing);
+        void resetTiles();
+        void goToSettingsPage();
 
         public interface Callback {
             void onTilesChanged();
+            void setEditing(boolean editing);
+            boolean isEditing();
+            void goToSettingsPage();
+            void resetTiles();
         }
     }
 
@@ -371,6 +369,42 @@ public abstract class QSTile<TState extends State> implements Listenable {
         }
     }
 
+    protected class ExternalIcon extends AnimationIcon {
+        private Context mPackageContext;
+        private String mPkg;
+        private int mResId;
+
+        public ExternalIcon(String pkg, int resId) {
+            super(resId);
+            mPkg = pkg;
+            mResId = resId;
+        }
+
+        @Override
+        public Drawable getDrawable(Context context) {
+            // Get the drawable from the package context
+            Drawable d = null;
+            try {
+                d = super.getDrawable(getPackageContext());
+            } catch (Throwable t) {
+                Log.w(TAG, "Error creating package context" + mPkg + " id=" + mResId, t);
+            }
+            return d;
+        }
+
+        private Context getPackageContext() {
+            if (mPackageContext == null) {
+                try {
+                    mPackageContext = mContext.createPackageContext(mPkg, 0);
+                } catch (Throwable t) {
+                    Log.w(TAG, "Error creating package context" + mPkg, t);
+                    return null;
+                }
+            }
+            return mPackageContext;
+        }
+    }
+
     public static class ResourceIcon extends Icon {
         private static final SparseArray<Icon> ICONS = new SparseArray<Icon>();
 
@@ -409,6 +443,21 @@ public abstract class QSTile<TState extends State> implements Listenable {
         }
     }
 
+    protected class ExternalBitmapIcon extends Icon {
+        private Bitmap mBitmap;
+
+        public ExternalBitmapIcon(Bitmap bitmap) {
+            mBitmap = bitmap;
+        }
+
+        @Override
+        public Drawable getDrawable(Context context) {
+            // This is gross
+            BitmapDrawable bitmapDrawable = new BitmapDrawable(context.getResources(), mBitmap);
+            return bitmapDrawable;
+        }
+    }
+
     protected class AnimationIcon extends ResourceIcon {
         private boolean mAllowAnimation;
 
@@ -451,18 +500,18 @@ public abstract class QSTile<TState extends State> implements Listenable {
 
     public static class State {
         public boolean visible;
+        public boolean enabled = true;
         public Icon icon;
         public String label;
         public String contentDescription;
         public String dualLabelContentDescription;
         public boolean autoMirrorDrawable = true;
-        public boolean enabled = true;
 
         public boolean copyTo(State other) {
             if (other == null) throw new IllegalArgumentException();
             if (!other.getClass().equals(getClass())) throw new IllegalArgumentException();
             final boolean changed = other.visible != visible
-		     || !Objects.equals(other.enabled, enabled)
+                    || !Objects.equals(other.enabled, enabled)
                     || !Objects.equals(other.icon, icon)
                     || !Objects.equals(other.label, label)
                     || !Objects.equals(other.contentDescription, contentDescription)
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSTileView.java b/packages/SystemUI/src/com/android/systemui/qs/QSTileView.java
index d20eb53..7c63782 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/QSTileView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSTileView.java
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2014 The Android Open Source Project
+ * Copyright (C) 2015 The CyanogenMod Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -18,24 +19,19 @@ package com.android.systemui.qs;
 
 import android.annotation.Nullable;
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
+import android.graphics.Color;
+import android.graphics.PorterDuff;
 import android.graphics.Typeface;
 import android.graphics.drawable.Animatable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.RippleDrawable;
-import android.database.ContentObserver;
-import android.graphics.Color;
-import android.graphics.PorterDuff;
-import android.graphics.PorterDuff.Mode;
-import android.net.Uri;
 import android.os.Handler;
 import android.os.Looper;
 import android.os.Message;
-import android.os.UserHandle;
-import android.provider.Settings;
+import android.util.Log;
 import android.util.MathUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -49,8 +45,6 @@ import com.android.systemui.FontSizeUtils;
 import com.android.systemui.R;
 import com.android.systemui.qs.QSTile.AnimationIcon;
 import com.android.systemui.qs.QSTile.State;
-import android.provider.Settings;
-
 
 import java.util.Objects;
 
@@ -59,24 +53,23 @@ public class QSTileView extends ViewGroup {
     private static final Typeface CONDENSED = Typeface.create("sans-serif-condensed",
             Typeface.NORMAL);
 
+    private static final String TAG = "QSTileView";
+
     protected final Context mContext;
     private final View mIcon;
     private final View mDivider;
-    public final H mHandler = new H();
-    private int mIconSizePx;
-    private float mSizeScale = 1.0f;
+    private final H mHandler = new H();
+    private final int mIconSizePx;
     private final int mTileSpacingPx;
     private int mTilePaddingTopPx;
-    private int mTilePaddingBelowIconPx;
+    private final int mTilePaddingBelowIconPx;
     private final int mDualTileVerticalPaddingPx;
     private final View mTopBackgroundView;
-    private int mQsColorSwitch ;
-    public int mIconColor;
-    public int mLabelColor;
 
     private TextView mLabel;
     private QSDualTileLabel mDualLabel;
     private boolean mDual;
+    private boolean mDualDetails;
     private OnClickListener mClickPrimary;
     private OnClickListener mClickSecondary;
     private OnLongClickListener mLongClick;
@@ -88,8 +81,9 @@ public class QSTileView extends ViewGroup {
 
         mContext = context;
         final Resources res = context.getResources();
-        updateDimens(res, 1.0f);
+        mIconSizePx = res.getDimensionPixelSize(R.dimen.qs_tile_icon_size);
         mTileSpacingPx = res.getDimensionPixelSize(R.dimen.qs_tile_spacing);
+        mTilePaddingBelowIconPx =  res.getDimensionPixelSize(R.dimen.qs_tile_padding_below_icon);
         mDualTileVerticalPaddingPx =
                 res.getDimensionPixelSize(R.dimen.qs_dual_tile_padding_vertical);
         mTileBackground = newTileBackground();
@@ -114,14 +108,6 @@ public class QSTileView extends ViewGroup {
         setId(View.generateViewId());
     }
 
-    void updateDimens(Resources res, float scaleFactor) {
-        mSizeScale = scaleFactor;
-        mIconSizePx = Math
-                .round(res.getDimensionPixelSize(R.dimen.qs_tile_icon_size) * scaleFactor);
-        mTilePaddingBelowIconPx = Math.round(res
-                .getDimensionPixelSize(R.dimen.qs_tile_padding_below_icon) * scaleFactor);
-    }
-
     private void updateTopPadding() {
         Resources res = getResources();
         int padding = res.getDimensionPixelSize(R.dimen.qs_tile_padding_top);
@@ -143,44 +129,37 @@ public class QSTileView extends ViewGroup {
         }
     }
 
-    void recreateLabel() {
+    private void recreateLabel() {
         CharSequence labelText = null;
         CharSequence labelDescription = null;
-        mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-	    mLabelColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF);
-        if (mLabel != null) {
+        if (mLabel != null && mLabel.isAttachedToWindow()) {
             labelText = mLabel.getText();
             removeView(mLabel);
-            mLabel = null;
         }
-        if (mDualLabel != null) {
+        if (mDualLabel != null && mDualLabel.isAttachedToWindow()) {
             labelText = mDualLabel.getText();
-            if (mLabel != null) {
-                labelDescription = mLabel.getContentDescription();
-            }
+            labelDescription = mDualLabel.getContentDescription();
             removeView(mDualLabel);
-            mDualLabel = null;
         }
         final Resources res = mContext.getResources();
         if (mDual) {
-            mDualLabel = new QSDualTileLabel(mContext);
-            mDualLabel.setId(View.generateViewId());
-            mDualLabel.setBackgroundResource(R.drawable.btn_borderless_rect);
-            mDualLabel.setFirstLineCaret(mContext.getDrawable(R.drawable.qs_dual_tile_caret));
-            if (mQsColorSwitch != 0) {
-            mDualLabel.setTextColor(mLabelColor);
-	    } else {
-	    mDualLabel.setTextColor(res.getColor(R.color.qs_tile_text));
-	    }
-            mDualLabel.setPadding(0, mDualTileVerticalPaddingPx, 0, mDualTileVerticalPaddingPx);
-            mDualLabel.setTypeface(CONDENSED);
-            mDualLabel.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                    res.getDimensionPixelSize(R.dimen.qs_tile_text_size));
-            mDualLabel.setClickable(true);
-            mDualLabel.setOnClickListener(mClickSecondary);
-            mDualLabel.setFocusable(true);
+            if (mDualLabel == null) {
+                mDualLabel = new QSDualTileLabel(mContext);
+                mDualLabel.setId(View.generateViewId());
+                mDualLabel.setBackgroundResource(R.drawable.btn_borderless_rect);
+                if (mDualDetails) {
+                    mDualLabel.setFirstLineCaret(mContext.getDrawable(R.drawable.qs_dual_tile_caret));
+                }
+                mDualLabel.setTextColor(mContext.getColor(R.color.qs_tile_text));
+                mDualLabel.setPadding(0, mDualTileVerticalPaddingPx, 0, mDualTileVerticalPaddingPx);
+                mDualLabel.setTypeface(CONDENSED);
+                mDualLabel.setTextSize(TypedValue.COMPLEX_UNIT_PX,
+                        res.getDimensionPixelSize(R.dimen.qs_tile_text_size));
+                mDualLabel.setClickable(true);
+                mDualLabel.setFocusable(true);
+                mDualLabel.setOnClickListener(mDualDetails ? mClickSecondary : mClickPrimary);
+                mDualLabel.setOnLongClickListener(mLongClick);
+            }
             if (labelText != null) {
                 mDualLabel.setText(labelText);
             }
@@ -190,62 +169,78 @@ public class QSTileView extends ViewGroup {
             addView(mDualLabel);
             mDualLabel.setAccessibilityTraversalAfter(mTopBackgroundView.getId());
         } else {
-            mLabel = new TextView(mContext);
-            mLabel.setTextColor(mContext.getColor(R.color.qs_tile_text));
-            mLabel.setGravity(Gravity.CENTER_HORIZONTAL);
-            mLabel.setMinLines(2);
-            mLabel.setPadding(0, 0, 0, 0);
-            mLabel.setTypeface(CONDENSED);
-            mLabel.setTextSize(TypedValue.COMPLEX_UNIT_PX,
-                    Math.round(res.getDimensionPixelSize(R.dimen.qs_tile_text_size) * mSizeScale));
-            mLabel.setClickable(false);
+            if (mLabel == null) {
+                mLabel = new TextView(mContext);
+                mLabel.setTextColor(mContext.getColor(R.color.qs_tile_text));
+                mLabel.setGravity(Gravity.CENTER_HORIZONTAL);
+                mLabel.setMinLines(2);
+                mLabel.setPadding(0, 0, 0, 0);
+                mLabel.setTypeface(CONDENSED);
+                mLabel.setTextSize(TypedValue.COMPLEX_UNIT_PX,
+                        res.getDimensionPixelSize(R.dimen.qs_tile_text_size));
+                mLabel.setClickable(false);
+                mLabel.setFocusable(false);
+            }
             if (labelText != null) {
                 mLabel.setText(labelText);
             }
             addView(mLabel);
-            updateColors();
-           if (mQsColorSwitch != 0) {
-                mLabel.setTextColor(mLabelColor);
-           }	
         }
     }
-    
 
-    public boolean setDual(boolean dual) {
+    public boolean isDual() {
+        return mDual;
+    }
+
+    public boolean setDual(boolean dual, boolean hasDetails) {
         final boolean changed = dual != mDual;
         mDual = dual;
-        if (mTileBackground instanceof RippleDrawable) {
-            setRipple((RippleDrawable) mTileBackground);
+        mDualDetails = hasDetails;
+        if (changed) {
+            recreateLabel();
         }
+
         if (dual) {
             mTopBackgroundView.setOnClickListener(mClickPrimary);
             mTopBackgroundView.setOnLongClickListener(mLongClick);
             setOnClickListener(null);
-            setClickable(false);
+            setOnLongClickListener(null);
             setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO);
-            mTopBackgroundView.setBackground(mTileBackground);
         } else {
             mTopBackgroundView.setOnClickListener(null);
-            mTopBackgroundView.setClickable(false);
+            mTopBackgroundView.setOnLongClickListener(null);
             setOnClickListener(mClickPrimary);
             setOnLongClickListener(mLongClick);
             setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_YES);
-            setBackground(mTileBackground);
         }
+        setTileBackground();
+        mTopBackgroundView.setClickable(dual);
         mTopBackgroundView.setFocusable(dual);
+        setClickable(!dual);
         setFocusable(!dual);
         mDivider.setVisibility(dual ? VISIBLE : GONE);
+        mTopBackgroundView.setVisibility(dual ? VISIBLE : GONE);
+
         if (changed) {
-            recreateLabel();
-            updateTopPadding();
+            getParent().requestLayout();
         }
         postInvalidate();
         return changed;
     }
 
+    protected void setTileBackground() {
+        if (mTileBackground instanceof RippleDrawable) {
+            setRipple((RippleDrawable) mTileBackground);
+        } else {
+            setRipple(null);
+        }
+        mTopBackgroundView.setBackground(mDual ? mTileBackground : null);
+        setBackground(!mDual ? mTileBackground : null);
+    }
+
     private void setRipple(RippleDrawable tileBackground) {
         mRipple = tileBackground;
-        if (getWidth() != 0) {
+        if (getWidth() != 0 && mRipple != null) {
             updateRippleSize(getWidth(), getHeight());
         }
     }
@@ -261,16 +256,10 @@ public class QSTileView extends ViewGroup {
         final ImageView icon = new ImageView(mContext);
         icon.setId(android.R.id.icon);
         icon.setScaleType(ScaleType.CENTER_INSIDE);
-        updateColors();
-        if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-            icon.setColorFilter(mIconColor, Mode.SRC_ATOP);
-        } else if (mQsColorSwitch == 3 || mQsColorSwitch == 4) {
-	     icon.clearColorFilter();
-	}
         return icon;
     }
 
-    private Drawable newTileBackground() {
+    public Drawable newTileBackground() {
         final int[] attrs = new int[] { android.R.attr.selectableItemBackgroundBorderless };
         final TypedArray ta = mContext.obtainStyledAttributes(attrs);
         final Drawable d = ta.getDrawable(0);
@@ -329,18 +318,10 @@ public class QSTileView extends ViewGroup {
 
     private void updateRippleSize(int width, int height) {
         // center the touch feedback on the center of the icon, and dial it down a bit
-        boolean useFourColumns = Settings.System.getInt(
-            mContext.getContentResolver(), Settings.System.QS_USE_FOUR_COLUMNS,
-                0) == 1;
         final int cx = width / 2;
         final int cy = mDual ? mIcon.getTop() + mIcon.getHeight() : height / 2;
-        if (useFourColumns) {
-            int rad = (int)(mIcon.getHeight() * 1f);
-            mRipple.setHotspotBounds(cx - rad, cy - rad, cx + rad, cy + rad);
-        } else {
-            int rad = (int)(mIcon.getHeight() * 1.25f);
-            mRipple.setHotspotBounds(cx - rad, cy - rad, cx + rad, cy + rad);
-        }
+        final int rad = (int)(mIcon.getHeight() * 1.25f);
+        mRipple.setHotspotBounds(cx - rad, cy - rad, cx + rad, cy + rad);
     }
 
     private static void layout(View child, int left, int top) {
@@ -355,9 +336,20 @@ public class QSTileView extends ViewGroup {
             mDualLabel.setText(state.label);
             mDualLabel.setContentDescription(state.dualLabelContentDescription);
             mTopBackgroundView.setContentDescription(state.contentDescription);
+            if (!Objects.equals(state.enabled, mDualLabel.isEnabled())) {
+                mTopBackgroundView.setEnabled(state.enabled);
+                mDualLabel.setEnabled(state.enabled);
+                mDualLabel.setTextColor(mContext.getResources().getColor(state.enabled ?
+                        R.color.qs_tile_text : R.color.qs_tile_text_disabled));
+            }
         } else {
             mLabel.setText(state.label);
             setContentDescription(state.contentDescription);
+            if (!Objects.equals(state.enabled, mLabel.isEnabled())) {
+                mLabel.setEnabled(state.enabled);
+                mLabel.setTextColor(mContext.getResources().getColor(state.enabled ?
+                        R.color.qs_tile_text : R.color.qs_tile_text_disabled));
+            }
         }
     }
 
@@ -376,25 +368,14 @@ public class QSTileView extends ViewGroup {
                 }
             }
         }
-    }
-    
-    
-    public void setIconColor() {
-        	if (mIcon instanceof ImageView) {
-		updateColors();
-           	ImageView iv = (ImageView) mIcon;
-            	iv.setColorFilter(mIconColor, Mode.SRC_ATOP);
-		    }	
-    }
-    
-    public void updateColors() {
-        final ContentResolver resolver = mContext.getContentResolver();
-        mQsColorSwitch = Settings.System.getInt(resolver,
-                    Settings.System.QS_COLOR_SWITCH, 0);
-           mLabelColor = Settings.System.getInt(resolver,
-                    Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF);
-           mIconColor = Settings.System.getInt(resolver,
-                    Settings.System.QS_ICON_COLOR, 0xFFFFFFFF);
+        if (!Objects.equals(state.enabled, iv.isEnabled())) {
+            iv.setEnabled(state.enabled);
+            if (state.enabled) {
+                iv.setColorFilter(null);
+            } else {
+                iv.setColorFilter(Color.GRAY, PorterDuff.Mode.MULTIPLY);
+            }
+        }
     }
 
     public void onStateChanged(QSTile.State state) {
@@ -421,6 +402,37 @@ public class QSTileView extends ViewGroup {
         return lastView;
     }
 
+    public void setEditing(boolean editing) {
+        if (mDual) {
+            if (mTopBackgroundView != null) {
+                mTopBackgroundView.setFocusable(!editing);
+                mTopBackgroundView.setClickable(!editing);
+            }
+            if (mDualLabel != null) {
+                mDualLabel.setFocusable(!editing);
+                mDualLabel.setClickable(!editing);
+            }
+            setClickable(editing);
+            setFocusable(editing);
+        } else {
+            if (mLabel != null) {
+                mLabel.setFocusable(!editing);
+            }
+            if (mRipple != null) {
+                mRipple.setVisible(!editing, false);
+            }
+        }
+
+        // clean up extra label view if needed
+        if (!editing) {
+            if (mDual && mLabel != null) {
+                mLabel = null;
+            } else if (!mDual && mDualLabel != null) {
+                mDualLabel = null;
+            }
+        }
+    }
+
     private class H extends Handler {
         private static final int STATE_CHANGED = 1;
         public H() {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/QSViewPager.java b/packages/SystemUI/src/com/android/systemui/qs/QSViewPager.java
new file mode 100644
index 0000000..3dc5d27
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/QSViewPager.java
@@ -0,0 +1,105 @@
+package com.android.systemui.qs;
+
+import android.animation.Animator;
+import android.animation.ValueAnimator;
+import android.content.Context;
+import android.support.v4.view.ViewPager;
+import android.util.Log;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.animation.AccelerateInterpolator;
+
+public class QSViewPager extends ViewPager {
+
+    private static final String TAG = "QSViewPager";
+
+    protected static final float SCROLL_PERCENT = .10f;
+
+    QSDragPanel mDragPanel;
+
+    public QSViewPager(Context context) {
+        super(context);
+    }
+
+    public void setDragPanel(QSDragPanel p) {
+        mDragPanel = p;
+    }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return mDragPanel.isEditing();
+    }
+
+    @Override
+    public boolean canScrollHorizontally(int direction) {
+        if (direction < 0
+                && mDragPanel.isDragging()
+                && getCurrentItem() == 1) {
+            // can't scroll left while not editing, OR dragging on the first page
+            return false;
+        }
+        return super.canScrollHorizontally(direction);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        int height = 0;
+        for (int i = 0; i < getChildCount(); i++) {
+            View child = getChildAt(i);
+            child.measure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));
+            int h = child.getMeasuredHeight();
+            if (h > height && !(child instanceof QSSettings)) height = h;
+        }
+        heightMeasureSpec = MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY);
+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+    }
+
+    public void animatePagerTransition(final boolean forward) {
+        ValueAnimator animator = ValueAnimator.ofInt(0, getWidth());
+        animator.addListener(new Animator.AnimatorListener() {
+            @Override
+            public void onAnimationStart(Animator animation) {
+            }
+
+            @Override
+            public void onAnimationEnd(Animator animation) {
+                if (isFakeDragging()) {
+                    endFakeDrag();
+                }
+            }
+
+            @Override
+            public void onAnimationCancel(Animator animation) {
+                if (isFakeDragging()) {
+                    endFakeDrag();
+                }
+            }
+
+            @Override
+            public void onAnimationRepeat(Animator animation) {
+            }
+        });
+
+        animator.setInterpolator(new AccelerateInterpolator());
+        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+
+            private int oldDragPosition = 0;
+
+            @Override
+            public void onAnimationUpdate(ValueAnimator animation) {
+                if (isFakeDragging()) {
+                    int dragPosition = (Integer) animation.getAnimatedValue();
+                    int dragOffset = dragPosition - oldDragPosition;
+                    oldDragPosition = dragPosition;
+                    fakeDragBy(dragOffset * (forward ? -1 : 1));
+                }
+            }
+        });
+        if (beginFakeDrag()) {
+            animator.setDuration(500);
+            animator.start();
+        } else {
+            Log.e(TAG, "can't start fake drag?");
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/SignalTileView.java b/packages/SystemUI/src/com/android/systemui/qs/SignalTileView.java
index d53a61a..9ac7944 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/SignalTileView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/SignalTileView.java
@@ -18,14 +18,7 @@ package com.android.systemui.qs;
 
 import android.animation.ValueAnimator;
 import android.content.Context;
-import android.content.res.Resources;
-import android.content.ContentResolver;
-import android.database.ContentObserver;
-import android.os.Handler;
-import android.os.UserHandle;
 import android.graphics.drawable.Drawable;
-import android.graphics.PorterDuff.Mode;
-import android.net.Uri;
 import android.view.View;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
@@ -33,8 +26,6 @@ import android.widget.ImageView;
 import com.android.systemui.R;
 import com.android.systemui.qs.QSTile.SignalState;
 
-import android.provider.Settings;
-
 /** View that represents a custom quick settings tile for displaying signal info (wifi/cell). **/
 public final class SignalTileView extends QSTileView {
     private static final long DEFAULT_DURATION = new ValueAnimator().getDuration();
@@ -45,8 +36,6 @@ public final class SignalTileView extends QSTileView {
     private ImageView mOverlay;
     private ImageView mIn;
     private ImageView mOut;
-    private int mQSColorSwitch;
-    private int  mIconColor;
 
     private int mWideOverlayIconStartPadding;
 
@@ -61,31 +50,19 @@ public final class SignalTileView extends QSTileView {
     }
 
     private ImageView addTrafficView(int icon) {
-	updateIconColor();
         final ImageView traffic = new ImageView(mContext);
         traffic.setImageResource(icon);
-	  if ( mQSColorSwitch == 1 || mQSColorSwitch == 2) {
-            traffic.setColorFilter(mIconColor, Mode.SRC_ATOP);	  
-        } else if ( mQSColorSwitch == 3 || mQSColorSwitch == 4) {
-	    traffic.clearColorFilter();
-	}
         traffic.setAlpha(0f);
         addView(traffic);
         return traffic;
     }
 
     @Override
-    public View createIcon() {
-	updateIconColor();
+    protected View createIcon() {
         mIconFrame = new FrameLayout(mContext);
         mSignal = new ImageView(mContext);
         mIconFrame.addView(mSignal);
         mOverlay = new ImageView(mContext);
-	  if ( mQSColorSwitch == 1 || mQSColorSwitch == 2) {
-            mSignal.setColorFilter(mIconColor, Mode.SRC_ATOP);
-        } else if ( mQSColorSwitch == 3 || mQSColorSwitch == 4) {
-	   mSignal.clearColorFilter();	
-	}	
         mIconFrame.addView(mOverlay, LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
         return mIconFrame;
     }
@@ -160,28 +137,4 @@ public final class SignalTileView extends QSTileView {
             view.setAlpha(newAlpha);
         }
     }
-
-	public void updateIconColor() {
-        mQSColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-        if (mQSColorSwitch == 1 || mQSColorSwitch == 2) {
-            mIconColor = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_ICON_COLOR, 0xffffffff);
-        	}
-	}
-
-      public void setIconColor() {
-	updateIconColor();
-        if (mQSColorSwitch == 1 || mQSColorSwitch == 2) {
-            mSignal.setColorFilter(mIconColor, Mode.SRC_ATOP);
-            mOverlay.setColorFilter(mIconColor, Mode.SRC_ATOP);
-            mIn.setColorFilter(mIconColor, Mode.SRC_ATOP);
-            mOut.setColorFilter(mIconColor, Mode.SRC_ATOP);
-       	   } else if (mQSColorSwitch == 3 || mQSColorSwitch == 4) {
-            mSignal.clearColorFilter();
-            mOverlay.clearColorFilter();
-            mIn.clearColorFilter();
-            mOut.clearColorFilter();
-	   }
-	}
 }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java
index 7f05205..b970a4c 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/AdbOverNetworkTile.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2015 The CyanogenMod Open Source Project
+ * Copyright (C) 2015 The CyanogenMod Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -74,13 +74,13 @@ public class AdbOverNetworkTile extends QSTile<QSTile.BooleanState> {
                 InetAddress address = NetworkUtils.intToInetAddress(wifiInfo.getIpAddress());
                 state.label = address.getHostAddress();
             } else {
-                //if wifiInfo is null, set the enabled label without host address
-                state.label = mContext.getString(R.string.quick_settings_network_adb_enabled_label);
+                // if wifiInfo is null, set the label without host address
+                state.label = mContext.getString(R.string.quick_settings_network_adb_label);
             }
             state.icon = ResourceIcon.get(R.drawable.ic_qs_network_adb_on);
         } else {
             // Otherwise set the disabled label and icon
-            state.label = mContext.getString(R.string.quick_settings_network_adb_disabled_label);
+            state.label = mContext.getString(R.string.quick_settings_network_adb_label);
             state.icon = ResourceIcon.get(R.drawable.ic_qs_network_adb_off);
         }
     }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/AirplaneModeTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/AirplaneModeTile.java
index d7245b0..bf28dbf 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/AirplaneModeTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/AirplaneModeTile.java
@@ -61,18 +61,10 @@ public class AirplaneModeTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     public void handleClick() {
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
         MetricsLogger.action(mContext, getMetricsCategory(), !mState.value);
         setEnabled(!mState.value);
-	 if (mQsColorSwitch == 0) {
-            mEnable.setAllowAnimation(true);
-            mDisable.setAllowAnimation(true);
-        } else {
-	mEnable.setAllowAnimation(true);
-            mDisable.setAllowAnimation(true);
-	}
-
+        mEnable.setAllowAnimation(true);
+        mDisable.setAllowAnimation(true);
     }
 
     @Override
@@ -89,26 +81,16 @@ public class AirplaneModeTile extends QSTile<QSTile.BooleanState> {
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
         final int value = arg instanceof Integer ? (Integer)arg : mSetting.getValue();
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
         final boolean airplaneMode = value != 0;
         state.value = airplaneMode;
         state.visible = true;
         state.label = mContext.getString(R.string.airplane_mode);
         if (airplaneMode) {
-	    if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-            state.icon = ResourceIcon.get(R.drawable.ic_qs_airplane_on);
-	    } else {
-	    state.icon = mEnable;
-	    }
+            state.icon = mEnable;
             state.contentDescription =  mContext.getString(
                     R.string.accessibility_quick_settings_airplane_on);
         } else {
-	    if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-	    state.icon = ResourceIcon.get(R.drawable.ic_qs_airplane_off);
-	    } else {
             state.icon = mDisable;
-	   }
             state.contentDescription =  mContext.getString(
                     R.string.accessibility_quick_settings_airplane_off);
         }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/AmbientDisplayTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/AmbientDisplayTile.java
index a0c657d..cc08d02 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/AmbientDisplayTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/AmbientDisplayTile.java
@@ -16,9 +16,12 @@
 
 package com.android.systemui.qs.tiles;
 
+import android.content.Context;
 import android.content.Intent;
 import android.provider.Settings;
+import android.provider.Settings.Secure;
 
+import com.android.systemui.qs.SecureSetting;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.R;
 import org.cyanogenmod.internal.logging.CMMetricsLogger;
@@ -26,8 +29,19 @@ import org.cyanogenmod.internal.logging.CMMetricsLogger;
 /** Quick settings tile: Ambient Display **/
 public class AmbientDisplayTile extends QSTile<QSTile.BooleanState> {
 
+    private static final Intent DISPLAY_SETTINGS = new Intent("android.settings.DISPLAY_SETTINGS");
+
+    private final SecureSetting mSetting;
+
     public AmbientDisplayTile(Host host) {
         super(host);
+
+        mSetting = new SecureSetting(mContext, mHandler, Secure.DOZE_ENABLED) {
+            @Override
+            protected void handleValueChanged(int value, boolean observedChange) {
+                handleRefreshState(value);
+            }
+        };
     }
 
     @Override
@@ -43,10 +57,7 @@ public class AmbientDisplayTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     protected void handleLongClick() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.setClassName("com.android.settings",
-            "com.android.settings.Settings$AmbientDisplaySettingsActivity");
-        mHost.startActivityDismissingKeyguard(intent);
+        mHost.startActivityDismissingKeyguard(DISPLAY_SETTINGS);
     }
 
     private void setEnabled(boolean enabled) {
@@ -54,18 +65,15 @@ public class AmbientDisplayTile extends QSTile<QSTile.BooleanState> {
                 Settings.Secure.DOZE_ENABLED,
                 enabled ? 1 : 0);
     }
-    
-   private boolean isAmbientDisplayEnabled() {
-        return Settings.Secure.getInt(mContext.getContentResolver(),
-                Settings.Secure.DOZE_ENABLED, 1) == 1;
-    }
 
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
-        state.value = isAmbientDisplayEnabled();
+        final int value = arg instanceof Integer ? (Integer)arg : mSetting.getValue();
+        final boolean enable = value != 0;
+        state.value = enable;
         state.visible = true;
         state.label = mContext.getString(R.string.quick_settings_ambient_display_label);
-        if (state.value) {
+        if (enable) {
             state.icon = ResourceIcon.get(R.drawable.ic_qs_ambientdisplay_on);
             state.contentDescription =  mContext.getString(
                     R.string.accessibility_quick_settings_ambient_display_on);
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java
index 68f5916..1a60fa9 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/BatterySaverTile.java
@@ -68,7 +68,7 @@ public class BatterySaverTile extends QSTile<QSTile.BooleanState> {
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
         state.value = arg instanceof Boolean ? (boolean) arg : mPm.isPowerSaveMode();
-        state.visible =  true;
+        state.visible =  !mHasPowerProfiles;
         state.label = mContext.getString(R.string.quick_settings_battery_saver_label);
         if (state.value) {
             state.icon = ResourceIcon.get(R.drawable.ic_qs_battery_saver_on);
@@ -79,7 +79,13 @@ public class BatterySaverTile extends QSTile<QSTile.BooleanState> {
             state.contentDescription =  mContext.getString(
                     R.string.accessibility_quick_settings_battery_saver_off);
         }
-     }
+
+        state.enabled = !mPluggedIn;
+        if (mPluggedIn) {
+            state.label = mContext.getString(R.string.quick_settings_battery_saver_label_charging);
+        }
+    }
+
     @Override
     protected String composeChangeAnnouncement() {
         if (mState.value) {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
index 74869a6..cdedc26 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/BluetoothTile.java
@@ -23,7 +23,6 @@ import android.content.Context;
 import android.content.Intent;
 import android.provider.Settings;
 import android.text.TextUtils;
-import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -60,6 +59,11 @@ public class BluetoothTile extends QSTile<QSTile.BooleanState>  {
     }
 
     @Override
+    public boolean hasDualTargetsDetails() {
+        return true;
+    }
+
+    @Override
     public DetailAdapter getDetailAdapter() {
         return mDetailAdapter;
     }
@@ -197,6 +201,11 @@ public class BluetoothTile extends QSTile<QSTile.BooleanState>  {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             MetricsLogger.action(mContext, MetricsLogger.QS_BLUETOOTH_TOGGLE, state);
             mController.setBluetoothEnabled(state);
@@ -214,7 +223,6 @@ public class BluetoothTile extends QSTile<QSTile.BooleanState>  {
             ListView listView = mItemsList.getListView();
             listView.setDivider(null);
             listView.setOnItemClickListener(this);
-            mItemsList.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL);
             listView.setAdapter(mAdapter =
                     new QSDetailItemsList.QSDetailListAdapter(context, mBluetoothItems));
             mAdapter.setCallback(this);
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CastTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CastTile.java
index 155043b..cd608d6 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CastTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CastTile.java
@@ -93,6 +93,11 @@ public class CastTile extends QSTile<QSTile.BooleanState> {
     }
 
     @Override
+    protected void handleSecondaryClick() {
+        handleClick();
+    }
+
+    @Override
     protected void handleLongClick() {
         mHost.startActivityDismissingKeyguard(CAST_SETTINGS);
     }
@@ -136,6 +141,11 @@ public class CastTile extends QSTile<QSTile.BooleanState> {
         return null;
     }
 
+    @Override
+    public boolean hasDualTargetsDetails() {
+        return true;
+    }
+
     private String getDeviceName(CastDevice device) {
         return device.name != null ? device.name
                 : mContext.getString(R.string.quick_settings_cast_device_default_name);
@@ -174,6 +184,11 @@ public class CastTile extends QSTile<QSTile.BooleanState> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             // noop
         }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
index 9307f96..038fa5e 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
@@ -100,14 +100,9 @@ public class CellularTile extends QSTile<QSTile.SignalState> {
 
     @Override
     protected void handleClick() {
-        boolean enabled = mDataController.isMobileDataEnabled();
         MetricsLogger.action(mContext, getMetricsCategory());
         if (mDataController.isMobileDataSupported()) {
-            if(mController.isAdvancedDataTileEnabled()) {
-                mDataController.setMobileDataEnabled(!mDataController.isMobileDataEnabled());
-            } else {
-                showDetail(true);
-            }
+            showDetail(true);
         } else {
             mHost.startActivityDismissingKeyguard(DATA_USAGE_SETTINGS);
         }
@@ -115,24 +110,15 @@ public class CellularTile extends QSTile<QSTile.SignalState> {
 
     @Override
     protected void handleSecondaryClick() {
-        if (mDataController.isMobileDataSupported()) {
-            showDetail(true);
-        } else {
-            mHost.startActivityDismissingKeyguard(MOBILE_NETWORK_SETTINGS);
-        }
+        handleClick();
     }
 
     @Override
     protected void handleLongClick() {
-        MetricsLogger.action(mContext, getMetricsCategory());
-        if (mDataController.isMobileDataSupported()) {
-	 if(mController.isAdvancedDataTileEnabled()) {
-            showDetail(true);
-	    } else {
-	    mHost.startActivityDismissingKeyguard(DATA_USAGE_SETTINGS);
-	   }
+        if (mTelephonyManager.getDefault().getPhoneCount() > 1) {
+            mHost.startActivityDismissingKeyguard(MOBILE_NETWORK_SETTINGS_MSIM);
         } else {
-            mHost.startActivityDismissingKeyguard(DATA_USAGE_SETTINGS);
+            mHost.startActivityDismissingKeyguard(MOBILE_NETWORK_SETTINGS);
         }
     }
 
@@ -182,6 +168,11 @@ public class CellularTile extends QSTile<QSTile.SignalState> {
         return MetricsLogger.QS_CELLULAR;
     }
 
+    @Override
+    public boolean hasDualTargetsDetails() {
+        return true;
+    }
+
     // Remove the period from the network name
     public static String removeTrailingPeriod(String string) {
         if (string == null) return null;
@@ -269,6 +260,10 @@ public class CellularTile extends QSTile<QSTile.SignalState> {
     };
 
     private final class CellularDetailAdapter implements DetailAdapter {
+        @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
 
         @Override
         public int getTitle() {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/ColorInversionTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/ColorInversionTile.java
index c9fd390..f49d97e 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/ColorInversionTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/ColorInversionTile.java
@@ -78,17 +78,10 @@ public class ColorInversionTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     protected void handleClick() {
-	 boolean mQSCSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_COLOR_SWITCH, 0) == 1;
         MetricsLogger.action(mContext, getMetricsCategory(), !mState.value);
         mSetting.setValue(mState.value ? 0 : 1);
-	 if (!mQSCSwitch) {
         mEnable.setAllowAnimation(true);
         mDisable.setAllowAnimation(true);
-	} else {
-	 mEnable.setAllowAnimation(false);
-	  mDisable.setAllowAnimation(false);
-	}
     }
 
     @Override
@@ -100,20 +93,10 @@ public class ColorInversionTile extends QSTile<QSTile.BooleanState> {
     protected void handleUpdateState(BooleanState state, Object arg) {
         final int value = arg instanceof Integer ? (Integer) arg : mSetting.getValue();
         final boolean enabled = value != 0;
-	boolean mQSCSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_COLOR_SWITCH, 0) == 1;
-	 if (mQSCSwitch) {
-	state.icon = ResourceIcon.get(R.drawable.ic_qs_inversion_on);
-	} else {
-	state.value = enabled;
-	}
-        state.visible = true;      
+        state.visible = true;
+        state.value = enabled;
         state.label = mContext.getString(R.string.quick_settings_inversion_label);
-	 if (mQSCSwitch) {
-	state.icon = ResourceIcon.get(R.drawable.ic_qs_inversion_off);
-	} else {
         state.icon = enabled ? mEnable : mDisable;
-	}
     }
 
     @Override
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java
index 74a756b..85790d1 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CompassTile.java
@@ -115,7 +115,7 @@ public class CompassTile extends QSTile<QSTile.BooleanState> implements SensorEv
             }
         } else {
             state.icon = ResourceIcon.get(R.drawable.ic_qs_compass_off);
-            state.label = mContext.getString(R.string.quick_settings_compass_off);
+            state.label = mContext.getString(R.string.quick_settings_compass_label);
             mImage.setRotation(0);
         }
     }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CustomQSTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CustomQSTile.java
new file mode 100644
index 0000000..40c7184
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CustomQSTile.java
@@ -0,0 +1,349 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.app.PendingIntent;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.content.res.Configuration;
+import android.content.res.ThemeConfig;
+import android.net.Uri;
+import android.os.Process;
+import android.os.UserHandle;
+import android.text.TextUtils;
+import android.util.Log;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.ListView;
+import android.widget.RemoteViews;
+import android.widget.TextView;
+
+import com.android.systemui.qs.QSDetailItemsGrid;
+import com.android.systemui.qs.QSDetailItemsList;
+import cyanogenmod.app.CustomTile;
+import cyanogenmod.app.StatusBarPanelCustomTile;
+
+import com.android.systemui.R;
+import com.android.systemui.qs.QSTile;
+import org.cyanogenmod.internal.logging.CMMetricsLogger;
+
+import java.util.Arrays;
+
+public class CustomQSTile extends QSTile<QSTile.State> {
+
+    private static final String HIDDEN_TILES_PREF_NAME = "user_hidden_qs_tiles";
+
+    private CustomTile.ExpandedStyle mExpandedStyle;
+    private PendingIntent mOnClick;
+    private PendingIntent mOnLongClick;
+    private Uri mOnClickUri;
+    private int mCurrentUserId;
+    private StatusBarPanelCustomTile mTile;
+    private CustomQSDetailAdapter mDetailAdapter;
+    private boolean mCollapsePanel;
+    private boolean mUserRemoved;
+    private String mPersistedPlaceHolderKey;
+
+    public CustomQSTile(Host host, String persistedSpec) {
+        super(host);
+        mTile = null;
+        mPersistedPlaceHolderKey = persistedSpec;
+    }
+
+    public CustomQSTile(Host host, StatusBarPanelCustomTile tile) {
+        super(host);
+        mTile = tile;
+        mUserRemoved = getIsUserRemovedPersisted();
+    }
+
+    private String getPersistableKey() {
+        if (mPersistedPlaceHolderKey != null) {
+            return mPersistedPlaceHolderKey;
+        } else {
+            return getTile().persistableKey();
+        }
+    }
+
+    private boolean getIsUserRemovedPersisted() {
+        return getCustomQSTilePrefs(mContext).getBoolean(getPersistableKey(), false);
+    }
+
+    public boolean isUserRemoved() {
+        return mUserRemoved;
+    }
+
+    public void setUserRemoved(boolean removed) {
+        if (mUserRemoved != removed) {
+            if (removed) {
+                getCustomQSTilePrefs(mContext).edit().putBoolean(getPersistableKey(), true).apply();
+            } else {
+                getCustomQSTilePrefs(mContext).edit().remove(getPersistableKey()).apply();
+            }
+            mUserRemoved = removed;
+            refreshState();
+        }
+    }
+
+    public static SharedPreferences getCustomQSTilePrefs(Context context) {
+        return context.getSharedPreferences(HIDDEN_TILES_PREF_NAME, Context.MODE_PRIVATE);
+    }
+
+    @Override
+    public DetailAdapter getDetailAdapter() {
+        return mDetailAdapter;
+    }
+
+    @Override
+    public void setListening(boolean listening) {
+    }
+
+    @Override
+    protected State newTileState() {
+        return new State();
+    }
+
+    @Override
+    protected void handleUserSwitch(int newUserId) {
+        super.handleUserSwitch(newUserId);
+        mCurrentUserId = newUserId;
+    }
+
+    public void update(StatusBarPanelCustomTile customTile) {
+        refreshState(customTile);
+    }
+
+    @Override
+    protected void handleLongClick() {
+        if (mOnLongClick != null) {
+            if (mOnLongClick.isActivity()) {
+                getHost().collapsePanels();
+            }
+            try {
+                mOnLongClick.send();
+            } catch (Throwable e) {
+                Log.w(TAG, "Error sending long click intent", e);
+            }
+        } else if (mExpandedStyle == null) {
+            showDetail(true);
+        }
+    }
+
+    @Override
+    protected void handleClick() {
+        try {
+            if (mExpandedStyle != null &&
+                    mExpandedStyle.getStyle() != CustomTile.ExpandedStyle.NO_STYLE) {
+                showDetail(true);
+                return;
+            }
+            if (mCollapsePanel) {
+                mHost.collapsePanels();
+            }
+            if (mOnClick != null) {
+                mOnClick.send();
+            } else if (mOnClickUri != null) {
+                mHost.collapsePanels();
+                final Intent intent = new Intent().setData(mOnClickUri);
+                mContext.sendBroadcastAsUser(intent, new UserHandle(mCurrentUserId));
+            }
+        } catch (Throwable t) {
+            Log.w(TAG, "Error sending click intent", t);
+        }
+    }
+
+    public StatusBarPanelCustomTile getTile() {
+        return mTile;
+    }
+
+    @Override
+    protected void handleUpdateState(State state, Object arg) {
+        if (arg instanceof StatusBarPanelCustomTile) {
+            mTile = (StatusBarPanelCustomTile) arg;
+            mPersistedPlaceHolderKey = null;
+            mUserRemoved = getIsUserRemovedPersisted();
+        }
+        if (mTile == null) {
+            state.visible = false;
+            // nothing to show, it's a place holder for now
+            return;
+        }
+        final CustomTile customTile = mTile.getCustomTile();
+        state.contentDescription = customTile.contentDescription;
+        state.label = customTile.label;
+        state.visible = !mUserRemoved;
+        final int iconId = customTile.icon;
+        if (iconId != 0 && (customTile.remoteIcon == null)) {
+            final String iconPackage = mTile.getResPkg();
+            if (!TextUtils.isEmpty(iconPackage)) {
+                state.icon = new ExternalIcon(iconPackage, iconId);
+            }
+        } else {
+            state.icon = new ExternalBitmapIcon(customTile.remoteIcon);
+        }
+        mOnClick = customTile.onClick;
+        mOnLongClick = customTile.onLongClick;
+        mOnClickUri = customTile.onClickUri;
+        mExpandedStyle = customTile.expandedStyle;
+        mCollapsePanel = customTile.collapsePanel;
+        mDetailAdapter = new CustomQSDetailAdapter();
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return CMMetricsLogger.TILE_CUSTOM_QS;
+    }
+
+    private boolean isDynamicTile() {
+        return mTile.getPackage().equals(mContext.getPackageName())
+                || mTile.getUid() == Process.SYSTEM_UID;
+    }
+
+    private class CustomQSDetailAdapter implements DetailAdapter, AdapterView.OnItemClickListener,
+            QSDetailItemsGrid.QSDetailItemsGridAdapter.OnPseudoGriditemClickListener {
+        private QSDetailItemsList.QSCustomDetailListAdapter mListAdapter;
+        private QSDetailItemsGrid.QSDetailItemsGridAdapter mGridAdapter;
+
+        public int getTitle() {
+            if (isDynamicTile()) {
+                return mContext.getResources().getIdentifier(
+                        String.format("dynamic_qs_tile_%s_label", mTile.getTag()),
+                            "string", mContext.getPackageName());
+            }
+            return R.string.quick_settings_custom_tile_detail_title;
+        }
+
+        @Override
+        public Boolean getToggleState() {
+            return null;
+        }
+
+
+        @Override
+        public Intent getSettingsIntent() {
+            return mTile.getCustomTile().onSettingsClick;
+        }
+
+        @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return mTile;
+        }
+
+        @Override
+        public void setToggleState(boolean state) {
+            // noop
+        }
+
+        @Override
+        public int getMetricsCategory() {
+            return CMMetricsLogger.TILE_CUSTOM_QS_DETAIL;
+        }
+
+        @Override
+        public View createDetailView(Context context, View convertView, ViewGroup parent) {
+            View rootView = null;
+            if (mExpandedStyle == null) {
+                rootView = (LinearLayout) LayoutInflater.from(context)
+                        .inflate(R.layout.qs_custom_detail, parent, false);
+                ImageView imageView = (ImageView)
+                        rootView.findViewById(R.id.custom_qs_tile_icon);
+                TextView customTileTitle = (TextView)
+                        rootView.findViewById(R.id.custom_qs_tile_title);
+                TextView customTilePkg = (TextView) rootView
+                        .findViewById(R.id.custom_qs_tile_package);
+                TextView customTileContentDesc = (TextView) rootView
+                        .findViewById(R.id.custom_qs_tile_content_description);
+                // icon is cached in state, fetch it
+                imageView.setImageDrawable(getState().icon.getDrawable(mContext));
+                customTileTitle.setText(mTile.getCustomTile().label);
+                if (isDynamicTile()) {
+                    customTilePkg.setText(R.string.quick_settings_dynamic_tile_detail_title);
+                } else {
+                    customTilePkg.setText(mTile.getPackage());
+                    customTileContentDesc.setText(mTile.getCustomTile().contentDescription);
+                }
+            } else {
+                switch (mExpandedStyle.getStyle()) {
+                    case CustomTile.ExpandedStyle.GRID_STYLE:
+                        rootView = QSDetailItemsGrid.inflate(context, parent, false);
+                        mGridAdapter = ((QSDetailItemsGrid) rootView)
+                                .createAndSetAdapter(mTile.getPackage(),
+                                        mExpandedStyle.getExpandedItems());
+                        mGridAdapter.setOnPseudoGridItemClickListener(this);
+                        break;
+                    case CustomTile.ExpandedStyle.REMOTE_STYLE:
+                        rootView = (LinearLayout) LayoutInflater.from(context)
+                                .inflate(R.layout.qs_custom_detail_remote, parent, false);
+                        RemoteViews remoteViews = mExpandedStyle.getContentViews();
+                        if (remoteViews != null) {
+                            View localView = mTile.getCustomTile().expandedStyle.getContentViews()
+                                    .apply(context, (ViewGroup) rootView,
+                                            mHost.getOnClickHandler(), getThemePackageName());
+                            ((LinearLayout) rootView).addView(localView);
+                        } else {
+                            Log.d(TAG, "Unable to add null remoteview for " + mTile.getOpPkg());
+                        }
+                        break;
+                    case CustomTile.ExpandedStyle.LIST_STYLE:
+                    default:
+                        rootView = QSDetailItemsList.convertOrInflate(context, convertView, parent);
+                        ListView listView = ((QSDetailItemsList) rootView).getListView();
+                        listView.setDivider(null);
+                        listView.setOnItemClickListener(this);
+                        listView.setAdapter(mListAdapter =
+                                new QSDetailItemsList.QSCustomDetailListAdapter(mTile.getPackage(),
+                                        context, Arrays.asList(mExpandedStyle.getExpandedItems())));
+                        break;
+                }
+            }
+            return rootView;
+        }
+
+        @Override
+        public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {
+            CustomTile.ExpandedItem item = mListAdapter.getItem(position);
+            sendEvent(item.onClickPendingIntent);
+        }
+
+        @Override
+        public void onPsuedoGridItemClick(View view, CustomTile.ExpandedItem item) {
+            sendEvent(item.onClickPendingIntent);
+        }
+
+        private void sendEvent(PendingIntent intent) {
+            try {
+                if (intent.isActivity()) {
+                    mHost.collapsePanels();
+                }
+                intent.send();
+            } catch (PendingIntent.CanceledException e) {
+                //
+            }
+        }
+
+        private String getThemePackageName() {
+            final Configuration config = mContext.getResources().getConfiguration();
+            final ThemeConfig themeConfig = config != null ? config.themeConfig : null;
+            return themeConfig != null ? themeConfig.getOverlayForStatusBar() : null;
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java
index 4149206..d0ae383 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/DataUsageDetailView.java
@@ -23,7 +23,6 @@ import android.util.AttributeSet;
 import android.view.View;
 import android.widget.LinearLayout;
 import android.widget.TextView;
-import android.graphics.PorterDuff.Mode;
 
 import com.android.systemui.FontSizeUtils;
 import com.android.systemui.R;
@@ -32,8 +31,6 @@ import com.android.systemui.statusbar.policy.NetworkController;
 
 import java.text.DecimalFormat;
 
-import android.provider.Settings;
-
 /**
  * Layout for the data usage detail in quick settings.
  */
@@ -43,9 +40,6 @@ public class DataUsageDetailView extends LinearLayout {
     private static final double MB = 1024 * KB;
     private static final double GB = 1024 * MB;
 
-
-    private boolean mQsColorSwitch = false;	
-
     private final DecimalFormat FORMAT = new DecimalFormat("#.##");
 
     public DataUsageDetailView(Context context, AttributeSet attrs) {
@@ -98,15 +92,10 @@ public class DataUsageDetailView extends LinearLayout {
             usageColor = R.color.system_warning_color;
         }
 
-	mQsColorSwitch = Settings.System.getInt(getContext().getContentResolver(),
-                Settings.System.QS_COLOR_SWITCH, 0) == 1;
-	int QsTextColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF);
-
         final TextView title = (TextView) findViewById(android.R.id.title);
         title.setText(titleId);
         final TextView usage = (TextView) findViewById(R.id.usage_text);
-	usage.setText(formatBytes(bytes));
+        usage.setText(formatBytes(bytes));
         usage.setTextColor(mContext.getColor(usageColor));
         final DataUsageGraph graph = (DataUsageGraph) findViewById(R.id.usage_graph);
         graph.setLevels(info.limitLevel, info.warningLevel, info.usageLevel);
@@ -120,14 +109,7 @@ public class DataUsageDetailView extends LinearLayout {
         final TextView infoBottom = (TextView) findViewById(R.id.usage_info_bottom_text);
         infoBottom.setVisibility(bottom != null ? View.VISIBLE : View.GONE);
         infoBottom.setText(bottom);
-	if (mQsColorSwitch) {
-	    title.setTextColor(QsTextColor);
-            carrier.setTextColor(QsTextColor);
-	    period.setTextColor(QsTextColor);
-            infoTop.setTextColor(QsTextColor);
-	    infoBottom.setTextColor(QsTextColor);
-    	 }
-	}
+    }
 
     private String formatBytes(long bytes) {
         final long b = Math.abs(bytes);
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
index 65aa8a9..0d43f8c 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/DndTile.java
@@ -123,6 +123,11 @@ public class DndTile extends QSTile<QSTile.BooleanState> {
     }
 
     @Override
+    protected void handleSecondaryClick() {
+        handleClick();
+    }
+
+    @Override
     public void handleLongClick() {
         mHost.startActivityDismissingKeyguard(ZEN_SETTINGS);
     }
@@ -195,6 +200,11 @@ public class DndTile extends QSTile<QSTile.BooleanState> {
         }
     }
 
+    @Override
+    public boolean hasDualTargetsDetails() {
+        return true;
+    }
+
     private final OnSharedPreferenceChangeListener mPrefListener
             = new OnSharedPreferenceChangeListener() {
         @Override
@@ -240,6 +250,11 @@ public class DndTile extends QSTile<QSTile.BooleanState> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             MetricsLogger.action(mContext, MetricsLogger.QS_DND_TOGGLE, state);
             if (!state) {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/EditTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/EditTile.java
new file mode 100644
index 0000000..7173786
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/EditTile.java
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import com.android.systemui.R;
+import com.android.systemui.qs.QSTile;
+import com.android.systemui.statusbar.policy.KeyguardMonitor;
+import org.cyanogenmod.internal.logging.CMMetricsLogger;
+
+public class EditTile extends QSTile<QSTile.BooleanState> implements KeyguardMonitor.Callback {
+
+    private boolean mListening;
+
+    public EditTile(Host host) {
+        super(host);
+        refreshState();
+    }
+
+    @Override
+    protected void handleDestroy() {
+        super.handleDestroy();
+    }
+
+    @Override
+    protected BooleanState newTileState() {
+        return new BooleanState();
+    }
+
+    @Override
+    protected void handleClick() {
+        getHost().setEditing(!mState.value);
+        refreshState(!mState.value);
+    }
+
+    @Override
+    protected void handleLongClick() {
+        getHost().goToSettingsPage();
+        refreshState(true);
+    }
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        final boolean showing = getHost().getKeyguardMonitor().isShowing();
+        final boolean secure = getHost().getKeyguardMonitor().isSecure();
+        state.visible = !showing || !secure;
+        state.enabled = !showing;
+        state.label = mContext.getString(R.string.quick_settings_edit_label);
+
+        if (arg instanceof Boolean) {
+            state.value = (boolean) arg;
+        } else {
+            state.value = getHost().isEditing();
+        }
+        state.icon = ResourceIcon.get(R.drawable.ic_qs_edit_tiles);
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return CMMetricsLogger.TILE_EDIT;
+    }
+
+    @Override
+    protected String composeChangeAnnouncement() {
+        // TODO
+        return null;
+    }
+
+    @Override
+    public void setListening(boolean listening) {
+        if (mListening == listening) return;
+        mListening = listening;
+        if (mListening) {
+            mHost.getKeyguardMonitor().addCallback(this);
+        } else {
+            mHost.getKeyguardMonitor().removeCallback(this);
+        }
+        refreshState();
+    }
+
+    @Override
+    public void onKeyguardChanged() {
+        refreshState();
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/FlashlightTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/FlashlightTile.java
index 9c56c8e..21cbef2 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/FlashlightTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/FlashlightTile.java
@@ -17,15 +17,12 @@
 package com.android.systemui.qs.tiles;
 
 import android.app.ActivityManager;
-import android.content.Intent;
 
 import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.R;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.statusbar.policy.FlashlightController;
 
-import android.provider.Settings;
-
 /** Quick settings tile: Control flashlight **/
 public class FlashlightTile extends QSTile<QSTile.BooleanState> implements
         FlashlightController.FlashlightListener {
@@ -73,14 +70,7 @@ public class FlashlightTile extends QSTile<QSTile.BooleanState> implements
     }
 
     @Override
-    protected void handleLongClick() {
-      mHost.startActivityDismissingKeyguard(new Intent("android.media.action.IMAGE_CAPTURE"));
-    }
-
-    @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
         state.visible = mFlashlightController.isAvailable();
         state.label = mHost.getContext().getString(R.string.quick_settings_flashlight_label);
         if (arg instanceof UserBoolean) {
@@ -92,15 +82,9 @@ public class FlashlightTile extends QSTile<QSTile.BooleanState> implements
         } else {
             state.value = mFlashlightController.isEnabled();
         }
-
-	if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
-            state.icon = ResourceIcon.get(state.value ? R.drawable.ic_qs_flashlight_on
-                    : R.drawable.ic_qs_flashlight_off);
-	} else {
-	final AnimationIcon icon = state.value ? mEnable : mDisable;
+        final AnimationIcon icon = state.value ? mEnable : mDisable;
         icon.setAllowAnimation(arg instanceof UserBoolean && ((UserBoolean) arg).userInitiated);
         state.icon = icon;
-	}
         int onOrOffId = state.value
                 ? R.string.accessibility_quick_settings_flashlight_on
                 : R.string.accessibility_quick_settings_flashlight_off;
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/HeadsUpTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/HeadsUpTile.java
index 63a20c7..d30bd91 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/HeadsUpTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/HeadsUpTile.java
@@ -17,20 +17,21 @@
 package com.android.systemui.qs.tiles;
 
 import android.content.Context;
-import android.content.ComponentName;
 import android.content.Intent;
 import android.provider.Settings;
 import android.provider.Settings.Global;
 
-import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.qs.GlobalSetting;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.R;
 
+import org.cyanogenmod.internal.logging.CMMetricsLogger;
+
 /** Quick settings tile: Heads up **/
 public class HeadsUpTile extends QSTile<QSTile.BooleanState> {
 
-private static final Intent NOTIFICATION_SETTINGS = new Intent().setComponent(new ComponentName ("com.android.settings", "com.android.settings.Settings$HeadsupSettingsActivity"));
+    private static final Intent NOTIFICATION_SETTINGS =
+            new Intent("android.settings.NOTIFICATION_MANAGER");
 
     private final GlobalSetting mSetting;
 
@@ -52,14 +53,13 @@ private static final Intent NOTIFICATION_SETTINGS = new Intent().setComponent(ne
 
     @Override
     protected void handleClick() {
-        MetricsLogger.action(mContext, getMetricsCategory());
         setEnabled(!mState.value);
         refreshState();
     }
 
     @Override
     protected void handleLongClick() {
-        //mHost.startActivityDismissingKeyguard(NOTIFICATION_SETTINGS);
+        mHost.startActivityDismissingKeyguard(NOTIFICATION_SETTINGS);
     }
 
     private void setEnabled(boolean enabled) {
@@ -69,11 +69,6 @@ private static final Intent NOTIFICATION_SETTINGS = new Intent().setComponent(ne
     }
 
     @Override
-    public int getMetricsCategory() {
-        return MetricsLogger.QS_HEADSUP;
-    }
-
-    @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
         final int value = arg instanceof Integer ? (Integer)arg : mSetting.getValue();
         final boolean headsUp = value != 0;
@@ -101,6 +96,11 @@ private static final Intent NOTIFICATION_SETTINGS = new Intent().setComponent(ne
     }
 
     @Override
+    public int getMetricsCategory() {
+        return CMMetricsLogger.TILE_HEADS_UP;
+    }
+
+    @Override
     public void setListening(boolean listening) {
         // Do nothing
     }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/HotspotTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/HotspotTile.java
index 325b19b..6080358 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/HotspotTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/HotspotTile.java
@@ -78,9 +78,7 @@ public class HotspotTile extends QSTile<QSTile.BooleanState> {
     }
 
     @Override
-    protected void handleClick() {	
-	boolean mQSCSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_COLOR_SWITCH, 0) == 1;
+    protected void handleClick() {
         boolean airplaneMode = (Settings.Global.getInt(mContext.getContentResolver(),
                 Settings.Global.AIRPLANE_MODE_ON, 0) == 1);
         if (airplaneMode) {
@@ -95,13 +93,8 @@ public class HotspotTile extends QSTile<QSTile.BooleanState> {
         final boolean isEnabled = (Boolean) mState.value;
         MetricsLogger.action(mContext, getMetricsCategory(), !isEnabled);
         mController.setHotspotEnabled(!isEnabled);
-       if (!mQSCSwitch) {
         mEnable.setAllowAnimation(true);
         mDisable.setAllowAnimation(true);
-	} else {
-	 mEnable.setAllowAnimation(false);
-	  mDisable.setAllowAnimation(false);
-	}
     }
 
     @Override
@@ -111,8 +104,6 @@ public class HotspotTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
-	   boolean mQSCSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_COLOR_SWITCH, 0) == 1;
         state.visible = mController.isHotspotSupported();
 
         if (arg instanceof Boolean) {
@@ -127,11 +118,7 @@ public class HotspotTile extends QSTile<QSTile.BooleanState> {
         } else {
             state.label = mContext.getString(R.string.quick_settings_hotspot_label);
         }
-	 if (mQSCSwitch) {
-	state.icon = ResourceIcon.get(R.drawable.ic_qs_hotspot_on);
-	} else {
         state.icon = state.visible && state.value ? mEnable : mDisable;
-	}
     }
 
     @Override
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
index aef1ce2..3598bba 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
@@ -23,7 +23,6 @@ import android.content.Context;
 import android.content.Intent;
 import android.provider.Settings;
 import android.view.LayoutInflater;
-import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AbsListView;
@@ -98,8 +97,6 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     protected void handleClick() {
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
         if(mController.isAdvancedSettingsEnabled()) {
             showDetail(true);
         } else {
@@ -109,13 +106,8 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
             refreshState();
         }
 
-  	if (mQsColorSwitch == 0) {
         mEnable.setAllowAnimation(true);
         mDisable.setAllowAnimation(true);
-	} else {
-	 mEnable.setAllowAnimation(false);
-	  mDisable.setAllowAnimation(false);
-	}
     }
 
     @Override
@@ -126,43 +118,17 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
         final int currentState = mController.getLocationCurrentState();
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
 
-        state.visible = true;
+        // Work around for bug 15916487: don't show location tile on top of lock screen. After the
+        // bug is fixed, this should be reverted to only hiding it on secure lock screens:
+        // state.visible = !(mKeyguard.isSecure() && mKeyguard.isShowing());
+        state.visible = !mKeyguard.isShowing();
         state.label = mContext.getString(getStateLabelRes(currentState));
-	if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
+
         switch (currentState) {
             case Settings.Secure.LOCATION_MODE_OFF:
                 state.contentDescription = mContext.getString(
                         R.string.accessibility_quick_settings_location_off);
-                state.icon = ResourceIcon.get(R.drawable.ic_qs_location_off);
-                break;
-            case Settings.Secure.LOCATION_MODE_BATTERY_SAVING:
-                state.contentDescription = mContext.getString(
-                        R.string.accessibility_quick_settings_location_battery_saving);
-                state.icon = ResourceIcon.get(R.drawable.ic_qs_location_battery_saving);
-                break;
-            case Settings.Secure.LOCATION_MODE_SENSORS_ONLY:
-                state.contentDescription = mContext.getString(
-                        R.string.accessibility_quick_settings_location_gps_only);
-                state.icon = state.icon = ResourceIcon.get(R.drawable.ic_qs_location_on);
-                break;
-            case Settings.Secure.LOCATION_MODE_HIGH_ACCURACY:
-                state.contentDescription = mContext.getString(
-                        R.string.accessibility_quick_settings_location_high_accuracy);
-                state.icon = ResourceIcon.get(R.drawable.ic_qs_location_on);
-                break;
-            default:
-                state.contentDescription = mContext.getString(
-                        R.string.accessibility_quick_settings_location_on);
-                state.icon = ResourceIcon.get(R.drawable.ic_qs_location_on);
-        	} 
-	} else {
-	  switch (currentState) {
-            case Settings.Secure.LOCATION_MODE_OFF:
-                state.contentDescription = mContext.getString(
-                        R.string.accessibility_quick_settings_location_off);
                 state.icon = mDisable;
                 break;
             case Settings.Secure.LOCATION_MODE_BATTERY_SAVING:
@@ -184,7 +150,6 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
                 state.contentDescription = mContext.getString(
                         R.string.accessibility_quick_settings_location_on);
                 state.icon = mEnable;
-	   }
         }
     }
 
@@ -281,6 +246,11 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             mController.setLocationEnabled(state);
             rebuildLocationList(state);
@@ -303,7 +273,6 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
             final ListView list = mDetails.getListView();
             list.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
             list.setOnItemClickListener(this);
-            mDetails.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL);
 
             return mDetails;
         }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/LockscreenToggleTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/LockscreenToggleTile.java
index 840f8c6..a147d30 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/LockscreenToggleTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/LockscreenToggleTile.java
@@ -34,8 +34,7 @@ public class LockscreenToggleTile extends QSTile<QSTile.BooleanState>
 
     private static final Intent LOCK_SCREEN_SETTINGS =
             new Intent("android.settings.LOCK_SCREEN_SETTINGS");
-            
-    private KeyguardViewMediator mKeyguardViewMediator;
+
     private KeyguardMonitor mKeyguard;
     private boolean mListening;
 
@@ -45,21 +44,13 @@ public class LockscreenToggleTile extends QSTile<QSTile.BooleanState>
         super(host);
 
         mKeyguard = host.getKeyguardMonitor();
-        mKeyguardViewMediator =
-                ((SystemUIApplication)
-                        mContext.getApplicationContext()).getComponent(KeyguardViewMediator.class);
 
         mSettingsObserver = new KeyguardViewMediator.LockscreenEnabledSettingsObserver(mContext,
                 mUiHandler) {
 
-             @Override
+            @Override
             public void update() {
-                boolean newState = CMSettings.Secure.getIntForUser(
-                        mContext.getContentResolver(),
-                        CMSettings.Secure.LOCKSCREEN_INTERNALLY_ENABLED,
-                        getPersistedDefaultOldSetting() ? 1 : 0,
-                        UserHandle.USER_CURRENT) != 0;
-                refreshState(newState);
+                refreshState();
             }
         };
 
@@ -91,7 +82,6 @@ public class LockscreenToggleTile extends QSTile<QSTile.BooleanState>
         final boolean newState = !getState().value;
         setPersistedState(newState);
         refreshState(newState);
-        refreshState();
     }
 
     @Override
@@ -101,27 +91,49 @@ public class LockscreenToggleTile extends QSTile<QSTile.BooleanState>
 
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
-         final boolean lockscreenEnforced = mKeyguardViewMediator.lockscreenEnforcedByDevicePolicy();
-        final boolean lockscreenEnabled = lockscreenEnforced ||
-                arg != null ? (Boolean) arg : mKeyguardViewMediator.getKeyguardEnabledInternal();
-
-        state.value = lockscreenEnabled;
-        state.visible = !mKeyguard.isShowing() || !mKeyguard.isSecure();
-        state.label = mContext.getString(lockscreenEnforced
-                ? R.string.quick_settings_lockscreen_label_enforced
-                : R.string.quick_settings_lockscreen_label);
-        if (lockscreenEnabled) {
-            state.icon = ResourceIcon.get(R.drawable.ic_qs_lock_screen_on);
-            state.contentDescription = mContext.getString(
-                    R.string.accessibility_quick_settings_lock_screen_on);
+        KeyguardViewMediator mediator = ((SystemUIApplication)
+                        mContext.getApplicationContext()).getComponent(KeyguardViewMediator.class);
+
+        if (mediator == null) {
+            state.visible = false;
+            state.value = false;
+            state.enabled = false;
         } else {
-            state.icon = ResourceIcon.get(R.drawable.ic_qs_lock_screen_off);
-            state.contentDescription = mContext.getString(
-                    R.string.accessibility_quick_settings_lock_screen_off);
+            final boolean lockscreenEnforced = mediator.lockscreenEnforcedByDevicePolicy();
+            final boolean lockscreenEnabled = lockscreenEnforced ||
+                    arg != null ? (Boolean) arg : mediator.getKeyguardEnabledInternal();
+
+            state.visible = mediator.isKeyguardBound();
+
+            if (mediator.isProfileDisablingKeyguard()) {
+                state.value = false;
+                state.enabled = false;
+                state.label = mContext.getString(
+                        R.string.quick_settings_lockscreen_label_locked_by_profile);
+            } else if (lockscreenEnforced) {
+                state.value = true;
+                state.enabled = false;
+                state.label = mContext.getString(
+                        R.string.quick_settings_lockscreen_label_enforced);
+            } else {
+                state.value = lockscreenEnabled;
+                state.enabled = !mKeyguard.isShowing() || !mKeyguard.isSecure();
+
+                state.label = mContext.getString(R.string.quick_settings_lockscreen_label);
+            }
+            // update icon
+            if (lockscreenEnabled) {
+                state.icon = ResourceIcon.get(R.drawable.ic_qs_lock_screen_on);
+                state.contentDescription = mContext.getString(
+                        R.string.accessibility_quick_settings_lock_screen_on);
+            } else {
+                state.icon = ResourceIcon.get(R.drawable.ic_qs_lock_screen_off);
+                state.contentDescription = mContext.getString(
+                        R.string.accessibility_quick_settings_lock_screen_off);
+            }
         }
+    }
 
-      }  
-        
     @Override
     public int getMetricsCategory() {
         return CMMetricsLogger.TILE_LOCKSCREEN_TOGGLE;
@@ -149,4 +161,3 @@ public class LockscreenToggleTile extends QSTile<QSTile.BooleanState>
                 enabled ? 1 : 0, UserHandle.USER_CURRENT);
     }
 }
-
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/NfcTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/NfcTile.java
index b003f74..a5ffd23 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/NfcTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/NfcTile.java
@@ -155,4 +155,4 @@ public class NfcTile extends QSTile<QSTile.BooleanState> {
             mContext.unregisterReceiver(mReceiver);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/PerfProfileTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/PerfProfileTile.java
index bac29aa..4863683 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/PerfProfileTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/PerfProfileTile.java
@@ -222,6 +222,11 @@ public class PerfProfileTile extends QSTile<PerfProfileTile.ProfileState> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             // noop
         }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/ProfilesTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/ProfilesTile.java
index 9b9d14b..6f65f6c 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/ProfilesTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/ProfilesTile.java
@@ -24,7 +24,6 @@ import android.database.ContentObserver;
 import android.media.AudioManager;
 import android.os.Handler;
 import android.view.LayoutInflater;
-import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AbsListView;
@@ -48,7 +47,7 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.UUID;
 
-public class ProfilesTile extends QSTile<QSTile.State> {
+public class ProfilesTile extends QSTile<QSTile.State> implements KeyguardMonitor.Callback {
 
     private static final Intent PROFILES_SETTINGS =
             new Intent("android.settings.PROFILES_SETTINGS");
@@ -58,11 +57,19 @@ public class ProfilesTile extends QSTile<QSTile.State> {
     private ProfileManager mProfileManager;
     private QSDetailItemsList mDetails;
     private ProfileAdapter mAdapter;
+    private KeyguardMonitor mKeyguardMonitor;
 
     public ProfilesTile(Host host) {
         super(host);
         mProfileManager = ProfileManager.getInstance(mContext);
         mObserver = new ProfilesObserver(mHandler);
+        mKeyguardMonitor = host.getKeyguardMonitor();
+        mKeyguardMonitor.addCallback(this);
+    }
+
+    @Override
+    protected void handleDestroy() {
+        mKeyguardMonitor.removeCallback(this);
     }
 
     @Override
@@ -83,6 +90,10 @@ public class ProfilesTile extends QSTile<QSTile.State> {
     @Override
     protected void handleUpdateState(State state, Object arg) {
         state.visible = true;
+
+
+
+        state.enabled = !mKeyguardMonitor.isShowing() || !mKeyguardMonitor.isSecure();
         if (profilesEnabled()) {
             state.icon = ResourceIcon.get(R.drawable.ic_qs_profiles_on);
             state.label = mProfileManager.getActiveProfile().getName();
@@ -126,6 +137,7 @@ public class ProfilesTile extends QSTile<QSTile.State> {
             filter.addAction(ProfileManager.INTENT_ACTION_PROFILE_SELECTED);
             filter.addAction(ProfileManager.INTENT_ACTION_PROFILE_UPDATED);
             mContext.registerReceiver(mReceiver, filter);
+            refreshState();
         } else {
             mObserver.endObserving();
             mContext.unregisterReceiver(mReceiver);
@@ -137,6 +149,11 @@ public class ProfilesTile extends QSTile<QSTile.State> {
         return new ProfileDetailAdapter();
     }
 
+    @Override
+    public void onKeyguardChanged() {
+        refreshState();
+    }
+
     private class ProfileAdapter extends ArrayAdapter<Profile> {
         public ProfileAdapter(Context context, List<Profile> profiles) {
             super(context, android.R.layout.simple_list_item_single_choice, profiles);
@@ -195,7 +212,6 @@ public class ProfilesTile extends QSTile<QSTile.State> {
             final ListView list = mDetails.getListView();
             list.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
             list.setOnItemClickListener(this);
-            mDetails.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL);
 
             mDetails.setEmptyState(R.drawable.ic_qs_profiles_off,
                     R.string.quick_settings_profiles_off);
@@ -229,6 +245,11 @@ public class ProfilesTile extends QSTile<QSTile.State> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             CMSettings.System.putInt(mContext.getContentResolver(),
                     CMSettings.System.SYSTEM_PROFILES_ENABLED, state ? 1 : 0);
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/RotationLockTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/RotationLockTile.java
index 93bf570..f074d9d 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/RotationLockTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/RotationLockTile.java
@@ -26,8 +26,6 @@ import com.android.systemui.qs.QSTile;
 import com.android.systemui.statusbar.policy.RotationLockController;
 import com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback;
 
-import android.provider.Settings;
-
 /** Quick settings tile: Rotation **/
 public class RotationLockTile extends QSTile<QSTile.BooleanState> {
 
@@ -81,8 +79,6 @@ public class RotationLockTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
         if (mController == null) return;
         final boolean rotationLocked = arg != null ? ((UserBoolean) arg).value
                 : mController.isRotationLocked();
@@ -94,34 +90,18 @@ public class RotationLockTile extends QSTile<QSTile.BooleanState> {
         }
         state.value = rotationLocked;
         final boolean portrait = isCurrentOrientationLockPortrait();
-	if (mQsColorSwitch == 1 || mQsColorSwitch == 2) {
+        final AnimationIcon icon;
         if (rotationLocked) {
             final int label = portrait ? R.string.quick_settings_rotation_locked_portrait_label
                     : R.string.quick_settings_rotation_locked_landscape_label;
             state.label = mContext.getString(label);
-            state.icon = ResourceIcon.get(portrait ? R.drawable.ic_qs_rotation_portrait
-                        : R.drawable.ic_qs_rotation_landscape);
-        } else {
-            state.label = mContext.getString(R.string.quick_settings_rotation_unlocked_label);
-            state.icon = ResourceIcon.get(portrait ? R.drawable.ic_qs_rotation_portrait
-			: R.drawable.ic_qs_rotation_landscape);
-        	}
-	} else {
-	    final AnimationIcon icon;
-	    if (rotationLocked) {
-            final int label = portrait ? R.string.quick_settings_rotation_locked_portrait_label
-                    : R.string.quick_settings_rotation_locked_landscape_label;
-            state.label = mContext.getString(label);
             icon = portrait ? mAutoToPortrait : mAutoToLandscape;
         } else {
             state.label = mContext.getString(R.string.quick_settings_rotation_unlocked_label);
             icon = portrait ? mPortraitToAuto : mLandscapeToAuto;
-        	}
-	icon.setAllowAnimation(userInitiated);
+        }
+        icon.setAllowAnimation(userInitiated);
         state.icon = icon;
-	}
-	 
-       
         state.contentDescription = getAccessibilityString(rotationLocked,
                 R.string.accessibility_rotation_lock_on_portrait,
                 R.string.accessibility_rotation_lock_on_landscape,
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/ScreenTimeoutTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/ScreenTimeoutTile.java
index 9c2b5c2..e933787 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/ScreenTimeoutTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/ScreenTimeoutTile.java
@@ -25,7 +25,6 @@ import android.graphics.drawable.AnimatedVectorDrawable;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.provider.Settings;
-import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -290,6 +289,11 @@ public class ScreenTimeoutTile extends QSTile<ScreenTimeoutTile.TimeoutState> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public void setToggleState(boolean state) {
             // noop
         }
@@ -304,7 +308,6 @@ public class ScreenTimeoutTile extends QSTile<ScreenTimeoutTile.TimeoutState> {
             mItems = QSDetailItemsList.convertOrInflate(context, convertView, parent);
             ListView listView = mItems.getListView();
             listView.setOnItemClickListener(this);
-            mItems.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL);
             listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
             listView.setDivider(null);
             RadioAdapter adapter = new RadioAdapter(context,
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailItemView.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailItemView.java
index ba073cb..21c5c96 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailItemView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailItemView.java
@@ -34,8 +34,6 @@ import android.view.ViewGroup;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
-import android.provider.Settings;
-
 /**
  * Displays one user in the {@link UserDetailView} view.
  */
@@ -127,19 +125,6 @@ public class UserDetailItemView extends LinearLayout {
         mName.setTypeface(activated ? mActivatedTypeface : mRegularTypeface);
     }
 
- public void setTextColor(boolean activated) {
-        boolean mQsColorSwitch = Settings.System.getInt(getContext().getContentResolver(),
-                Settings.System.QS_COLOR_SWITCH, 0) == 1;
-        if (mQsColorSwitch) {
-            int textColorNormal = Settings.System.getInt(getContext().getContentResolver(),
-                    Settings.System.QS_TEXT_COLOR, 0xffffffff);
-            int textColorActivated = getContext().getResources().getColor(
-                    R.color.system_accent_color);
-            int textColorDeactivated = (102 << 24) | (textColorNormal & 0x00ffffff); // Text color normal with a transparency of 40%
-            mName.setTextColor(activated ? textColorActivated : textColorDeactivated);
-        }
-     }
-
     @Override
     public boolean hasOverlappingRendering() {
         return false;
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailView.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailView.java
index 4f1ab45..d4f54b6 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailView.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/UserDetailView.java
@@ -20,8 +20,6 @@ import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.R;
 import com.android.systemui.qs.PseudoGridView;
 import com.android.systemui.statusbar.policy.UserSwitcherController;
-import android.graphics.PorterDuff.Mode;
-import android.provider.Settings;
 
 import android.content.Context;
 import android.util.AttributeSet;
@@ -36,8 +34,6 @@ public class UserDetailView extends PseudoGridView {
 
     private Adapter mAdapter;
 
-    private boolean mQsColorSwitch = false;
-
     public UserDetailView(Context context, AttributeSet attrs) {
         super(context, attrs);
     }
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/WifiTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/WifiTile.java
index 0f76264..abc9acd 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/WifiTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/WifiTile.java
@@ -23,7 +23,6 @@ import android.content.res.Resources;
 import android.os.Looper;
 import android.provider.Settings;
 import android.util.Log;
-import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
@@ -65,7 +64,12 @@ public class WifiTile extends QSTile<QSTile.SignalState> {
         mWifiController = mController.getAccessPointController();
         mDetailAdapter = new WifiDetailAdapter();
     }
-    
+
+    @Override
+    public boolean hasDualTargetsDetails() {
+        return true;
+    }
+
     @Override
     protected SignalState newTileState() {
         return new SignalState();
@@ -273,6 +277,11 @@ public class WifiTile extends QSTile<QSTile.SignalState> {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public Boolean getToggleState() {
             return mState.enabled;
         }
@@ -300,7 +309,6 @@ public class WifiTile extends QSTile<QSTile.SignalState> {
             ListView listView = mItemsList.getListView();
             listView.setDivider(null);
             listView.setOnItemClickListener(this);
-            mItemsList.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL);
             listView.setAdapter(mAdapter =
                     new QSDetailItemsList.QSDetailListAdapter(context, mDisplayedAccessPoints));
             mItemsList.setEmptyState(R.drawable.ic_qs_wifi_detail_empty,
diff --git a/packages/SystemUI/src/com/android/systemui/recents/Constants.java b/packages/SystemUI/src/com/android/systemui/recents/Constants.java
index a8a8c5b..b482a50 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/Constants.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/Constants.java
@@ -38,7 +38,7 @@ public class Constants {
             // Enables the filtering of tasks according to their grouping
             public static final boolean EnableTaskFiltering = false;
             // Enables dismiss-all
-            public static final boolean EnableDismissAll = false;
+            public static final boolean EnableDismissAll = true;
             // Enables debug mode
             public static final boolean EnableDebugMode = false;
             // Enables the search bar layout
@@ -59,13 +59,6 @@ public class Constants {
             public static final int SystemServicesProxyMockPackageCount = 3;
             // Defines the number of mock recents tasks to create
             public static final int SystemServicesProxyMockTaskCount = 100;
-            // clear button location
-            public static final int RECENTS_CLEAR_ALL_TOP_RIGHT    = 0;
-            public static final int RECENTS_CLEAR_ALL_TOP_LEFT     = 1;
-            public static final int RECENTS_CLEAR_ALL_TOP_CENTER   = 2;
-            public static final int RECENTS_CLEAR_ALL_BOTTOM_RIGHT = 3;
-            public static final int RECENTS_CLEAR_ALL_BOTTOM_LEFT  = 4;
-            public static final int RECENTS_CLEAR_ALL_BOTTOM_CENTER  = 5;
         }
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/recents/Recents.java b/packages/SystemUI/src/com/android/systemui/recents/Recents.java
index 935f338..b3a3dfd 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/Recents.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/Recents.java
@@ -92,7 +92,6 @@ public class Recents extends SystemUI
     final public static String ACTION_START_ENTER_ANIMATION = "action_start_enter_animation";
     final public static String ACTION_TOGGLE_RECENTS_ACTIVITY = "action_toggle_recents_activity";
     final public static String ACTION_HIDE_RECENTS_ACTIVITY = "action_hide_recents_activity";
-    final public static String ACTION_CLEAR_RECENTS_ACTIVITY = "action_clear_recents_activity";
 
     final static int sMinToggleDelay = 350;
 
@@ -312,7 +311,6 @@ public class Recents extends SystemUI
     @Override
     public void onBootCompleted() {
         mBootCompleted = true;
-        reloadHeaderBarLayout();
     }
 
     /** Shows the Recents. */
@@ -406,12 +404,6 @@ public class Recents extends SystemUI
         }
     }
 
-    /** Clear the Recents activity. */
-    public void clearRecents() {
-        Intent intent = createLocalBroadcastIntent(mContext, ACTION_CLEAR_RECENTS_ACTIVITY);
-        mContext.sendBroadcastAsUser(intent, UserHandle.CURRENT);
-    }
-
     /** Preloads info for the Recents activity. */
     @ProxyFromPrimaryToCurrentUser
     @Override
@@ -593,12 +585,10 @@ public class Recents extends SystemUI
         // Try and pre-emptively bind the search widget on startup to ensure that we
         // have the right thumbnail bounds to animate to.
         // Note: We have to reload the widget id before we get the task stack bounds below
-	if (mBootCompleted == true) {
         if (mConfig.searchBarEnabled &&
                 mSystemServicesProxy.getOrBindSearchAppWidget(mContext, mAppWidgetHost) != null) {
             mConfig.getSearchBarBounds(mWindowRect.width(), mWindowRect.height(),
                     mStatusBarHeight, searchBarBounds);
-		}
         }
         mConfig.getAvailableTaskStackBounds(mWindowRect.width(), mWindowRect.height(),
                 mStatusBarHeight, (mConfig.hasTransposedNavBar ? mNavBarWidth : 0), searchBarBounds,
diff --git a/packages/SystemUI/src/com/android/systemui/recents/RecentsActivity.java b/packages/SystemUI/src/com/android/systemui/recents/RecentsActivity.java
index 945d236..9e08599 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/RecentsActivity.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/RecentsActivity.java
@@ -19,53 +19,23 @@ package com.android.systemui.recents;
 import android.app.Activity;
 import android.app.ActivityOptions;
 import android.app.SearchManager;
-import android.app.StatusBarManager;
-import android.app.WallpaperManager;
 import android.appwidget.AppWidgetManager;
 import android.appwidget.AppWidgetProviderInfo;
 import android.content.BroadcastReceiver;
 import android.content.Context;
-import android.content.ContentResolver;
-import android.database.ContentObserver;
-import android.graphics.*;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
-import android.os.AsyncTask;
 import android.content.Intent;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.util.AttributeSet;
-import android.widget.FrameLayout;
 import android.content.IntentFilter;
-import android.content.res.Resources;
-import android.graphics.drawable.Animatable;
-import android.graphics.drawable.Drawable;
-import com.android.systemui.statusbar.BlurUtils;
-import com.android.systemui.statusbar.DisplayUtils;
-import com.android.systemui.statusbar.phone.NotificationPanelView;
-import com.android.systemui.cm.UserContentObserver;
 import android.os.Bundle;
 import android.os.SystemClock;
 import android.os.UserHandle;
-import android.provider.Settings;
-import android.view.Gravity;
-import android.os.Handler;
-import android.net.Uri;
 import android.view.KeyEvent;
 import android.view.View;
 import android.view.ViewStub;
-import android.widget.ImageView;
 import android.widget.Toast;
 
-import java.lang.reflect.Field;
-import java.lang.ref.WeakReference;
-import java.util.ArrayList;
-import java.util.HashMap;
-
 import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.Prefs;
 import com.android.systemui.R;
-import com.android.systemui.SystemUIApplication;
 import com.android.systemui.recents.misc.Console;
 import com.android.systemui.recents.misc.DebugTrigger;
 import com.android.systemui.recents.misc.ReferenceCountedTrigger;
@@ -78,10 +48,11 @@ import com.android.systemui.recents.views.DebugOverlayView;
 import com.android.systemui.recents.views.RecentsView;
 import com.android.systemui.recents.views.SystemBarScrimViews;
 import com.android.systemui.recents.views.ViewAnimation;
-import com.android.systemui.statusbar.phone.NavigationBarView;
-import com.android.systemui.statusbar.phone.PhoneStatusBar;
 import cyanogenmod.providers.CMSettings;
 
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+
 /**
  * The main Recents activity that is started from AlternateRecentsComponent.
  */
@@ -89,7 +60,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         RecentsAppWidgetHost.RecentsAppWidgetHostCallbacks,
         DebugOverlayView.DebugOverlayViewCallbacks {
 
-    private static final HashMap<String, Field> fieldCache = new HashMap<String, Field>();
     RecentsConfiguration mConfig;
     long mLastTabKeyEventTime;
 
@@ -101,19 +71,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
     View mEmptyView;
     DebugOverlayView mDebugOverlay;
 
-    public static boolean mBlurredRecentAppsEnabled;
-
-    private static int mBlurScale;
-    private static int mBlurRadius;
-    private static Context mContext;
-    private static BlurUtils mBlurUtils;
-    private static ColorFilter mColorFilter;
-    private static int mBlurDarkColorFilter;
-    private static int mBlurMixedColorFilter;
-    private static int mBlurLightColorFilter;
-    private static RecentsActivity mRecentsActivity;
-    private static FrameLayout mRecentsActivityRootView;
-
     // Resize task debug
     RecentsResizeTaskDialog mResizeTaskDebugDialog;
 
@@ -127,175 +84,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
 
     // Runnable to be executed after we paused ourselves
     Runnable mAfterPauseRunnable;
-    static RecentsTaskLoadPlan plan;
-
-    public static void startBlurTask() {
-
-        if (mRecentsActivityRootView != null)
-            mRecentsActivityRootView.setBackground(null);
-
-        if (!mBlurredRecentAppsEnabled)
-            return;
-
-        BlurTask.setBlurTaskCallback(new BlurUtils.BlurTaskCallback() {
-
-            @Override
-            public void blurTaskDone(final Bitmap blurredBitmap) {
-
-                if (blurredBitmap != null) {
-                    if (mRecentsActivityRootView != null) {
-                        mRecentsActivityRootView.post(new Runnable() {
-                            @Override
-                            public void run() {
-                                BitmapDrawable blurredDrawable = new BitmapDrawable(blurredBitmap);
-
-                                blurredDrawable.setColorFilter(mColorFilter);
-
-                                mRecentsActivityRootView.setBackground(blurredDrawable);
-                            }
-                        });
-                    }
-                }
-            }
-
-            @Override
-            public void dominantColor(int color) {
-                double lightness = DisplayUtils.getColorLightness(color);
-
-                if (lightness >= 0.0 && color <= 1.0) {
-                    if (lightness <= 0.33) {
-                        mColorFilter = new PorterDuffColorFilter(mBlurLightColorFilter, PorterDuff.Mode.MULTIPLY);
-
-                    } else if (lightness >= 0.34 && lightness <= 0.66) {
-                        mColorFilter = new PorterDuffColorFilter(mBlurMixedColorFilter, PorterDuff.Mode.MULTIPLY);
-
-                    } else if (lightness >= 0.67 && lightness <= 1.0) {
-                        mColorFilter = new PorterDuffColorFilter(mBlurDarkColorFilter, PorterDuff.Mode.MULTIPLY);
-
-                    }
-
-                } else {
-                    mColorFilter = new PorterDuffColorFilter(mBlurMixedColorFilter, PorterDuff.Mode.MULTIPLY);
-                }
-            }
-        });
-
-        BlurTask.setBlurEngine(BlurUtils.BlurEngine.RenderScriptBlur);
-
-        new BlurTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
-
-    }
-
-    public static void onConfigurationChanged() {
-        RecentsActivity.startBlurTask();
-    }
-
-
-
-    public static class BlurTask extends AsyncTask<Void, Void, Bitmap> {
-        private static int[] mScreenDimens;
-        private static Bitmap mScreenBitmap;
-        private static BlurUtils.BlurEngine mBlurEngine;
-        private static BlurUtils.BlurTaskCallback mCallback;
-
-        public static void setBlurEngine(BlurUtils.BlurEngine blurEngine) {
-            mBlurEngine = blurEngine;
-        }
-
-        private Bitmap drawableToBitmap(Drawable drawable) {
-            Bitmap bitmap = null;
-            if (drawable instanceof BitmapDrawable) {
-                BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
-                if(bitmapDrawable.getBitmap() != null) {
-                    return bitmapDrawable.getBitmap();
-                }
-            }
-            if(drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {
-                bitmap = Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888); // Single color bitmap will be created of 1x1 pixel
-            } else {
-                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
-            }
-            Canvas canvas = new Canvas(bitmap);
-            drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
-            drawable.draw(canvas);
-            return bitmap;
-        }
-
-        public static void setBlurTaskCallback(BlurUtils.BlurTaskCallback callBack) {
-            mCallback = callBack;
-        }
-
-        public static int[] getRealScreenDimensions() {
-            return mScreenDimens;
-        }
-
-        public static Bitmap getLastBlurredBitmap() {
-            return mScreenBitmap;
-        }
-
-        @Override
-        protected void onPreExecute() {
-            mScreenDimens = DisplayUtils.getRealScreenDimensions(mContext);
-
-            WallpaperManager wallpaperManager = WallpaperManager.getInstance(mContext);
-            DisplayMetrics dm = mContext.getResources().getDisplayMetrics();
-            float screenh = dm.heightPixels;
-            float screenw = dm.widthPixels;
-            float bmheight = screenh;
-            float bmwidth = screenw;
-            float bmratio = 1;
-            Bitmap bback = drawableToBitmap(wallpaperManager.getDrawable());
-            float bbh = bback.getHeight();
-            float bbw = bback.getWidth();
-            if (bmheight > bbh) {
-                bmratio = bbh/bmheight;
-                bmheight = (bmratio*screenh);
-            }
-            bmwidth = (bmwidth*bmratio);
-            if (bmwidth > bbw) {
-                bmratio = bbw/screenw;
-                bmwidth = (bmratio*screenw);
-                bmheight = (bmratio*screenh);
-            }
-            Bitmap mScreenBitmap2 = Bitmap.createBitmap(bback, 0, 0, (int)bmwidth, (int)bmheight);
-            mScreenBitmap = Bitmap.createScaledBitmap(
-                    mScreenBitmap2, (int)(bmwidth / 20), (int)(bmheight / 20), false);
-        }
-
-        @Override
-        protected Bitmap doInBackground(Void... arg0) {
-            try {
-                if (mScreenBitmap == null)
-                    return null;
-
-                mCallback.dominantColor(DisplayUtils.getDominantColorByPixelsSampling(mScreenBitmap, 10, 10));
-
-                if (mBlurEngine == BlurUtils.BlurEngine.RenderScriptBlur) {
-                    mScreenBitmap = mBlurUtils.renderScriptBlur(mScreenBitmap, mBlurRadius);
-
-                } else if (mBlurEngine == BlurUtils.BlurEngine.StackBlur) {
-                    mScreenBitmap = mBlurUtils.stackBlur(mScreenBitmap, mBlurRadius);
-
-                } else if (mBlurEngine == BlurUtils.BlurEngine.FastBlur) {
-                    mBlurUtils.fastBlur(mScreenBitmap, mBlurRadius);
-                }
-                return mScreenBitmap;
-
-            } catch (OutOfMemoryError e) {
-                return null;
-            }
-        }
-
-        @Override
-        protected void onPostExecute(Bitmap bitmap) {
-            if (bitmap != null) {
-                mCallback.blurTaskDone(bitmap);
-
-            } else {
-                mCallback.blurTaskDone(null);
-            }
-        }
-    }
 
     private ReferenceCountedTrigger mExitTrigger;
 
@@ -375,10 +163,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
                 // Notify the fallback receiver that we have successfully got the broadcast
                 // See AlternateRecentsComponent.onAnimationStarted()
                 setResultCode(Activity.RESULT_OK);
-            } else if (action.equals(Recents.ACTION_CLEAR_RECENTS_ACTIVITY)) {
-                if (isActivityShowing()) {
-                    mRecentsView.dismissAllTasksAnimated();
-                }
             }
         }
     };
@@ -412,32 +196,12 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         }
     });
 
-    /** Updates the recents icon if there are tasks to clear */
-    public void setRecentHints(boolean showClearRecents) {
-	    return;
-	}
-
-    private static void recycle() {
-        if (mRecentsActivityRootView == null)
-            return;
-
-        if (mRecentsActivityRootView.getBackground() != null) {
-            Bitmap bitmap = ((BitmapDrawable) mRecentsActivityRootView.getBackground()).getBitmap();
-
-            if (bitmap != null) {
-                bitmap.recycle();
-                bitmap = null;
-            }
-            mRecentsActivityRootView.setBackground(null);
-        }
-    }
-
     /** Updates the set of recent tasks */
     void updateRecentsTasks() {
         // If AlternateRecentsComponent has preloaded a load plan, then use that to prevent
         // reconstructing the task stack
         RecentsTaskLoader loader = RecentsTaskLoader.getInstance();
-        plan = Recents.consumeInstanceLoadPlan();
+        RecentsTaskLoadPlan plan = Recents.consumeInstanceLoadPlan();
         if (plan == null) {
             plan = loader.createLoadPlan(this);
         }
@@ -462,11 +226,9 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         homeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK |
                 Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
         mFinishLaunchHomeRunnable = new FinishRecentsRunnable(homeIntent,
-            ActivityOptions.makeCustomAnimation(this,      
+            ActivityOptions.makeCustomAnimation(this,
                  R.anim.recents_to_search_launcher_enter,
                     R.anim.recents_to_search_launcher_exit));
-	setImmersiveRecents();
-        updatePreferences(mContext);
 
         // Mark the task that is the launch target
         int taskStackCount = stacks.size();
@@ -500,13 +262,11 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
                 }
             });
             mRecentsView.setSearchBarVisibility(View.GONE);
-            findViewById(R.id.floating_action_button).setVisibility(View.GONE);
         } else {
             if (mEmptyView != null) {
                 mEmptyView.setVisibility(View.GONE);
                 mEmptyView.setOnClickListener(null);
-            }  
-	   findViewById(R.id.floating_action_button).setVisibility(View.VISIBLE);
+            }
             if (!mConfig.searchBarEnabled) {
                 mRecentsView.setSearchBarVisibility(View.GONE);
             } else {
@@ -546,7 +306,8 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
 
     /** Dismisses recents if we are already visible and the intent is to toggle the recents view */
     boolean dismissRecentsToFocusedTaskOrHome(boolean checkFilteredStackState) {
-        if (isActivityShowing()) {
+        SystemServicesProxy ssp = RecentsTaskLoader.getInstance().getSystemServicesProxy();
+        if (ssp.isRecentsTopMost(ssp.getTopMostTask(), null)) {
             // If we currently have filtered stacks, then unfilter those first
             if (checkFilteredStackState &&
                 mRecentsView.unfilterFilteredStacks()) return true;
@@ -599,7 +360,8 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
 
     /** Dismisses Recents directly to Home if we currently aren't transitioning. */
     boolean dismissRecentsToHome(boolean animated) {
-        if (isActivityShowing()) {
+        SystemServicesProxy ssp = RecentsTaskLoader.getInstance().getSystemServicesProxy();
+        if (ssp.isRecentsTopMost(ssp.getTopMostTask(), null)) {
             // Return to Home
             dismissRecentsToHomeRaw(animated);
             return true;
@@ -640,78 +402,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         filter.addAction(Intent.ACTION_SCREEN_OFF);
         filter.addAction(SearchManager.INTENT_GLOBAL_SEARCH_ACTIVITY_CHANGED);
         registerReceiver(mSystemBroadcastReceiver, filter);
-        try {
-            RecentsView mRecentsView = (RecentsView) getObjectField(this, "mRecentsView");
-
-            mRecentsActivityRootView = (FrameLayout) mRecentsView.getParent();
-
-            Bitmap lastBlurredBitmap = BlurTask.getLastBlurredBitmap();
-
-            if ((mBlurredRecentAppsEnabled) && (lastBlurredBitmap != null)) {
-
-                BitmapDrawable blurredDrawable = new BitmapDrawable(lastBlurredBitmap);
-                blurredDrawable.setColorFilter(mColorFilter);
-                mRecentsActivityRootView.setBackground(blurredDrawable);
-            }
-        } catch (Exception e){
-        }
-    }
-
-    //#################################################################################################
-    public static Object getObjectField(Object obj, String fieldName) {
-        try {
-            return findField(obj.getClass(), fieldName).get(obj);
-        } catch (IllegalAccessException e) {
-            throw new IllegalAccessError(e.getMessage());
-        } catch (IllegalArgumentException e) {
-            throw e;
-        }
-    }
-
-
-    /**
-     * Look up a field in a class and set it to accessible. The result is cached.
-     * If the field was not found, a {@link NoSuchFieldError} will be thrown.
-     */
-    public static Field findField(Class<?> clazz, String fieldName) {
-        StringBuilder sb = new StringBuilder(clazz.getName());
-        sb.append('#');
-        sb.append(fieldName);
-        String fullFieldName = sb.toString();
-
-        if (fieldCache.containsKey(fullFieldName)) {
-            Field field = fieldCache.get(fullFieldName);
-            if (field == null)
-                throw new NoSuchFieldError(fullFieldName);
-            return field;
-        }
-
-        try {
-            Field field = findFieldRecursiveImpl(clazz, fieldName);
-            field.setAccessible(true);
-            fieldCache.put(fullFieldName, field);
-            return field;
-        } catch (NoSuchFieldException e) {
-            fieldCache.put(fullFieldName, null);
-            throw new NoSuchFieldError(fullFieldName);
-        }
-    }
-
-    private static Field findFieldRecursiveImpl(Class<?> clazz, String fieldName) throws NoSuchFieldException {
-        try {
-            return clazz.getDeclaredField(fieldName);
-        } catch (NoSuchFieldException e) {
-            while (true) {
-                clazz = clazz.getSuperclass();
-                if (clazz == null || clazz.equals(Object.class))
-                    break;
-
-                try {
-                    return clazz.getDeclaredField(fieldName);
-                } catch (NoSuchFieldException ignored) {}
-            }
-            throw e;
-        }
     }
 
     /** Inflates the debug overlay if debug mode is enabled. */
@@ -750,7 +440,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         filter.addAction(Recents.ACTION_HIDE_RECENTS_ACTIVITY);
         filter.addAction(Recents.ACTION_TOGGLE_RECENTS_ACTIVITY);
         filter.addAction(Recents.ACTION_START_ENTER_ANIMATION);
-        filter.addAction(Recents.ACTION_CLEAR_RECENTS_ACTIVITY);
         registerReceiver(mServiceBroadcastReceiver, filter);
 
         // Register any broadcast receivers for the task loader
@@ -770,8 +459,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         if (!mConfig.launchedHasConfigurationChanged) {
             mRecentsView.disableLayersForOneFrame();
         }
-
-        updateNavigationIconHints();
     }
 
     @Override
@@ -820,9 +507,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         mConfig.launchedToTaskId = -1;
         mConfig.launchedWithAltTab = false;
         mConfig.launchedHasConfigurationChanged = false;
-
-        // Reload navigation bar icons
-        updateNavigationIconHints();
     }
 
     @Override
@@ -862,30 +546,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         mScrimViews.startEnterRecentsAnimation();
     }
 
-    /**
-     * @return Whether recents has active tasks.
-     */
-    public static boolean hasTaskStacks() {
-        return plan != null && plan.hasTasks();
-    }
-
-    /** Reload proper recents icon for navigation bar */
-    private void updateNavigationIconHints() {
-        if (isActivityShowing() && hasTaskStacks()) {
-            setRecentHints(true);
-        } else {
-            setRecentHints(false);
-        }
-    }
-
-    /**
-     * @return Whether recents panel is showing.
-     */
-    public static boolean isActivityShowing() {
-        SystemServicesProxy ssp = RecentsTaskLoader.getInstance().getSystemServicesProxy();
-        return ssp.isRecentsTopMost(ssp.getTopMostTask(), null);
-    }
-
     @Override
     public void onTrimMemory(int level) {
         RecentsTaskLoader loader = RecentsTaskLoader.getInstance();
@@ -972,38 +632,6 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
         }
     }
 
-    private void setImmersiveRecents() {
-        boolean isPrimary = UserHandle.getCallingUserId() == UserHandle.USER_OWNER;
-        int immersiveRecents = isPrimary ? getImmersiveRecents() : 0;
-
-        if (immersiveRecents == 0) {
-         // default AOSP action
-        }
-        if (immersiveRecents == 1) {
-        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
-                | View.SYSTEM_UI_FLAG_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
-        }
-        if (immersiveRecents == 2) {
-        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
-                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
-        }
-        if (immersiveRecents == 3) {
-        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
-        }
-    }
-
-    private int getImmersiveRecents() {
-        return Settings.System.getInt(getContentResolver(),
-                Settings.System.IMMERSIVE_RECENTS, 0);
-    }
 
     /**** RecentsResizeTaskDialog ****/
 
@@ -1088,20 +716,4 @@ public class RecentsActivity extends Activity implements RecentsView.RecentsView
     public void onSecondarySeekBarChanged(float progress) {
         // Do nothing
     }
-
-    public static void init(Context context) {
-        mContext = context;
-        mBlurUtils = new BlurUtils(mContext);
-    }
-
-    public static void updatePreferences(Context mContext) {
-        mBlurScale = 20;
-        mBlurRadius = 3;
-        mBlurDarkColorFilter = Color.LTGRAY;
-        mBlurMixedColorFilter = Color.GRAY;
-        mBlurLightColorFilter = Color.DKGRAY;
-	try {
-        mBlurredRecentAppsEnabled = (Settings.System.getInt(mContext.getContentResolver(), Settings.System.RECENT_APPS_ENABLED_PREFERENCE_KEY, 0) == 1);
-	} catch(Exception e) {}
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java b/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java
index 215cd4e..d7e8b99 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java
@@ -21,8 +21,6 @@ import android.content.Context;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.graphics.Rect;
-import android.net.Uri;
-import android.os.UserHandle;
 import android.provider.Settings;
 import android.util.DisplayMetrics;
 import android.view.animation.AnimationUtils;
@@ -214,9 +212,7 @@ public class RecentsConfiguration {
                 res.getInteger(R.integer.recents_filter_animate_new_views_duration);
 
         // Loading
-        maxNumTasksToLoad = Settings.System.getIntForUser(context.getContentResolver(),
-                Settings.System.RECENTS_MAX_APPS, ActivityManager.getMaxRecentTasksStatic(),
-                UserHandle.USER_CURRENT);
+        maxNumTasksToLoad = ActivityManager.getMaxRecentTasksStatic();
 
         // Search Bar
         searchBarSpaceHeightPx = res.getDimensionPixelSize(R.dimen.recents_search_bar_space_height);
diff --git a/packages/SystemUI/src/com/android/systemui/recents/RecentsResizeTaskDialog.java b/packages/SystemUI/src/com/android/systemui/recents/RecentsResizeTaskDialog.java
index c1a8b7e..b701e0b 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/RecentsResizeTaskDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/RecentsResizeTaskDialog.java
@@ -233,8 +233,7 @@ public class RecentsResizeTaskDialog extends DialogFragment {
     public Dialog onCreateDialog(Bundle args) {
         final Context context = this.getActivity();
         LayoutInflater inflater = getActivity().getLayoutInflater();
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),
-                com.android.internal.R.style. Theme_DeviceDefault_Dialog_Alert);
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
         createResizeTaskDialog(context, inflater, builder);
         return builder.create();
     }
diff --git a/packages/SystemUI/src/com/android/systemui/recents/misc/SystemServicesProxy.java b/packages/SystemUI/src/com/android/systemui/recents/misc/SystemServicesProxy.java
index 3745b1b..d5c9253 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/misc/SystemServicesProxy.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/misc/SystemServicesProxy.java
@@ -222,7 +222,7 @@ public class SystemServicesProxy {
     }
 
     /** Returns a list of the running tasks */
-    public List<ActivityManager.RunningTaskInfo> getRunningTasks(int numTasks) {
+    private List<ActivityManager.RunningTaskInfo> getRunningTasks(int numTasks) {
         if (mAm == null) return null;
         return mAm.getRunningTasks(numTasks);
     }
diff --git a/packages/SystemUI/src/com/android/systemui/recents/model/RecentsTaskLoadPlan.java b/packages/SystemUI/src/com/android/systemui/recents/model/RecentsTaskLoadPlan.java
index f056308..f40c58d 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/model/RecentsTaskLoadPlan.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/model/RecentsTaskLoadPlan.java
@@ -23,7 +23,6 @@ import android.graphics.Bitmap;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.Log;
 import android.util.SparseArray;
 import com.android.systemui.recents.Constants;
@@ -109,24 +108,6 @@ public class RecentsTaskLoadPlan {
         for (int i = 0; i < taskCount; i++) {
             ActivityManager.RecentTaskInfo t = mRawTasks.get(i);
 
-            boolean onlyShowRunningTasks = Settings.System.getIntForUser(
-                    mContext.getContentResolver(), Settings.System.RECENT_SHOW_RUNNING_TASKS, 0,
-                    UserHandle.USER_CURRENT) == 1;
-
-            final List<ActivityManager.RunningTaskInfo> runningTasks =
-                mSystemServicesProxy.getRunningTasks(Integer.MAX_VALUE);
-
-            boolean isRunning = false;
-            if (onlyShowRunningTasks) {
-                for (ActivityManager.RunningTaskInfo task : runningTasks) {
-                    if (t.baseIntent.getComponent().getPackageName().equals(
-                            task.baseActivity.getPackageName())) {
-                        isRunning = true;
-                    }
-                }
-                if (!isRunning) continue;
-            }
-
             // Compose the task key
             Task.TaskKey taskKey = new Task.TaskKey(t.persistentId, t.stackId, t.baseIntent,
                     t.userId, t.firstActiveTime, t.lastActiveTime);
diff --git a/packages/SystemUI/src/com/android/systemui/recents/views/RecentsView.java b/packages/SystemUI/src/com/android/systemui/recents/views/RecentsView.java
index ec50330..2f11c56 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/views/RecentsView.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/views/RecentsView.java
@@ -16,52 +16,27 @@
 
 package com.android.systemui.recents.views;
 
-import android.app.ActivityManager;
-import android.app.ActivityManager.MemoryInfo;
 import android.app.ActivityOptions;
-import android.app.ActivityManagerNative;
-import android.app.IActivityManager;
 import android.app.TaskStackBuilder;
-import android.content.pm.ApplicationInfo;
-import android.content.pm.IPackageDataObserver;
-import android.content.pm.IPackageManager;
-import android.content.pm.PackageManager;
 import android.content.Context;
-import android.content.ContentResolver;
-import android.content.ComponentName;
-import android.content.res.Configuration;
-import android.content.res.Resources;
 import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Rect;
-import android.graphics.PorterDuff.Mode;
-import android.graphics.Typeface;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.IRemoteCallback;
 import android.os.RemoteException;
 import android.os.UserHandle;
-import android.os.Vibrator;
 import android.provider.Settings;
 import android.util.AttributeSet;
 import android.util.Log;
-import android.view.animation.Animation;
-import android.view.animation.AnimationUtils;
-import android.view.ViewAnimationUtils;
-import android.view.Gravity;
 import android.util.EventLog;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.WindowInsets;
 import android.view.WindowManagerGlobal;
 import android.widget.FrameLayout;
-import android.widget.ProgressBar;
-import android.widget.TextClock;
-import android.widget.TextView;
-import android.widget.ImageButton;
 
 import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.R;
@@ -73,32 +48,21 @@ import com.android.systemui.recents.model.RecentsPackageMonitor;
 import com.android.systemui.recents.model.RecentsTaskLoader;
 import com.android.systemui.recents.model.Task;
 import com.android.systemui.recents.model.TaskStack;
-import java.io.BufferedReader;
-import java.io.FileReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.text.DateFormat;
-
 
 import com.android.systemui.EventLogTags;
 
 import java.util.ArrayList;
 import java.util.List;
 
-import com.android.settingslib.applications.ApplicationsState;
-import com.android.settingslib.applications.ApplicationsState.AppEntry;
-import com.android.settingslib.applications.ApplicationsState.Callbacks;
-
-
 /**
  * This view is the the top level layout that contains TaskStacks (which are laid out according
  * to their SpaceNode bounds.
  */
-public  class RecentsView extends FrameLayout implements TaskStackView.TaskStackViewCallbacks ,
-        RecentsPackageMonitor.PackageCallbacks  {
+public class RecentsView extends FrameLayout implements TaskStackView.TaskStackViewCallbacks,
+        RecentsPackageMonitor.PackageCallbacks {
+
+    private static final String TAG = "RecentsView";
 
-	   static final String TAG = "RecentsView";
     /** The RecentsView callbacks */
     public interface RecentsViewCallbacks {
         public void onTaskViewClicked();
@@ -119,25 +83,6 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
     List<TaskStackView> mTaskStackViews = new ArrayList<>();
     RecentsAppWidgetHostView mSearchBar;
     RecentsViewCallbacks mCb;
-    View mClearRecents;
-    View mFloatingButton;
-    TextView mMemText;
-    ProgressBar mMemBar;
-
-    private ActivityManager mAm;
-    private int mTotalMem;
-
-    public int mClearStyle;
-    public boolean mClearStyleSwitch = false;
-    private int mfabcolor ;
-    private ImageButton button;
-    private TextView mClearallText;
-    private boolean mButtonsRotation;
-    private boolean mClearallRotation;
-    private boolean ClearallTasks;
-
-    TextClock mClock;
-    TextView mDate;
 
     public RecentsView(Context context) {
         super(context);
@@ -156,7 +101,6 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
         mConfig = RecentsConfiguration.getInstance();
         mInflater = LayoutInflater.from(context);
         mLayoutAlgorithm = new RecentsViewLayoutAlgorithm(mConfig);
-        mAm = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);
     }
 
     /** Sets the callbacks */
@@ -219,7 +163,7 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
 
     /** Gets the next task in the stack - or if the last - the top task */
     public Task getNextTaskOrTopTask(Task taskToSearch) {
-        Task returnTask = null;
+        Task returnTask = null; 
         boolean found = false;
         List<TaskStackView> stackViews = getTaskStackViews();
         int stackCount = stackViews.size();
@@ -242,17 +186,6 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
         return returnTask;
     }
 
-    public void dismissAllTasksAnimated() {
-        int childCount = getChildCount();
-        for (int i = 0; i < childCount; i++) {
-            View child = getChildAt(i);
-            if (child != mSearchBar) {
-                TaskStackView stackView = (TaskStackView) child;
-                stackView.dismissAllTasks();
-            }
-        }
-    }
-
     /** Launches the focused task from the first stack if possible */
     public boolean launchFocusedTask() {
         // Get the first stack view
@@ -390,101 +323,22 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
      */
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final ContentResolver resolver = mContext.getContentResolver();
         int width = MeasureSpec.getSize(widthMeasureSpec);
         int height = MeasureSpec.getSize(heightMeasureSpec);
-        Rect searchBarSpaceBounds = new Rect();
-
-        int paddingStatusBar = mContext.getResources().getDimensionPixelSize(R.dimen.status_bar_height) / 2;
-
-
-        boolean enableMemDisplay = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.SYSTEMUI_RECENTS_MEM_DISPLAY, 1) == 1;
 
-	mClearStyle = Settings.System.getIntForUser(
-                    resolver, Settings.System.CLEAR_RECENTS_STYLE, 0,
-                    UserHandle.USER_CURRENT);
-	checkstyle(mClearStyle); 	
-        
         // Get the search bar bounds and measure the search bar layout
+        Rect searchBarSpaceBounds = new Rect();
         if (mSearchBar != null && mConfig.searchBarEnabled) {
             mConfig.getSearchBarBounds(width, height, mConfig.systemInsets.top, searchBarSpaceBounds);
             mSearchBar.measure(
                     MeasureSpec.makeMeasureSpec(searchBarSpaceBounds.width(), MeasureSpec.EXACTLY),
                     MeasureSpec.makeMeasureSpec(searchBarSpaceBounds.height(), MeasureSpec.EXACTLY));
-            boolean isLandscape1 = mContext.getResources().getConfiguration().orientation
-                == Configuration.ORIENTATION_LANDSCAPE;
-
-            int paddingSearchBar = searchBarSpaceBounds.height() + 25;
-
-            if (enableMemDisplay) {
-                if (!isLandscape1) {
-                    mMemBar.setPadding(0, paddingSearchBar, 0, 0);
-                } else {
-                    mMemBar.setPadding(0, paddingStatusBar, 0, 0);
-                }
-            }
-        } else {
-            if (enableMemDisplay) {
-                mMemBar.setPadding(0, paddingStatusBar, 0, 0);
-            }
         }
-        showMemDisplay();
-
-
-        updateTimeVisibility();
-
-        boolean showClearAllRecents = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.SHOW_CLEAR_ALL_RECENTS, 0, UserHandle.USER_CURRENT) != 0;
 
         Rect taskStackBounds = new Rect();
         mConfig.getAvailableTaskStackBounds(width, height, mConfig.systemInsets.top,
                 mConfig.systemInsets.right, searchBarSpaceBounds, taskStackBounds);
 
-        if (mFloatingButton != null && showClearAllRecents) {
-            int clearRecentsLocation = Settings.System.getIntForUser(
-                mContext.getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION,
-            Constants.DebugFlags.App.RECENTS_CLEAR_ALL_BOTTOM_RIGHT, UserHandle.USER_CURRENT);
-
-            FrameLayout.LayoutParams params = (FrameLayout.LayoutParams)
-                    mFloatingButton.getLayoutParams();
-            boolean isLandscape = mContext.getResources().getConfiguration().orientation
-                == Configuration.ORIENTATION_LANDSCAPE;
-            if (mSearchBar == null || isLandscape) {
-                params.topMargin = mContext.getResources().
-                    getDimensionPixelSize(com.android.internal.R.dimen.status_bar_height);
-            } else {
-                params.topMargin = mContext.getResources().
-                    getDimensionPixelSize(com.android.internal.R.dimen.status_bar_height)
-                        + searchBarSpaceBounds.height();
-            }
-
-            switch (clearRecentsLocation) {
-                case Constants.DebugFlags.App.RECENTS_CLEAR_ALL_TOP_LEFT:
-                    params.gravity = Gravity.TOP | Gravity.LEFT;
-                    break;
-                case Constants.DebugFlags.App.RECENTS_CLEAR_ALL_TOP_RIGHT:
-                    params.gravity = Gravity.TOP | Gravity.RIGHT;
-                    break;
-                case Constants.DebugFlags.App.RECENTS_CLEAR_ALL_TOP_CENTER:
-                    params.gravity = Gravity.TOP | Gravity.CENTER;
-                    break;
-                case Constants.DebugFlags.App.RECENTS_CLEAR_ALL_BOTTOM_LEFT:
-                    params.gravity = Gravity.BOTTOM | Gravity.LEFT;
-                    break;
-                case Constants.DebugFlags.App.RECENTS_CLEAR_ALL_BOTTOM_RIGHT:
-                default:
-                    params.gravity = Gravity.BOTTOM | Gravity.RIGHT;
-                    break;
-                case Constants.DebugFlags.App.RECENTS_CLEAR_ALL_BOTTOM_CENTER:
-                    params.gravity = Gravity.BOTTOM | Gravity.CENTER;
-                    break;
-            }
-            mFloatingButton.setLayoutParams(params);
-        } else {
-            mFloatingButton.setVisibility(View.GONE);
-        }
-
         // Measure each TaskStackView with the full width and height of the window since the
         // transition view is a child of that stack view
         List<TaskStackView> stackViews = getTaskStackViews();
@@ -505,514 +359,6 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
         setMeasuredDimension(width, height);
     }
 
-    private boolean showMemDisplay() {
-        boolean enableMemDisplay = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.SYSTEMUI_RECENTS_MEM_DISPLAY, 0) == 1;
-
-        if (!enableMemDisplay) {
-            mMemText.setVisibility(View.GONE);
-            mMemBar.setVisibility(View.GONE);
-            return false;
-        }
-        mMemText.setVisibility(View.VISIBLE);
-        mMemBar.setVisibility(View.VISIBLE);
-
-        updateMemoryStatus();
-        return true;
-    }
-
-    private void updateMemoryStatus() {
-        if (mMemText.getVisibility() == View.GONE
-                || mMemBar.getVisibility() == View.GONE) return;
-
-        MemoryInfo memInfo = new MemoryInfo();
-        mAm.getMemoryInfo(memInfo);
-            int available = (int)(memInfo.availMem / 1048576L);
-            int max = (int)(getTotalMemory() / 1048576L);
-            mMemText.setText("Free RAM: " + String.valueOf(available) + "MB");
-            mMemBar.setMax(max);
-            mMemBar.setProgress(available);
-    }
-
-    public long getTotalMemory() {
-        MemoryInfo memInfo = new MemoryInfo();
-        mAm.getMemoryInfo(memInfo);
-        long totalMem = memInfo.totalMem;
-        return totalMem;
-    }
-
-    public void noUserInteraction() {
-        if (mClearRecents != null) {
-            mClearRecents.setVisibility(View.VISIBLE);
-        }
-    }
-
-    @Override
-    protected void onAttachedToWindow () {
-        super.onAttachedToWindow();
-	final ContentResolver resolver = mContext.getContentResolver();
-        mFloatingButton = ((View)getParent()).findViewById(R.id.floating_action_button);
-	mClearStyle = Settings.System.getIntForUser(
-                    resolver, Settings.System.CLEAR_RECENTS_STYLE, 0,
-                    UserHandle.USER_CURRENT);
-        mClearStyleSwitch  = Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.CLEAR_RECENTS_STYLE_ENABLE, 0) == 1;
-	mfabcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FAB_BUTTON_COLOR, 0xffDC4C3C);			
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents);
-	if (mClearStyleSwitch) {
-	checkstyle(mClearStyle); 
-	} else {
-		mClearRecents.setVisibility(View.VISIBLE);
-		mClearRecents.setOnClickListener(new View.OnClickListener() {
-          	public void onClick(View v) {
-                	dismissAllTasksAnimated();
-                	updateMemoryStatus();
-            		}
-        	});
-	}	
-        mMemText = (TextView) ((View)getParent()).findViewById(R.id.recents_memory_text);
-        mMemBar = (ProgressBar) ((View)getParent()).findViewById(R.id.recents_memory_bar);
-
-        updateMemoryStatus();
-
-        mClock = (TextClock) ((View)getParent()).findViewById(R.id.recents_clock);
-        mDate = (TextView) ((View)getParent()).findViewById(R.id.recents_date);
-        updateTimeVisibility();
-	
-    }
-
-    public void checkstyle(int style) {
-	final ContentResolver resolver = mContext.getContentResolver();
-        final Resources res = getContext().getResources();
-	mButtonsRotation =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.RECENTS_ROTATE_FAB, 0) == 1;	
-	mClearStyle = Settings.System.getIntForUser(
-                    resolver, Settings.System.CLEAR_RECENTS_STYLE, 0,
-                    UserHandle.USER_CURRENT);
-        mClearStyleSwitch  = Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.CLEAR_RECENTS_STYLE_ENABLE, 0) == 1;
-	mfabcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FAB_BUTTON_COLOR, 0xffDC4C3C);
-	int mbarcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.MEM_BAR_COLOR, 0xff009688);
-	int mtextcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.MEM_TEXT_COLOR, 0xFFFFFFFF);
-	int mclearallcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.CLEAR_BUTTON_COLOR, 0xFFFFFFFF);
-	int mClockcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.RECENTS_CLOCK_COLOR, 0xFFFFFFFF);
-	int mDatecolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.RECENTS_DATE_COLOR, 0xFFFFFFFF);
-	int mDefaultcolor = res.getColor(R.color.recents_membar_text_color);
-	int mSetfabcolor = res.getColor(R.color.fab_color);
-
-	mClearStyle = style;
-	if (mClearStyleSwitch) {
-	mFloatingButton = ((View)getParent()).findViewById(R.id.floating_action_button);
-	mMemBar = (ProgressBar) ((View)getParent()).findViewById(R.id.recents_memory_bar);
-	mMemText = (TextView) ((View)getParent()).findViewById(R.id.recents_memory_text);
-	mClock = (TextClock) ((View)getParent()).findViewById(R.id.recents_clock);
-        mDate = (TextView) ((View)getParent()).findViewById(R.id.recents_date);
-	mFloatingButton.getBackground().setColorFilter(mSetfabcolor, Mode.CLEAR);
-	if(mClearStyle!=30) {
-	mFloatingButton.getBackground().setColorFilter(mfabcolor, Mode.SRC_IN);
-	}
-	MemoryInfo memInfo = new MemoryInfo();
-        mAm.getMemoryInfo(memInfo);
-	updateMemoryStatus();
-	mMemBar.getProgressDrawable().setColorFilter(mbarcolor, Mode.MULTIPLY); 
-	mMemText.setTextColor(mtextcolor);
-	if (mClock !=null) {
-	mClock.setTextColor(mClockcolor);
-	}
-        if(mDate !=null) {
-	mDate.setTextColor(mDatecolor);
-	}
-	if (style == 0) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 1) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents1);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents1);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 2) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents2);
-        button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents2);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 3) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents3);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents3);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 4) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents4);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents4);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 5) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents5);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents5);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 6) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents6);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents6);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 7) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents7);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents7);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 8) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents8);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents8);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 9) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents9);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents9);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 10) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents10);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents10);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-		} 
-	if (style == 11) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents11);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents11);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 12) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents12);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents12);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 13) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents13);
-        button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents13);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 14) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents14);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents14);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 15) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents15);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents15);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 16) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents16);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents16);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 17) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents17);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents17);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 18) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents18);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents18);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 19) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents19);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents19);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 20) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents20);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents20);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 21) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents21);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents21);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-		} 
-	if (style == 22) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents22);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents22);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 23) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents23);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents23);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 24) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents24);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents24);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 25) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents25);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents25);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 26) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents26);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents26);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} if (style == 27) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents27);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents27);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	} 
-	if (style == 28) {
-	mClearRecents.setVisibility(View.GONE);	
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents28);
-	button = (ImageButton) ((View)getParent()).findViewById(R.id.clear_recents28);      
-	button.setColorFilter(mclearallcolor, Mode.SRC_IN);
-	mClearRecents.setVisibility(View.VISIBLE);
-	}
-	if (style == 29) {
-	int zero = 0x00000000;
-	mClearRecents.setVisibility(View.GONE);
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents29);
-	mClearallText =  (TextView) ((View)getParent()).findViewById(R.id.clear_recents29);
-	mClearallText.setTextColor(mclearallcolor);
-	mClearallText.setVisibility(View.VISIBLE);
-	mClearRecents.setVisibility(View.VISIBLE);
-	mFloatingButton.getBackground().setColorFilter(zero,Mode.SRC_IN);
-	}
-	mClearRecents.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View v) {
-               if (mButtonsRotation) {
-		dismissAllTasksAnimated();
-		checkrotation();
-                updateMemoryStatus();
-		} else {
-		dismissAllTasksAnimated();
-                updateMemoryStatus();
-		}
-            }
-        });		
-	} else {
-	mClearRecents.setVisibility(View.GONE);
-	mClearRecents = ((View)getParent()).findViewById(R.id.clear_recents);
-	mClearRecents.setVisibility(View.VISIBLE);
-	mFloatingButton = ((View)getParent()).findViewById(R.id.floating_action_button);
-	mMemBar = (ProgressBar) ((View)getParent()).findViewById(R.id.recents_memory_bar);
-	mMemText = (TextView) ((View)getParent()).findViewById(R.id.recents_memory_text);
-	mClock = (TextClock) ((View)getParent()).findViewById(R.id.recents_clock);
-        mDate = (TextView) ((View)getParent()).findViewById(R.id.recents_date);
-	mFloatingButton.getBackground().setColorFilter(null);
-	mMemBar.getProgressDrawable().setColorFilter(null);
-	mMemText.setTextColor(mDefaultcolor);
-	mClock.setTextColor(mDefaultcolor);
-	mDate.setTextColor(mDefaultcolor);
-	mClearRecents.getBackground().setColorFilter(null);
-	mClearRecents.setOnClickListener(new View.OnClickListener() {
-          public void onClick(View v) {               
-		dismissAllTasksAnimated();
-                updateMemoryStatus();
-            }
-        });
-	}
-     }
-
-    public void checkrotation() {
-		final ContentResolver resolver = mContext.getContentResolver();
-		Animation animation = AnimationUtils.loadAnimation(mContext, R.anim.rotate_around_center);
-		Animation animation1 = AnimationUtils.loadAnimation(mContext, R.anim.recent_exit);
-		Animation animation2 = AnimationUtils.loadAnimation(mContext, R.anim.translucent_exit);
-		Animation animation3 = AnimationUtils.loadAnimation(mContext, R.anim.translucent_exit_ribbon);
-		Animation animation4 = AnimationUtils.loadAnimation(mContext, R.anim.tn_toast_exit);
-		Animation animation5 = AnimationUtils.loadAnimation(mContext, R.anim.slide_out_down);
-		Animation animation6 = AnimationUtils.loadAnimation(mContext, R.anim.xylon_toast_exit);
-		Animation animation7 = AnimationUtils.loadAnimation(mContext, R.anim.honami_toast_exit);
-		Animation animation8 = AnimationUtils.loadAnimation(mContext, R.anim.slide_out_right);
-		Animation animation9 = AnimationUtils.loadAnimation(mContext, R.anim.tn_toast_exit);
-		Animation animation10 = AnimationUtils.loadAnimation(mContext, R.anim.slow_fade_out);
-		Animation animation11 = AnimationUtils.loadAnimation(mContext, R.anim.slide_out_left);
-		Animation animation12 = AnimationUtils.loadAnimation(mContext, R.anim.fade_out);
-		Animation animation13 = AnimationUtils.loadAnimation(mContext, R.anim.fast_fade_out);
-		Animation animation14 = AnimationUtils.loadAnimation(mContext, R.anim.slide_out_up);
-		Animation animation15 = AnimationUtils.loadAnimation(mContext, R.anim.rotate_super_fast);
-		Animation animation16 = AnimationUtils.loadAnimation(mContext, R.anim.rotate_super_slow);
-	        Animation animationdefault = AnimationUtils.loadAnimation(mContext, R.anim.fab_deault);
-		mButtonsRotation =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.RECENTS_ROTATE_FAB, 0) == 1;	
-		int mAnimStyle =  Settings.System.getIntForUser(
-                    resolver, Settings.System.FAB_ANIMATION_STYLE, 0,
-                    UserHandle.USER_CURRENT);
-                boolean ClearallTasks =   Settings.System.getInt(mContext.getContentResolver(),
-		     Settings.System.RECENTS_CLEAR_ALL_DISMISS_ALL, 0) == 1;	
-		if(mButtonsRotation) {	
-			if (mAnimStyle ==0) {	
-			mFloatingButton.startAnimation(animation);
-			mClearRecents.startAnimation(animation);  
-			} 	
-			if (mAnimStyle ==1) {	
-	        	mFloatingButton.startAnimation(animation1);
-			mClearRecents.startAnimation(animation1);  
-			}
-			if (mAnimStyle ==2) {	 
-	        	mFloatingButton.startAnimation(animation2); 
-			mClearRecents.startAnimation(animation2); 
-			}
-			if (mAnimStyle ==3) {		
-	        	mFloatingButton.startAnimation(animation3); 
-			mClearRecents.startAnimation(animation3); 
-			}
-			if (mAnimStyle ==4) {		
-	        	mFloatingButton.startAnimation(animation4);
-			mClearRecents.startAnimation(animation4); 
-			} 
-			if (mAnimStyle ==5) {		
-	        	mFloatingButton.startAnimation(animation5); 
-			mClearRecents.startAnimation(animation5); 
-			}
-			if (mAnimStyle ==6) {		
-	        	mFloatingButton.startAnimation(animation6); 
-			mClearRecents.startAnimation(animation6); 
-			}
-			if (mAnimStyle ==7) {		
-	        	mFloatingButton.startAnimation(animation7); 
-			mClearRecents.startAnimation(animation7); 
-			}
-			if (mAnimStyle ==8) {		 
-	        	mFloatingButton.startAnimation(animation8); 
-			mClearRecents.startAnimation(animation8); 
-			}
-			if (mAnimStyle ==9) {		
-	        	mFloatingButton.startAnimation(animation9);
-			mClearRecents.startAnimation(animation9); 
-			} 
-			if (mAnimStyle ==10) {		
-	        	mFloatingButton.startAnimation(animation10); 
-			mClearRecents.startAnimation(animation10); 
-			}
-			if (mAnimStyle ==11) {		
-	        	mFloatingButton.startAnimation(animation11); 
-			mClearRecents.startAnimation(animation11); 
-			}
-			if (mAnimStyle ==12) {		
-	        	mFloatingButton.startAnimation(animation12); 
-			mClearRecents.startAnimation(animation12); 
-			}
-			if (mAnimStyle ==13) {		 
-	        	mFloatingButton.startAnimation(animation13); 
-			mClearRecents.startAnimation(animation13); 
-			}
-			if (mAnimStyle ==14) {		 
-	        	mFloatingButton.startAnimation(animation14); 
-			mClearRecents.startAnimation(animation14);
-			}
-			if (mAnimStyle ==15) {		 
-	        	mFloatingButton.startAnimation(animation15); 
-			mClearRecents.startAnimation(animation15); 
-			}
-			if (mAnimStyle ==16) {		 
-	        	mFloatingButton.startAnimation(animation16); 
-			mClearRecents.startAnimation(animation16); 
-			}
-		} else {
-		mFloatingButton.startAnimation(animationdefault);
-		mClearRecents.startAnimation(animationdefault); 
-		}	
-		if (ClearallTasks) {
-		mFloatingButton.setVisibility(View.GONE);
-		mClearRecents.setVisibility(View.GONE);	
-		} 	  
-   }	
-   
-
-    public void updateTimeVisibility() {
-        boolean showClock = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.RECENTS_FULL_SCREEN_CLOCK, 0, UserHandle.USER_CURRENT) != 0;
-        boolean showDate = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.RECENTS_FULL_SCREEN_DATE, 0, UserHandle.USER_CURRENT) != 0;
-        boolean fullscreenEnabled = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.IMMERSIVE_RECENTS, 0, UserHandle.USER_CURRENT) != 0;
-
-        if (fullscreenEnabled) {
-            if (showClock) {
-                mClock.setVisibility(View.VISIBLE);
-            } else {
-                mClock.setVisibility(View.GONE);
-            }
-            if (showDate) {
-                long dateStamp = System.currentTimeMillis();
-                DateFormat dateFormat = android.text.format.DateFormat.getDateFormat(mContext);
-                String currentDateString =  dateFormat.format(dateStamp);
-                mDate.setText(currentDateString);
-                mDate.setVisibility(View.VISIBLE);
-            } else {
-                mDate.setVisibility(View.GONE);
-            }
-        } else {
-            mClock.setVisibility(View.GONE);
-            mDate.setVisibility(View.GONE);
-        }
-    }
-
     /**
      * This is called with the full size of the window since we are handling our own insets.
      */
@@ -1296,18 +642,6 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
     }
 
     @Override
-    public void onTaskFloatClicked(Task t) {
-        Intent baseIntent = t.key.baseIntent;
-        // Hide and go home
-        onRecentsHidden();
-        mCb.onTaskLaunchFailed();
-        // Launch task in floating mode
-        baseIntent.setFlags(Intent.FLAG_FLOATING_WINDOW
-                  | Intent.FLAG_ACTIVITY_NEW_TASK);
-        mContext.startActivity(baseIntent);
-    }
-
-    @Override
     public void onTaskViewDismissed(Task t) {
         // Remove any stored data from the loader.  We currently don't bother notifying the views
         // that the data has been unloaded because at the point we call onTaskViewDismissed(), the views
@@ -1317,8 +651,6 @@ public  class RecentsView extends FrameLayout implements TaskStackView.TaskStack
 
         // Remove the old task from activity manager
         loader.getSystemServicesProxy().removeTask(t.key.id);
-
-        updateMemoryStatus();
     }
 
     @Override
diff --git a/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackView.java b/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackView.java
index e7f7f79..43b9a3e 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackView.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/views/TaskStackView.java
@@ -25,8 +25,6 @@ import android.graphics.Canvas;
 import android.graphics.Matrix;
 import android.graphics.Rect;
 import android.os.Bundle;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.content.Intent;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.IPackageDataObserver;
@@ -72,7 +70,6 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
         public void onTaskViewClicked(TaskStackView stackView, TaskView tv, TaskStack stack, Task t,
                                       boolean lockToTask);
         public void onTaskViewAppInfoClicked(Task t);
-        public void onTaskFloatClicked(Task t);
         public void onTaskViewDismissed(Task t);
         public void onAllTaskViewsDismissed(ArrayList<Task> removedTasks);
         public void onTaskStackFilterTriggered();
@@ -612,7 +609,7 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
 
         Task t = mStack.getTasks().get(mFocusedTaskIndex);
         TaskView tv = getChildViewForTask(t);
-        tv.dismissTask(0L);
+        tv.dismissTask();
     }
 
     /** Resets the focused task. */
@@ -628,50 +625,6 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
         mPrevAccessibilityFocusedIndex = -1;
     }
 
-    private boolean dismissAll() {
-        return Settings.System.getIntForUser(mContext.getContentResolver(),
-            Settings.System.RECENTS_CLEAR_ALL_DISMISS_ALL, 1, UserHandle.USER_CURRENT) == 1;
-    }
-
-    public void dismissAllTasks() {
-        post(new Runnable() {
-            @Override
-            public void run() {
-                ArrayList<Task> tasks = new ArrayList<Task>();
-                tasks.addAll(mStack.getTasks());
-                if (!dismissAll() && tasks.size() > 1) {
-                    // Ignore the visible foreground task
-                    Task foregroundTask = tasks.get(tasks.size() - 1);
-                    tasks.remove(foregroundTask);
-                }
-
-                // Remove visible TaskViews
-                long dismissDelay = 0;
-                int childCount = getChildCount();
-                int delay = mConfig.taskViewRemoveAnimDuration / childCount;
-                if (!dismissAll() && childCount > 1) childCount--;
-                for (int i = 0; i < childCount; i++) {
-                    TaskView tv = (TaskView) getChildAt(i);
-                    tasks.remove(tv.getTask());
-                    tv.dismissTask(dismissDelay);
-                    dismissDelay += delay;
-                }
-
-                int size = tasks.size();
-
-                if (size > 0) {
-                    // Remove possible alive Tasks
-                    for (int i = 0; i < size; i++) {
-                        Task t = tasks.get(i);
-                        if (mStack.getTasks().contains(t)) {
-                            mStack.removeTask(t);
-                        }
-                    }
-                }
-            }
-        });
-    }
-
     @Override
     public void onInitializeAccessibilityEvent(AccessibilityEvent event) {
         super.onInitializeAccessibilityEvent(event);
@@ -1034,6 +987,26 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
         }
     }
 
+    /** Requests this task stack to start it's dismiss-all animation. */
+    public void startDismissAllAnimation(final Runnable postAnimationRunnable) {
+        // Clear the focused task
+        resetFocusedTask();
+        // Animate the dismiss-all button
+        hideDismissAllButton(new Runnable() {
+            @Override
+            public void run() {
+                List<TaskView> taskViews = getTaskViews();
+                int taskViewCount = taskViews.size();
+                int count = 0;
+                for (int i = taskViewCount - 1; i >= 0; i--) {
+                    TaskView tv = taskViews.get(i);
+                    tv.startDeleteTaskAnimation(i > 0 ? null : postAnimationRunnable, count * 50);
+                    count++;
+                }
+            }
+        });
+    }
+
     /** Animates a task view in this stack as it launches. */
     public void startLaunchTaskAnimation(TaskView tv, Runnable r, boolean lockToTask) {
         Task launchTargetTask = tv.getTask();
@@ -1078,12 +1051,7 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
 
     /** Hides the dismiss button */
     void hideDismissAllButton(final Runnable postAnimRunnable) {
-        if (mDismissAllButton == null) {
-            if (postAnimRunnable != null) {
-                postAnimRunnable.run();
-            }
-            return;
-        }
+        if (mDismissAllButton == null) return;
 
         mDismissAllButtonAnimating = true;
         mDismissAllButton.animate()
@@ -1194,6 +1162,7 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
             TaskView frontTv = getChildViewForTask(newFrontMostTask);
             if (frontTv != null) {
                 frontTv.onTaskBound(newFrontMostTask);
+                frontTv.fadeInActionButton(0, mConfig.taskViewEnterFromAppDuration);
             }
         }
 
@@ -1224,6 +1193,14 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
         // Announce for accessibility
         String msg = getContext().getString(R.string.accessibility_recents_all_items_dismissed);
         announceForAccessibility(msg);
+
+        startDismissAllAnimation(new Runnable() {
+            @Override
+            public void run() {
+                // Notify that all tasks have been removed
+                mCb.onAllTaskViewsDismissed(removedTasks);
+            }
+        });
     }
 
     @Override
@@ -1484,12 +1461,6 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
         popup.show();
     }
 
-    @Override
-    public void onTaskFloatClicked(TaskView tv) {
-        if (mCb != null) {
-            mCb.onTaskFloatClicked(tv.getTask());
-        }
-    }
 
     @Override
     public void onTaskViewClicked(TaskView tv, Task task, boolean lockToTask) {
@@ -1578,7 +1549,7 @@ public class TaskStackView extends FrameLayout implements TaskStack.TaskStackCal
                         public void run() {
                             mStack.removeTask(t);
                         }
-                    }, 0L);
+                    }, 0);
                 } else {
                     // Otherwise, remove the task from the stack immediately
                     mStack.removeTask(t);
diff --git a/packages/SystemUI/src/com/android/systemui/recents/views/TaskView.java b/packages/SystemUI/src/com/android/systemui/recents/views/TaskView.java
index 25f89ab..b7e46f4 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/views/TaskView.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/views/TaskView.java
@@ -21,7 +21,6 @@ import android.animation.ObjectAnimator;
 import android.animation.ValueAnimator;
 import android.content.Context;
 import android.graphics.*;
-import android.provider.Settings;
 import android.util.AttributeSet;
 import android.view.accessibility.AccessibilityManager;
 import android.view.View;
@@ -46,7 +45,6 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
         public void onTaskViewAppIconClicked(TaskView tv);
         public void onTaskViewAppInfoClicked(TaskView tv);
         public void onTaskViewLongClicked(TaskView tv);
-        public void onTaskFloatClicked(TaskView tv);
         public void onTaskViewClicked(TaskView tv, Task task, boolean lockToTask);
         public void onTaskViewDismissed(TaskView tv);
         public void onTaskViewClipStateChanged(TaskView tv);
@@ -297,10 +295,8 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
                 ctx.postAnimationTrigger.increment();
 
                 // Animate the action button in
-                mActionButtonView.animate().alpha(1f)
-                        .setInterpolator(mConfig.fastOutLinearInInterpolator)
-                        .withLayer()
-                        .start();
+                fadeInActionButton(mConfig.transitionEnterFromAppDelay,
+                        mConfig.taskViewEnterFromAppDuration);
             } else {
                 // Animate the task up if it was occluding the launch target
                 if (ctx.currentTaskOccludesLaunchTarget) {
@@ -365,6 +361,18 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
         }, startDelay);
     }
 
+    public void fadeInActionButton(int delay, int duration) {
+        // Hide the action button
+        mActionButtonView.setAlpha(0f);
+
+        // Animate the action button in
+        mActionButtonView.animate().alpha(1f)
+                .setStartDelay(delay)
+                .setDuration(duration)
+                .setInterpolator(PhoneStatusBar.ALPHA_IN)
+                .start();
+    }
+
     /** Animates this task view as it leaves recents by pressing home. */
     void startExitToHomeAnimation(ViewAnimation.TaskViewExitContext ctx) {
         animate()
@@ -378,6 +386,11 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
         ctx.postAnimationTrigger.increment();
     }
 
+    /** Animates this task view away when dismissing all tasks. */
+    void startDismissAllAnimation() {
+        dismissTask();
+    }
+
     /** Animates this task view as it exits recents */
     void startLaunchTaskAnimation(final Runnable postAnimRunnable, boolean isLaunchingTask,
             boolean occludesLaunchTarget, boolean lockToTask) {
@@ -424,16 +437,16 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
     }
 
     /** Animates the deletion of this task view */
-    void startDeleteTaskAnimation(final Runnable r, long delayed) {
+    void startDeleteTaskAnimation(final Runnable r, int delay) {
         // Disabling clipping with the stack while the view is animating away
         setClipViewInStack(false);
 
         animate().translationX(mConfig.taskViewRemoveAnimTranslationXPx)
             .alpha(0f)
-            .setStartDelay(delayed)
+            .setStartDelay(delay)
             .setUpdateListener(null)
             .setInterpolator(mConfig.fastOutSlowInInterpolator)
-            .setDuration(mConfig.taskViewRemoveAnimDuration - delayed)
+            .setDuration(mConfig.taskViewRemoveAnimDuration)
             .withEndAction(new Runnable() {
                 @Override
                 public void run() {
@@ -469,7 +482,7 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
     }
 
     /** Dismisses this task. */
-    void dismissTask(long delayed) {
+    void dismissTask() {
         // Animate out the view and call the callback
         final TaskView tv = this;
         startDeleteTaskAnimation(new Runnable() {
@@ -479,7 +492,7 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
                     mCb.onTaskViewDismissed(tv);
                 }
             }
-        }, delayed);
+        }, 0);
     }
 
     /**
@@ -651,8 +664,10 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
         mTask.setCallbacks(this);
 
         // Hide the action button if lock to app is disabled for this view
-        if (!t.lockToTaskEnabled && mActionButtonView.getVisibility() != View.GONE) {
-            mActionButtonView.setVisibility(View.GONE);
+        int lockButtonVisibility = (!t.lockToTaskEnabled || !t.lockToThisTask) ? GONE : VISIBLE;
+        if (mActionButtonView.getVisibility() != lockButtonVisibility) {
+            mActionButtonView.setVisibility(lockButtonVisibility);
+            requestLayout();
         }
     }
 
@@ -672,7 +687,6 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
             if (mConfig.multiStackEnabled) {
                 mHeaderView.mMoveTaskButton.setOnClickListener(this);
             }
-            mHeaderView.mFloatButton.setOnClickListener(this);
             mActionButtonView.setOnClickListener(this);
             mHeaderView.mApplicationIcon.setOnLongClickListener(this);
         }
@@ -688,11 +702,10 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
             mHeaderView.unbindFromTask();
             // Unbind any listeners
             mHeaderView.mApplicationIcon.setOnClickListener(null);
-            mHeaderView.mDismissButton.setOnClickListener(null);          
+            mHeaderView.mDismissButton.setOnClickListener(null);
             if (mConfig.multiStackEnabled) {
                 mHeaderView.mMoveTaskButton.setOnClickListener(null);
             }
-            mHeaderView.mFloatButton.setOnClickListener(this);
             mActionButtonView.setOnClickListener(null);
             mHeaderView.mApplicationIcon.setOnLongClickListener(null);
         }
@@ -730,7 +743,7 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
                             }
                         }
                     } else if (v == mHeaderView.mDismissButton) {
-                        dismissTask(0L);
+                        dismissTask();
                         // Keep track of deletions by the dismiss button
                         MetricsLogger.histogram(getContext(), "overview_task_dismissed_source",
                                 Constants.Metrics.DismissSourceHeaderButton);
@@ -738,8 +751,6 @@ public class TaskView extends FrameLayout implements Task.TaskCallbacks,
                         if (mCb != null) {
                             mCb.onTaskResize(tv);
                         }
-                    } else if (v == mHeaderView.mFloatButton) {
-                        mCb.onTaskFloatClicked(tv);
                     }
                 }
             }, 125);
diff --git a/packages/SystemUI/src/com/android/systemui/recents/views/TaskViewHeader.java b/packages/SystemUI/src/com/android/systemui/recents/views/TaskViewHeader.java
index 18c927e..6db4020 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/views/TaskViewHeader.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/views/TaskViewHeader.java
@@ -24,15 +24,12 @@ import android.animation.ObjectAnimator;
 import android.animation.ValueAnimator;
 import android.content.Context;
 import android.content.res.ColorStateList;
-import android.content.res.Resources;
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.GradientDrawable;
 import android.graphics.drawable.RippleDrawable;
-import android.graphics.PorterDuff.Mode;
-import android.provider.Settings;
 import android.graphics.Outline;
 import android.graphics.Paint;
 import android.graphics.PorterDuff;
@@ -63,8 +60,6 @@ public class TaskViewHeader extends FrameLayout {
     // Header views
     ImageView mMoveTaskButton;
     ImageView mDismissButton;
-    ImageView mPinButton;
-    ImageView mFloatButton;
     ImageView mApplicationIcon;
     TextView mActivityDescription;
 
@@ -74,12 +69,6 @@ public class TaskViewHeader extends FrameLayout {
     int mBackgroundColor;
     Drawable mLightDismissDrawable;
     Drawable mDarkDismissDrawable;
-    Drawable mLightPinDrawable;
-    Drawable mDarkPinDrawable;
-    Drawable mLightMultiwindowDrawable;
-    Drawable mDarkMultiwindowDrawable;
-    Drawable mLightFloatDrawable;
-    Drawable mDarkFloatDrawable;
     RippleDrawable mBackground;
     GradientDrawable mBackgroundColorDrawable;
     AnimatorSet mFocusAnimator;
@@ -125,18 +114,6 @@ public class TaskViewHeader extends FrameLayout {
         mDismissContentDescription =
                 context.getString(R.string.accessibility_recents_item_will_be_dismissed);
 
-        // Load the screen pinning resources
-        mLightPinDrawable = context.getDrawable(R.drawable.ic_pin);
-        mDarkPinDrawable = context.getDrawable(R.drawable.ic_pin_dark);
-
-        // Load multi-window resources
-        mLightMultiwindowDrawable = context.getDrawable(R.drawable.ic_multiwindow);
-        mDarkMultiwindowDrawable = context.getDrawable(R.drawable.ic_multiwindow_dark);
-
-        // Load floating windows intent
-        mLightFloatDrawable = context.getDrawable(R.drawable.ic_floating_on);
-        mDarkFloatDrawable = context.getDrawable(R.drawable.ic_qs_dark_floating_on);
-
         // Configure the highlight paint
         if (sHighlightPaint == null) {
             sHighlightPaint = new Paint();
@@ -154,9 +131,7 @@ public class TaskViewHeader extends FrameLayout {
         mApplicationIcon = (ImageView) findViewById(R.id.application_icon);
         mActivityDescription = (TextView) findViewById(R.id.activity_description);
         mDismissButton = (ImageView) findViewById(R.id.dismiss_task);
-        mPinButton = (ImageView) findViewById(R.id.lock_to_app_fab);
         mMoveTaskButton = (ImageView) findViewById(R.id.move_task);
-	mFloatButton = (ImageView) findViewById(R.id.float_task);
 
         // Hide the backgrounds if they are ripple drawables
         if (!Constants.DebugFlags.App.EnableTaskFiltering) {
@@ -236,95 +211,47 @@ public class TaskViewHeader extends FrameLayout {
         mCurrentPrimaryColorIsDark = t.useLightOnPrimaryColor;
         mActivityDescription.setTextColor(t.useLightOnPrimaryColor ?
                 mConfig.taskBarViewLightTextColor : mConfig.taskBarViewDarkTextColor);
-        mPinButton.setImageDrawable(t.useLightOnPrimaryColor ?
-                mLightPinDrawable : mDarkPinDrawable);
         mDismissButton.setImageDrawable(t.useLightOnPrimaryColor ?
                 mLightDismissDrawable : mDarkDismissDrawable);
         mDismissButton.setContentDescription(String.format(mDismissContentDescription,
                 t.contentDescription));
-        mMoveTaskButton.setVisibility((mConfig.multiStackEnabled) ? View.VISIBLE : View.GONE);
-        mMoveTaskButton.setImageDrawable(t.useLightOnPrimaryColor ?
-                mLightMultiwindowDrawable : mDarkMultiwindowDrawable);
-        boolean floatingswitch = Settings.System.getInt(mContext.getContentResolver(), Settings.System.FLOATING_WINDOW_MODE, 0) == 1;
-		mFloatButton.setImageDrawable(t.useLightOnPrimaryColor ?
-                mLightFloatDrawable : mDarkFloatDrawable);
-        updaterecentstyles(t);        
+        mMoveTaskButton.setVisibility((mConfig.multiStackEnabled) ? View.VISIBLE : View.INVISIBLE);
+        if (mConfig.multiStackEnabled) {
+            updateResizeTaskBarIcon(t);
+        }
     }
 
-    
-    public void updaterecentstyles(Task t) {
-        boolean mClearStyleSwitch  = Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.CLEAR_RECENTS_STYLE_ENABLE, 0) == 1;	
-	final Resources res = getContext().getResources();
-	int mTint = 0x00ffffff;		
-	int Black = Color.BLACK;
-	int mLightColor = res.getColor(R.color.recents_task_bar_dark_dismiss_color);
-	int mDarkColor = res.getColor(R.color.recents_task_bar_dark_dismiss_color);
-	mApplicationIcon = (ImageView) findViewById(R.id.application_icon);				 
-	int mFloatcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FLOAT_BUTTON_COLOR, 0xffDC4C3C);	
-	int mPincolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.PIN_BUTTON_COLOR, 0xff009688);	
-	int mMwcolor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.MW_BUTTON_COLOR, 0xFFFFFFFF);
-	int mKillColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.KILL_APP_BUTTON_COLOR, 0xFFFFFFFF);
-	int mAppColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.TV_APP_COLOR, 0x00000000);
-        int mTextColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.TV_APP_TEXT_COLOR, 0xFFFFFFFF);       
-	if (mClearStyleSwitch) {
-		if (mDismissButton != null) {
-			 mDismissButton.setColorFilter(mKillColor,Mode.SRC_ATOP);
-		}
-		if(mPinButton !=null) {
-			  mPinButton.setColorFilter(mPincolor,Mode.SRC_ATOP);
-		}      	
-		if(mMoveTaskButton !=null) {
-			  mMoveTaskButton.setColorFilter(mMwcolor,Mode.SRC_ATOP);
-		}
-		if (mFloatButton !=null) {
-			  mFloatButton.setColorFilter(mFloatcolor,Mode.SRC_ATOP);
-		}
-		if(mApplicationIcon !=null) {
-			  if (mAppColor != mTint) {
-			  mApplicationIcon.setColorFilter(mAppColor);
-			  }
-		}
-		if(mActivityDescription !=null) {
-		        mActivityDescription.setTextColor(t.useLightOnPrimaryColor ?
-                mTextColor : mConfig.taskBarViewDarkTextColor);
-		}
+    /** Updates the resize task bar button. */
+    void updateResizeTaskBarIcon(Task t) {
+        Rect display = mSsp.getWindowRect();
+        Rect taskRect = mSsp.getTaskBounds(t.key.stackId);
+        int resId = R.drawable.star;
+        if (display.equals(taskRect) || taskRect.isEmpty()) {
+            resId = R.drawable.vector_drawable_place_fullscreen;
         } else {
-		if (mDismissButton != null) {
-			 mDismissButton.setColorFilter(null);
-		}
-		if(mPinButton !=null) {
-			  mPinButton.setColorFilter(null);
-		}      	
-		if(mMoveTaskButton !=null) {
-			  mMoveTaskButton.setColorFilter(null);
-		}
-		if (mFloatButton !=null) {
-		mFloatButton = (ImageView) findViewById(R.id.float_task);
-		mFloatButton.setImageDrawable(t.useLightOnPrimaryColor ?
-                mLightFloatDrawable : mDarkFloatDrawable);
-                mFloatButton.setColorFilter(null);
-			if(mDarkFloatDrawable!=null) {
-			mDarkFloatDrawable.setColorFilter(mDarkColor,Mode.SRC_IN);
-			}
-		}
-		if(mApplicationIcon !=null) {
-			  if (mAppColor != mTint) {
-			  mApplicationIcon.setColorFilter(null);
-			  }
-		}
-		if(mActivityDescription !=null) {
-		        mActivityDescription.setTextColor(t.useLightOnPrimaryColor ?
-                mConfig.taskBarViewLightTextColor : mConfig.taskBarViewDarkTextColor);
-		}
+            boolean top = display.top == taskRect.top;
+            boolean bottom = display.bottom == taskRect.bottom;
+            boolean left = display.left == taskRect.left;
+            boolean right = display.right == taskRect.right;
+            if (top && bottom && left) {
+                resId = R.drawable.vector_drawable_place_left;
+            } else if (top && bottom && right) {
+                resId = R.drawable.vector_drawable_place_right;
+            } else if (top && left && right) {
+                resId = R.drawable.vector_drawable_place_top;
+            } else if (bottom && left && right) {
+                resId = R.drawable.vector_drawable_place_bottom;
+            } else if (top && right) {
+                resId = R.drawable.vector_drawable_place_top_right;
+            } else if (top && left) {
+                resId = R.drawable.vector_drawable_place_top_left;
+            } else if (bottom && right) {
+                resId = R.drawable.vector_drawable_place_bottom_right;
+            } else if (bottom && left) {
+                resId = R.drawable.vector_drawable_place_bottom_left;
+            }
         }
-    
+        mMoveTaskButton.setImageResource(resId);
     }
 
     /** Unbinds the bar view from the task */
@@ -343,28 +270,6 @@ public class TaskViewHeader extends FrameLayout {
                     .setDuration(mConfig.taskViewExitToAppDuration)
                     .start();
         }
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                       Settings.System.LOCK_TO_APP_ENABLED, 0) != 0) {
-            mPinButton.setVisibility(View.VISIBLE);
-            mPinButton.animate().cancel();
-            mPinButton.animate()
-                    .alpha(0f)
-                    .setStartDelay(0)
-                    .setInterpolator(mConfig.fastOutSlowInInterpolator)
-                    .setDuration(mConfig.taskViewExitToAppDuration)
-                    .withLayer()
-                    .start();
-        }
-        if (mFloatButton.getVisibility() == View.VISIBLE) {
-            mFloatButton.animate().cancel();
-            mFloatButton.animate()
-                    .alpha(0f)
-                    .setStartDelay(0)
-                    .setInterpolator(mConfig.fastOutSlowInInterpolator)
-                    .setDuration(mConfig.taskViewExitToAppDuration)
-                    .withLayer()
-                    .start();
-        }
     }
 
     /** Animates this task bar if the user does not interact with the stack after a certain time. */
@@ -379,34 +284,6 @@ public class TaskViewHeader extends FrameLayout {
                     .setDuration(mConfig.taskViewEnterFromAppDuration)
                     .start();
         }
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                       Settings.System.LOCK_TO_APP_ENABLED, 0) != 0) {
-            mPinButton.setVisibility(View.VISIBLE);
-            mPinButton.setAlpha(0f);
-            mPinButton.animate()
-                    .alpha(1f)
-                    .setStartDelay(0)
-                    .setInterpolator(mConfig.fastOutLinearInInterpolator)
-                    .setDuration(mConfig.taskViewEnterFromAppDuration)
-                    .withLayer()
-                    .start();
-        }
-        /** If we disabled the floating button in settings, do not make it visible */
-            if (mFloatButton.getVisibility() != View.VISIBLE) {
-                if (Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.FLOATING_WINDOW_MODE, 0) == 1) {
-                   mFloatButton.setVisibility(View.VISIBLE);
-                } else {
-                    mFloatButton.setVisibility(View.GONE);
-                }
-                mFloatButton.setAlpha(0f);
-                mFloatButton.animate()
-                        .alpha(1f)
-                        .setStartDelay(0)
-                        .setInterpolator(mConfig.fastOutLinearInInterpolator)
-                        .setDuration(mConfig.taskViewEnterFromAppDuration)
-                        .start();
-        }
     }
 
     /** Mark this task view that the user does has not interacted with the stack after a certain time. */
@@ -416,31 +293,11 @@ public class TaskViewHeader extends FrameLayout {
             mDismissButton.setVisibility(View.VISIBLE);
             mDismissButton.setAlpha(1f);
         }
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                       Settings.System.LOCK_TO_APP_ENABLED, 0) != 0) {
-            mPinButton.setVisibility(View.VISIBLE);
-            mPinButton.animate().cancel();
-            mPinButton.setVisibility(View.VISIBLE);
-            mPinButton.setAlpha(1f);
-        }
-        /** If we disabled the master float switch, do not make this visible */
-        if (mFloatButton.getVisibility() != View.VISIBLE) {
-            mFloatButton.animate().cancel();
-            if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FLOATING_WINDOW_MODE, 0) == 1) {
-                mFloatButton.setVisibility(View.VISIBLE);
-            } else {
-                mFloatButton.setVisibility(View.GONE);
-            }
-            mFloatButton.setAlpha(1f);
-        }
     }
 
     /** Resets the state tracking that the user has not interacted with the stack after a certain time. */
     void resetNoUserInteractionState() {
         mDismissButton.setVisibility(View.INVISIBLE);
-        mPinButton.setVisibility(View.GONE);
-        mFloatButton.setVisibility(View.INVISIBLE);
     }
 
     @Override
diff --git a/packages/SystemUI/src/com/android/systemui/screenshot/GlobalScreenshot.java b/packages/SystemUI/src/com/android/systemui/screenshot/GlobalScreenshot.java
index 4a2a4dd..260f625 100644
--- a/packages/SystemUI/src/com/android/systemui/screenshot/GlobalScreenshot.java
+++ b/packages/SystemUI/src/com/android/systemui/screenshot/GlobalScreenshot.java
@@ -43,14 +43,9 @@ import android.media.MediaActionSound;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Environment;
-import android.os.Handler;
-import android.os.Looper;
-import android.os.PowerManager;
 import android.os.Process;
 import android.provider.MediaStore;
-import android.provider.Settings;
 import android.util.DisplayMetrics;
-import android.util.Log;
 import android.view.Display;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
@@ -105,6 +100,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
     private static final String SCREENSHOT_FILE_NAME_TEMPLATE = "Screenshot_%s.png";
     private static final String SCREENSHOT_SHARE_SUBJECT_TEMPLATE = "Screenshot (%s)";
 
+    private final int mNotificationId;
     private final NotificationManager mNotificationManager;
     private final Notification.Builder mNotificationBuilder, mPublicNotificationBuilder;
     private final File mScreenshotDir;
@@ -123,7 +119,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
     private static boolean mTickerAddSpace;
 
     SaveImageInBackgroundTask(Context context, SaveImageInBackgroundData data,
-            NotificationManager nManager) {
+            NotificationManager nManager, int nId) {
         Resources r = context.getResources();
 
         // Prepare all the output metadata
@@ -170,6 +166,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
 
         // Show the intermediate notification
         mTickerAddSpace = !mTickerAddSpace;
+        mNotificationId = nId;
         mNotificationManager = nManager;
         final long now = System.currentTimeMillis();
 
@@ -201,7 +198,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
 
         Notification n = mNotificationBuilder.build();
         n.flags |= Notification.FLAG_NO_CLEAR;
-        mNotificationManager.notify(GlobalScreenshot.SCREENSHOT_NOTIFICATION_ID, n);
+        mNotificationManager.notify(nId, n);
 
         // On the tablet, the large icon makes the notification appear as if it is clickable (and
         // on small devices, the large icon is not shown) so defer showing the large icon until
@@ -222,7 +219,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
 
         // By default, AsyncTask sets the worker thread to have background thread priority, so bump
         // it back up so that we save a little quicker.
-        Process.setThreadPriority(Process.THREAD_PRIORITY_URGENT_DISPLAY);
+        Process.setThreadPriority(Process.THREAD_PRIORITY_FOREGROUND);
 
         Context context = params[0].context;
         Bitmap image = params[0].image;
@@ -255,11 +252,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
             values.put(MediaStore.Images.ImageColumns.WIDTH, mImageWidth);
             values.put(MediaStore.Images.ImageColumns.HEIGHT, mImageHeight);
             values.put(MediaStore.Images.ImageColumns.SIZE, new File(mImageFilePath).length());
-
             Uri uri = resolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);
-            if (uri == null) {
-                throw new RuntimeException("Uri is null!");
-            }
 
             // Create a share intent
             String subjectDate = DateFormat.getDateTimeInstance().format(new Date(mImageTime));
@@ -271,7 +264,8 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
 
             // Create a share action for the notification
             final PendingIntent callback = PendingIntent.getBroadcast(context, 0,
-                    new Intent(context, GlobalScreenshot.TargetChosenReceiver.class),
+                    new Intent(context, GlobalScreenshot.TargetChosenReceiver.class)
+                            .putExtra(GlobalScreenshot.CANCEL_ID, mNotificationId),
                     PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT);
             Intent chooserIntent = Intent.createChooser(sharingIntent, null,
                     callback.getIntentSender());
@@ -285,6 +279,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
             // Create a delete action for the notification
             final PendingIntent deleteAction = PendingIntent.getBroadcast(context,  0,
                     new Intent(context, GlobalScreenshot.DeleteScreenshotReceiver.class)
+                            .putExtra(GlobalScreenshot.CANCEL_ID, mNotificationId)
                             .putExtra(GlobalScreenshot.SCREENSHOT_URI_ID, uri.toString()),
                     PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT);
             mNotificationBuilder.addAction(R.drawable.ic_screenshot_delete,
@@ -294,14 +289,15 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
             params[0].image = null;
             params[0].result = 0;
         } catch (Exception e) {
-            Log.e(TAG, "Failed to take screenshot", e);
+            // IOException/UnsupportedOperationException may be thrown if external storage is not
+            // mounted
             params[0].clearImage();
             params[0].result = 1;
-        } finally {
-            // Recycle the bitmap data
-            if (image != null) {
-                image.recycle();
-            }
+        }
+
+        // Recycle the bitmap data
+        if (image != null) {
+            image.recycle();
         }
 
         return params[0];
@@ -337,7 +333,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
                 .setWhen(now)
                 .setAutoCancel(true)
                 .setColor(r.getColor(
-                        com.android.internal.R.color.system_notification_accent_color));
+                        com.android.internal.R.color.system_notification_accent_color));;
 
             // Update the text in the public version as well
             mPublicNotificationBuilder
@@ -353,7 +349,7 @@ class SaveImageInBackgroundTask extends AsyncTask<SaveImageInBackgroundData, Voi
 
             Notification n = mNotificationBuilder.build();
             n.flags &= ~Notification.FLAG_NO_CLEAR;
-            mNotificationManager.notify(GlobalScreenshot.SCREENSHOT_NOTIFICATION_ID, n);
+            mNotificationManager.notify(mNotificationId, n);
         }
         params.finisher.run();
         params.clearContext();
@@ -395,9 +391,7 @@ class GlobalScreenshot {
     static final String CANCEL_ID = "android:cancel_id";
     static final String SCREENSHOT_URI_ID = "android:screenshot_uri_id";
 
-    /*package*/  static final int SCREENSHOT_NOTIFICATION_ID = 6789;
     private static final int SCREENSHOT_FLASH_TO_PEAK_DURATION = 130;
-    private static final int SCREENSHOT_DELAY = 250;
     private static final int SCREENSHOT_DROP_IN_DURATION = 430;
     private static final int SCREENSHOT_DROP_OUT_DELAY = 500;
     private static final int SCREENSHOT_DROP_OUT_DURATION = 430;
@@ -413,7 +407,6 @@ class GlobalScreenshot {
     private final int mPreviewHeight;
 
     private Context mContext;
-    private PowerManager mPowerManager;
     private WindowManager mWindowManager;
     private WindowManager.LayoutParams mWindowLayoutParams;
     private NotificationManager mNotificationManager;
@@ -439,8 +432,6 @@ class GlobalScreenshot {
 
     private final int mSfHwRotation;
 
-    private final Handler mHandler = new Handler(Looper.getMainLooper());
-
     /**
      * @param context everything needs a context :(
      */
@@ -450,8 +441,6 @@ class GlobalScreenshot {
         LayoutInflater layoutInflater = (LayoutInflater)
                 context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
-        mPowerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
-
         // Inflate the screenshot layout
         mDisplayMatrix = new Matrix();
         mScreenshotLayout = layoutInflater.inflate(R.layout.global_screenshot, null);
@@ -527,7 +516,8 @@ class GlobalScreenshot {
         if (mSaveInBgTask != null) {
             mSaveInBgTask.cancel(false);
         }
-        mSaveInBgTask = new SaveImageInBackgroundTask(mContext, data, mNotificationManager).execute(data);
+        mSaveInBgTask = new SaveImageInBackgroundTask(mContext, data, mNotificationManager,
+                R.id.notification_screenshot).execute(data);
     }
 
     /**
@@ -548,24 +538,7 @@ class GlobalScreenshot {
     /**
      * Takes a screenshot of the current display and shows an animation.
      */
-    void takeScreenshot(final Runnable finisher, final boolean statusBarVisible,
-            final boolean navBarVisible) {
-        // cancel notification before taking a screenshot to prevent the notification icon
-        // appearing in the status bar of the next screenshot when taking multiple screenshots
-        mNotificationManager.cancel(SCREENSHOT_NOTIFICATION_ID);
-
-        // delay taking screenshot a bit to ensure the notification icon is gone
-        mHandler.postDelayed(new Runnable() {
-            @Override public void run() {
-                takeScreenshotInternal(finisher, statusBarVisible, navBarVisible);
-            }
-        }, SCREENSHOT_DELAY);
-    }
-
-    private void takeScreenshotInternal(Runnable finisher, boolean statusBarVisible, boolean navBarVisible) {
-        // a lot of work ahead, help out a bit
-        mPowerManager.cpuBoost(1500000);
-
+    void takeScreenshot(Runnable finisher, boolean statusBarVisible, boolean navBarVisible) {
         // We need to orient the screenshot correctly (and the Surface api seems to take screenshots
         // only in the natural orientation of the device :!)
         mDisplay.getRealMetrics(mDisplayMetrics);
@@ -654,10 +627,7 @@ class GlobalScreenshot {
             @Override
             public void run() {
                 // Play the shutter sound to notify that we've taken a screenshot
-                if (Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.SCREENSHOT_SOUND, 0) == 1) {
-                    mCameraSound.play(MediaActionSound.SHUTTER_CLICK);
-                }
+                mCameraSound.play(MediaActionSound.SHUTTER_CLICK);
 
                 mScreenshotView.setLayerType(View.LAYER_TYPE_HARDWARE, null);
                 mScreenshotView.buildLayer();
@@ -701,7 +671,6 @@ class GlobalScreenshot {
                 mScreenshotView.setTranslationY(0f);
                 mScreenshotView.setScaleX(SCREENSHOT_SCALE + mBgPaddingScale);
                 mScreenshotView.setScaleY(SCREENSHOT_SCALE + mBgPaddingScale);
-                mScreenshotView.setRotation(5.0f);
                 mScreenshotView.setVisibility(View.VISIBLE);
                 mScreenshotFlash.setAlpha(0f);
                 mScreenshotFlash.setVisibility(View.VISIBLE);
@@ -818,7 +787,7 @@ class GlobalScreenshot {
             new Notification.BigTextStyle(b)
                 .bigText(r.getString(R.string.screenshot_failed_text))
                 .build();
-        nManager.notify(GlobalScreenshot.SCREENSHOT_NOTIFICATION_ID, n);
+        nManager.notify(R.id.notification_screenshot, n);
     }
 
     /**
@@ -827,8 +796,15 @@ class GlobalScreenshot {
     public static class TargetChosenReceiver extends BroadcastReceiver {
         @Override
         public void onReceive(Context context, Intent intent) {
+            if (!intent.hasExtra(CANCEL_ID)) {
+                return;
+            }
+
             // Clear the notification
-            removeNotification(context);
+            final NotificationManager nm =
+                    (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+            final int id = intent.getIntExtra(CANCEL_ID, 0);
+            nm.cancel(id);
         }
     }
 
@@ -838,22 +814,19 @@ class GlobalScreenshot {
     public static class DeleteScreenshotReceiver extends BroadcastReceiver {
         @Override
         public void onReceive(Context context, Intent intent) {
-            if (!intent.hasExtra(SCREENSHOT_URI_ID)) {
+            if (!intent.hasExtra(CANCEL_ID) || !intent.hasExtra(SCREENSHOT_URI_ID)) {
                 return;
             }
 
             // Clear the notification
-            removeNotification(context);
+            final NotificationManager nm =
+                    (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+            final int id = intent.getIntExtra(CANCEL_ID, 0);
+            final Uri uri = Uri.parse(intent.getStringExtra(SCREENSHOT_URI_ID));
+            nm.cancel(id);
 
             // And delete the image from the media store
-            final Uri uri = Uri.parse(intent.getStringExtra(SCREENSHOT_URI_ID));
             new DeleteImageInBackgroundTask(context).execute(uri);
         }
     }
-
-    /*package*/ static void removeNotification(Context context) {
-        final NotificationManager nm =
-                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
-        nm.cancel(GlobalScreenshot.SCREENSHOT_NOTIFICATION_ID);
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/screenshot/TakeScreenshotService.java b/packages/SystemUI/src/com/android/systemui/screenshot/TakeScreenshotService.java
index cde5767..456b5fa 100644
--- a/packages/SystemUI/src/com/android/systemui/screenshot/TakeScreenshotService.java
+++ b/packages/SystemUI/src/com/android/systemui/screenshot/TakeScreenshotService.java
@@ -29,34 +29,30 @@ public class TakeScreenshotService extends Service {
 
     private static GlobalScreenshot mScreenshot;
 
-    @Override
-    public IBinder onBind(Intent intent) {
-        return new Messenger(new ScreenshotHandler(TakeScreenshotService.this)).getBinder();
-    }
-
-    private static class ScreenshotHandler extends Handler {
-        private TakeScreenshotService takeScreenshotService;
-
-        public ScreenshotHandler(TakeScreenshotService takeScreenshotService) {
-            this.takeScreenshotService = takeScreenshotService;
-        }
-
-        @Override public void handleMessage(Message msg) {
+    private Handler mHandler = new Handler() {
+        @Override
+        public void handleMessage(Message msg) {
             switch (msg.what) {
                 case 1:
                     final Messenger callback = msg.replyTo;
                     if (mScreenshot == null) {
-                        mScreenshot = new GlobalScreenshot(takeScreenshotService);
+                        mScreenshot = new GlobalScreenshot(TakeScreenshotService.this);
                     }
                     mScreenshot.takeScreenshot(new Runnable() {
                         @Override public void run() {
                             Message reply = Message.obtain(null, 1);
                             try {
                                 callback.send(reply);
-                            } catch (RemoteException ignored) { }
+                            } catch (RemoteException e) {
+                            }
                         }
                     }, msg.arg1 > 0, msg.arg2 > 0);
             }
         }
+    };
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        return new Messenger(mHandler).getBinder();
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/settings/BrightnessController.java b/packages/SystemUI/src/com/android/systemui/settings/BrightnessController.java
index f8ec24b..e74edd0 100644
--- a/packages/SystemUI/src/com/android/systemui/settings/BrightnessController.java
+++ b/packages/SystemUI/src/com/android/systemui/settings/BrightnessController.java
@@ -28,8 +28,6 @@ import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.UserHandle;
 import android.provider.Settings;
-import android.view.MotionEvent;
-import android.view.View;
 import android.widget.ImageView;
 
 import com.android.internal.logging.MetricsLogger;
@@ -38,6 +36,7 @@ import java.util.ArrayList;
 
 public class BrightnessController implements ToggleSlider.Listener {
     private static final String TAG = "StatusBar.BrightnessController";
+    private static final boolean SHOW_AUTOMATIC_ICON = false;
 
     /**
      * {@link android.provider.Settings.System#SCREEN_AUTO_BRIGHTNESS_ADJ} uses the range [-1, 1].
@@ -153,18 +152,6 @@ public class BrightnessController implements ToggleSlider.Listener {
         mAutomaticAvailable = context.getResources().getBoolean(
                 com.android.internal.R.bool.config_automatic_brightness_available);
         mPower = IPowerManager.Stub.asInterface(ServiceManager.getService("power"));
-
-        if (mIcon != null) {
-            if (mAutomaticAvailable) {
-                mIcon.setOnClickListener(new View.OnClickListener() {
-                    @Override
-                    public void onClick(View v) {
-                        int newMode = mAutomatic ? Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL : Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
-                        setMode(newMode);
-                    }
-                });
-            }
-        }
     }
 
     public void addStateChangedCallback(BrightnessStateChangeCallback cb) {
@@ -212,8 +199,7 @@ public class BrightnessController implements ToggleSlider.Listener {
     @Override
     public void onChanged(ToggleSlider view, boolean tracking, boolean automatic, int value,
             boolean stopTracking) {
-        // icon cannot change while tracking
-        //updateIcon(mAutomatic);
+        updateIcon(mAutomatic);
         if (mExternalChange) return;
 
         if (!mAutomatic) {
@@ -275,9 +261,9 @@ public class BrightnessController implements ToggleSlider.Listener {
 
     private void updateIcon(boolean automatic) {
         if (mIcon != null) {
-            mIcon.setImageResource(automatic ?
-                    com.android.systemui.R.drawable.ic_qs_brightness_auto_on_new :
-                    com.android.systemui.R.drawable.ic_qs_brightness_auto_off_new);
+            mIcon.setImageResource(automatic && SHOW_AUTOMATIC_ICON ?
+                    com.android.systemui.R.drawable.ic_qs_brightness_auto_on :
+                    com.android.systemui.R.drawable.ic_qs_brightness_auto_off);
         }
     }
 
@@ -315,7 +301,4 @@ public class BrightnessController implements ToggleSlider.Listener {
         }
     }
 
-    public void setColors() {
-        mControl.setColors();
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/settings/ToggleSlider.java b/packages/SystemUI/src/com/android/systemui/settings/ToggleSlider.java
index e72aa5a..b263707 100644
--- a/packages/SystemUI/src/com/android/systemui/settings/ToggleSlider.java
+++ b/packages/SystemUI/src/com/android/systemui/settings/ToggleSlider.java
@@ -17,10 +17,8 @@
 package com.android.systemui.settings;
 
 import android.content.Context;
-import android.content.res.ColorStateList;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
-import android.graphics.drawable.RippleDrawable;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
@@ -34,10 +32,6 @@ import android.widget.TextView;
 import com.android.systemui.R;
 import com.android.systemui.statusbar.policy.BrightnessMirrorController;
 
-import com.android.internal.util.rr.QSColorHelper;
-import android.provider.Settings;
-
-
 public class ToggleSlider extends RelativeLayout {
     public interface Listener {
         public void onInit(ToggleSlider v);
@@ -143,38 +137,6 @@ public class ToggleSlider extends RelativeLayout {
         return super.dispatchTouchEvent(ev);
     }
 
-    public void setColors() {
-	int mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-        final int rippleColor = QSColorHelper.getRippleColor(mContext);
-        final int sliderColor = QSColorHelper.getBrightnessSliderColor(mContext);
-        final int sliderEmptyColor = QSColorHelper.getBrightnessSliderEmptyColor(mContext);
-	if (mQsColorSwitch !=0) {
-        mSlider.setProgressBackgroundTintList(ColorStateList.valueOf(sliderEmptyColor));
-        mSlider.setProgressTintList(ColorStateList.valueOf(sliderColor));
-        updateRippleColor(rippleColor);
-	}
-    }
-
-    private void updateRippleColor(int rippleColor) {
-        RippleDrawable toggleRipple = (RippleDrawable) mContext.getDrawable(R.drawable.ripple_drawable);
-        RippleDrawable sliderRipple = (RippleDrawable) mContext.getDrawable(R.drawable.ripple_drawable);
-
-        int states[][] = new int[][] {
-            new int[] {
-                com.android.internal.R.attr.state_enabled
-            }
-        };
-        int colors[] = new int[] {
-            rippleColor
-        };
-        ColorStateList color = new ColorStateList(states, colors);
-        toggleRipple.setColor(color);
-        sliderRipple.setColor(color);
-        mToggle.setBackground(toggleRipple);
-        mSlider.setBackground(sliderRipple);
-    }
-
     private final OnCheckedChangeListener mCheckListener = new OnCheckedChangeListener() {
         @Override
         public void onCheckedChanged(CompoundButton toggle, boolean checked) {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/ActivatableNotificationView.java b/packages/SystemUI/src/com/android/systemui/statusbar/ActivatableNotificationView.java
index 5532090..dba74de 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/ActivatableNotificationView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/ActivatableNotificationView.java
@@ -33,12 +33,8 @@ import android.view.animation.Interpolator;
 import android.view.animation.LinearInterpolator;
 import android.view.animation.PathInterpolator;
 
-import com.android.internal.util.rr.ColorHelper;
-import com.android.internal.util.rr.NotificationColorHelper;
-
 import com.android.systemui.R;
 import com.android.systemui.ViewInvertHelper;
-import android.provider.Settings;
 
 /**
  * Base class for both {@link ExpandableNotificationRow} and {@link NotificationOverflowContainer}
@@ -130,20 +126,14 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
     private float mAppearAnimationTranslation;
     private boolean mShowingLegacyBackground;
     private final int mLegacyColor;
-    private int mNormalColor;
-    private int mMediaColor;
-    private int mLowPriorityColor;
-    private final int mNColor;
-    private final int mLPriorityColor;	
+    private final int mNormalColor;
+    private final int mLowPriorityColor;
     private boolean mIsBelowSpeedBump;
     private ViewInvertHelper mBackgroundNormalInvertHelper;
     private ViewInvertHelper mBackgroundDimmedInvertHelper;
-    private boolean MColorSwitch = false;
-    public Context mContext;		
 
     public ActivatableNotificationView(Context context, AttributeSet attrs) {
         super(context, attrs);
-	mContext = context;	
         mTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();
         mFastOutSlowInInterpolator =
                 AnimationUtils.loadInterpolator(context, android.R.interpolator.fast_out_slow_in);
@@ -155,8 +145,8 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
         setClipChildren(false);
         setClipToPadding(false);
         mLegacyColor = context.getColor(R.color.notification_legacy_background_color);
-	mNColor = context.getColor(R.color.notification_material_background_color);
-        mLPriorityColor = context.getColor(
+        mNormalColor = context.getColor(R.color.notification_material_background_color);
+        mLowPriorityColor = context.getColor(
                 R.color.notification_material_background_low_priority_color);
         int roundedRectCornerRadius = getResources().getDimensionPixelSize(
                 R.dimen.notification_material_rounded_rect_radius);
@@ -167,14 +157,11 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
                 R.color.notification_ripple_color_low_priority);
         mNormalRippleColor = context.getColor(
                 R.color.notification_ripple_untinted_color);
-
     }
 
     @Override
     protected void onFinishInflate() {
-        super.onFinishInflate();	    
-	MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
+        super.onFinishInflate();
         mBackgroundNormal = (NotificationBackgroundView) findViewById(R.id.backgroundNormal);
         mBackgroundDimmed = (NotificationBackgroundView) findViewById(R.id.backgroundDimmed);
         mBackgroundNormal.setCustomBackground(R.drawable.notification_material_bg);
@@ -184,12 +171,7 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
         mBackgroundDimmedInvertHelper =
                 new ViewInvertHelper(mBackgroundDimmed, DARK_ANIMATION_LENGTH);
         updateBackground();
-	if (MColorSwitch) {			
-        updateSettings();
-	} else {
-	updateBackgroundTint();
-	}
-	
+        updateBackgroundTint();
     }
 
     private final Runnable mTapTimeoutRunnable = new Runnable() {
@@ -399,21 +381,14 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
      * Sets the tint color of the background
      */
     public void setTintColor(int color) {
-	Context context = mContext;
-	 MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
         mBgTint = color;
-        if (MColorSwitch) {			
-        updateSettings();
-	} else {
-	updateBackgroundTint();
-	}
+        updateBackgroundTint();
     }
 
     private void updateBackgroundTint() {
         int color = getBgColor();
         int rippleColor = getRippleColor();
-	 if (color == mNColor) {
+        if (color == mNormalColor) {
             // We don't need to tint a normal notification
             color = 0;
         }
@@ -707,15 +682,8 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
     protected abstract View getContentView();
 
     private int getBgColor() {
-	Context context = mContext;	    
-	MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
         if (mBgTint != 0) {
-		if (MColorSwitch) {
-            	return mMediaColor; 
-		} else {
-		return mBgTint;
-		}	
+            return mBgTint;
         } else if (mShowingLegacyBackground) {
             return mLegacyColor;
         } else if (mIsBelowSpeedBump) {
@@ -780,12 +748,4 @@ public abstract class ActivatableNotificationView extends ExpandableOutlineView
         void onActivated(ActivatableNotificationView view);
         void onActivationReset(ActivatableNotificationView view);
     }
-
-    public void updateSettings() {
-        mNormalColor = NotificationColorHelper.getCustomNotificationBgColor(mContext);
-        mMediaColor = NotificationColorHelper.getNotificationMediaBgColor(mContext, mBgTint);
-        mLowPriorityColor = ColorHelper.getLightenOrDarkenColor(mNormalColor);
-
-        updateBackgroundTint();
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java
index 3d23ab2..e958ee1 100755
--- a/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java
@@ -19,11 +19,7 @@ package com.android.systemui.statusbar;
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.animation.TimeInterpolator;
-import android.annotation.ChaosLab;
-import android.annotation.ChaosLab.Classification;
-import android.app.Activity;
 import android.app.ActivityManager;
-import android.app.ActivityManager.RunningAppProcessInfo;
 import android.app.ActivityManagerNative;
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -32,7 +28,6 @@ import android.app.TaskStackBuilder;
 import android.app.admin.DevicePolicyManager;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.ContentResolver;
 import android.content.ContentValues;
@@ -46,22 +41,11 @@ import android.content.pm.UserInfo;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.content.res.ThemeConfig;
-import android.content.ServiceConnection;
 import android.database.ContentObserver;
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.PixelFormat;
 import android.graphics.PorterDuff;
-import android.graphics.PorterDuff.Mode;
-import android.graphics.PorterDuffXfermode;
-import android.graphics.Rect;
-import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.Icon;
-import android.hardware.SensorManager;
 import android.media.session.MediaController;
-import com.android.systemui.recents.RecentsActivity;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
@@ -69,9 +53,7 @@ import android.os.Bundle;
 import android.os.Handler;
 import android.os.IBinder;
 import android.os.Message;
-import android.os.Messenger;
 import android.os.PowerManager;
-import android.os.Process;
 import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.SystemProperties;
@@ -89,23 +71,18 @@ import android.util.Slog;
 import android.util.SparseArray;
 import android.util.SparseBooleanArray;
 import android.view.Display;
-import android.view.Gravity;
 import android.view.IWindowManager;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewAnimationUtils;
 import android.view.ViewGroup;
-import android.view.ViewGroup.LayoutParams;
 import android.view.ViewParent;
 import android.view.WindowManager;
 import android.view.WindowManagerGlobal;
 import android.view.accessibility.AccessibilityManager;
 import android.view.animation.AnimationUtils;
-import android.view.inputmethod.InputMethodManager;
-import android.view.OrientationEventListener;
 import android.widget.DateTimeView;
-import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.RemoteViews;
 import android.widget.TextView;
@@ -119,9 +96,6 @@ import com.android.internal.util.cm.SpamFilter;
 import com.android.internal.util.cm.SpamFilter.SpamContract.NotificationTable;
 import com.android.internal.util.cm.SpamFilter.SpamContract.PackageTable;
 import com.android.internal.util.NotificationColorUtil;
-import com.android.internal.util.rr.OmniSwitchConstants;
-import com.android.internal.util.rr.ColorHelper;
-import com.android.internal.util.rr.NotificationColorHelper;
 import com.android.internal.widget.LockPatternUtils;
 import com.android.keyguard.KeyguardUpdateMonitor;
 import com.android.systemui.DejankUtils;
@@ -130,32 +104,22 @@ import com.android.systemui.RecentsComponent;
 import com.android.systemui.SwipeHelper;
 import com.android.systemui.SystemUI;
 import com.android.systemui.assist.AssistManager;
-import com.android.systemui.chaos.lab.gestureanywhere.GestureAnywhereView;
-import com.android.systemui.navigation.Navigator;
 import com.android.systemui.recents.Recents;
-import com.android.systemui.recents.RecentsActivity;
 import com.android.systemui.cm.SpamMessageProvider;
-import com.android.systemui.slimrecent.RecentController;
-import com.android.systemui.statusbar.halo.Halo;
 import com.android.systemui.statusbar.NotificationData.Entry;
-import com.android.systemui.statusbar.appcirclesidebar.AppCircleSidebar;
 import com.android.systemui.statusbar.phone.NavigationBarView;
 import com.android.systemui.statusbar.phone.NotificationGroupManager;
 import com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager;
-import com.android.systemui.statusbar.phone.Ticker;
-import com.android.systemui.statusbar.pie.PieController;
 import com.android.systemui.statusbar.policy.HeadsUpManager;
 import com.android.systemui.statusbar.policy.PreviewInflater;
 import com.android.systemui.statusbar.stack.NotificationStackScrollLayout;
 
-import cyanogenmod.providers.CMSettings;
-
-import java.lang.reflect.Field;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Locale;
 
+import cyanogenmod.providers.CMSettings;
+
 import static com.android.keyguard.KeyguardHostView.OnDismissAction;
 
 public abstract class BaseStatusBar extends SystemUI implements
@@ -179,10 +143,6 @@ public abstract class BaseStatusBar extends SystemUI implements
     protected static final int MSG_CANCEL_PRELOAD_RECENT_APPS = 1023;
     protected static final int MSG_SHOW_NEXT_AFFILIATED_TASK = 1024;
     protected static final int MSG_SHOW_PREV_AFFILIATED_TASK = 1025;
-    protected static final int MSG_CLEAR_RECENT_APPS = 1026;
-    protected static final int MSG_TOGGLE_LAST_APP = 1027;
-    protected static final int MSG_TOGGLE_KILL_APP = 1028;
-    protected static final int MSG_TOGGLE_SCREENSHOT = 1029;
 
     protected static final boolean ENABLE_HEADS_UP = true;
     // scores above this threshold should be displayed in heads up mode.
@@ -210,29 +170,22 @@ public abstract class BaseStatusBar extends SystemUI implements
     protected H mHandler = createHandler();
 
     // all notifications
-    public static NotificationData mNotificationData;
+    protected NotificationData mNotificationData;
     protected NotificationStackScrollLayout mStackScroller;
 
     protected NotificationGroupManager mGroupManager = new NotificationGroupManager();
 
     // for heads up notifications
     protected HeadsUpManager mHeadsUpManager;
-    protected boolean mForceAllHeads;
 
     protected int mCurrentUserId = 0;
     final protected SparseArray<UserInfo> mCurrentProfiles = new SparseArray<UserInfo>();
 
-    // PA Pie controls
-    protected PieController mPieController;
-    public int mOrientation = 0;
-
-    private OrientationEventListener mOrientationListener;
-
     protected int mLayoutDirection = -1; // invalid
     protected AccessibilityManager mAccessibilityManager;
 
     // on-screen navigation buttons
-    protected Navigator mNavigationBarView = null;
+    protected NavigationBarView mNavigationBarView = null;
 
     protected boolean mDeviceInteractive;
 
@@ -262,12 +215,6 @@ public abstract class BaseStatusBar extends SystemUI implements
 
     private UserManager mUserManager;
 
-    // Halo
-    protected Halo mHalo = null;
-    protected Ticker mTicker;
-    protected boolean mHaloActive;
-    public boolean mHaloTaskerActive = false;
-
     // UI-specific methods
 
     /**
@@ -288,16 +235,9 @@ public abstract class BaseStatusBar extends SystemUI implements
     private boolean mDeviceProvisioned = false;
 
     private RecentsComponent mRecents;
-    private RecentController mSlimRecents;
-    private boolean mUseSlimRecents = false;
 
     protected int mZenMode;
 
-    protected AppCircleSidebar mAppCircleSidebar;
-
-    @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_FIELD)
-    protected GestureAnywhereView mGestureAnywhereView;
-
     // which notification is currently being longpress-examined by the user
     private NotificationGuts mNotificationGutsExposed;
 
@@ -314,60 +254,24 @@ public abstract class BaseStatusBar extends SystemUI implements
     protected DismissView mDismissView;
     protected EmptyShadeView mEmptyShadeView;
 
-    public NotificationClicker mNotificationClicker = new NotificationClicker();
+    private NotificationClicker mNotificationClicker = new NotificationClicker();
 
     protected AssistManager mAssistManager;
 
     // last theme that was applied in order to detect theme change (as opposed
     // to some other configuration change).
     protected ThemeConfig mCurrentTheme;
-    private static final HashMap<String, Field> fieldCache = new HashMap<String, Field>();
-
-    private ArrayList<String> mDndList = new ArrayList<String>();
-    private ArrayList<String> mBlacklist = new ArrayList<String>();
-    private ArrayList<String> mWhitelist = new ArrayList<String>();
-
-    public int getNotificationCount() {
-        return mNotificationData.getActiveNotifications().size();
-    }
-
-    private final ContentObserver mPieSettingsObserver = new ContentObserver(mHandler) {
-        @Override
-        public void onChange(boolean selfChange) {
-            update();
-        }
-
-        private void update() {
-            ContentResolver resolver = mContext.getContentResolver();
-            boolean pieEnabled = Settings.System.getIntForUser(resolver,
-                    Settings.System.PA_PIE_STATE, 0, UserHandle.USER_CURRENT) == 1;
-
-            updatePieControls(!pieEnabled);
-        }
-    };
 
     @Override  // NotificationData.Environment
     public boolean isDeviceProvisioned() {
         return mDeviceProvisioned;
     }
 
-    public Ticker getTicker() {
-        return mTicker;
-    }
-
-    public IStatusBarService getService() {
-        return mBarService;
-    }
-
-    public NotificationData getNotificationData() {
-        return mNotificationData;
-    }
-
     protected final ContentObserver mSettingsObserver = new ContentObserver(mHandler) {
         @Override
         public void onChange(boolean selfChange) {
-            final boolean provisioned = 0 != Settings.Global.getInt(
-                    mContext.getContentResolver(), Settings.Global.DEVICE_PROVISIONED, 0);
+            final boolean provisioned = 0 != CMSettings.Secure.getInt(
+                    mContext.getContentResolver(), CMSettings.Secure.CM_SETUP_WIZARD_COMPLETED, 0);
             if (provisioned != mDeviceProvisioned) {
                 mDeviceProvisioned = provisioned;
                 updateNotifications();
@@ -391,46 +295,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         }
     };
 
-    private class SettingsObserver extends ContentObserver {
-        public SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        public void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(CMSettings.System.getUriFor(
-                    CMSettings.System.HEADS_UP_CUSTOM_VALUES), false, this);
-            resolver.registerContentObserver(CMSettings.System.getUriFor(
-                    CMSettings.System.HEADS_UP_BLACKLIST_VALUES), false, this);
-            resolver.registerContentObserver(CMSettings.System.getUriFor(
-                    CMSettings.System.HEADS_UP_WHITELIST_VALUES), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADS_UP_FORCE_ALL), false, this, UserHandle.USER_ALL);
-            update();
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            update();
-        }
-
-        private void update() {
-            ContentResolver resolver = mContext.getContentResolver();
-
-            final String dndString = CMSettings.System.getString(resolver,
-                    CMSettings.System.HEADS_UP_CUSTOM_VALUES);
-            final String blackString = CMSettings.System.getString(resolver,
-                    CMSettings.System.HEADS_UP_BLACKLIST_VALUES);
-            final String whiteString = CMSettings.System.getString(resolver,
-                    CMSettings.System.HEADS_UP_WHITELIST_VALUES);
-            mForceAllHeads = Settings.System.getIntForUser(resolver,
-                    Settings.System.HEADS_UP_FORCE_ALL, 0, UserHandle.USER_CURRENT) == 1;
-            splitAndAddToArrayList(mDndList, dndString, "\\|");
-            splitAndAddToArrayList(mBlacklist, blackString, "\\|");
-            splitAndAddToArrayList(mWhitelist, whiteString, "\\|");
-        }
-    };
-
     public RemoteViews.OnClickHandler getOnClickHandler() {
         return mOnClickHandler;
     }
@@ -674,15 +538,15 @@ public abstract class BaseStatusBar extends SystemUI implements
         @Override
         public void onNotificationRankingUpdate(final RankingMap rankingMap) {
             if (DEBUG) Log.d(TAG, "onRankingUpdate");
-                if (rankingMap != null) {
-                    mHandler.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        updateNotificationRanking(rankingMap);
-                    }
-                });
-            }
-        }
+            if (rankingMap != null) {
+            mHandler.post(new Runnable() {
+                @Override
+                public void run() {
+                    updateNotificationRanking(rankingMap);
+                }
+            });
+        }                            }
+
     };
 
     private void updateCurrentProfilesCache() {
@@ -710,8 +574,6 @@ public abstract class BaseStatusBar extends SystemUI implements
 
         mNotificationData = new NotificationData(this);
 
-        mTicker = new Ticker();
-
         mAccessibilityManager = (AccessibilityManager)
                 mContext.getSystemService(Context.ACCESSIBILITY_SERVICE);
 
@@ -720,8 +582,8 @@ public abstract class BaseStatusBar extends SystemUI implements
         mPowerManager = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
 
         mContext.getContentResolver().registerContentObserver(
-                Settings.Global.getUriFor(Settings.Global.DEVICE_PROVISIONED), true,
-                mSettingsObserver);
+                CMSettings.Secure.getUriFor(CMSettings.Secure.CM_SETUP_WIZARD_COMPLETED), false,
+                mSettingsObserver, UserHandle.USER_ALL);
         mContext.getContentResolver().registerContentObserver(
                 Settings.Global.getUriFor(Settings.Global.ZEN_MODE), false,
                 mSettingsObserver);
@@ -739,6 +601,9 @@ public abstract class BaseStatusBar extends SystemUI implements
         mBarService = IStatusBarService.Stub.asInterface(
                 ServiceManager.getService(Context.STATUS_BAR_SERVICE));
 
+        mRecents = getComponent(Recents.class);
+        mRecents.setCallback(this);
+
         final Configuration currentConfig = mContext.getResources().getConfiguration();
         mLocale = currentConfig.locale;
         mLayoutDirection = TextUtils.getLayoutDirectionFromLocale(mLocale);
@@ -751,8 +616,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         mFastOutLinearIn = AnimationUtils.loadInterpolator(mContext,
                 android.R.interpolator.fast_out_linear_in);
 
-        updateRecents();
-
         // Connect in to the status bar manager service
         StatusBarIconList iconList = new StatusBarIconList();
         mCommandQueue = new CommandQueue(this, iconList);
@@ -765,9 +628,6 @@ public abstract class BaseStatusBar extends SystemUI implements
             // If the system process isn't there we're doomed anyway.
         }
 
-        mHaloActive = Settings.Secure.getInt(mContext.getContentResolver(),
-                Settings.Secure.HALO_ACTIVE, 0) == 1;
-
         createAndAddWindows();
 
         mSettingsObserver.onChange(false); // set up
@@ -826,104 +686,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         mContext.registerReceiverAsUser(mAllUsersReceiver, UserHandle.ALL, allUsersFilter,
                 null, null);
         updateCurrentProfilesCache();
-
-
-        SettingsObserver observer = new SettingsObserver(mHandler);
-        observer.observe();
- 
-
-        mPieSettingsObserver.onChange(false);
-        mContext.getContentResolver().registerContentObserver(Settings.System.getUriFor(
-                Settings.System.PA_PIE_STATE), false, mPieSettingsObserver);
-        mContext.getContentResolver().registerContentObserver(Settings.System.getUriFor(
-                Settings.System.PA_PIE_GRAVITY), false, mPieSettingsObserver);
-
-        // Listen for HALO state
-        mContext.getContentResolver().registerContentObserver(
-                Settings.Secure.getUriFor(Settings.Secure.HALO_ACTIVE), false, new ContentObserver(new Handler()) {
-            @Override
-            public void onChange(boolean selfChange) {
-                updateHalo();
-            }});
-
-        mContext.getContentResolver().registerContentObserver(
-                Settings.Secure.getUriFor(Settings.Secure.HALO_SIZE), false, new ContentObserver(new Handler()) {
-            @Override
-            public void onChange(boolean selfChange) {
-                restartHalo();
-            }});
-
-        mContext.getContentResolver().registerContentObserver(
-                Settings.System.getUriFor(Settings.Secure.HALO_COLOR), false, new ContentObserver(new Handler()) {
-            @Override
-            public void onChange(boolean selfChange) {
-                restartHalo();
-            }});
-
-        updateHalo();
-    }
-
-    public void updatePieControls(boolean reset) {
-        ContentResolver resolver = mContext.getContentResolver();
-
-        if (reset) {
-            Settings.System.putIntForUser(resolver,
-                    Settings.System.PA_PIE_GRAVITY, 0, UserHandle.USER_CURRENT);
-            toggleOrientationListener(false);
-        } else {
-            getOrientationListener();
-            toggleOrientationListener(true);
-        }
-
-        if (mPieController == null) {
-            mPieController = PieController.getInstance();
-            mPieController.init(mContext, mWindowManager, this);
-        }
-        int gravity = Settings.System.getInt(resolver,
-                Settings.System.PA_PIE_GRAVITY, 0);
-        mPieController.resetPie(!reset, gravity);
-    }
-
-    public void toggleOrientationListener(boolean enable) {
-        if (mOrientationListener == null) {
-            if (!enable) {
-                // Do nothing if listener has already dropped
-                return;
-            } else {
-                boolean shouldEnable = Settings.System.getIntForUser(mContext.getContentResolver(),
-                        Settings.System.PA_PIE_STATE, 0, UserHandle.USER_CURRENT) == 1;
-                if (shouldEnable) {
-                    // Re-init Orientation listener for later action
-                    getOrientationListener();
-                } else {
-                    return;
-                }
-            }
-        }
-
-        if (enable && mPowerManager.isScreenOn()) {
-            mOrientationListener.enable();
-        } else {
-            mOrientationListener.disable();
-            // if it has been disabled, then don't leave it to
-            // prevent called from PhoneWindowManager
-            mOrientationListener = null;
-        }
-    }
-
-    private void getOrientationListener() {
-        if (mOrientationListener == null)
-            mOrientationListener = new OrientationEventListener(mContext,
-                    SensorManager.SENSOR_DELAY_NORMAL) {
-                @Override
-                public void onOrientationChanged(int orientation) {
-                    int rotation = mDisplay.getRotation();
-                    if (rotation != mOrientation) {
-                        if (mPieController != null) mPieController.detachPie();
-                        mOrientation = rotation;
-                    }
-                }
-            };
     }
 
     protected void notifyUserAboutHiddenNotifications() {
@@ -973,52 +735,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         }
     }
 
-    public void setHaloTaskerActive(boolean haloTaskerActive, boolean updateNotifications) {
-        mHaloTaskerActive = haloTaskerActive;
-        if (updateNotifications) {
-            updateNotifications();
-        }
-    }
-
-    public void restartHalo() {
-        if (mHalo != null) {
-            mHalo.cleanUp();
-            mWindowManager.removeView(mHalo);
-            mHalo = null;
-        }
-        updateNotifications();
-        updateHalo();
-    }
-
-    private boolean disableHeadsUp() {
-        return Settings.Global.putInt(mContext.getContentResolver(),
-            Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED, 0);
-    }
-
-    protected void updateHalo() {
-        mHaloActive = Settings.Secure.getInt(mContext.getContentResolver(),
-                Settings.Secure.HALO_ACTIVE, 0) == 1;
-
-        if (mHaloActive) {
-            disableHeadsUp();
-            if (mHalo == null) {
-                LayoutInflater inflater = (LayoutInflater) mContext
-                        .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                mHalo = (Halo)inflater.inflate(R.layout.halo_trigger, null);
-                mHalo.setLayerType (View.LAYER_TYPE_HARDWARE, null);
-                WindowManager.LayoutParams params = mHalo.getWMParams();
-                mWindowManager.addView(mHalo,params);
-                mHalo.setStatusBar(this);
-            }
-        } else {
-            if (mHalo != null) {
-                mHalo.cleanUp();
-                mWindowManager.removeView(mHalo);
-                mHalo = null;
-            }
-        }
-    }
-
     public void userSwitched(int newUserId) {
         setHeadsUpUser(newUserId);
     }
@@ -1093,12 +809,6 @@ public abstract class BaseStatusBar extends SystemUI implements
             mLayoutDirection = ld;
             refreshLayout(ld);
         }
-
-        int rotation = mDisplay.getRotation();
-        if (rotation != mOrientation) {
-            if (mPieController != null) mPieController.detachPie();
-            mOrientation = rotation;
-        }
     }
 
     protected View updateNotificationVetoButton(View row, StatusBarNotification n) {
@@ -1180,41 +890,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         startNotificationGutsIntent(intent, appUid);
     }
 
-    private void launchFloating(PendingIntent pIntent) {
-        Intent overlay = new Intent();
-        overlay.addFlags(Intent.FLAG_FLOATING_WINDOW | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        try {
-            ActivityManagerNative.getDefault().resumeAppSwitches();
-        } catch (RemoteException e) {
-        }
-        try {
-            pIntent.send(mContext, 0, overlay);
-        } catch (PendingIntent.CanceledException e) {
-            // the stack trace isn't very helpful here.  Just log the exception message.
-            Slog.w(TAG, "Sending contentIntent failed: " + e);
-        }
-        final boolean keyguardShowing = mStatusBarKeyguardViewManager.isShowing();
-        dismissKeyguardThenExecute(new OnDismissAction() {
-            @Override
-            public boolean onDismiss() {
-                AsyncTask.execute(new Runnable() {
-                    public void run() {
-                        try {
-                            if (keyguardShowing) {
-                                ActivityManagerNative.getDefault()
-                                        .keyguardWaitingForActivityDrawn();
-                            }
-                            overrideActivityPendingAppTransition(keyguardShowing);
-                        } catch (RemoteException e) {
-                        }
-                    }
-                });
-                animateCollapsePanels(CommandQueue.FLAG_EXCLUDE_RECENTS_PANEL, true /* force */);
-                return true;
-            }
-        }, false /* afterKeyguardGone */);
-    }
-
     private void startNotificationGutsIntent(final Intent intent, final int appUid) {
         final boolean keyguardShowing = mStatusBarKeyguardViewManager.isShowing();
         dismissKeyguardThenExecute(new OnDismissAction() {
@@ -1250,7 +925,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         row.setTag(sbn.getPackageName());
         final View guts = row.getGuts();
         final String pkg = sbn.getPackageName();
-        final PendingIntent contentIntent = sbn.getNotification().contentIntent;
         String appname = pkg;
         Drawable pkgicon = null;
         int appUid = -1;
@@ -1270,7 +944,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         ((ImageView) row.findViewById(android.R.id.icon)).setImageDrawable(pkgicon);
         ((DateTimeView) row.findViewById(R.id.timestamp)).setTime(sbn.getPostTime());
         ((TextView) row.findViewById(R.id.pkgname)).setText(appname);
-        final View floatButton = guts.findViewById(R.id.notification_float_item);
         final View settingsButton = guts.findViewById(R.id.notification_inspect_item);
         final View appSettingsButton
                 = guts.findViewById(R.id.notification_inspect_app_provided_settings);
@@ -1303,21 +976,8 @@ public abstract class BaseStatusBar extends SystemUI implements
                     removeNotification(sbn.getKey(), null);
                 }
             });
-	    if (floatButton!=null) {
-		  if (Settings.System.getInt(mContext.getContentResolver(),
-			Settings.System.FLOATING_WINDOW_MODE, 0) == 1) {
-			floatButton.setVisibility(View.VISIBLE);
-		  } else {
-			floatButton.setVisibility(View.GONE);
-		  }
-		  floatButton.setOnClickListener(new View.OnClickListener() {
-		  public void onClick(View v) {
-                    launchFloating(contentIntent);
-		    }
-		});
-            }
-			
-			final Intent appSettingsQueryIntent
+
+            final Intent appSettingsQueryIntent
                     = new Intent(Intent.ACTION_MAIN)
                     .addCategory(Notification.INTENT_CATEGORY_NOTIFICATION_PREFERENCES)
                     .setPackage(pkg);
@@ -1343,8 +1003,7 @@ public abstract class BaseStatusBar extends SystemUI implements
             } else {
                 appSettingsButton.setVisibility(View.GONE);
             }
-        }
-        if (appUid < 0) {
+        } else {
             settingsButton.setVisibility(View.GONE);
             appSettingsButton.setVisibility(View.GONE);
             filterButton.setVisibility(View.GONE);
@@ -1445,18 +1104,10 @@ public abstract class BaseStatusBar extends SystemUI implements
 
     @Override
     public void toggleRecentApps() {
-        RecentsActivity.startBlurTask();
         toggleRecents();
     }
 
     @Override
-    public void clearRecentApps() {
-        int msg = MSG_CLEAR_RECENT_APPS;
-        mHandler.removeMessages(msg);
-        mHandler.sendEmptyMessage(msg);
-    }
-
-    @Override
     public void preloadRecentApps() {
         int msg = MSG_PRELOAD_RECENT_APPS;
         mHandler.removeMessages(msg);
@@ -1483,40 +1134,11 @@ public abstract class BaseStatusBar extends SystemUI implements
         mHandler.removeMessages(msg);
         mHandler.sendEmptyMessage(msg);
     }
-    
-    
-	public void screenPinningStateChanged(boolean enabled) {
-        if (mNavigationBarView != null) {
-            mNavigationBarView.screenPinningStateChanged(enabled);
-        }
-    }
-    
-
-    @Override
-    public void toggleLastApp() {
-        int msg = MSG_TOGGLE_LAST_APP;
-        mHandler.removeMessages(msg);
-        mHandler.sendEmptyMessage(msg);
-    }
-
-    @Override
-    public void toggleKillApp() {
-        int msg = MSG_TOGGLE_KILL_APP;
-        mHandler.removeMessages(msg);
-        mHandler.sendEmptyMessage(msg);
-    }
-
-    @Override
-    public void toggleScreenshot() {
-        int msg = MSG_TOGGLE_SCREENSHOT;
-        mHandler.removeMessages(msg);
-        mHandler.sendEmptyMessage(msg);
-    }
 
     protected H createHandler() {
          return new H();
     }
-    
+
     static void sendCloseSystemWindows(Context context, String reason) {
         if (ActivityManagerNative.isSystemReady()) {
             try {
@@ -1530,102 +1152,47 @@ public abstract class BaseStatusBar extends SystemUI implements
 
     /** Proxy for RecentsComponent */
 
-    private boolean isOmniSwitchEnabled() {
-        int settingsValue = Settings.System.getIntForUser(
-                mContext.getContentResolver(), Settings.System.RECENTS_USE_OMNISWITCH, 0
-                , UserHandle.USER_CURRENT);
-        return (settingsValue == 1);
-    }
-
     protected void showRecents(boolean triggeredFromAltTab) {
-        if (isOmniSwitchEnabled()) {
-            Intent showIntent = new Intent(OmniSwitchConstants.ACTION_SHOW_OVERLAY);
-            mContext.sendBroadcastAsUser(showIntent, UserHandle.CURRENT);
-        } else {
-            if (mRecents != null) {
-                sendCloseSystemWindows(mContext, SYSTEM_DIALOG_REASON_RECENT_APPS);
-                mRecents.showRecents(triggeredFromAltTab, getStatusBarView());
-            }
+        if (mRecents != null) {
+            sendCloseSystemWindows(mContext, SYSTEM_DIALOG_REASON_RECENT_APPS);
+            mRecents.showRecents(triggeredFromAltTab, getStatusBarView());
         }
     }
 
     protected void hideRecents(boolean triggeredFromAltTab, boolean triggeredFromHomeKey) {
-        if (isOmniSwitchEnabled()) {
-            Intent showIntent = new Intent(OmniSwitchConstants.ACTION_HIDE_OVERLAY);
-            mContext.sendBroadcastAsUser(showIntent, UserHandle.CURRENT);
-        } else if (mRecents != null) {
+        if (mRecents != null) {
             mRecents.hideRecents(triggeredFromAltTab, triggeredFromHomeKey);
-        } else if (mSlimRecents != null) {
-            mSlimRecents.hideRecents(triggeredFromHomeKey);
         }
     }
 
-    protected boolean isRecentAppsVisible() {
-        return RecentsActivity.isActivityShowing();
-    }
-
-    protected boolean hasRecentApps() {
-        return RecentsActivity.hasTaskStacks();
-    }
-
     protected void toggleRecents() {
-        if (isOmniSwitchEnabled()) {
-            Intent showIntent = new Intent(OmniSwitchConstants.ACTION_TOGGLE_OVERLAY);
-            mContext.sendBroadcastAsUser(showIntent, UserHandle.CURRENT);
-        } else if (mRecents != null) {
+        if (mRecents != null) {
             sendCloseSystemWindows(mContext, SYSTEM_DIALOG_REASON_RECENT_APPS);
             mRecents.toggleRecents(mDisplay, mLayoutDirection, getStatusBarView());
-        } else if (mSlimRecents != null) {
-            sendCloseSystemWindows(mContext, SYSTEM_DIALOG_REASON_RECENT_APPS);
-            mSlimRecents.toggleRecents(mDisplay, mLayoutDirection, getStatusBarView());
-        }
-    }
-
-    protected void clearRecents() {
-        if (mRecents != null) {
-            mRecents.clearRecents();
         }
     }
 
     protected void preloadRecents() {
-        if (!isOmniSwitchEnabled()) {
-            if (mRecents != null) {
-                mRecents.showNextAffiliatedTask();
-            }
-        } else if (mRecents != null) {
+        if (mRecents != null) {
             mRecents.preloadRecents();
-        } else if (mSlimRecents != null) {
-            mSlimRecents.preloadRecentTasksList();
         }
     }
 
     protected void cancelPreloadingRecents() {
-        if (!isOmniSwitchEnabled()) {
-            if (mRecents != null) {
-                mRecents.showNextAffiliatedTask();
-            }
-        } else if (mRecents != null) {
+        if (mRecents != null) {
             mRecents.cancelPreloadingRecents();
         }
     }
 
     protected void showRecentsNextAffiliatedTask() {
-        if (!isOmniSwitchEnabled()) {
-            if (mRecents != null) {
-                mRecents.showNextAffiliatedTask();
-            }
+        if (mRecents != null) {
+            mRecents.showNextAffiliatedTask();
         }
     }
 
     protected void showRecentsPreviousAffiliatedTask() {
-        if (!isOmniSwitchEnabled()) {
-            if (mRecents != null) {
-                mRecents.showPrevAffiliatedTask();
-        	} else if (mRecents != null) {
-             mRecents.showNextAffiliatedTask();
-        	} else if (mSlimRecents != null) {
-            mSlimRecents.cancelPreloadingRecentTasksList();
-            }
+        if (mRecents != null) {
+            mRecents.showPrevAffiliatedTask();
         }
     }
 
@@ -1634,27 +1201,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         // Do nothing
     }
 
-    protected void rebuildRecentsScreen() {
-        if (mSlimRecents != null) {
-            mSlimRecents.rebuildRecentsScreen();
-        }
-    }
-
-    protected void updateRecents() {
-        boolean slimRecents = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.USE_SLIM_RECENTS, 0, UserHandle.USER_CURRENT) == 1;
-        if (slimRecents) {
-            mSlimRecents = new RecentController(mContext, mLayoutDirection);
-            mSlimRecents.setCallback(this);
-            mRecents = null;
-        } else {
-            mRecents = getComponent(Recents.class);
-            mRecents.setCallback(this);
-            mSlimRecents = null;
-        }
-        rebuildRecentsScreen();
-    }
-
     /**
      * If there is an active heads-up notification and it has a fullscreen intent, fire it now.
      */
@@ -1718,78 +1264,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         }
     }
 
-    public static void updatePreferences() {
-
-        if (mNotificationData == null)
-            return;
-
-        for (Entry entry : mNotificationData.getActiveNotifications()) {
-            NotificationBackgroundView mBackgroundNormal = (NotificationBackgroundView) getObjectField(entry.row, "mBackgroundNormal");
-            NotificationBackgroundView mBackgroundDimmed = (NotificationBackgroundView) getObjectField(entry.row, "mBackgroundDimmed");
-
-            mBackgroundNormal.postInvalidate();
-            mBackgroundDimmed.postInvalidate();
-        }
-    }
-
-
-    public static Object getObjectField(Object obj, String fieldName) {
-        try {
-            return findField(obj.getClass(), fieldName).get(obj);
-        } catch (IllegalAccessException e) {
-            throw new IllegalAccessError(e.getMessage());
-        } catch (IllegalArgumentException e) {
-            throw e;
-        }
-    }
-
-
-    /**
-     * Look up a field in a class and set it to accessible. The result is cached.
-     * If the field was not found, a {@link NoSuchFieldError} will be thrown.
-     */
-    public static Field findField(Class<?> clazz, String fieldName) {
-        StringBuilder sb = new StringBuilder(clazz.getName());
-        sb.append('#');
-        sb.append(fieldName);
-        String fullFieldName = sb.toString();
-
-        if (fieldCache.containsKey(fullFieldName)) {
-            Field field = fieldCache.get(fullFieldName);
-            if (field == null)
-                throw new NoSuchFieldError(fullFieldName);
-            return field;
-        }
-
-        try {
-            Field field = findFieldRecursiveImpl(clazz, fieldName);
-            field.setAccessible(true);
-            fieldCache.put(fullFieldName, field);
-            return field;
-        } catch (NoSuchFieldException e) {
-            fieldCache.put(fullFieldName, null);
-            throw new NoSuchFieldError(fullFieldName);
-        }
-    }
-
-    private static Field findFieldRecursiveImpl(Class<?> clazz, String fieldName) throws NoSuchFieldException {
-        try {
-            return clazz.getDeclaredField(fieldName);
-        } catch (NoSuchFieldException e) {
-            while (true) {
-                clazz = clazz.getSuperclass();
-                if (clazz == null || clazz.equals(Object.class))
-                    break;
-
-                try {
-                    return clazz.getDeclaredField(fieldName);
-                } catch (NoSuchFieldException ignored) {
-                }
-            }
-            throw e;
-        }
-    }
-
     protected class H extends Handler {
         public void handleMessage(Message m) {
             switch (m.what) {
@@ -1802,9 +1276,6 @@ public abstract class BaseStatusBar extends SystemUI implements
              case MSG_TOGGLE_RECENTS_APPS:
                  toggleRecents();
                  break;
-             case MSG_CLEAR_RECENT_APPS:
-                 clearRecents();
-                 break;
              case MSG_PRELOAD_RECENT_APPS:
                   preloadRecents();
                   break;
@@ -1817,18 +1288,6 @@ public abstract class BaseStatusBar extends SystemUI implements
              case MSG_SHOW_PREV_AFFILIATED_TASK:
                   showRecentsPreviousAffiliatedTask();
                   break;
-             case MSG_TOGGLE_LAST_APP:
-                 if (DEBUG) Slog.d(TAG, "toggle last app");
-                 getLastApp();
-                 break;
-             case MSG_TOGGLE_KILL_APP:
-                 if (DEBUG) Slog.d(TAG, "toggle kill app");
-                 mHandler.post(mKillTask);
-                 break;
-             case MSG_TOGGLE_SCREENSHOT:
-                 if (DEBUG) Slog.d(TAG, "toggle screenshot");
-                 takeScreenshot();
-                 break;
             }
         }
     }
@@ -1837,6 +1296,20 @@ public abstract class BaseStatusBar extends SystemUI implements
     }
 
     protected boolean inflateViews(Entry entry, ViewGroup parent) {
+        final StatusBarNotification sbn = entry.notification;
+        String themePackageName = mCurrentTheme != null
+                ? mCurrentTheme.getOverlayPkgNameForApp(sbn.getPackageName()) : null;
+        boolean inflated = inflateViews(entry, parent, true);
+        if (!inflated && themePackageName != null
+                && !ThemeConfig.SYSTEM_DEFAULT.equals(themePackageName)) {
+            Log.w(TAG, "Couldn't expand themed RemoteViews, trying unthemed for: " + sbn);
+            inflated = inflateViews(entry, mStackScroller, false);
+        }
+
+        return inflated;
+    }
+
+    protected boolean inflateViews(Entry entry, ViewGroup parent, boolean isThemeable) {
         PackageManager pmUser = getPackageManagerForUser(
                 entry.notification.getUser().getIdentifier());
 
@@ -1881,7 +1354,6 @@ public abstract class BaseStatusBar extends SystemUI implements
             // cannot use isMediaNotification()
             if (sbn.getNotification().category != null
                     && sbn.getNotification().category.equals(Notification.CATEGORY_TRANSPORT)) {
-                Log.d("ro", "inflating media notification");
                 row = (MediaExpandableNotificationRow) inflater.inflate(
                         R.layout.status_bar_notification_row_media, parent, false);
                 ((MediaExpandableNotificationRow)row).setMediaController(
@@ -1914,10 +1386,12 @@ public abstract class BaseStatusBar extends SystemUI implements
         View contentViewLocal = null;
         View bigContentViewLocal = null;
         View headsUpContentViewLocal = null;
-        String themePackageName = mCurrentTheme != null
-                ? mCurrentTheme.getOverlayPkgNameForApp(sbn.getPackageName()) : null;
-        String statusBarThemePackageName = mCurrentTheme != null
-                ? mCurrentTheme.getOverlayForStatusBar() : null;
+        String themePackageName = (isThemeable && mCurrentTheme != null)
+                ? mCurrentTheme.getOverlayPkgNameForApp(sbn.getPackageName())
+                : ThemeConfig.SYSTEM_DEFAULT;
+        String statusBarThemePackageName = (isThemeable && mCurrentTheme != null)
+                ? mCurrentTheme.getOverlayForStatusBar()
+                : ThemeConfig.SYSTEM_DEFAULT;
 
         try {
             contentViewLocal = contentView.apply(
@@ -2008,8 +1482,10 @@ public abstract class BaseStatusBar extends SystemUI implements
         }
 
         if (publicViewLocal == null) {
+            final Context layoutContext = isThemeable ? mContext
+                    : maybeGetThemedContext(mContext, ThemeConfig.SYSTEM_DEFAULT);
             // Add a basic notification template
-            publicViewLocal = LayoutInflater.from(mContext).inflate(
+            publicViewLocal = LayoutInflater.from(layoutContext).inflate(
                     R.layout.notification_public_default,
                     contentContainerPublic, false);
             publicViewLocal.setIsRootNamespace(true);
@@ -2125,7 +1601,7 @@ public abstract class BaseStatusBar extends SystemUI implements
         }, afterKeyguardGone);
     }
 
-    public final class NotificationClicker implements View.OnClickListener {
+    private final class NotificationClicker implements View.OnClickListener {
         public void onClick(final View v) {
             if (!(v instanceof ExpandableNotificationRow)) {
                 Log.e(TAG, "NotificationClicker called on a view that is not a notification row.");
@@ -2339,11 +1815,8 @@ public abstract class BaseStatusBar extends SystemUI implements
             return null;
         }
 
-        NotificationData.Entry entry = new NotificationData.Entry(sbn, iconView);
-        prepareHaloNotification(entry, sbn, false);
-        entry.hide = entry.notification.getPackageName().equals("com.paranoid.halo");
-
         // Construct the expanded view.
+        NotificationData.Entry entry = new NotificationData.Entry(sbn, iconView);
         if (!inflateViews(entry, mStackScroller)) {
             handleNotificationError(sbn, "Couldn't expand RemoteViews for: " + sbn);
             return null;
@@ -2351,76 +1824,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         return entry;
     }
 
-    public void prepareHaloNotification(NotificationData.Entry entry, StatusBarNotification notification, boolean update) {
-
-        Notification notif = notification.getNotification();
-
-        // Get the remote view
-        try {
-
-            if (!update) {
-                ViewGroup mainView = (ViewGroup)notif.contentView.apply(mContext, null, mOnClickHandler);
-
-                if (mainView instanceof FrameLayout) {
-                    entry.haloContent = mainView.getChildAt(1);
-                    mainView.removeViewAt(1);
-                } else {
-                    entry.haloContent = mainView;
-                }
-            } else {
-                notif.contentView.reapply(mContext, entry.haloContent, mOnClickHandler);
-            }
-
-        } catch (Exception e) {
-            // Non uniform content?
-            android.util.Log.d("PARANOID", " Non uniform content?");
-        }
-
-
-        // Construct the round icon
-        final float haloSize = Settings.Secure.getFloat(mContext.getContentResolver(),
-                Settings.Secure.HALO_SIZE, 1.0f);
-        Resources res = mContext.getResources();
-        int iconSize = (int) (res.getDimensionPixelSize(R.dimen.halo_bubble_size) * haloSize);
-        int smallIconSize = (int) (res.getDimensionPixelSize(R.dimen.status_bar_icon_size) * haloSize);
-        int largeIconWidth = notif.largeIcon != null ? (int)(notif.largeIcon.getWidth() * haloSize) : 0;
-        int largeIconHeight = notif.largeIcon != null ? (int)(notif.largeIcon.getHeight() * haloSize) : 0;
-        Bitmap roundIcon = Bitmap.createBitmap(iconSize, iconSize, Bitmap.Config.ARGB_8888);
-        Canvas canvas = new Canvas(roundIcon);
-        canvas.drawARGB(0, 0, 0, 0);
-
-        // If we have a bona fide avatar here stretching at least over half the size of our
-        // halo-bubble, we'll use that one and cut it round
-        // TODO: cache the halo bitmap, use 4.4 reveal pattern to draw the background
-        if (notif.largeIcon != null
-                && largeIconWidth >= iconSize / 2) {
-            Paint smoothingPaint = new Paint();
-            smoothingPaint.setAntiAlias(true);
-            smoothingPaint.setFilterBitmap(true);
-            smoothingPaint.setDither(true);
-            canvas.drawCircle(iconSize / 2, iconSize / 2, iconSize / 2.3f, smoothingPaint);
-            smoothingPaint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
-            final int newWidth = iconSize;
-            final int newHeight = iconSize * largeIconWidth / largeIconHeight;
-            Bitmap scaledBitmap = Bitmap.createScaledBitmap(notif.largeIcon, newWidth, newHeight, true);
-            canvas.drawBitmap(scaledBitmap, null, new Rect(0, 0,
-                    iconSize, iconSize), smoothingPaint);
-        } else {
-            try {
-                Drawable icon = StatusBarIconView.getIcon(mContext,
-                    new StatusBarIcon(notification.getPackageName(), notification.getUser(), notif.icon,
-                    notif.iconLevel, notif.number, notif.tickerText));
-                if (icon == null) icon = mContext.getPackageManager().getApplicationIcon(notification.getPackageName());
-                int margin = (iconSize - smallIconSize) / 2;
-                icon.setBounds(margin, margin, iconSize - margin, iconSize - margin);
-                icon.draw(canvas);
-            } catch (Exception e) {
-                // NameNotFoundException
-            }
-        }
-        entry.roundIcon = roundIcon;
-    }
-
     protected StatusBarIconView createIcon(StatusBarNotification sbn) {
         // Construct the icon.
         Notification n = sbn.getNotification();
@@ -2514,10 +1917,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         mStackScroller.changeViewPosition(mEmptyShadeView, mStackScroller.getChildCount() - 2);
         mStackScroller.changeViewPosition(mKeyguardIconOverflowContainer,
                 mStackScroller.getChildCount() - 3);
-
-        if (onKeyguard) {
-            hideWeatherPanelIfNecessary(visibleNotifications, getMaxKeyguardNotifications());
-        }
     }
 
     private boolean shouldShowOnKeyguard(StatusBarNotification sbn) {
@@ -2535,17 +1934,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         return isKeyguardAllowedForApp;
     }
 
-    private void hideWeatherPanelIfNecessary(int visibleNotifications, int maxKeyguardNotifications) {
-        final ContentResolver resolver = mContext.getContentResolver();
-        int notifications = visibleNotifications;
-        if (mKeyguardIconOverflowContainer.getIconsView().getChildCount() > 0) {
-            notifications += 1;
-        }
-        Settings.System.putInt(resolver,
-                Settings.System.LOCK_SCREEN_VISIBLE_NOTIFICATIONS, notifications);
-        maxKeyguardNotifications = getMaxKeyguardNotifications();
-    }
-
     protected void setZenMode(int mode) {
         if (!isDeviceProvisioned()) return;
         mZenMode = mode;
@@ -2570,7 +1958,7 @@ public abstract class BaseStatusBar extends SystemUI implements
     }
 
     protected abstract void setAreThereNotifications();
-    public abstract void updateNotifications();
+    protected abstract void updateNotifications();
     public abstract boolean shouldDisableNavbarGestures();
 
     public abstract void addNotification(StatusBarNotification notification,
@@ -2656,9 +2044,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         }
 
         setAreThereNotifications();
-
-        // Update halo
-        if (mHalo != null) mHalo.update();
     }
 
     protected abstract void updateHeadsUp(String key, Entry entry, boolean shouldInterrupt,
@@ -2767,8 +2152,6 @@ public abstract class BaseStatusBar extends SystemUI implements
         entry.row.setStatusBarNotification(notification);
         entry.row.notifyContentUpdated();
         entry.row.resetHeight();
-        // Update the roundIcon
-        prepareHaloNotification(entry, notification, true);
     }
 
     protected void notifyHeadsUpScreenOff() {
@@ -2841,59 +2224,33 @@ public abstract class BaseStatusBar extends SystemUI implements
             return false;
         }
 
-        // Give incoming call free passage here,
-        // we'll decide later if intrusive notification will be allowed
-        if (isSnoozedPackage(sbn) && !isIncomingCall(sbn)) {
-            return false;
-        }
-
-        // check if package is blacklisted first
-        if (isPackageBlacklisted(sbn.getPackageName()) || isPackageInDnd(getTopLevelPackage())) {
+        if (isSnoozedPackage(sbn)) {
             return false;
         }
 
-        // check if package is blacklisted first
-        if (isPackageBlacklisted(sbn.getPackageName()) || isPackageInDnd(getTopLevelPackage())) {
-            return false;
-        }
- 
         Notification notification = sbn.getNotification();
         // some predicates to make the boolean logic legible
-        boolean whiteListed = mForceAllHeads || isPackageWhitelisted(sbn.getPackageName());
         boolean isNoisy = (notification.defaults & Notification.DEFAULT_SOUND) != 0
                 || (notification.defaults & Notification.DEFAULT_VIBRATE) != 0
                 || notification.sound != null
                 || notification.vibrate != null;
         boolean isHighPriority = sbn.getScore() >= INTERRUPTION_THRESHOLD;
         boolean isFullscreen = notification.fullScreenIntent != null;
-
-        // incoming call should be allowed to process
-        // to handle non-intrusive ui correctly
-        int defHeadsUp = (isIncomingCall(sbn) && isIntrusiveEnabled())
-                ? Notification.HEADS_UP_NEVER
-                : Notification.HEADS_UP_ALLOWED;
         boolean hasTicker = mHeadsUpTicker && !TextUtils.isEmpty(notification.tickerText);
         boolean isAllowed = notification.extras.getInt(Notification.EXTRA_AS_HEADS_UP,
-                defHeadsUp) != Notification.HEADS_UP_NEVER;
+                Notification.HEADS_UP_ALLOWED) != Notification.HEADS_UP_NEVER;
         boolean accessibilityForcesLaunch = isFullscreen
                 && mAccessibilityManager.isTouchExplorationEnabled();
         boolean justLaunchedFullScreenIntent = entry.hasJustLaunchedFullScreenIntent();
 
-        final InputMethodManager inputMethodManager = (InputMethodManager)
-                mContext.getSystemService(Context.INPUT_METHOD_SERVICE);
-
-        boolean isIMEShowing = inputMethodManager.isImeShowing();
-
-        boolean interrupt = (whiteListed
-                || (isFullscreen || (isHighPriority && (isNoisy || hasTicker))))
+        boolean interrupt = (isFullscreen || (isHighPriority && (isNoisy || hasTicker)))
                 && isAllowed
                 && !accessibilityForcesLaunch
                 && !justLaunchedFullScreenIntent
                 && mPowerManager.isScreenOn()
                 && (!mStatusBarKeyguardViewManager.isShowing()
                         || mStatusBarKeyguardViewManager.isOccluded())
-                && !mStatusBarKeyguardViewManager.isInputRestricted()
-                && !isIMEShowing;
+                && !mStatusBarKeyguardViewManager.isInputRestricted();
         try {
             interrupt = interrupt && !mDreamManager.isDreaming();
         } catch (RemoteException e) {
@@ -2903,49 +2260,8 @@ public abstract class BaseStatusBar extends SystemUI implements
         return interrupt;
     }
 
-    private boolean isIncomingCall(StatusBarNotification sbn) {
-        return sbn.getPackageName().equals("com.android.dialer");
-    }
-
-    private boolean isIntrusiveEnabled() {
-        return Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.USE_INTRUSIVE_CALL, 0) != 0;
-    }
-
     protected abstract boolean isSnoozedPackage(StatusBarNotification sbn);
 
-    private String getTopLevelPackage() {
-        final ActivityManager am = (ActivityManager)
-                mContext.getSystemService(Context.ACTIVITY_SERVICE);
-        List<ActivityManager.RunningTaskInfo> taskInfo = am.getRunningTasks(1);
-        ComponentName componentInfo = taskInfo.get(0).topActivity;
-        return componentInfo.getPackageName();
-    }
-
-    private boolean isPackageInDnd(String packageName) {
-        return mDndList.contains(packageName);
-    }
-
-    private boolean isPackageBlacklisted(String packageName) {
-        return mBlacklist.contains(packageName);
-    }
-
-    private boolean isPackageWhitelisted(String packageName) {
-        return mWhitelist.contains(packageName);
-    }
-
-    private void splitAndAddToArrayList(ArrayList<String> arrayList,
-            String baseString, String separator) {
-        // clear first
-        arrayList.clear();
-        if (baseString != null) {
-            final String[] array = TextUtils.split(baseString, separator);
-            for (String item : array) {
-                arrayList.add(item.trim());
-            }
-        }
-    }
-
     public void setInteracting(int barWindow, boolean interacting) {
         // hook for subclasses
     }
@@ -3027,227 +2343,23 @@ public abstract class BaseStatusBar extends SystemUI implements
         }
     }
 
-    @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_METHOD)
-    protected void addGestureAnywhereView() {
-      if (mGestureAnywhereView == null) {
-        mGestureAnywhereView = (GestureAnywhereView)View.inflate(
-                mContext, R.layout.gesture_anywhere_overlay, null);
-        mWindowManager.addView(mGestureAnywhereView, getGestureAnywhereViewLayoutParams(Gravity.LEFT));
-        }
-        mGestureAnywhereView.setStatusBar(this);
-    }
-
-    @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_METHOD)
-    protected void removeGestureAnywhereView() {
-        if (mGestureAnywhereView != null)
-            mWindowManager.removeView(mGestureAnywhereView);
-    }
-
-    @ChaosLab(name="GestureAnywhere", classification=Classification.NEW_METHOD)
-    protected WindowManager.LayoutParams getGestureAnywhereViewLayoutParams(int gravity) {
-        WindowManager.LayoutParams lp = new WindowManager.LayoutParams(
-                LayoutParams.WRAP_CONTENT,
-                ViewGroup.LayoutParams.MATCH_PARENT,
-                WindowManager.LayoutParams.TYPE_STATUS_BAR_SUB_PANEL,
-                0
-                | WindowManager.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING
-                | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
-                | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
-                | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH
-                | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH,
-                PixelFormat.TRANSLUCENT);
-        lp.privateFlags |= WindowManager.LayoutParams.PRIVATE_FLAG_NO_MOVE_ANIMATION;
-        lp.gravity = Gravity.TOP | gravity;
-        lp.setTitle("GestureAnywhereView");
-
-        return lp;
-    }
-
-    protected void addAppCircleSidebar() {
-	    if (mAppCircleSidebar == null) {
-            mAppCircleSidebar = (AppCircleSidebar) View.inflate(mContext, R.layout.app_circle_sidebar, null);
-            mWindowManager.addView(mAppCircleSidebar, getAppCircleSidebarLayoutParams());
-            }
-    }
-
-    protected void removeAppCircleSidebar() {
-        if (mAppCircleSidebar != null) {
-            mWindowManager.removeView(mAppCircleSidebar);
-        }
-    }
-
- protected WindowManager.LayoutParams getAppCircleSidebarLayoutParams() {
-        int maxWidth =
-                mContext.getResources().getDimensionPixelSize(R.dimen.app_sidebar_trigger_width);
-
-        WindowManager.LayoutParams lp = new WindowManager.LayoutParams(
-                maxWidth,
-                ViewGroup.LayoutParams.MATCH_PARENT,
-                WindowManager.LayoutParams.TYPE_STATUS_BAR_SUB_PANEL,
-                0
-                | WindowManager.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING
-                | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
-                | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
-                | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH
-                | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH,
-                PixelFormat.TRANSLUCENT);
-        lp.privateFlags |= WindowManager.LayoutParams.PRIVATE_FLAG_NO_MOVE_ANIMATION;
-        lp.gravity = Gravity.TOP | Gravity.RIGHT;
-        lp.setTitle("AppCircleSidebar");
-
-        return lp;
-    }
-
-    Runnable mKillTask = new Runnable() {
-        public void run() {
-            final Intent intent = new Intent(Intent.ACTION_MAIN);
-            String defaultHomePackage = "com.android.launcher";
-            intent.addCategory(Intent.CATEGORY_HOME);
-            final ResolveInfo res = mContext.getPackageManager().resolveActivity(intent, 0);
-            if (res.activityInfo != null && !res.activityInfo.packageName.equals("android")) {
-                defaultHomePackage = res.activityInfo.packageName;
-            }
-            boolean targetKilled = false;
-            final ActivityManager am = (ActivityManager) mContext
-                    .getSystemService(Activity.ACTIVITY_SERVICE);
-            List<RunningAppProcessInfo> apps = am.getRunningAppProcesses();
-            for (RunningAppProcessInfo appInfo : apps) {
-                int uid = appInfo.uid;
-                // Make sure it's a foreground user application (not system,
-                // root, phone, etc.)
-                if (uid >= Process.FIRST_APPLICATION_UID && uid <= Process.LAST_APPLICATION_UID
-                        && appInfo.importance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
-                    if (appInfo.pkgList != null && (appInfo.pkgList.length > 0)) {
-                        for (String pkg : appInfo.pkgList) {
-                            if (!pkg.equals("com.android.systemui")
-                                    && !pkg.equals(defaultHomePackage)) {
-                                am.forceStopPackage(pkg);
-                                targetKilled = true;
-                                break;
-                            }
-                        }
-                    } else {
-                        Process.killProcess(appInfo.pid);
-                        targetKilled = true;
-                    }
-                }
-                if (targetKilled) {
-                    Toast.makeText(mContext,
-                        com.android.internal.R.string.app_killed_message, Toast.LENGTH_SHORT).show();
-                    break;
-                }
-            }
-        }
-    };
-
-    private void getLastApp() {
-        int lastAppId = 0;
-        int looper = 1;
-        String packageName;
-        final Intent intent = new Intent(Intent.ACTION_MAIN);
-        final ActivityManager am = (ActivityManager) mContext
-                .getSystemService(Activity.ACTIVITY_SERVICE);
-        String defaultHomePackage = "com.android.launcher";
-        intent.addCategory(Intent.CATEGORY_HOME);
-        final ResolveInfo res = mContext.getPackageManager().resolveActivity(intent, 0);
-        if (res.activityInfo != null && !res.activityInfo.packageName.equals("android")) {
-            defaultHomePackage = res.activityInfo.packageName;
-        }
-        List <ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(5);
-        // lets get enough tasks to find something to switch to
-        // Note, we'll only get as many as the system currently has - up to 5
-        while ((lastAppId == 0) && (looper < tasks.size())) {
-            packageName = tasks.get(looper).topActivity.getPackageName();
-            if (!packageName.equals(defaultHomePackage)
-                    && !packageName.equals("com.android.systemui")) {
-                lastAppId = tasks.get(looper).id;
-            }
-            looper++;
-        }
-        if (lastAppId != 0) {
-            am.moveTaskToFront(lastAppId, am.MOVE_TASK_NO_USER_ACTION);
-        }
-    }
-
-    final Runnable mScreenshotTimeout = new Runnable() {
-        @Override
-        public void run() {
-            synchronized (mScreenshotLock) {
-                if (mScreenshotConnection != null) {
-                    mContext.unbindService(mScreenshotConnection);
-                    mScreenshotConnection = null;
-                }
-            }
+    /**
+     * Returns a context with the given theme applied or the original context if we fail to get a
+     * themed context.
+     */
+    private Context maybeGetThemedContext(Context context, String themePkg) {
+        Context themedContext;
+        try {
+            ApplicationInfo ai = context.getPackageManager().getApplicationInfo(
+                    context.getPackageName(), 0);
+            themedContext = context.createApplicationContext(ai, themePkg,
+                    0);
+        } catch (PackageManager.NameNotFoundException e) {
+            themedContext = null;
         }
-    };
-
-    private final Object mScreenshotLock = new Object();
-    private ServiceConnection mScreenshotConnection = null;
-    private Handler mHDL = new Handler();
-
-    private void takeScreenshot() {
-        synchronized (mScreenshotLock) {
-            if (mScreenshotConnection != null) {
-                return;
-            }
-            ComponentName cn = new ComponentName("com.android.systemui",
-                    "com.android.systemui.screenshot.TakeScreenshotService");
-            Intent intent = new Intent();
-            intent.setComponent(cn);
-            ServiceConnection conn = new ServiceConnection() {
-                @Override
-                public void onServiceConnected(ComponentName name, IBinder service) {
-                    synchronized (mScreenshotLock) {
-                        if (mScreenshotConnection != this) {
-                            return;
-                        }
-                        Messenger messenger = new Messenger(service);
-                        Message msg = Message.obtain(null, 1);
-                        final ServiceConnection myConn = this;
-                        Handler h = new Handler(mHDL.getLooper()) {
-                            @Override
-                            public void handleMessage(Message msg) {
-                                synchronized (mScreenshotLock) {
-                                    if (mScreenshotConnection == myConn) {
-                                        mContext.unbindService(mScreenshotConnection);
-                                        mScreenshotConnection = null;
-                                        mHDL.removeCallbacks(mScreenshotTimeout);
-                                    }
-                                }
-                            }
-                        };
-                        msg.replyTo = new Messenger(h);
-                        msg.arg1 = msg.arg2 = 0;
-
-                        /*
-                         * remove for the time being if (mStatusBar != null &&
-                         * mStatusBar.isVisibleLw()) msg.arg1 = 1; if
-                         * (mNavigationBar != null &&
-                         * mNavigationBar.isVisibleLw()) msg.arg2 = 1;
-                         */
-
-                        /* wait for the dialog box to close */
-                        try {
-                            Thread.sleep(1000);
-                        } catch (InterruptedException ie) {
-                        }
-
-                        /* take the screenshot */
-                        try {
-                            messenger.send(msg);
-                        } catch (RemoteException e) {
-                        }
-                    }
-                }
-
-                @Override
-                public void onServiceDisconnected(ComponentName name) {
-                }
-            };
-            if (mContext.bindService(intent, conn, mContext.BIND_AUTO_CREATE)) {
-                mScreenshotConnection = conn;
-                mHDL.postDelayed(mScreenshotTimeout, 10000);
-            }
+        if (themedContext == null) {
+            themedContext = context;
         }
+        return themedContext;
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java b/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
index 92130f0..83b2fb5 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
@@ -16,7 +16,6 @@
 
 package com.android.systemui.statusbar;
 
-import android.content.Intent;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.IBinder;
@@ -66,12 +65,7 @@ public class CommandQueue extends IStatusBar.Stub {
     private static final int MSG_ASSIST_DISCLOSURE          = 22 << MSG_SHIFT;
     private static final int MSG_START_ASSIST               = 23 << MSG_SHIFT;
     private static final int MSG_CAMERA_LAUNCH_GESTURE      = 24 << MSG_SHIFT;
-    private static final int MSG_SET_AUTOROTATE_STATUS      = 25 << MSG_SHIFT;
-    private static final int MSG_START_CUSTOM_INTENT_AFTER_KEYGUARD = 26 << MSG_SHIFT;
-    private static final int MSG_SCREEN_PINNING_STATE_CHANGED = 27 << MSG_SHIFT;
-    private static final int MSG_TOGGLE_LAST_APP            = 28 << MSG_SHIFT;
-    private static final int MSG_TOGGLE_KILL_APP            = 29 << MSG_SHIFT;
-    private static final int MSG_TOGGLE_SCREENSHOT          = 30 << MSG_SHIFT;
+
     public static final int FLAG_EXCLUDE_NONE = 0;
     public static final int FLAG_EXCLUDE_SEARCH_PANEL = 1 << 0;
     public static final int FLAG_EXCLUDE_RECENTS_PANEL = 1 << 1;
@@ -105,7 +99,6 @@ public class CommandQueue extends IStatusBar.Stub {
         public void showRecentApps(boolean triggeredFromAltTab);
         public void hideRecentApps(boolean triggeredFromAltTab, boolean triggeredFromHomeKey);
         public void toggleRecentApps();
-        public void clearRecentApps();
         public void preloadRecentApps();
         public void cancelPreloadRecentApps();
         public void setWindowState(int window, int state);
@@ -119,13 +112,6 @@ public class CommandQueue extends IStatusBar.Stub {
         public void showAssistDisclosure();
         public void startAssist(Bundle args);
         public void onCameraLaunchGestureDetected(int source);
-        public void setAutoRotate(boolean enabled);
-	public void showCustomIntentAfterKeyguard(Intent intent);
-        public void screenPinningStateChanged(boolean enabled);
-        public void toggleLastApp();
-        public void toggleKillApp();
-        public void toggleScreenshot();
-        public void toggleOrientationListener(boolean enable);
     }
 
     public CommandQueue(Callbacks callbacks, StatusBarIconList list) {
@@ -241,10 +227,6 @@ public class CommandQueue extends IStatusBar.Stub {
         }
     }
 
-    public void toggleOrientationListener(boolean enable) {
-        mCallbacks.toggleOrientationListener(enable);
-    }
-
     public void setWindowState(int window, int state) {
         synchronized (mList) {
             // don't coalesce these
@@ -330,49 +312,6 @@ public class CommandQueue extends IStatusBar.Stub {
         }
     }
 
-    public void setAutoRotate(boolean enabled) {
-        synchronized (mList) {
-            mHandler.removeMessages(MSG_SET_AUTOROTATE_STATUS);
-            mHandler.obtainMessage(MSG_SET_AUTOROTATE_STATUS,
-                enabled ? 1 : 0, 0, null).sendToTarget();
-        }
-    }
-	
-    public void showCustomIntentAfterKeyguard(Intent intent) {
-        mHandler.removeMessages(MSG_START_CUSTOM_INTENT_AFTER_KEYGUARD);
-        Message m = mHandler.obtainMessage(MSG_START_CUSTOM_INTENT_AFTER_KEYGUARD, 0, 0, intent);
-        m.sendToTarget();
-    }
-
-    public void screenPinningStateChanged(boolean enabled) {
-        synchronized (mList) {
-            mHandler.removeMessages(MSG_SCREEN_PINNING_STATE_CHANGED);
-            mHandler.obtainMessage(MSG_SCREEN_PINNING_STATE_CHANGED,
-                    enabled ? 1 : 0, 0, null).sendToTarget();
-            }        
-    }                
-
-    public void toggleLastApp() {
-        synchronized (mList) {
-            mHandler.removeMessages(MSG_TOGGLE_LAST_APP);
-            mHandler.obtainMessage(MSG_TOGGLE_LAST_APP, 0, 0, null).sendToTarget();
-        }
-    }
-
-    public void toggleKillApp() {
-        synchronized (mList) {
-            mHandler.removeMessages(MSG_TOGGLE_KILL_APP);
-            mHandler.obtainMessage(MSG_TOGGLE_KILL_APP, 0, 0, null).sendToTarget();
-        }
-    }
-
-    public void toggleScreenshot() {
-        synchronized (mList) {
-            mHandler.removeMessages(MSG_TOGGLE_SCREENSHOT);
-            mHandler.obtainMessage(MSG_TOGGLE_SCREENSHOT, 0, 0, null).sendToTarget();
-        }
-    }
-
     private final class H extends Handler {
         public void handleMessage(Message msg) {
             if (mPaused) {
@@ -478,24 +417,6 @@ public class CommandQueue extends IStatusBar.Stub {
                 case MSG_CAMERA_LAUNCH_GESTURE:
                     mCallbacks.onCameraLaunchGestureDetected(msg.arg1);
                     break;
-                case MSG_SET_AUTOROTATE_STATUS:
-                    mCallbacks.setAutoRotate(msg.arg1 != 0);
-                    break;
-		case MSG_START_CUSTOM_INTENT_AFTER_KEYGUARD:
-                    mCallbacks.showCustomIntentAfterKeyguard((Intent) msg.obj);
-                    break;	
-                case MSG_SCREEN_PINNING_STATE_CHANGED:
-                    mCallbacks.screenPinningStateChanged(msg.arg1 != 0);
-		    break;
-                case MSG_TOGGLE_LAST_APP:
-                    mCallbacks.toggleLastApp();
-                    break;
-                case MSG_TOGGLE_KILL_APP:
-                    mCallbacks.toggleKillApp();
-                    break;
-                case MSG_TOGGLE_SCREENSHOT:
-                    mCallbacks.toggleScreenshot();
-                    break;
             }
         }
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/CustomTileData.java b/packages/SystemUI/src/com/android/systemui/statusbar/CustomTileData.java
index 4be7292..42974ba 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/CustomTileData.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/CustomTileData.java
@@ -29,7 +29,7 @@ public class CustomTileData {
         public final StatusBarPanelCustomTile sbc;
 
         public Entry(StatusBarPanelCustomTile sbc) {
-            this.key = sbc.getKey();
+            this.key = sbc.persistableKey();
             this.sbc = sbc;
         }
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/DismissView.java b/packages/SystemUI/src/com/android/systemui/statusbar/DismissView.java
index 3d39720..d9276bf 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/DismissView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/DismissView.java
@@ -57,10 +57,6 @@ public class DismissView extends StackScrollerDecorView {
         mDismissButton.showButton();
     }
 
-    public void updateIconColor(int color) {
-        mDismissButton.setIconColor(color);
-    }
-
     public void setDismissAllInProgress(boolean dismissAllInProgress) {
         if (dismissAllInProgress) {
             setClipBounds(null);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/DismissViewButton.java b/packages/SystemUI/src/com/android/systemui/statusbar/DismissViewButton.java
index e891ce4..a323684 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/DismissViewButton.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/DismissViewButton.java
@@ -21,7 +21,6 @@ import android.graphics.Canvas;
 import android.graphics.Rect;
 import android.graphics.drawable.AnimatedVectorDrawable;
 import android.graphics.drawable.Drawable;
-import android.graphics.PorterDuff.Mode;
 import android.util.AttributeSet;
 import android.view.View;
 import android.view.ViewGroup;
@@ -130,9 +129,4 @@ public class DismissViewButton extends Button {
     public boolean isButtonStatic() {
         return mActiveDrawable == mStaticDismissDrawable;
     }
-
-    public void setIconColor(int color) {
-        mStaticDismissDrawable.setColorFilter(color, Mode.MULTIPLY);
-        mAnimatedDismissDrawable.setColorFilter(color, Mode.MULTIPLY);
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/ExpandableNotificationRow.java b/packages/SystemUI/src/com/android/systemui/statusbar/ExpandableNotificationRow.java
index 11bccc6..be51e57 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/ExpandableNotificationRow.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/ExpandableNotificationRow.java
@@ -25,7 +25,6 @@ import android.graphics.drawable.AnimationDrawable;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.RippleDrawable;
-import android.provider.Settings;
 import android.service.notification.StatusBarNotification;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
@@ -544,12 +543,7 @@ public class ExpandableNotificationRow extends ActivatableNotificationView {
     }
 
     public boolean isUserExpanded() {
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.FORCE_EXPANDED_NOTIFICATIONS, 0) != 1) {
-            return mUserExpanded;
-        } else {
-            return true;
-        }
+        return mUserExpanded;
     }
 
     /**
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java b/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java
index e26dcf7..faf60f5 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java
@@ -18,7 +18,6 @@ package com.android.systemui.statusbar;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.res.ColorStateList;
@@ -44,7 +43,6 @@ import com.android.systemui.R;
 import com.android.systemui.statusbar.phone.KeyguardIndicationTextView;
 import com.android.systemui.statusbar.phone.LockIcon;
 import com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager;
-import android.provider.Settings;
 
 /**
  * Controls the indications and error messages shown on the Keyguard
@@ -76,11 +74,8 @@ public class KeyguardIndicationController {
     private boolean mPowerCharged;
     private int mChargingSpeed;
     private int mChargingCurrent;
-    private boolean mShowChargingCurrent;
     private String mMessageToShowOnScreenOn;
-    private boolean mShowcurrent;
     private IndicationDirection mIndicationDirection;
-    private boolean mScreenOnHintsEnabled;
 
     public KeyguardIndicationController(Context context, KeyguardIndicationTextView textView,
                                         LockIcon lockIcon) {
@@ -92,7 +87,6 @@ public class KeyguardIndicationController {
         Resources res = context.getResources();
         mSlowThreshold = res.getInteger(R.integer.config_chargingSlowlyThreshold);
         mFastThreshold = res.getInteger(R.integer.config_chargingFastThreshold);
-        mScreenOnHintsEnabled = res.getBoolean(R.bool.config_showScreenOnLockScreenHints);
 
 
         mBatteryInfo = IBatteryStats.Stub.asInterface(
@@ -195,9 +189,8 @@ public class KeyguardIndicationController {
             final int color = computeColor();
             mTextView.switchIndication(computeIndication());
             mTextView.setTextColor(color);
-            int top = 0, left = 0, right = 0;
-            // pad the bottom using ic_empty_space to keep text vertically aligned if needed
-            int bottom = mScreenOnHintsEnabled ? R.drawable.ic_empty_space : 0;
+            // pad the bottom using ic_empty_space to keep text vertically aligned
+            int top = 0, bottom = R.drawable.ic_empty_space, left = 0, right = 0;
             switch (mIndicationDirection) {
                 case UP:
                     top = R.drawable.ic_keyboard_arrow_up;
@@ -276,21 +269,12 @@ public class KeyguardIndicationController {
                 break;
         }
 
-        String chargingCurrent = "";
-        mShowChargingCurrent = Settings.System.getIntForUser(mContext.getContentResolver(),
-            Settings.System.LOCK_SCREEN_SHOW_CURRENT, 0, UserHandle.USER_CURRENT) == 1;
-        if (mChargingCurrent != 0 && mShowChargingCurrent) {
-            chargingCurrent = "\n" + "Max " + (mChargingCurrent / 1000) + "mA/h";
-        }
-
         if (hasChargingTime) {
             String chargingTimeFormatted = Formatter.formatShortElapsedTimeRoundingUpToMinutes(
                     mContext, chargingTimeRemaining);
-            String chargingText = mContext.getResources().getString(chargingId, chargingTimeFormatted);
-            return chargingText + chargingCurrent;
+            return mContext.getResources().getString(chargingId, chargingTimeFormatted);
         } else {
-            String chargingText = mContext.getResources().getString(chargingId);
-            return chargingText + chargingCurrent;
+            return mContext.getResources().getString(chargingId);
         }
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationBackgroundView.java b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationBackgroundView.java
index 41f0e51..8688c28 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationBackgroundView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationBackgroundView.java
@@ -18,26 +18,12 @@ package com.android.systemui.statusbar;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
-import android.content.ContentResolver;
-import android.database.ContentObserver;
 import android.graphics.Canvas;
 import android.graphics.PorterDuff;
-import android.os.Handler;
-import android.net.Uri;
-import android.os.UserHandle;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.RippleDrawable;
-import android.os.Handler;
-import android.os.UserHandle;
-import android.net.Uri;
-import android.provider.Settings;
 import android.util.AttributeSet;
-import android.provider.Settings;
-import android.util.Log;
 import android.view.View;
-import com.android.systemui.statusbar.phone.NotificationPanelView;
-
-import com.android.systemui.statusbar.phone.NotificationPanelView;
 
 /**
  * A view that can be used for both the dimmed and normal background of an notification.
@@ -47,15 +33,9 @@ public class NotificationBackgroundView extends View {
     private Drawable mBackground;
     private int mClipTopAmount;
     private int mActualHeight;
-    private int mNotificationsAlpha;
-    private static int mTranslucencyPercentage;
-    private static boolean mTranslucentNotifications;
-
-    private SettingsObserver mSettingsObserver;
 
     public NotificationBackgroundView(Context context, AttributeSet attrs) {
         super(context, attrs);
-        mSettingsObserver = new SettingsObserver(new Handler());
     }
 
     @Override
@@ -66,40 +46,8 @@ public class NotificationBackgroundView extends View {
     private void draw(Canvas canvas, Drawable drawable) {
         if (drawable != null && mActualHeight > mClipTopAmount) {
             drawable.setBounds(0, mClipTopAmount, getWidth(), mActualHeight);
-	if (mTranslucentNotifications) {
-	setblur(canvas,drawable);
-	} else {
-	drawable.setAlpha(mNotificationsAlpha);
-	}
-	drawable.draw(canvas);
-      }	
-    }
-  
-   public void setblur(Canvas canvas, Drawable drawable) {
-    if (mTranslucentNotifications) {
-                if (drawable.getAlpha() != mTranslucencyPercentage)
-                    drawable.setAlpha(mTranslucencyPercentage);
-                if (NotificationPanelView.mKeyguardShowing) {
-                    drawable.setAlpha(179);
-                }
-                if (NotificationPanelView.mHeadsUpShowing || NotificationPanelView.mHeadsUpAnimatingAway) {
-                    drawable.setAlpha(255);
-                }
-            } else {
-                drawable.setAlpha(255);
-		}
+            drawable.draw(canvas);
         }
-
-    @Override
-    protected void onAttachedToWindow() {
-        super.onAttachedToWindow();
-        mSettingsObserver.observe();
-    }
-
-    @Override
-    protected void onDetachedFromWindow() {
-        super.onDetachedFromWindow();
-        mSettingsObserver.unobserve();
     }
 
     @Override
@@ -125,51 +73,6 @@ public class NotificationBackgroundView extends View {
         }
     }
 
-    class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.NOTIFICATION_ALPHA), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PRECENTAGE_PREFERENCE_KEY), false, this);
-            update();
-        }
-
-        void unobserve() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.unregisterContentObserver(this);
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            update();
-        }
-
-        @Override
-        public void onChange(boolean selfChange, Uri uri) {
-            update();
-        }
-
-        public void update() {
-            ContentResolver resolver = mContext.getContentResolver();
-            mNotificationsAlpha = Settings.System.getIntForUser(resolver,
-                    Settings.System.NOTIFICATION_ALPHA, 255, UserHandle.USER_CURRENT);
-            mTranslucentNotifications = Settings.System.getIntForUser(resolver,
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mTranslucencyPercentage = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PRECENTAGE_PREFERENCE_KEY, 70);
-	    if(mTranslucentNotifications) {     
-            mTranslucencyPercentage = 255 - ((mTranslucencyPercentage * 255) / 100);
-	    }
-        }
-    }
-
     /**
      * Sets a background drawable. As we need to change our bounds independently of layout, we need
      * the notion of a background independently of the regular View background..
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationData.java b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationData.java
index 6f00284..c8c318b 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationData.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationData.java
@@ -17,7 +17,6 @@
 package com.android.systemui.statusbar;
 
 import android.app.Notification;
-import android.graphics.Bitmap;
 import android.os.SystemClock;
 import android.service.notification.NotificationListenerService;
 import android.service.notification.NotificationListenerService.Ranking;
@@ -45,13 +44,10 @@ public class NotificationData {
     public static final class Entry {
         private static final long LAUNCH_COOLDOWN = 2000;
         private static final long NOT_LAUNCHED_YET = -LAUNCH_COOLDOWN;
-        public Bitmap roundIcon;
         public String key;
         public StatusBarNotification notification;
         public StatusBarIconView icon;
-        public View haloContent;
         public ExpandableNotificationRow row; // the outer expanded view
-        public boolean hide = false;
         private boolean interruption;
         public boolean autoRedacted; // whether the redacted notification was generated by us
         public boolean legacy; // whether the notification has a legacy, dark background
@@ -68,10 +64,6 @@ public class NotificationData {
             interruption = true;
         }
 
-        public Bitmap getRoundIcon() {
-            return roundIcon;
-        }
-
         public boolean hasInterrupted() {
             return interruption;
         }
@@ -291,18 +283,6 @@ public class NotificationData {
     }
 
     /**
-     * Return whether there are any visible notifications (i.e. without an error).
-     */
-    public boolean hasActiveVisibleNotifications() {
-        for (Entry e : mSortedAndFiltered) {
-            if (e.getContentView() != null) { // the view successfully inflated
-                return true;
-            }
-        }
-        return false;
-    }
-
-    /**
      * Return whether there are any clearable notifications (that aren't errors).
      */
     public boolean hasActiveClearableNotifications() {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationGuts.java b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationGuts.java
index cd506b4..23912c4 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationGuts.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationGuts.java
@@ -19,8 +19,6 @@ package com.android.systemui.statusbar;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.drawable.Drawable;
-import android.graphics.PorterDuff.Mode;
-import android.provider.Settings;
 import android.util.AttributeSet;
 import android.widget.FrameLayout;
 import com.android.systemui.R;
@@ -33,7 +31,6 @@ public class NotificationGuts extends FrameLayout {
     protected Drawable mBackground;
     protected int mClipTopAmount;
     protected int mActualHeight;
-    public boolean MColorSwitch = false;
 
     public NotificationGuts(Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -59,7 +56,6 @@ public class NotificationGuts extends FrameLayout {
         if (mBackground != null) {
             mBackground.setCallback(this);
         }
-        updateBgColor();
     }
 
     @Override
@@ -105,18 +101,4 @@ public class NotificationGuts extends FrameLayout {
         // Prevents this view from creating a layer when alpha is animating.
         return false;
     }
-
-    public void updateBgColor() {
-	boolean MColorSwitch = false;
-        final int color = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.NOTIFICATION_GUTS_BG_COLOR, 0xff384248);
-	MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
-        if (mBackground != null) {
-		if (MColorSwitch){
-            mBackground.setColorFilter(color, Mode.SRC_ATOP);
-		}
-        }
-    }
-
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationOverflowIconsView.java b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationOverflowIconsView.java
index 7bf4d97..88bb714 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationOverflowIconsView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationOverflowIconsView.java
@@ -18,16 +18,12 @@ package com.android.systemui.statusbar;
 
 import android.app.Notification;
 import android.content.Context;
-import android.graphics.drawable.Drawable;
 import android.graphics.PorterDuff;
-import android.provider.Settings;
 import android.util.AttributeSet;
 import android.widget.ImageView;
 import android.widget.TextView;
 
-import com.android.internal.statusbar.StatusBarIcon;
 import com.android.internal.util.NotificationColorUtil;
-import com.android.internal.util.rr.NotificationColorHelper;
 import com.android.systemui.R;
 import com.android.systemui.statusbar.phone.IconMerger;
 
@@ -37,24 +33,21 @@ import com.android.systemui.statusbar.phone.IconMerger;
 public class NotificationOverflowIconsView extends IconMerger {
 
     private TextView mMoreText;
+    private int mTintColor;
     private int mIconSize;
-    private int mTintColor;	
     private NotificationColorUtil mNotificationColorUtil;
-    private boolean MColorSwitch = false;
-    public Context mContext;	
 
     public NotificationOverflowIconsView(Context context, AttributeSet attrs) {
         super(context, attrs);
-	mContext = context;
     }
 
     @Override
     protected void onFinishInflate() {
         super.onFinishInflate();
         mNotificationColorUtil = NotificationColorUtil.getInstance(getContext());
+        mTintColor = getContext().getColor(R.color.keyguard_overflow_content_color);
         mIconSize = getResources().getDimensionPixelSize(
                 com.android.internal.R.dimen.status_bar_icon_size);
-	mTintColor = getContext().getColor(R.color.keyguard_overflow_content_color);
     }
 
     public void setMoreText(TextView moreText) {
@@ -72,44 +65,11 @@ public class NotificationOverflowIconsView extends IconMerger {
     }
 
     private void applyColor(Notification notification, StatusBarIconView view) {
-		
-	MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
-	if(MColorSwitch){
-        StatusBarIcon sbi = view.getStatusBarIcon();
-        Drawable icon = StatusBarIconView.getIcon(getContext(), sbi);
-        final int tintColor = NotificationColorHelper.getIconColor(getContext(), icon);
-        	if (tintColor != 0) {
-            view.setColorFilter(tintColor, PorterDuff.Mode.MULTIPLY);
-        	} else 	{
-            	view.setColorFilter(null);
-        	}
-	} else {
-		view.setColorFilter(mTintColor, PorterDuff.Mode.MULTIPLY);
-		}
+        view.setColorFilter(mTintColor, PorterDuff.Mode.MULTIPLY);
     }
 
-    private void updateMoreText() {	
-        final int textColor = NotificationColorHelper.getCustomIconColor(getContext());
-        final int bgColor = NotificationColorHelper.getLegacyBgColor(getContext(), 0);
-        final int bgAlpha = NotificationColorHelper.getLegacyBgAlpha(getContext(), 0);
-	MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
-	if(MColorSwitch){
-	        mMoreText.setText(
+    private void updateMoreText() {
+        mMoreText.setText(
                 getResources().getString(R.string.keyguard_more_overflow_text, getChildCount()));
-        mMoreText.setTextColor(textColor);
-        if (mMoreText.getBackground() != null) {
-            if (bgColor == Notification.COLOR_DEFAULT) {
-                mMoreText.getBackground().setColorFilter(null);
-            } else {
-                mMoreText.getBackground().setColorFilter(bgColor, PorterDuff.Mode.SRC_ATOP);
-
-            }
-            mMoreText.getBackground().setAlpha(bgAlpha);
-        	}
-	} else	{  mMoreText.setText(
-                getResources().getString(R.string.keyguard_more_overflow_text, getChildCount())); }
-	
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationViewWrapper.java b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationViewWrapper.java
index b7af803..b362a29 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationViewWrapper.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationViewWrapper.java
@@ -18,7 +18,6 @@ package com.android.systemui.statusbar;
 
 import android.content.Context;
 import android.view.View;
-import android.provider.Settings;
 
 /**
  * Wraps the actual notification content view; used to implement behaviors which are different for
@@ -29,12 +28,11 @@ public abstract class NotificationViewWrapper {
     private static final String TAG_BIG_MEDIA_NARROW = "bigMediaNarrow";
     private static final String TAG_MEDIA = "media";
     private static final String TAG_BIG_PICTURE = "bigPicture";
+
     protected final View mView;
-    private boolean MColorSwitch = false; 
-	
 
-    public static NotificationViewWrapper wrap(Context ctx, View v) {	
-	if (v.getId() == com.android.internal.R.id.status_bar_latest_event_content) {
+    public static NotificationViewWrapper wrap(Context ctx, View v) {
+        if (v.getId() == com.android.internal.R.id.status_bar_latest_event_content) {
             if (TAG_BIG_MEDIA_NARROW.equals(v.getTag())) {
                 return new NotificationBigMediaNarrowViewWrapper(ctx, v);
             } else if (TAG_MEDIA.equals(v.getTag())) {
@@ -46,9 +44,9 @@ public abstract class NotificationViewWrapper {
             }
         } else {
             return new NotificationCustomViewWrapper(v);
-        		}
-		}
-	
+        }
+    }
+
     protected NotificationViewWrapper(View view) {
         mView = view;
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java b/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java
index 0c2b94a..ecaa809 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java
@@ -41,8 +41,6 @@ import com.android.systemui.statusbar.policy.SecurityController;
 import com.android.systemui.tuner.TunerService;
 import com.android.systemui.tuner.TunerService.Tunable;
 
-import android.provider.Settings;
-
 import java.util.ArrayList;
 import java.util.List;
 
@@ -59,7 +57,6 @@ public class SignalClusterView
     private static final String SLOT_MOBILE = "mobile";
     private static final String SLOT_WIFI = "wifi";
     private static final String SLOT_ETHERNET = "ethernet";
-    private static final String SLOT_VPN = "vpn";
 
     NetworkControllerImpl mNC;
     SecurityController mSC;
@@ -80,11 +77,7 @@ public class SignalClusterView
     private String mEthernetDescription;
     private ArrayList<PhoneState> mPhoneStates = new ArrayList<PhoneState>();
     private int mIconTint = Color.WHITE;
-    private int mNetworkSignalTint = Color.WHITE;
-    private int mNoSimTint = Color.WHITE;
-    private int mAirplaneModeTint = Color.WHITE;
     private float mDarkIntensity;
-    public boolean mColorSwitch = false ;
 
     ViewGroup mEthernetGroup, mWifiGroup;
     View mNoSimsCombo;
@@ -96,12 +89,10 @@ public class SignalClusterView
     private int mWideTypeIconStartPadding;
     private int mSecondaryTelephonyPadding;
 
-    private boolean mIgnoreSystemUITuner = false;
     private boolean mBlockAirplane;
     private boolean mBlockMobile;
     private boolean mBlockWifi;
     private boolean mBlockEthernet;
-    private boolean mBlockVpn;
 
     public SignalClusterView(Context context) {
         this(context, null);
@@ -125,15 +116,13 @@ public class SignalClusterView
         boolean blockMobile = blockList.contains(SLOT_MOBILE);
         boolean blockWifi = blockList.contains(SLOT_WIFI);
         boolean blockEthernet = blockList.contains(SLOT_ETHERNET);
-        boolean blockVpn = blockList.contains(SLOT_VPN);
 
         if (blockAirplane != mBlockAirplane || blockMobile != mBlockMobile
-                || blockEthernet != mBlockEthernet || blockWifi != mBlockWifi || blockVpn != mBlockVpn) {
+                || blockEthernet != mBlockEthernet || blockWifi != mBlockWifi) {
             mBlockAirplane = blockAirplane;
             mBlockMobile = blockMobile;
             mBlockEthernet = blockEthernet;
             mBlockWifi = blockWifi;
-            mBlockVpn = blockVpn;
             // Re-register to get new callbacks.
             mNC.removeSignalCallback(this);
             mNC.addSignalCallback(this);
@@ -187,7 +176,7 @@ public class SignalClusterView
         for (PhoneState state : mPhoneStates) {
             mMobileSignalGroup.addView(state.mMobileGroup);
         }
-            TunerService.get(mContext).addTunable(this, StatusBarIconController.ICON_BLACKLIST);
+        TunerService.get(mContext).addTunable(this, StatusBarIconController.ICON_BLACKLIST);
 
         apply();
         applyIconTint();
@@ -215,7 +204,7 @@ public class SignalClusterView
             @Override
             public void run() {
                 if (mSC != null) {
-                    mVpnVisible = mSC.isVpnEnabled() && !mBlockVpn;
+                    mVpnVisible = mSC.isVpnEnabled();
                     apply();
                 }
             }
@@ -465,81 +454,23 @@ public class SignalClusterView
         mNoSimsCombo.setVisibility(mNoSimsVisible ? View.VISIBLE : View.GONE);
     }
 
-    public void setIconTint(int signalTint, int noSimTint, int airplaneModeTint, float darkIntensity) {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-        mNetworkSignalTint = signalTint;
-        mNoSimTint = noSimTint;
-        mAirplaneModeTint = airplaneModeTint;
+    public void setIconTint(int tint, float darkIntensity) {
+        boolean changed = tint != mIconTint || darkIntensity != mDarkIntensity;
+        mIconTint = tint;
         mDarkIntensity = darkIntensity;
-        if (isAttachedToWindow()) {
+        if (changed && isAttachedToWindow()) {
             applyIconTint();
         }
     }
 
-    public void setIconStockTint (int tint, float darkIntensity) {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	boolean changed = tint != mIconTint || darkIntensity != mDarkIntensity;
-        mIconTint = tint;
-	mDarkIntensity = darkIntensity;
-	 if (changed && isAttachedToWindow()) {
-	 applyIconTint();
-	}
-    }
-	
-
-    public void applyNetworkSignalTint(int tint) {
-        mNetworkSignalTint = tint;
-        if (isAttachedToWindow()) {
-            setTint(mVpn, tint);
-            setTint(mWifi, tint);
-            setTint(mEthernet, tint);
-            for (int i = 0; i < mPhoneStates.size(); i++) {
-                mPhoneStates.get(i).setIconTint(tint, 0f);
-            }
-        }
-    }
-
-    public void applyNoSimTint(int tint) {
-        mNoSimTint = tint;
-        if (isAttachedToWindow()) {
-            setTint(mNoSims, mNoSimTint);
-        }
-    }
-
-    public void applyAirplaneModeTint(int tint) {
-        mAirplaneModeTint = tint;
-        if (isAttachedToWindow()) {
-            setTint(mAirplane, mAirplaneModeTint);
-        }
-    }
-
     private void applyIconTint() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if (mColorSwitch) {
-        setTint(mVpn, mNetworkSignalTint);
-        setTint(mNoSims, mNoSimTint);
-        setTint(mNoSimsDark, mNoSimTint);
-        setTint(mWifi, mNetworkSignalTint);
-        setTint(mWifiDark, mNetworkSignalTint);
-        setTint(mEthernet, mNetworkSignalTint);
-        setTint(mEthernetDark, mNetworkSignalTint);
-        setTint(mAirplane, mAirplaneModeTint);
-	} else {
-	setTint(mVpn, mIconTint);
+        setTint(mVpn, mIconTint);
         setTint(mAirplane, mIconTint);
-	}
         applyDarkIntensity(mDarkIntensity, mNoSims, mNoSimsDark);
         applyDarkIntensity(mDarkIntensity, mWifi, mWifiDark);
         applyDarkIntensity(mDarkIntensity, mEthernet, mEthernetDark);
         for (int i = 0; i < mPhoneStates.size(); i++) {
-	    if (mColorSwitch) {
-            mPhoneStates.get(i).setIconTint(mNetworkSignalTint, mDarkIntensity);  
-	    } else {
-	    mPhoneStates.get(i).setIconTint(mIconTint, mDarkIntensity);
-	   }
+            mPhoneStates.get(i).setIconTint(mIconTint, mDarkIntensity);
         }
     }
 
@@ -552,30 +483,6 @@ public class SignalClusterView
         v.setImageTintList(ColorStateList.valueOf(tint));
     }
 
-    public void setIgnoreSystemUITuner(boolean ignore) {
-        if (mIgnoreSystemUITuner == ignore) {
-            return;
-        }
-
-        mIgnoreSystemUITuner = ignore;
-        if (mIgnoreSystemUITuner) {
-            TunerService.get(mContext).removeTunable(this);
-            mBlockAirplane = false;
-            mBlockMobile = false;
-            mBlockEthernet = false;
-            mBlockWifi = false;
-        }
-        if (isAttachedToWindow()) {
-            if (mIgnoreSystemUITuner) {
-                // Re-register to get new callbacks.
-                mNC.removeSignalCallback(this);
-                mNC.addSignalCallback(this);
-            } else {
-                TunerService.get(mContext).addTunable(this, StatusBarIconController.ICON_BLACKLIST);
-            }
-        }
-    }
-
     private class PhoneState {
         private final int mSubId;
         private boolean mMobileVisible = false;
@@ -675,19 +582,9 @@ public class SignalClusterView
         }
 
         public void setIconTint(int tint, float darkIntensity) {
-	    mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
             applyDarkIntensity(darkIntensity, mMobile, mMobileDark);
-	    if (mColorSwitch) {
-            setTint(mMobile, tint);
-            setTint(mMobileDark, tint);
             setTint(mMobileType, tint);
             setTint(mMobileRoaming, tint);
-
-	    } else {
-	    setTint(mMobileType, tint);
-	   }
-	   
         }
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/SpeedBumpView.java b/packages/SystemUI/src/com/android/systemui/statusbar/SpeedBumpView.java
index 864ffe2..1fc8744 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/SpeedBumpView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/SpeedBumpView.java
@@ -17,16 +17,9 @@
 package com.android.systemui.statusbar;
 
 import android.content.Context;
-import android.database.ContentObserver;
-import android.os.Handler;
-import android.provider.Settings;
 import android.util.AttributeSet;
 import android.view.animation.AnimationUtils;
 import android.view.animation.Interpolator;
-
-import com.android.internal.util.rr.ColorHelper;
-import com.android.internal.util.rr.NotificationColorHelper;
-
 import com.android.systemui.R;
 
 /**
@@ -38,32 +31,6 @@ public class SpeedBumpView extends ExpandableView {
     private AlphaOptimizedView mLine;
     private boolean mIsVisible = true;
     private final Interpolator mFastOutSlowInInterpolator;
-    private boolean MColorSwitch = false;	
-
-    private SettingsObserver mSettingsObserver;
-
-    class SettingsObserver extends ContentObserver {
-	private boolean mColorSwitch = false;
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            mContext.getContentResolver().registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.NOTIFICATION_BG_COLOR),
-                    false, this);
-        }
-
-        void unobserve() {
-            mContext.getContentResolver().unregisterContentObserver(this);
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            updateDividerColor();
-        }
-
-    }
 
     public SpeedBumpView(Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -71,30 +38,12 @@ public class SpeedBumpView extends ExpandableView {
                 .getDimensionPixelSize(R.dimen.speed_bump_height);
         mFastOutSlowInInterpolator = AnimationUtils.loadInterpolator(getContext(),
                 android.R.interpolator.fast_out_slow_in);
-        mSettingsObserver = new SettingsObserver(getHandler());
-    }
-
-    @Override
-    protected void onAttachedToWindow() {
-        super.onAttachedToWindow();
-        mSettingsObserver.observe();
-    }
-
-    @Override
-    protected void onDetachedFromWindow() {
-        super.onDetachedFromWindow();
-        mSettingsObserver.unobserve();
     }
 
     @Override
     protected void onFinishInflate() {
-	MColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.NOTIF_COLOR_SWITCH, 0) == 1;
         super.onFinishInflate();
         mLine = (AlphaOptimizedView) findViewById(R.id.speedbump_line);
-	if (MColorSwitch) {
-        updateDividerColor();
-	}
     }
 
     @Override
@@ -177,10 +126,4 @@ public class SpeedBumpView extends ExpandableView {
         // TODO: Use duration
         performVisibilityAnimation(true, delay);
     }
-
-    private void updateDividerColor() {
-        if (mLine != null) {
-            mLine.setBackgroundColor(NotificationColorHelper.getdividerColor(mContext));
-        }
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java
index a5fa8b0..4371cce 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarIconView.java
@@ -33,7 +33,6 @@ import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.util.Log;
 import android.view.ViewDebug;
-import android.view.View;
 import android.view.accessibility.AccessibilityEvent;
 import android.widget.ImageView;
 
@@ -179,7 +178,7 @@ public class StatusBarIconView extends AnimatedImageView {
             invalidate();
         }
         if (!visibilityEquals || force) {
-            setVisibility(icon.visible && !mBlocked ? View.VISIBLE : View.GONE);
+            setVisibility(icon.visible && !mBlocked ? VISIBLE : GONE);
         }
         return true;
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/ActivityStarter.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/ActivityStarter.java
index 72ade0e..8f689c6 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/ActivityStarter.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/ActivityStarter.java
@@ -29,7 +29,6 @@ public interface ActivityStarter {
     void startActivity(Intent intent, boolean dismissShade);
     void startActivity(Intent intent, boolean dismissShade, Callback callback);
     void preventNextAnimation();
-    void startAction(boolean dismissShade);
 
     interface Callback {
         void onActivityStarted(int resultCode);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java
new file mode 100644
index 0000000..093d18c
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java
@@ -0,0 +1,289 @@
+/*
+ * Copyright (C) 2013 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.statusbar.phone;
+
+import android.animation.TimeInterpolator;
+import android.app.ActivityManager;
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.ColorFilter;
+import android.graphics.PixelFormat;
+import android.graphics.Rect;
+import android.graphics.drawable.Drawable;
+import android.os.SystemClock;
+import android.util.Log;
+import android.view.View;
+import android.view.animation.LinearInterpolator;
+
+import com.android.systemui.R;
+
+public class BarTransitions {
+    private static final boolean DEBUG = false;
+    private static final boolean DEBUG_COLORS = false;
+
+    public static final boolean HIGH_END = ActivityManager.isHighEndGfx();
+
+    public static final int MODE_OPAQUE = 0;
+    public static final int MODE_SEMI_TRANSPARENT = 1;
+    public static final int MODE_TRANSLUCENT = 2;
+    public static final int MODE_LIGHTS_OUT = 3;
+    public static final int MODE_TRANSPARENT = 4;
+    public static final int MODE_WARNING = 5;
+    public static final int MODE_LIGHTS_OUT_TRANSPARENT = 6;
+
+    public static final int LIGHTS_IN_DURATION = 250;
+    public static final int LIGHTS_OUT_DURATION = 750;
+    public static final int BACKGROUND_DURATION = 200;
+
+    private final String mTag;
+    private final View mView;
+    private final BarBackgroundDrawable mBarBackground;
+
+    private int mMode;
+
+    public BarTransitions(View view, int gradientResourceId, int opaqueColorResourceId,
+            int semiTransparentColorResourceId, int transparentColorResourceId,
+            int warningColorResourceId) {
+        mTag = "BarTransitions." + view.getClass().getSimpleName();
+        mView = view;
+        mBarBackground = new BarBackgroundDrawable(mView.getContext(), gradientResourceId,
+                opaqueColorResourceId, semiTransparentColorResourceId,
+                transparentColorResourceId, warningColorResourceId);
+        if (HIGH_END) {
+            mView.setBackground(mBarBackground);
+        }
+    }
+
+    protected void setGradientResourceId(int gradientResourceId) {
+        mBarBackground.setGradientResourceId(mView.getContext().getResources(),
+                gradientResourceId);
+    }
+
+    public void updateResources(Resources res) {
+        mBarBackground.updateResources(res);
+    }
+
+    public int getMode() {
+        return mMode;
+    }
+
+    public void transitionTo(int mode, boolean animate) {
+        // low-end devices do not support translucent modes, fallback to opaque
+        if (!HIGH_END && (mode == MODE_SEMI_TRANSPARENT || mode == MODE_TRANSLUCENT
+                || mode == MODE_TRANSPARENT)) {
+            mode = MODE_OPAQUE;
+        }
+        if (!HIGH_END && (mode == MODE_LIGHTS_OUT_TRANSPARENT)) {
+            mode = MODE_LIGHTS_OUT;
+        }
+        if (mMode == mode) return;
+        int oldMode = mMode;
+        mMode = mode;
+        if (DEBUG) Log.d(mTag, String.format("%s -> %s animate=%s",
+                modeToString(oldMode), modeToString(mode),  animate));
+        onTransition(oldMode, mMode, animate);
+    }
+
+    protected void onTransition(int oldMode, int newMode, boolean animate) {
+        if (HIGH_END) {
+            applyModeBackground(oldMode, newMode, animate);
+        }
+    }
+
+    protected void applyModeBackground(int oldMode, int newMode, boolean animate) {
+        if (DEBUG) Log.d(mTag, String.format("applyModeBackground oldMode=%s newMode=%s animate=%s",
+                modeToString(oldMode), modeToString(newMode), animate));
+        mBarBackground.applyModeBackground(oldMode, newMode, animate);
+    }
+
+    public static String modeToString(int mode) {
+        if (mode == MODE_OPAQUE) return "MODE_OPAQUE";
+        if (mode == MODE_SEMI_TRANSPARENT) return "MODE_SEMI_TRANSPARENT";
+        if (mode == MODE_TRANSLUCENT) return "MODE_TRANSLUCENT";
+        if (mode == MODE_LIGHTS_OUT) return "MODE_LIGHTS_OUT";
+        if (mode == MODE_TRANSPARENT) return "MODE_TRANSPARENT";
+        if (mode == MODE_WARNING) return "MODE_WARNING";
+        if (mode == MODE_LIGHTS_OUT_TRANSPARENT) return "MODE_LIGHTS_OUT_TRANSPARENT";
+        throw new IllegalArgumentException("Unknown mode " + mode);
+    }
+
+    public void finishAnimations() {
+        mBarBackground.finishAnimation();
+    }
+
+    protected boolean isLightsOut(int mode) {
+        return mode == MODE_LIGHTS_OUT || mode == MODE_LIGHTS_OUT_TRANSPARENT;
+    }
+
+    private static class BarBackgroundDrawable extends Drawable {
+        private int mOpaque;
+        private int mSemiTransparent;
+        private int mTransparent;
+        private int mWarning;
+        private Drawable mGradient;
+        private final TimeInterpolator mInterpolator;
+
+        private int mMode = -1;
+        private boolean mAnimating;
+        private long mStartTime;
+        private long mEndTime;
+
+        private int mGradientAlpha;
+        private int mColor;
+
+        private int mGradientAlphaStart;
+        private int mColorStart;
+
+        private int mGradientResourceId;
+        private final int mOpaqueColorResourceId;
+        private final int mSemiTransparentColorResourceId;
+        private final int mTransparentColorResourceId;
+        private final int mWarningColorResourceId;
+
+        public BarBackgroundDrawable(Context context, int gradientResourceId,
+                int opaqueColorResourceId, int semiTransparentColorResourceId,
+                int transparentColorResourceId, int warningColorResourceId) {
+            final Resources res = context.getResources();
+            if (DEBUG_COLORS) {
+                mOpaque = 0xff0000ff;
+                mSemiTransparent = 0x7f0000ff;
+                mTransparent = 0x2f0000ff;
+                mWarning = 0xffff0000;
+            } else {
+                mOpaque = res.getColor(R.color.system_bar_background_opaque);
+                mSemiTransparent = res.getColor(R.color.system_bar_background_semi_transparent);
+                mTransparent = res.getColor(transparentColorResourceId);
+                mWarning = res.getColor(warningColorResourceId);
+            }
+            mGradient = context.getDrawable(gradientResourceId);
+            mInterpolator = new LinearInterpolator();
+            mGradientResourceId = gradientResourceId;
+            mOpaqueColorResourceId = opaqueColorResourceId;
+            mSemiTransparentColorResourceId = semiTransparentColorResourceId;
+            mTransparentColorResourceId = transparentColorResourceId;
+            mWarningColorResourceId = warningColorResourceId;
+        }
+
+        public void setGradientResourceId(Resources res, int gradientResourceId) {
+            mGradient = res.getDrawable(gradientResourceId);
+            mGradientResourceId = gradientResourceId;
+        }
+
+        public void updateResources(Resources res)  {
+            mOpaque = res.getColor(mOpaqueColorResourceId);
+            mSemiTransparent = res.getColor(mSemiTransparentColorResourceId);
+            mTransparent = res.getColor(mTransparentColorResourceId);
+            mWarning = res.getColor(mWarningColorResourceId);
+            // Retrieve the current bounds for mGradient so they can be set to
+            // the new drawable being loaded, otherwise the bounds will be (0, 0, 0, 0)
+            // and the gradient will not be drawn.
+            Rect bounds = mGradient.getBounds();
+            mGradient = res.getDrawable(mGradientResourceId);
+            mGradient.setBounds(bounds);
+        }
+
+        @Override
+        public void setAlpha(int alpha) {
+            // noop
+        }
+
+        @Override
+        public void setColorFilter(ColorFilter colorFilter) {
+            // noop
+        }
+
+        @Override
+        protected void onBoundsChange(Rect bounds) {
+            super.onBoundsChange(bounds);
+            mGradient.setBounds(bounds);
+        }
+
+        public void applyModeBackground(int oldMode, int newMode, boolean animate) {
+            if (mMode == newMode) return;
+            mMode = newMode;
+            mAnimating = animate;
+            if (animate) {
+                long now = SystemClock.elapsedRealtime();
+                mStartTime = now;
+                mEndTime = now + BACKGROUND_DURATION;
+                mGradientAlphaStart = mGradientAlpha;
+                mColorStart = mColor;
+            }
+            invalidateSelf();
+        }
+
+        @Override
+        public int getOpacity() {
+            return PixelFormat.TRANSLUCENT;
+        }
+
+        public void finishAnimation() {
+            if (mAnimating) {
+                mAnimating = false;
+                invalidateSelf();
+            }
+        }
+
+        @Override
+        public void draw(Canvas canvas) {
+            int targetGradientAlpha = 0, targetColor = 0;
+            if (mMode == MODE_WARNING) {
+                targetColor = mWarning;
+            } else if (mMode == MODE_TRANSLUCENT) {
+                targetColor = mSemiTransparent;
+            } else if (mMode == MODE_SEMI_TRANSPARENT) {
+                targetColor = mSemiTransparent;
+            } else if (mMode == MODE_TRANSPARENT || mMode == MODE_LIGHTS_OUT_TRANSPARENT) {
+                targetColor = mTransparent;
+            } else {
+                targetColor = mOpaque;
+            }
+            if (!mAnimating) {
+                mColor = targetColor;
+                mGradientAlpha = targetGradientAlpha;
+            } else {
+                final long now = SystemClock.elapsedRealtime();
+                if (now >= mEndTime) {
+                    mAnimating = false;
+                    mColor = targetColor;
+                    mGradientAlpha = targetGradientAlpha;
+                } else {
+                    final float t = (now - mStartTime) / (float)(mEndTime - mStartTime);
+                    final float v = Math.max(0, Math.min(mInterpolator.getInterpolation(t), 1));
+                    mGradientAlpha = (int)(v * targetGradientAlpha + mGradientAlphaStart * (1 - v));
+                    mColor = Color.argb(
+                          (int)(v * Color.alpha(targetColor) + Color.alpha(mColorStart) * (1 - v)),
+                          (int)(v * Color.red(targetColor) + Color.red(mColorStart) * (1 - v)),
+                          (int)(v * Color.green(targetColor) + Color.green(mColorStart) * (1 - v)),
+                          (int)(v * Color.blue(targetColor) + Color.blue(mColorStart) * (1 - v)));
+                }
+            }
+            if (mGradientAlpha > 0) {
+                mGradient.setAlpha(mGradientAlpha);
+                mGradient.draw(canvas);
+            }
+            if (Color.alpha(mColor) > 0) {
+                canvas.drawColor(mColor);
+            }
+            if (mAnimating) {
+                invalidateSelf();  // keep going
+            }
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/ClockController.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/ClockController.java
index 2469173..84eeb31 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/ClockController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/ClockController.java
@@ -103,7 +103,8 @@ public class ClockController {
         mActiveClock.setAmPmStyle(mAmPmStyle);
 
         setClockAndDateStatus();
-	setTextColor(mIconTint);
+        setTextColor(mIconTint);
+        updateFontSize();
     }
 
     private void updateSettings() {
@@ -134,9 +135,15 @@ public class ClockController {
         if (mActiveClock != null) {
             mActiveClock.setTextColor(iconTint);
         }
-}
-    
+    }
+
+    public void updateFontSize() {
+        if (mActiveClock != null) {
+            FontSizeUtils.updateFontSize(mActiveClock, R.dimen.status_bar_clock_size);
+        }
+    }
+
     public void cleanup() {
         mSettingsObserver.unobserve();
     }
-}
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeParameters.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeParameters.java
index b617061..9897098 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeParameters.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeParameters.java
@@ -138,14 +138,6 @@ public class DozeParameters {
         return sPulseSchedule;
     }
 
-    public PulseSchedule getAlternatePulseSchedule() {
-        final String spec = getString("doze.pulse.schedule", R.string.doze_pulse_schedule_alternate);
-        if (sPulseSchedule == null || !sPulseSchedule.mSpec.equals(spec)) {
-            sPulseSchedule = PulseSchedule.parse(spec);
-        }
-        return sPulseSchedule;
-    }
-
     public int getPulseScheduleResets() {
         return getInt("doze.pulse.schedule.resets", R.integer.doze_pulse_schedule_resets);
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeScrimController.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeScrimController.java
index 26d73f4..b3e0104 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeScrimController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/DozeScrimController.java
@@ -20,12 +20,8 @@ import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.animation.ValueAnimator;
 import android.annotation.NonNull;
-import android.content.ContentResolver;
 import android.content.Context;
-import android.database.ContentObserver;
 import android.os.Handler;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.Log;
 import android.view.animation.AnimationUtils;
 import android.view.animation.Interpolator;
@@ -47,7 +43,6 @@ public class DozeScrimController {
     private final Interpolator mDozeAnimationInterpolator;
     private final Handler mHandler = new Handler();
     private final ScrimController mScrimController;
-    private Context mContext;
 
     private boolean mDozing;
     private DozeHost.PulseCallback mPulseCallback;
@@ -56,18 +51,12 @@ public class DozeScrimController {
     private Animator mBehindAnimator;
     private float mInFrontTarget;
     private float mBehindTarget;
-    private int mCustomTimeoutDelay = 3000;
 
     public DozeScrimController(ScrimController scrimController, Context context) {
         mScrimController = scrimController;
-        mContext = context;
         mDozeParameters = new DozeParameters(context);
         mDozeAnimationInterpolator = mPulseInInterpolatorPickup =
                 AnimationUtils.loadInterpolator(context, android.R.interpolator.linear_out_slow_in);
-
-        // Settings observer
-        SettingsObserver observer = new SettingsObserver(mHandler);
-        observer.observe();
     }
 
     public void setDozing(boolean dozing, boolean animate) {
@@ -267,7 +256,7 @@ public class DozeScrimController {
         public void run() {
             if (DEBUG) Log.d(TAG, "Pulse in finished, mDozing=" + mDozing);
             if (!mDozing) return;
-            mHandler.postDelayed(mPulseOut, mCustomTimeoutDelay);
+            mHandler.postDelayed(mPulseOut, mDozeParameters.getPulseVisibleDuration());
         }
     };
 
@@ -291,36 +280,4 @@ public class DozeScrimController {
             pulseFinished();
         }
     };
-
-    /**
-     * Settingsobserver to take care of the user settings.
-     */
-    private class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOZE_TIMEOUT),
-                    false, this, UserHandle.USER_ALL);
-            update();
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            super.onChange(selfChange);
-            update();
-        }
-
-        public void update() {
-            ContentResolver resolver = mContext.getContentResolver();
-
-            // Get custom timeout
-            mCustomTimeoutDelay = Settings.System.getIntForUser(resolver,
-                    Settings.System.DOZE_TIMEOUT, 3000,
-                    UserHandle.USER_CURRENT);
-        }
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/IconMerger.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/IconMerger.java
index 7cfbbc5..5750372 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/IconMerger.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/IconMerger.java
@@ -71,7 +71,7 @@ public class IconMerger extends LinearLayout {
         final int N = getChildCount();
         int visibleChildren = 0;
         for (int i=0; i<N; i++) {
-            if (getChildAt(i).getVisibility() != View.GONE) visibleChildren++;
+            if (getChildAt(i).getVisibility() != GONE) visibleChildren++;
         }
         final boolean overflowShown = (mMoreView.getVisibility() == View.VISIBLE);
         // let's assume we have one more slot if the more icon is already showing
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java
index 7e39e5a..b244e26 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java
@@ -18,14 +18,10 @@ package com.android.systemui.statusbar.phone;
 
 import android.app.ActivityManager;
 import android.app.ActivityManagerNative;
-import android.content.ContentResolver;
-import android.content.ContentResolver;
 import android.app.admin.DevicePolicyManager;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
 import android.content.Context;
-import android.graphics.PorterDuff.Mode;
-import android.provider.Settings;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.ServiceConnection;
@@ -198,26 +194,14 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
 
     public KeyguardBottomAreaView(Context context) {
         this(context, null);
-        updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
     }
 
     public KeyguardBottomAreaView(Context context, AttributeSet attrs) {
         this(context, attrs, 0);
-		updateCameraIconColor();
-		updatePhoneIconColor();
-		updateLockIconColor();
-		updateIndicationTextColor();
     }
 
     public KeyguardBottomAreaView(Context context, AttributeSet attrs, int defStyleAttr) {
         this(context, attrs, defStyleAttr, 0);
-		updateCameraIconColor();
-		updatePhoneIconColor();
-		updateLockIconColor();
-		updateIndicationTextColor();
     }
 
     public KeyguardBottomAreaView(Context context, AttributeSet attrs, int defStyleAttr,
@@ -225,14 +209,11 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         super(context, attrs, defStyleAttr, defStyleRes);
         mLinearOutSlowInInterpolator =
                 AnimationUtils.loadInterpolator(context, android.R.interpolator.linear_out_slow_in);
-		updateCameraIconColor();
-		updatePhoneIconColor();
-		updateLockIconColor();
-		updateIndicationTextColor();
-		ColorMatrix cm = new ColorMatrix();
-		cm.setSaturation(0);
-		mGrayScaleFilter = new ColorMatrixColorFilter(cm);
+        ColorMatrix cm = new ColorMatrix();
+        cm.setSaturation(0);
+        mGrayScaleFilter = new ColorMatrixColorFilter(cm);
         mWindowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
+
         mWindowLayoutParams = new WindowManager.LayoutParams();
         mWindowLayoutParams.type = WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL;
         mWindowLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL |
@@ -296,42 +277,34 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     @Override
     protected void onFinishInflate() {
         super.onFinishInflate();
-		mLockPatternUtils = new LockPatternUtils(mContext);
-		mPreviewContainer = (ViewGroup) findViewById(R.id.preview_container);
-		mCameraImageView = (KeyguardAffordanceView) findViewById(R.id.camera_button);
-		mLeftAffordanceView = (KeyguardAffordanceView) findViewById(R.id.left_button);
-		mLockIcon = (LockIcon) findViewById(R.id.lock_icon);
-		mIndicationText = (TextView) findViewById(R.id.keyguard_indication_text);
-		mShortcutHelper = new LockscreenShortcutsHelper(mContext, this);
-		watchForCameraPolicyChanges();
-		updateCameraVisibility();
-		updateLeftButtonVisibility();
-		mUnlockMethodCache = UnlockMethodCache.getInstance(getContext());
-		mUnlockMethodCache.addListener(this);
-		updateCameraIconColor();
-		updatePhoneIconColor();
-		updateLockIconColor();
-		updateIndicationTextColor();
-		mLockIcon.update();
-		setClipChildren(false);
-		setClipToPadding(false);
-		mPreviewInflater = new PreviewInflater(mContext, new LockPatternUtils(mContext));
-		mLockIcon.setOnClickListener(this);
-		mLockIcon.setOnLongClickListener(this);
-		mCameraImageView.setOnClickListener(this);
-		mLeftAffordanceView.setOnClickListener(this);
-		initAccessibility();
-		updateCustomShortcuts();
+        mLockPatternUtils = new LockPatternUtils(mContext);
+        mPreviewContainer = (ViewGroup) findViewById(R.id.preview_container);
+        mCameraImageView = (KeyguardAffordanceView) findViewById(R.id.camera_button);
+        mLeftAffordanceView = (KeyguardAffordanceView) findViewById(R.id.left_button);
+        mLockIcon = (LockIcon) findViewById(R.id.lock_icon);
+        mIndicationText = (TextView) findViewById(R.id.keyguard_indication_text);
+        mShortcutHelper = new LockscreenShortcutsHelper(mContext, this);
+        watchForCameraPolicyChanges();
+        updateCameraVisibility();
+        updateLeftButtonVisibility();
+        mUnlockMethodCache = UnlockMethodCache.getInstance(getContext());
+        mUnlockMethodCache.addListener(this);
+        mLockIcon.update();
+        setClipChildren(false);
+        setClipToPadding(false);
+        mPreviewInflater = new PreviewInflater(mContext, new LockPatternUtils(mContext));
+        mLockIcon.setOnClickListener(this);
+        mLockIcon.setOnLongClickListener(this);
+        mCameraImageView.setOnClickListener(this);
+        mLeftAffordanceView.setOnClickListener(this);
+        initAccessibility();
+        updateCustomShortcuts();
     }
 
     private void updateCustomShortcuts() {
         updateLeftAffordanceIcon();
         updateRightAffordanceIcon();
         inflateCameraPreview();
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
     }
 
     private void updateRightAffordanceIcon() {
@@ -354,13 +327,9 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     }
 
     private void initAccessibility() {
-			mLockIcon.setAccessibilityDelegate(mAccessibilityDelegate);
-			mLeftAffordanceView.setAccessibilityDelegate(mAccessibilityDelegate);
-			mCameraImageView.setAccessibilityDelegate(mAccessibilityDelegate);
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();
+        mLockIcon.setAccessibilityDelegate(mAccessibilityDelegate);
+        mLeftAffordanceView.setAccessibilityDelegate(mAccessibilityDelegate);
+        mCameraImageView.setAccessibilityDelegate(mAccessibilityDelegate);
     }
 
     @Override
@@ -378,18 +347,10 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mIndicationText.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                 getResources().getDimensionPixelSize(
                         com.android.internal.R.dimen.text_size_small_material));
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
     }
 
     public void setActivityStarter(ActivityStarter activityStarter) {
-			mActivityStarter = activityStarter;
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();
+        mActivityStarter = activityStarter;
     }
 
     public void setFlashlightController(FlashlightController flashlightController) {
@@ -400,19 +361,11 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mAccessibilityController = accessibilityController;
         mLockIcon.setAccessibilityController(accessibilityController);
         accessibilityController.addStateChangedCallback(this);
-        updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
     }
 
     public void setPhoneStatusBar(PhoneStatusBar phoneStatusBar) {
         mPhoneStatusBar = phoneStatusBar;
         updateCameraVisibility(); // in case onFinishInflate() was called too early
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
         updateLeftButtonVisibility();
     }
 
@@ -428,11 +381,7 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         boolean canSkipBouncer = updateMonitor.getUserCanSkipBouncer(
                 KeyguardUpdateMonitor.getCurrentUser());
         boolean secure = mLockPatternUtils.isSecure(KeyguardUpdateMonitor.getCurrentUser());
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
-	return (secure && !canSkipBouncer) ? SECURE_CAMERA_INTENT : INSECURE_CAMERA_INTENT;
+        return (secure && !canSkipBouncer) ? SECURE_CAMERA_INTENT : INSECURE_CAMERA_INTENT;
     }
 
     /**
@@ -468,10 +417,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         if (visible) {
             if (isTargetCustom(Shortcuts.RIGHT_SHORTCUT)) {
                 visible = !mShortcutHelper.isTargetEmpty(Shortcuts.RIGHT_SHORTCUT);
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
             } else {
                 ResolveInfo resolved = resolveCameraIntent();
                 visible = !isCameraDisabledByDpm() && resolved != null
@@ -512,11 +457,7 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
 
     private boolean isPhoneVisible() {
         PackageManager pm = mContext.getPackageManager();
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
-	return pm.hasSystemFeature(PackageManager.FEATURE_TELEPHONY)
+        return pm.hasSystemFeature(PackageManager.FEATURE_TELEPHONY)
                 && pm.resolveActivity(PHONE_INTENT, 0) != null;
     }
 
@@ -545,11 +486,7 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         getContext().registerReceiverAsUser(mDevicePolicyReceiver,
                 UserHandle.ALL, filter, null, null);
         KeyguardUpdateMonitor.getInstance(mContext).registerCallback(mUpdateMonitorCallback);
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();  
-  }
+    }
 
     @Override
     public void onStateChanged(boolean accessibilityEnabled, boolean touchExplorationEnabled) {
@@ -558,10 +495,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mCameraImageView.setFocusable(accessibilityEnabled);
         mLeftAffordanceView.setFocusable(accessibilityEnabled);
         mLockIcon.update();
-        updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
     }
 
     @Override
@@ -576,10 +509,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
             } else {
                 mPhoneStatusBar.animateCollapsePanels(
                         CommandQueue.FLAG_EXCLUDE_NONE, true /* force */);
-				updateCameraIconColor();
-				updatePhoneIconColor();
-				updateLockIconColor();
-				updateIndicationTextColor();
             }
         }
     }
@@ -597,10 +526,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         mIndicationController.showTransientIndication(
                 R.string.keyguard_indication_trust_disabled);
         mLockPatternUtils.requireCredentialEntry(KeyguardUpdateMonitor.getCurrentUser());
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();
     }
 
     public void bindCameraPrewarmService() {
@@ -685,17 +610,12 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
             // We need to delay starting the activity because ResolverActivity finishes itself if
             // launched behind lockscreen.
             mActivityStarter.startActivity(intent, false /* dismissShade */,
-	        new ActivityStarter.Callback() {
+                    new ActivityStarter.Callback() {
                         @Override
                         public void onActivityStarted(int resultCode) {
                             unbindCameraPrewarmService(isSuccessfulLaunch(resultCode));
                         }
                     });
-				updateCameraIconColor();
-				updatePhoneIconColor();
-				updateLockIconColor();
-				updateIndicationTextColor();
-                
         }
     }
 
@@ -750,10 +670,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
             });
         } else {
             mActivityStarter.startActivity(PHONE_INTENT, false /* dismissShade */);
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();	
         }
     }
 
@@ -762,13 +678,9 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     protected void onVisibilityChanged(View changedView, int visibility) {
         super.onVisibilityChanged(changedView, visibility);
         if (changedView == this && visibility == VISIBLE) {
-			mLockIcon.update();
-			updateCameraVisibility();
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();
-			updateLeftButtonVisibility();
+            mLockIcon.update();
+            updateCameraVisibility();
+            updateLeftButtonVisibility();
         }
     }
 
@@ -789,10 +701,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     }
 
     public LockIcon getLockIcon() {
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
         return mLockIcon;
     }
 
@@ -828,10 +736,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
             }
             mLastCameraIntent = cameraIntent;
             if (mCameraPreview != null) {
-		updateCameraIconColor();
-		updatePhoneIconColor();
-		updateLockIconColor();
-		updateIndicationTextColor();
                 mCameraPreview.setVisibility(View.GONE);
             }
         }
@@ -874,10 +778,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
                 .alpha(1f)
                 .setInterpolator(mLinearOutSlowInInterpolator)
                 .setDuration(NotificationPanelView.DOZE_ANIMATION_DURATION);
-			updateCameraIconColor();
-			updatePhoneIconColor();
-			updateLockIconColor();
-			updateIndicationTextColor();
     }
 
     private void startFinishDozeAnimationElement(View element, long delay) {
@@ -889,10 +789,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
                 .setInterpolator(mLinearOutSlowInInterpolator)
                 .setStartDelay(delay)
                 .setDuration(DOZE_ANIMATION_ELEMENT_DURATION);
-		updateCameraIconColor();
-		updatePhoneIconColor();
-		updateLockIconColor();
-		updateIndicationTextColor();
     }
 
     public void cleanup() {
@@ -905,12 +801,8 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
             post(new Runnable() {
                 @Override
                 public void run() {
-					updateCameraVisibility();
-					updateCameraIconColor();
-					updatePhoneIconColor();
-					updateLockIconColor();
-					updateIndicationTextColor();
-					updateLeftButtonVisibility();
+                    updateCameraVisibility();
+                    updateLeftButtonVisibility();
                 }
             });
         }
@@ -921,10 +813,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         @Override
         public void onUserSwitchComplete(int userId) {
             updateCameraVisibility();
-	     updateCameraIconColor();
-            updatePhoneIconColor();
-            updateLockIconColor();
-            updateIndicationTextColor();
             updateLeftButtonVisibility();
         }
 
@@ -941,28 +829,16 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         @Override
         public void onScreenTurnedOn() {
             mLockIcon.setScreenOn(true);
-	        updateCameraIconColor();
-            updatePhoneIconColor();
-            updateLockIconColor();
-            updateIndicationTextColor();
         }
 
         @Override
         public void onScreenTurnedOff() {
             mLockIcon.setScreenOn(false);
-	        updateCameraIconColor();
-            updatePhoneIconColor();
-            updateLockIconColor();
-            updateIndicationTextColor();
         }
 
         @Override
         public void onKeyguardVisibilityChanged(boolean showing) {
             mLockIcon.update();
-	        updateCameraIconColor();
-            updatePhoneIconColor();
-            updateLockIconColor();
-            updateIndicationTextColor();
         }
 
         @Override
@@ -979,10 +855,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
     public void setKeyguardIndicationController(
             KeyguardIndicationController keyguardIndicationController) {
         mIndicationController = keyguardIndicationController;
-	    updateCameraIconColor();
-            updatePhoneIconColor();
-            updateLockIconColor();
-            updateIndicationTextColor();
     }
 
     public void setAssistManager(AssistManager assistManager) {
@@ -1016,10 +888,6 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
 
     public String getLeftHint() {
         String label = getIndexHint(LockscreenShortcutsHelper.Shortcuts.LEFT_SHORTCUT);
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
         if (label == null) {
             if (isLeftVoiceAssist()) {
                 label = mContext.getString(R.string.voice_hint);
@@ -1042,56 +910,10 @@ public class KeyguardBottomAreaView extends FrameLayout implements View.OnClickL
         return mShortcutHelper.isTargetCustom(shortcut);
     }
 
-    private void updateCameraIconColor() {
-        ContentResolver resolver = getContext().getContentResolver();
-        int color = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_CAMERA_ICON_COLOR, 0x99FFFFFF);
-
-        if (mCameraImageView != null) {
-            mCameraImageView.setColorFilter(color);
-        }
-    }
-
-    private void updatePhoneIconColor() {
-        ContentResolver resolver = getContext().getContentResolver();
-        int color = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_PHONE_ICON_COLOR, 0x99FFFFFF);
-
-        if (mLeftAffordanceView != null) {
-            mLeftAffordanceView.setColorFilter(color);
-        }
-    }
-
-    private void updateLockIconColor() {
-        ContentResolver resolver = getContext().getContentResolver();
-        int color = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_LOCK_ICON_COLOR, 0xFFFFFFFF);
-
-        if (mLockIcon != null) {
-            mLockIcon.setColorFilter(color);
-        }
-    }
-
-    private void updateIndicationTextColor() {
-        ContentResolver resolver = getContext().getContentResolver();
-        int color = Settings.System.getInt(resolver,
-                Settings.System.LOCKSCREEN_INDICATION_TEXT_COLOR, 0xFFFFFFFF);
-
-        if (mIndicationText != null) {
-            mIndicationText.setTextColor(color);
-        }
-    }
-
-
     @Override
     public void onChange() {
         updateCustomShortcuts();
-	updateCameraIconColor();
-        updatePhoneIconColor();
-        updateLockIconColor();
-        updateIndicationTextColor();
-        }
-
+    }
 
     @Override
     protected void onAttachedToWindow() {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBouncer.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBouncer.java
index 7da99b9..d992b17 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBouncer.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBouncer.java
@@ -17,8 +17,6 @@
 package com.android.systemui.statusbar.phone;
 
 import android.content.Context;
-import android.os.UserHandle;
-import android.os.UserManager;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -34,6 +32,8 @@ import com.android.keyguard.R;
 import com.android.keyguard.ViewMediatorCallback;
 import com.android.systemui.DejankUtils;
 
+import org.cyanogenmod.internal.util.CmLockPatternUtils;
+
 import static com.android.keyguard.KeyguardHostView.OnDismissAction;
 import static com.android.keyguard.KeyguardSecurityModel.SecurityMode;
 
@@ -49,13 +49,13 @@ public class KeyguardBouncer {
     private Context mContext;
     private ViewMediatorCallback mCallback;
     private LockPatternUtils mLockPatternUtils;
+    private CmLockPatternUtils mCmLockPatternUtils;
     private ViewGroup mContainer;
     private StatusBarWindowManager mWindowManager;
     private KeyguardHostView mKeyguardView;
     private ViewGroup mRoot;
     private boolean mShowingSoon;
     private int mBouncerPromptReason;
-    final int userId = UserHandle.myUserId();
     private PhoneStatusBar mPhoneStatusBar;
     private KeyguardUpdateMonitorCallback mUpdateMonitorCallback =
             new KeyguardUpdateMonitorCallback() {
@@ -73,6 +73,7 @@ public class KeyguardBouncer {
         mLockPatternUtils = lockPatternUtils;
         mContainer = container;
         mWindowManager = windowManager;
+        mCmLockPatternUtils = new CmLockPatternUtils(mContext);
         mPhoneStatusBar = phoneStatusBar;
         KeyguardUpdateMonitor.getInstance(mContext).registerCallback(mUpdateMonitorCallback);
     }
@@ -236,7 +237,8 @@ public class KeyguardBouncer {
             // "Bouncer first" mode currently only available to some security methods.
             else if ((mode == SecurityMode.Pattern || mode == SecurityMode.Password
                     || mode == SecurityMode.PIN) && (mLockPatternUtils != null &&
-                    mLockPatternUtils.shouldPassToSecurityView(userId)))
+                    mCmLockPatternUtils.shouldPassToSecurityView(
+                    KeyguardUpdateMonitor.getCurrentUser())))
                 return UNLOCK_SEQUENCE_BOUNCER_FIRST;
         }
         return UNLOCK_SEQUENCE_DEFAULT;
@@ -254,7 +256,8 @@ public class KeyguardBouncer {
             // "Bouncer first" mode currently only available to some security methods.
             else if ((mode == SecurityMode.Pattern || mode == SecurityMode.Password
                     || mode == SecurityMode.PIN) && (mLockPatternUtils != null &&
-                    mLockPatternUtils.shouldPassToSecurityView(userId)))
+                    mCmLockPatternUtils.shouldPassToSecurityView(
+                    KeyguardUpdateMonitor.getCurrentUser())))
                 return UNLOCK_SEQUENCE_BOUNCER_FIRST;
         }
         return UNLOCK_SEQUENCE_DEFAULT;
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardStatusBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardStatusBarView.java
index a45f73d..ec307de 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardStatusBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardStatusBarView.java
@@ -17,15 +17,8 @@
 package com.android.systemui.statusbar.phone;
 
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.Configuration;
-import android.database.ContentObserver;
 import android.graphics.drawable.Drawable;
-import android.graphics.Typeface;
-import android.net.Uri;
-import android.os.Handler;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.AttributeSet;
 import android.util.TypedValue;
 import android.view.View;
@@ -35,21 +28,17 @@ import android.view.animation.Interpolator;
 import android.widget.ImageView;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
-import com.android.internal.util.darkkat.StatusBarColorHelper;
-import com.android.keyguard.CarrierText;
+
 import com.android.systemui.BatteryLevelTextView;
 import com.android.systemui.BatteryMeterView;
 import com.android.systemui.DockBatteryMeterView;
 import com.android.systemui.R;
-import com.android.systemui.statusbar.SignalClusterView;
 import com.android.systemui.statusbar.policy.BatteryController;
 import com.android.systemui.statusbar.policy.DockBatteryController;
 import com.android.systemui.statusbar.policy.KeyguardUserSwitcher;
 import com.android.systemui.statusbar.policy.UserInfoController;
 import com.android.systemui.statusbar.policy.UserSwitcherController;
 
-import com.android.systemui.statusbar.phone.StatusBarIconController;
-
 /**
  * The header group on Keyguard.
  */
@@ -57,86 +46,33 @@ public class KeyguardStatusBarView extends RelativeLayout {
 
     private boolean mKeyguardUserSwitcherShowing;
 
+    private TextView mCarrierLabel;
     private View mSystemIconsSuperContainer;
-    private SignalClusterView mSignalCluster;
     private MultiUserSwitch mMultiUserSwitch;
     private ImageView mMultiUserAvatar;
     private BatteryLevelTextView mBatteryLevel;
-    private BatteryMeterView mBatteryMeterView;
-
-    private TextView mCarrierLabel;
-    private int mShowCarrierLabel;
-
     private BatteryLevelTextView mDockBatteryLevel;
 
     private KeyguardUserSwitcher mKeyguardUserSwitcher;
 
-     public static final int FONT_NORMAL = 0;
-     public static final int FONT_ITALIC = 1;
-     public static final int FONT_BOLD = 2;
-     public static final int FONT_BOLD_ITALIC = 3;
-     public static final int FONT_LIGHT = 4;
-     public static final int FONT_LIGHT_ITALIC = 5;
-     public static final int FONT_THIN = 6;
-     public static final int FONT_THIN_ITALIC = 7;
-     public static final int FONT_CONDENSED = 8;
-     public static final int FONT_CONDENSED_ITALIC = 9;
-     public static final int FONT_CONDENSED_LIGHT = 10;
-     public static final int FONT_CONDENSED_LIGHT_ITALIC = 11;
-     public static final int FONT_CONDENSED_BOLD = 12;
-     public static final int FONT_CONDENSED_BOLD_ITALIC = 13;
-     public static final int FONT_MEDIUM = 14;
-     public static final int FONT_MEDIUM_ITALIC = 15;
-     public static final int FONT_BLACK = 16;
-     public static final int FONT_BLACK_ITALIC = 17;
-     public static final int FONT_DANCINGSCRIPT = 18;
-     public static final int FONT_DANCINGSCRIPT_BOLD = 19;
-     public static final int FONT_COMINGSOON = 20;
-     public static final int FONT_NOTOSERIF = 21;
-     public static final int FONT_NOTOSERIF_ITALIC = 22;
-     public static final int FONT_NOTOSERIF_BOLD = 23;
-     public static final int FONT_NOTOSERIF_BOLD_ITALIC = 24;
-     private int mCarrierLabelFontStyle = FONT_NORMAL;
- 
     private int mSystemIconsSwitcherHiddenExpandedMargin;
     private Interpolator mFastOutSlowInInterpolator;
-   
-    public Boolean mColorSwitch = false ;
-
-    private ContentObserver mObserver = new ContentObserver(new Handler()) {
-        public void onChange(boolean selfChange, Uri uri) {
-            showStatusBarCarrier();
-            updateVisibilities();
-        }
-    };
 
     private UserInfoController mUserInfoController;
 
     public KeyguardStatusBarView(Context context, AttributeSet attrs) {
         super(context, attrs);
-        showStatusBarCarrier();
-    }
-
-    private void showStatusBarCarrier() {
-        ContentResolver resolver = getContext().getContentResolver();
-        mShowCarrierLabel = Settings.System.getIntForUser(getContext().getContentResolver(),
-                Settings.System.STATUS_BAR_SHOW_CARRIER, 1, UserHandle.USER_CURRENT);
-        mCarrierLabelFontStyle = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUS_BAR_CARRIER_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
     }
 
     @Override
     protected void onFinishInflate() {
         super.onFinishInflate();
         mSystemIconsSuperContainer = findViewById(R.id.system_icons_super_container);
-        mSignalCluster = (SignalClusterView) findViewById(R.id.signal_cluster);
         mMultiUserSwitch = (MultiUserSwitch) findViewById(R.id.multi_user_switch);
         mMultiUserAvatar = (ImageView) findViewById(R.id.multi_user_avatar);
         mBatteryLevel = (BatteryLevelTextView) findViewById(R.id.battery_level_text);
         mDockBatteryLevel = (BatteryLevelTextView) findViewById(R.id.dock_battery_level_text);
         mCarrierLabel = (TextView) findViewById(R.id.keyguard_carrier_text);
-        mBatteryMeterView = new BatteryMeterView(mContext);
         loadDimens();
         mFastOutSlowInInterpolator = AnimationUtils.loadInterpolator(getContext(),
                 android.R.interpolator.fast_out_slow_in);
@@ -168,8 +104,6 @@ public class KeyguardStatusBarView extends RelativeLayout {
     }
 
     private void updateVisibilities() {
-    	int batterytext = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.BATTERY_TEXT_COLOR, 0xFFFFFFFF);
         if (mMultiUserSwitch.getParent() != this && !mKeyguardUserSwitcherShowing) {
             if (mMultiUserSwitch.getParent() != null) {
                 getOverlay().remove(mMultiUserSwitch);
@@ -177,132 +111,12 @@ public class KeyguardStatusBarView extends RelativeLayout {
             addView(mMultiUserSwitch, 0);
         } else if (mMultiUserSwitch.getParent() == this && mKeyguardUserSwitcherShowing) {
             removeView(mMultiUserSwitch);
-        } if(mColorSwitch) {
-        mBatteryLevel.setTextColor(batterytext);
         }
         mBatteryLevel.setVisibility(View.VISIBLE);
-
-        if (mCarrierLabel != null) {
-            if (mShowCarrierLabel == 1) {
-                mCarrierLabel.setVisibility(View.VISIBLE);
-            } else if (mShowCarrierLabel == 3) {
-                mCarrierLabel.setVisibility(View.VISIBLE);
-            } else {
-                mCarrierLabel.setVisibility(View.GONE);
-            }
-        }
         if (mDockBatteryLevel != null) {
             mDockBatteryLevel.setVisibility(View.VISIBLE);
-             }
-            getFontStyle(mCarrierLabelFontStyle);
-
         }
-
-    public void getFontStyle(int font) {
-         switch (font) {
-             case FONT_NORMAL:
-             default:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_BOLD:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                     Typeface.BOLD));
-                 break;
-             case FONT_BOLD_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                     Typeface.BOLD_ITALIC));
-                 break;
-             case FONT_LIGHT:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-light",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_LIGHT_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-light",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_THIN:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-thin",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_THIN_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-thin",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_CONDENSED:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_CONDENSED_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_CONDENSED_LIGHT:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed-light",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_CONDENSED_LIGHT_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed-light",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_CONDENSED_BOLD:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                     Typeface.BOLD));
-                 break;
-             case FONT_CONDENSED_BOLD_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                     Typeface.BOLD_ITALIC));
-                 break;
-             case FONT_MEDIUM:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-medium",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_MEDIUM_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-medium",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_BLACK:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-black",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_BLACK_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("sans-serif-black",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_DANCINGSCRIPT:
-                 mCarrierLabel.setTypeface(Typeface.create("cursive",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_DANCINGSCRIPT_BOLD:
-                 mCarrierLabel.setTypeface(Typeface.create("cursive",
-                     Typeface.BOLD));
-                 break;
-             case FONT_COMINGSOON:
-                 mCarrierLabel.setTypeface(Typeface.create("casual",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_NOTOSERIF:
-                 mCarrierLabel.setTypeface(Typeface.create("serif",
-                     Typeface.NORMAL));
-                 break;
-             case FONT_NOTOSERIF_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("serif",
-                     Typeface.ITALIC));
-                 break;
-             case FONT_NOTOSERIF_BOLD:
-                 mCarrierLabel.setTypeface(Typeface.create("serif",
-                     Typeface.BOLD));
-                 break;
-             case FONT_NOTOSERIF_BOLD_ITALIC:
-                 mCarrierLabel.setTypeface(Typeface.create("serif",
-                     Typeface.BOLD_ITALIC));
-                 break;
-         }
-     }
+    }
 
     private void updateSystemIconsLayoutParams() {
         RelativeLayout.LayoutParams lp =
@@ -436,62 +250,4 @@ public class KeyguardStatusBarView extends RelativeLayout {
     public boolean hasOverlappingRendering() {
         return false;
     }
-
-    @Override
-    public void onAttachedToWindow() {
-        super.onAttachedToWindow();
-        getContext().getContentResolver().registerContentObserver(Settings.System.getUriFor(
-                "status_bar_show_carrier"), false, mObserver);
-        getContext().getContentResolver().registerContentObserver(Settings.System.getUriFor(
-                "status_bar_carrier_font_style"), false, mObserver);
-        updateBatteryviews();    
-    }
-
-    public void updateNetworkIconColors() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if(mColorSwitch) {
-        mSignalCluster.setIconTint(
-                StatusBarColorHelper.getNetworkSignalColor(mContext),
-                StatusBarColorHelper.getNoSimColor(mContext),
-                StatusBarColorHelper.getAirplaneModeColor(mContext), 0f);
-	 }
-    }
-
-    public void updateNetworkSignalColor() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if(mColorSwitch) {
-        mSignalCluster.applyNetworkSignalTint(StatusBarColorHelper.getNetworkSignalColor(getContext()));
-	}
-    }
-
-    public void updateNoSimColor() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if(mColorSwitch) {
-        mSignalCluster.applyNoSimTint(StatusBarColorHelper.getNoSimColor(getContext()));
-	}
-    }
-
-    public void updateAirplaneModeColor() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if(mColorSwitch) {
-        mSignalCluster.applyAirplaneModeTint(StatusBarColorHelper.getAirplaneModeColor(getContext()));
-	}
-    }   
-    
-    public void updateBatteryviews() {
-	mBatteryMeterView = (BatteryMeterView) findViewById(R.id.battery);
-	int mBatteryIconColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.BATTERY_ICON_COLOR, 0xFFFFFFFF);
-    	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if(mColorSwitch) {
-		if(mBatteryMeterView != null) {
-		mBatteryMeterView.setDarkIntensity(mBatteryIconColor);
-		}   
-	    }
-	}
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/MultiUserSwitch.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/MultiUserSwitch.java
index 714cfd5..e89cd3f 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/MultiUserSwitch.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/MultiUserSwitch.java
@@ -30,6 +30,7 @@ import android.widget.FrameLayout;
 import com.android.systemui.R;
 import com.android.systemui.qs.QSPanel;
 import com.android.systemui.statusbar.policy.KeyguardUserSwitcher;
+import com.android.systemui.statusbar.policy.UserInfoController;
 import com.android.systemui.statusbar.policy.UserSwitcherController;
 
 /**
@@ -37,6 +38,8 @@ import com.android.systemui.statusbar.policy.UserSwitcherController;
  */
 public class MultiUserSwitch extends FrameLayout implements View.OnClickListener {
 
+    public static final String INTENT_EXTRA_NEW_LOCAL_PROFILE = "newLocalProfile";
+
     private QSPanel mQsPanel;
     private KeyguardUserSwitcher mKeyguardUserSwitcher;
     private boolean mKeyguardMode;
@@ -48,6 +51,7 @@ public class MultiUserSwitch extends FrameLayout implements View.OnClickListener
     private final int[] mTmpInt2 = new int[2];
 
     private UserSwitcherController mUserSwitcherController;
+    private UserInfoController mUserInfoController;
 
     public MultiUserSwitch(Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -125,16 +129,21 @@ public class MultiUserSwitch extends FrameLayout implements View.OnClickListener
                         mTmpInt2);
             }
         } else {
-            Intent intent = ContactsContract.QuickContact.composeQuickContactsIntent(
-                    getContext(), v, ContactsContract.Profile.CONTENT_URI,
-                    ContactsContract.QuickContact.MODE_LARGE, null);
+            Intent intent;
+            if (mUserInfoController == null || mUserInfoController.isProfileSetup()) {
+                intent = ContactsContract.QuickContact.composeQuickContactsIntent(
+                        getContext(), v, ContactsContract.Profile.CONTENT_URI,
+                        ContactsContract.QuickContact.MODE_LARGE, null);
+            } else {
+                intent = new Intent(Intent.ACTION_INSERT, ContactsContract.Contacts.CONTENT_URI);
+                intent.putExtra(INTENT_EXTRA_NEW_LOCAL_PROFILE, true);
+            }
             if (mActivityStarter != null) {
                 mActivityStarter.startActivity(intent, true /* dismissShade */);
             } else {
                 getContext().startActivityAsUser(intent, new UserHandle(UserHandle.USER_CURRENT));
             }
         }
-        mQsPanel.vibrateTile(20);
     }
 
     @Override
@@ -181,4 +190,7 @@ public class MultiUserSwitch extends FrameLayout implements View.OnClickListener
         return false;
     }
 
+    public void setUserInfoController(UserInfoController userInfoController) {
+        mUserInfoController = userInfoController;
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavbarEditor.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavbarEditor.java
index 13de1db..7b4d7f9 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavbarEditor.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavbarEditor.java
@@ -117,7 +117,7 @@ public class NavbarEditor implements View.OnTouchListener {
     public static final ButtonInfo NAVBAR_BACK = new ButtonInfo("back",
             R.string.navbar_back_button, R.string.accessibility_back,
             KeyEvent.KEYCODE_BACK, R.drawable.ic_sysbar_back,
-            R.drawable.ic_sysbar_back, R.drawable.ic_sysbar_back);
+            R.drawable.ic_sysbar_back, R.drawable.ic_sysbar_back_side);
     public static final ButtonInfo NAVBAR_SEARCH = new ButtonInfo("search",
             R.string.navbar_search_button, R.string.accessibility_back,
             KeyEvent.KEYCODE_SEARCH, R.drawable.ic_sysbar_search,
@@ -125,7 +125,7 @@ public class NavbarEditor implements View.OnTouchListener {
     public static final ButtonInfo NAVBAR_RECENT = new ButtonInfo("recent",
             R.string.navbar_recent_button, R.string.accessibility_recent,
             0, R.drawable.ic_sysbar_recent,
-            R.drawable.ic_sysbar_recent, R.drawable.ic_sysbar_recent);
+            R.drawable.ic_sysbar_recent, R.drawable.ic_sysbar_recent_side);
     public static final ButtonInfo NAVBAR_CONDITIONAL_MENU = new ButtonInfo("menu0",
             R.string.navbar_menu_conditional_button, R.string.accessibility_menu,
             KeyEvent.KEYCODE_MENU, R.drawable.ic_sysbar_menu,
@@ -147,11 +147,9 @@ public class NavbarEditor implements View.OnTouchListener {
             KeyEvent.KEYCODE_DPAD_RIGHT, 0,
             0, R.drawable.ic_sysbar_ime_right);
 
-
     private static final ButtonInfo[] ALL_BUTTONS = new ButtonInfo[] {
         NAVBAR_EMPTY, NAVBAR_HOME, NAVBAR_BACK, NAVBAR_SEARCH,
-        NAVBAR_RECENT, NAVBAR_CONDITIONAL_MENU, NAVBAR_ALWAYS_MENU,
-        NAVBAR_MENU_BIG 
+        NAVBAR_RECENT, NAVBAR_CONDITIONAL_MENU, NAVBAR_ALWAYS_MENU, NAVBAR_MENU_BIG
     };
 
     private static final String DEFAULT_SETTING_STRING = "empty|back|home|recent|empty|menu0";
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarTransitions.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarTransitions.java
index 115eeda..50656ed 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarTransitions.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarTransitions.java
@@ -25,7 +25,6 @@ import android.view.View;
 import android.view.animation.AccelerateInterpolator;
 
 import com.android.internal.statusbar.IStatusBarService;
-import com.android.systemui.statusbar.BarTransitions;
 import com.android.systemui.R;
 
 public final class NavigationBarTransitions extends BarTransitions {
@@ -69,13 +68,12 @@ public final class NavigationBarTransitions extends BarTransitions {
 
         final View navButtons = mView.getCurrentView().findViewById(R.id.nav_buttons);
         final View lowLights = mView.getCurrentView().findViewById(R.id.lights_out);
-        final boolean isBarPulseFaded = mView.isBarPulseFaded();
 
         // ok, everyone, stop it right there
         navButtons.animate().cancel();
         lowLights.animate().cancel();
 
-        final float navButtonsAlpha = lightsOut ? 0f : isBarPulseFaded ? NavigationBarView.PULSE_ALPHA_FADE : 1f;
+        final float navButtonsAlpha = lightsOut ? 0f : 1f;
         final float lowLightsAlpha = lightsOut ? 1f : 0f;
 
         if (!animate) {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
index 8e69781..c10f45b 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
@@ -18,70 +18,70 @@ package com.android.systemui.statusbar.phone;
 
 import android.animation.LayoutTransition;
 import android.animation.LayoutTransition.TransitionListener;
-import android.animation.Animator;
-import android.animation.AnimatorListenerAdapter;
 import android.animation.ObjectAnimator;
 import android.animation.TimeInterpolator;
 import android.animation.ValueAnimator;
 import android.app.ActivityManagerNative;
 import android.app.StatusBarManager;
+import android.content.BroadcastReceiver;
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.database.ContentObserver;
-import android.graphics.Bitmap;
 import android.graphics.Point;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
+import android.net.Uri;
 import android.os.Handler;
 import android.os.Message;
-import android.os.PowerManager;
 import android.os.RemoteException;
 import android.os.UserHandle;
-import android.provider.Settings;
-import android.os.RemoteException;
 import android.util.AttributeSet;
 import android.util.Log;
 import android.view.Display;
-import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.Surface;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewRootImpl;
 import android.view.WindowManager;
-import android.view.GestureDetector;
-import android.view.animation.AccelerateInterpolator;
-import android.view.animation.Animation;
 import android.view.inputmethod.InputMethodManager;
-import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 
 import com.android.systemui.R;
-import com.android.systemui.du.UserContentObserver;
-import com.android.systemui.navigation.BaseNavigationBar;
-import com.android.systemui.statusbar.BarTransitions;
 import com.android.systemui.statusbar.policy.DeadZone;
 import com.android.systemui.statusbar.policy.KeyButtonView;
 
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
-import java.util.ArrayList;
 
-public class NavigationBarView extends BaseNavigationBar {
+import cyanogenmod.providers.CMSettings;
+
+public class NavigationBarView extends LinearLayout {
     final static boolean DEBUG = false;
     final static String TAG = "PhoneStatusBar/NavigationBarView";
-    final static float PULSE_ALPHA_FADE = 0.3f; // take bar alpha low so keys are vaguely visible but not intrusive during Pulse
-    final static int PULSE_FADE_OUT_DURATION = 250;
-    final static int PULSE_FADE_IN_DURATION = 200;
+
+    // slippery nav bar when everything is disabled, e.g. during setup
+    final static boolean SLIPPERY_WHEN_DISABLED = true;
+
+    final Display mDisplay;
+    View mCurrentView = null;
+    View[] mRotatedViews = new View[4];
 
     int mBarSize;
+    boolean mVertical;
+    boolean mScreenOn;
+    boolean mLeftInLandscape;
+
     boolean mShowMenu;
+    int mDisabledFlags = 0;
+    int mNavigationIconHints = 0;
 
     private BackButtonDrawable mBackIcon, mBackLandIcon;
-    private Drawable mBackAltIcon, mBackAltLandIcon;
     private Drawable mRecentIcon;
     private Drawable mRecentLandIcon;
     private Drawable mHomeIcon, mHomeLandIcon;
@@ -90,18 +90,46 @@ public class NavigationBarView extends BaseNavigationBar {
     private DeadZone mDeadZone;
     private final NavigationBarTransitions mBarTransitions;
 
+    /**
+     * Tracks the current visibilities of the far left (R.id.one) and right (R.id.six) buttons
+     * while dpad arrow keys are visible.
+     *
+     * We keep track of the orientations separately because they can get in different states,
+     * We can be showing dpad arrow keys on vertical, but on portrait that may not be so.
+     */
+    public int[][] mSideButtonVisibilities = new int[][] {
+        {-1, -1} /* portrait */, {-1, -1} /* vertical */
+    };
+
+
+    // workaround for LayoutTransitions leaving the nav buttons in a weird state (bug 5549288)
+    final static boolean WORKAROUND_INVALID_LAYOUT = true;
+    final static int MSG_CHECK_INVALID_LAYOUT = 8686;
+
+    final static String NAVBAR_EDIT_ACTION = "android.intent.action.NAVBAR_EDIT";
+
+    private boolean mInEditMode;
+    private NavbarEditor mEditBar;
+    private NavBarReceiver mNavBarReceiver;
+    private OnClickListener mRecentsClickListener;
+    private OnTouchListener mRecentsPreloadListener;
+    private OnTouchListener mHomeSearchActionListener;
+    private OnLongClickListener mRecentsBackListener;
+    private OnLongClickListener mLongPressHomeListener;
+
     private SettingsObserver mSettingsObserver;
-    private boolean mDoubleTapToSleep;
+    private boolean mShowDpadArrowKeys;
 
     // performs manual animation in sync with layout transitions
     private final NavTransitionListener mTransitionListener = new NavTransitionListener();
 
+    private Resources mThemedResources;
+
+    private OnVerticalChangedListener mOnVerticalChangedListener;
     private boolean mIsLayoutRtl;
+    private boolean mLayoutTransitionsEnabled = true;
     private boolean mWakeAndUnlocking;
 
-    private GestureDetector mDoubleTapGesture;
-    private boolean mIsHandlerCallbackActive = false;
-
     private class NavTransitionListener implements TransitionListener {
         private boolean mBackTransitioning;
         private boolean mHomeAppearing;
@@ -112,9 +140,9 @@ public class NavigationBarView extends BaseNavigationBar {
         @Override
         public void startTransition(LayoutTransition transition, ViewGroup container,
                 View view, int transitionType) {
-            if (view.getId() == R.id.back) {
+            if (NavbarEditor.NAVBAR_BACK.equals(view.getTag())) {
                 mBackTransitioning = true;
-            } else if (view.getId() == R.id.home && transitionType == LayoutTransition.APPEARING) {
+            } else if (NavbarEditor.NAVBAR_HOME.equals(view.getTag()) && transitionType == LayoutTransition.APPEARING) {
                 mHomeAppearing = true;
                 mStartDelay = transition.getStartDelay(transitionType);
                 mDuration = transition.getDuration(transitionType);
@@ -125,9 +153,9 @@ public class NavigationBarView extends BaseNavigationBar {
         @Override
         public void endTransition(LayoutTransition transition, ViewGroup container,
                 View view, int transitionType) {
-            if (view.getId() == R.id.back) {
+            if (NavbarEditor.NAVBAR_BACK.equals(view.getTag())) {
                 mBackTransitioning = false;
-            } else if (view.getId() == R.id.home && transitionType == LayoutTransition.APPEARING) {
+            } else if (NavbarEditor.NAVBAR_HOME.equals(view.getTag()) && transitionType == LayoutTransition.APPEARING) {
                 mHomeAppearing = false;
             }
         }
@@ -154,32 +182,39 @@ public class NavigationBarView extends BaseNavigationBar {
                     .showInputMethodPicker(true /* showAuxiliarySubtypes */);
         }
     };
-    
-     // provides a listener for the empty space in the navbar
-    private final OnTouchListener mNavButtonsTouchListener = new OnTouchListener() {
-        @Override
-        public boolean onTouch(View v, MotionEvent event) {
-                if (mDoubleTapToSleep) {
-                     mDoubleTapGesture.onTouchEvent(event);
-                }
-                onNavButtonTouched();
-            return true;
-        }
-    };
-    
-    public void onNavButtonTouched() {
-        if (mIsHandlerCallbackActive) {
-            mIsHandlerCallbackActive = false;
-        }
 
-        final ViewGroup navButtons = getNavButtons();       
+    private class H extends Handler {
+        public void handleMessage(Message m) {
+            switch (m.what) {
+                case MSG_CHECK_INVALID_LAYOUT:
+                    final String how = "" + m.obj;
+                    final int w = getWidth();
+                    final int h = getHeight();
+                    final int vw = mCurrentView.getWidth();
+                    final int vh = mCurrentView.getHeight();
+
+                    if (h != vh || w != vw) {
+                        Log.w(TAG, String.format(
+                            "*** Invalid layout in navigation bar (%s this=%dx%d cur=%dx%d)",
+                            how, w, h, vw, vh));
+                        if (WORKAROUND_INVALID_LAYOUT) {
+                            requestLayout();
+                        }
+                    }
+                    break;
+            }
+        }
     }
 
     public NavigationBarView(Context context, AttributeSet attrs) {
         super(context, attrs);
 
-        final Resources res = getContext().getResources();
+        mDisplay = ((WindowManager)context.getSystemService(
+                Context.WINDOW_SERVICE)).getDefaultDisplay();
+
+        final Resources res = getResources();
         mBarSize = res.getDimensionPixelSize(R.dimen.navigation_bar_size);
+        mVertical = false;
         mShowMenu = false;
         mTaskSwitchHelper = new NavigationBarViewTaskSwitchHelper(context);
 
@@ -187,28 +222,20 @@ public class NavigationBarView extends BaseNavigationBar {
 
         mBarTransitions = new NavigationBarTransitions(this);
 
+        mNavBarReceiver = new NavBarReceiver();
+        getContext().registerReceiverAsUser(mNavBarReceiver, UserHandle.ALL,
+                new IntentFilter(NAVBAR_EDIT_ACTION), null, null);
         mSettingsObserver = new SettingsObserver(new Handler());
-
-        mDoubleTapGesture = new GestureDetector(mContext,
-                new GestureDetector.SimpleOnGestureListener() {
-            @Override
-            public boolean onDoubleTap(MotionEvent e) {
-                PowerManager pm = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
-                if (pm != null) pm.goToSleep(e.getEventTime());
-                return true;
-            }
-        });
-
     }
 
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
-        mSettingsObserver.observe();
         ViewRootImpl root = getViewRootImpl();
         if (root != null) {
             root.setDrawDuringWindowsAnimating(true);
         }
+        mSettingsObserver.observe();
     }
 
     @Override
@@ -217,88 +244,87 @@ public class NavigationBarView extends BaseNavigationBar {
         mSettingsObserver.unobserve();
     }
 
-    @Override
     public BarTransitions getBarTransitions() {
         return mBarTransitions;
     }
 
-    @Override
-    public void setStatusBar(PhoneStatusBar statusbar) {
-        super.setStatusBar(statusbar);
-        mTaskSwitchHelper.setBar(statusbar);
+    public void setBar(PhoneStatusBar phoneStatusBar) {
+        mTaskSwitchHelper.setBar(phoneStatusBar);
+    }
+
+    public void setOnVerticalChangedListener(OnVerticalChangedListener onVerticalChangedListener) {
+        mOnVerticalChangedListener = onVerticalChangedListener;
+        notifyVerticalChangedListener(mVertical);
     }
 
     @Override
     public boolean onTouchEvent(MotionEvent event) {
-        if (mUserAutoHideListener != null) {
-            mUserAutoHideListener.onTouch(this, event);
-        }
-        if (mTaskSwitchHelper.onTouchEvent(event)) {
+        if (!mInEditMode && mTaskSwitchHelper.onTouchEvent(event)) {
             return true;
         }
         if (mDeadZone != null && event.getAction() == MotionEvent.ACTION_OUTSIDE) {
             mDeadZone.poke(event);
         }
-        if (mDoubleTapToSleep) {
-            mDoubleTapGesture.onTouchEvent(event);
-        }  
         return super.onTouchEvent(event);
     }
 
     @Override
     public boolean onInterceptTouchEvent(MotionEvent event) {
-        return mTaskSwitchHelper.onInterceptTouchEvent(event);
+        return !mInEditMode && mTaskSwitchHelper.onInterceptTouchEvent(event);
     }
 
     public void abortCurrentGesture() {
-        ((KeyButtonView)mCurrentView.findViewById(R.id.home)).abortCurrentGesture();
+        getHomeButton().abortCurrentGesture();
     }
 
+    private H mHandler = new H();
+
     public View getCurrentView() {
         return mCurrentView;
     }
 
     public View getRecentsButton() {
-        return mCurrentView.findViewById(R.id.recent_apps);
+        return mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_RECENT);
     }
 
     public View getMenuButton() {
-        return mCurrentView.findViewById(R.id.menu);
+        return mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_CONDITIONAL_MENU);
     }
 
     public View getBackButton() {
-        return mCurrentView.findViewById(R.id.back);
+        return mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_BACK);
     }
 
-    public View getHomeButton() {
-        return mCurrentView.findViewById(R.id.home);
+    public KeyButtonView getHomeButton() {
+        return (KeyButtonView) mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_HOME);
     }
 
-    private View getImeSwitchButton() {
+    public View getImeSwitchButton() {
         return mCurrentView.findViewById(R.id.ime_switcher);
     }
 
     private void getIcons(Resources res) {
         mBackIcon = new BackButtonDrawable(res.getDrawable(R.drawable.ic_sysbar_back));
-        mBackLandIcon = new BackButtonDrawable(res.getDrawable(R.drawable.ic_sysbar_back_land));
-        mBackAltIcon = res.getDrawable(R.drawable.ic_sysbar_back_ime);
-        mBackAltLandIcon = res.getDrawable(R.drawable.ic_sysbar_back_ime_land);
+	    mBackLandIcon = mBackIcon;
         mRecentIcon = res.getDrawable(R.drawable.ic_sysbar_recent);
-        mRecentLandIcon = res.getDrawable(R.drawable.ic_sysbar_recent_land);
+        mRecentLandIcon = mRecentIcon;
         mHomeIcon = res.getDrawable(R.drawable.ic_sysbar_home);
-        mHomeLandIcon = res.getDrawable(R.drawable.ic_sysbar_home_land);
+        mHomeLandIcon = mHomeIcon;
     }
 
-    @Override
-    public void updateNavbarThemedResources(Resources res) {
-        getIcons(getResources());
-        mBarTransitions.updateResources(getResources());
+    public void updateResources(Resources res) {
+        mThemedResources = res;
+        getIcons(mThemedResources);
+        mBarTransitions.updateResources(res);
         for (int i = 0; i < mRotatedViews.length; i++) {
             ViewGroup container = (ViewGroup) mRotatedViews[i];
             if (container != null) {
                 updateLightsOutResources(container);
             }
         }
+        if (mEditBar != null) {
+            mEditBar.updateResources(res);
+        }
     }
 
     private void updateLightsOutResources(ViewGroup container) {
@@ -313,7 +339,7 @@ public class NavigationBarView extends BaseNavigationBar {
                     // ImageView keeps track of the resource ID and if it is the same
                     // it will not update the drawable.
                     iv.setImageDrawable(null);
-                    iv.setImageDrawable(getResources().getDrawable(
+                    iv.setImageDrawable(mThemedResources.getDrawable(
                             R.drawable.ic_sysbar_lights_out_dot_large));
                 }
             }
@@ -327,6 +353,11 @@ public class NavigationBarView extends BaseNavigationBar {
         super.setLayoutDirection(layoutDirection);
     }
 
+    public void notifyScreenOn(boolean screenOn) {
+        mScreenOn = screenOn;
+        setDisabledFlags(mDisabledFlags, true);
+    }
+
     public void setNavigationIconHints(int hints) {
         setNavigationIconHints(hints, false);
     }
@@ -353,25 +384,76 @@ public class NavigationBarView extends BaseNavigationBar {
         ((ImageView)getRecentsButton()).setImageDrawable(mVertical ? mRecentLandIcon : mRecentIcon);
         ((ImageView)getHomeButton()).setImageDrawable(mVertical ? mHomeLandIcon : mHomeIcon);
 
-        final boolean showImeButton = ((hints & StatusBarManager.NAVIGATION_HINT_IME_SHOWN) != 0);
+        final boolean showImeButton = ((hints & StatusBarManager.NAVIGATION_HINT_IME_SHOWN) != 0)
+                                && !mShowDpadArrowKeys;
         getImeSwitchButton().setVisibility(showImeButton ? View.VISIBLE : View.INVISIBLE);
+
+        setDisabledFlags(mDisabledFlags, true);
+
         // Update menu button in case the IME state has changed.
         setMenuVisibility(mShowMenu, true);
 
+        if (mShowDpadArrowKeys) { // overrides IME button
+            final boolean showingIme = ((mNavigationIconHints
+                    & StatusBarManager.NAVIGATION_HINT_BACK_ALT) != 0);
 
-        setDisabledFlags(mDisabledFlags, true);
+            setVisibleOrGone(getCurrentView().findViewById(R.id.dpad_left), showingIme);
+            setVisibleOrGone(getCurrentView().findViewById(R.id.dpad_right), showingIme);
+
+            View one = getCurrentView().findViewById(mVertical ? R.id.six : R.id.one);
+            View six = getCurrentView().findViewById(mVertical ? R.id.one : R.id.six);
+            if (showingIme) {
+                if (one.getVisibility() != View.GONE) {
+                    setSideButtonVisibility(true, one.getVisibility());
+                    setVisibleOrGone(one, false);
+                }
+
+                if (six.getVisibility() != View.GONE) {
+                    setSideButtonVisibility(false, six.getVisibility());
+                    setVisibleOrGone(six, false);
+                }
+            } else {
+                if (getSideButtonVisibility(true) != -1) {
+                    one.setVisibility(getSideButtonVisibility(true));
+                    setSideButtonVisibility(true, - 1);
+                }
+                if (getSideButtonVisibility(false) != -1) {
+                    six.setVisibility(getSideButtonVisibility(false));
+                    setSideButtonVisibility(false, -1);
+                }
+            }
+        } else {
+            setVisibleOrGone(getCurrentView().findViewById(R.id.dpad_left), false);
+            setVisibleOrGone(getCurrentView().findViewById(R.id.dpad_right), false);
+            View one = getCurrentView().findViewById(mVertical ? R.id.six : R.id.one);
+            View six = getCurrentView().findViewById(mVertical ? R.id.one : R.id.six);
+            if (getSideButtonVisibility(true) != -1) {
+                one.setVisibility(getSideButtonVisibility(true));
+                setSideButtonVisibility(true, - 1);
+            }
+            if (getSideButtonVisibility(false) != -1) {
+                six.setVisibility(getSideButtonVisibility(false));
+                setSideButtonVisibility(false, -1);
+            }
+        }
+    }
+
+    private int getSideButtonVisibility(boolean left) {
+        return mSideButtonVisibilities[mVertical ? 1 : 0][left ? 0 : 1];
+    }
+
+    private void setSideButtonVisibility(boolean left, int vis) {
+        mSideButtonVisibilities[mVertical ? 1 : 0][left ? 0 : 1] = vis;
     }
 
     public void setDisabledFlags(int disabledFlags) {
         setDisabledFlags(disabledFlags, false);
     }
-    
-    public ViewGroup getNavButtons() {
-        return (ViewGroup) mCurrentView.findViewById(R.id.nav_buttons);
-    }
 
     public void setDisabledFlags(int disabledFlags, boolean force) {
-        super.setDisabledFlags(disabledFlags, force); 
+        if (!force && mDisabledFlags == disabledFlags) return;
+
+        mDisabledFlags = disabledFlags;
 
         final boolean disableHome = ((disabledFlags & View.STATUS_BAR_DISABLE_HOME) != 0);
         boolean disableRecent = ((disabledFlags & View.STATUS_BAR_DISABLE_RECENT) != 0);
@@ -379,6 +461,10 @@ public class NavigationBarView extends BaseNavigationBar {
                 && ((mNavigationIconHints & StatusBarManager.NAVIGATION_HINT_BACK_ALT) == 0);
         final boolean disableSearch = ((disabledFlags & View.STATUS_BAR_DISABLE_SEARCH) != 0);
 
+        if (SLIPPERY_WHEN_DISABLED) {
+            setSlippery(disableHome && disableRecent && disableBack && disableSearch);
+        }
+
         ViewGroup navButtons = (ViewGroup) mCurrentView.findViewById(R.id.nav_buttons);
         if (navButtons != null) {
             LayoutTransition lt = navButtons.getLayoutTransition();
@@ -394,9 +480,10 @@ public class NavigationBarView extends BaseNavigationBar {
             disableRecent = false;
         }
 
-        getBackButton()   .setVisibility(disableBack       ? View.INVISIBLE : View.VISIBLE);
-        getHomeButton()   .setVisibility(disableHome       ? View.INVISIBLE : View.VISIBLE);
-        getRecentsButton().setVisibility(disableRecent     ? View.INVISIBLE : View.VISIBLE);
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_BACK, !disableBack);
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_HOME, !disableHome);
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_RECENT, !disableRecent);
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_SEARCH, !disableSearch);
     }
 
     private boolean inLockTask() {
@@ -407,6 +494,74 @@ public class NavigationBarView extends BaseNavigationBar {
         }
     }
 
+    private void setVisibleOrGone(View view, boolean visible) {
+        if (view != null) {
+            view.setVisibility(visible ? VISIBLE : GONE);
+        }
+    }
+
+    public void setLayoutTransitionsEnabled(boolean enabled) {
+        mLayoutTransitionsEnabled = enabled;
+        updateLayoutTransitionsEnabled();
+    }
+
+    public void setWakeAndUnlocking(boolean wakeAndUnlocking) {
+        setUseFadingAnimations(wakeAndUnlocking);
+        mWakeAndUnlocking = wakeAndUnlocking;
+        updateLayoutTransitionsEnabled();
+    }
+
+    private void updateLayoutTransitionsEnabled() {
+        boolean enabled = !mWakeAndUnlocking && mLayoutTransitionsEnabled;
+        ViewGroup navButtons = (ViewGroup) mCurrentView.findViewById(R.id.nav_buttons);
+        LayoutTransition lt = navButtons.getLayoutTransition();
+        if (lt != null) {
+            if (enabled) {
+                lt.enableTransitionType(LayoutTransition.APPEARING);
+                lt.enableTransitionType(LayoutTransition.DISAPPEARING);
+                lt.enableTransitionType(LayoutTransition.CHANGE_APPEARING);
+                lt.enableTransitionType(LayoutTransition.CHANGE_DISAPPEARING);
+            } else {
+                lt.disableTransitionType(LayoutTransition.APPEARING);
+                lt.disableTransitionType(LayoutTransition.DISAPPEARING);
+                lt.disableTransitionType(LayoutTransition.CHANGE_APPEARING);
+                lt.disableTransitionType(LayoutTransition.CHANGE_DISAPPEARING);
+            }
+        }
+    }
+
+    private void setUseFadingAnimations(boolean useFadingAnimations) {
+        WindowManager.LayoutParams lp = (WindowManager.LayoutParams) getLayoutParams();
+        if (lp != null) {
+            boolean old = lp.windowAnimations != 0;
+            if (!old && useFadingAnimations) {
+                lp.windowAnimations = R.style.Animation_NavigationBarFadeIn;
+            } else if (old && !useFadingAnimations) {
+                lp.windowAnimations = 0;
+            } else {
+                return;
+            }
+            WindowManager wm = (WindowManager)getContext().getSystemService(Context.WINDOW_SERVICE);
+            wm.updateViewLayout(this, lp);
+        }
+    }
+
+    public void setSlippery(boolean newSlippery) {
+        WindowManager.LayoutParams lp = (WindowManager.LayoutParams) getLayoutParams();
+        if (lp != null) {
+            boolean oldSlippery = (lp.flags & WindowManager.LayoutParams.FLAG_SLIPPERY) != 0;
+            if (!oldSlippery && newSlippery) {
+                lp.flags |= WindowManager.LayoutParams.FLAG_SLIPPERY;
+            } else if (oldSlippery && !newSlippery) {
+                lp.flags &= ~WindowManager.LayoutParams.FLAG_SLIPPERY;
+            } else {
+                return;
+            }
+            WindowManager wm = (WindowManager)getContext().getSystemService(Context.WINDOW_SERVICE);
+            wm.updateViewLayout(this, lp);
+        }
+    }
+
     public void setMenuVisibility(final boolean show) {
         setMenuVisibility(show, false);
     }
@@ -419,25 +574,54 @@ public class NavigationBarView extends BaseNavigationBar {
         // Only show Menu if IME switcher not shown.
         final boolean shouldShow = mShowMenu &&
                 ((mNavigationIconHints & StatusBarManager.NAVIGATION_HINT_IME_SHOWN) == 0);
-        getMenuButton().setVisibility(shouldShow ? View.VISIBLE : View.INVISIBLE);
+        final boolean shouldShowAlwaysMenu = (mNavigationIconHints &
+                StatusBarManager.NAVIGATION_HINT_IME_SHOWN) == 0;
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_ALWAYS_MENU, shouldShowAlwaysMenu);
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_CONDITIONAL_MENU, shouldShow);
+        setButtonWithTagVisibility(NavbarEditor.NAVBAR_SEARCH, shouldShowAlwaysMenu);
     }
 
     @Override
     public void onFinishInflate() {
-        super.onFinishInflate();
+        mRotatedViews[Surface.ROTATION_0] =
+                mRotatedViews[Surface.ROTATION_180] = findViewById(R.id.rot0);
+        mRotatedViews[Surface.ROTATION_90] = findViewById(R.id.rot90);
+        mRotatedViews[Surface.ROTATION_270] = mRotatedViews[Surface.ROTATION_90];
+        mCurrentView = mRotatedViews[Surface.ROTATION_0];
+
         getImeSwitchButton().setOnClickListener(mImeSwitcherClickListener);
+
         updateRTLOrder();
     }
 
+    public boolean isVertical() {
+        return mVertical;
+    }
+
     public void setLeftInLandscape(boolean leftInLandscape) {
-        super.setLeftInLandscape(leftInLandscape);
+        mLeftInLandscape = leftInLandscape;
         mDeadZone.setStartFromRight(leftInLandscape);
     }
 
     public void reorient() {
-        super.reorient();
+        final int rot = mDisplay.getRotation();
+        for (int i=0; i<4; i++) {
+            mRotatedViews[i].setVisibility(View.GONE);
+        }
+        mCurrentView = mRotatedViews[rot];
+        mCurrentView.setVisibility(View.VISIBLE);
+
         updateLayoutTransitionsEnabled();
 
+        if (NavbarEditor.isDevicePhone(getContext())) {
+            int rotation = mDisplay.getRotation();
+            mVertical = rotation == Surface.ROTATION_90 || rotation == Surface.ROTATION_270;
+        } else {
+            mVertical = getWidth() > 0 && getHeight() > getWidth();
+        }
+        mEditBar = new NavbarEditor(mCurrentView, mVertical, mIsLayoutRtl, getResources());
+        updateSettings();
+
         getImeSwitchButton().setOnClickListener(mImeSwitcherClickListener);
 
         mDeadZone = (DeadZone) mCurrentView.findViewById(R.id.deadzone);
@@ -463,6 +647,29 @@ public class NavigationBarView extends BaseNavigationBar {
     }
 
     @Override
+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+        if (DEBUG) Log.d(TAG, String.format(
+                    "onSizeChanged: (%dx%d) old: (%dx%d)", w, h, oldw, oldh));
+
+        final boolean newVertical = w > 0 && h > w;
+        if (newVertical != mVertical) {
+            mVertical = newVertical;
+            //Log.v(TAG, String.format("onSizeChanged: h=%d, w=%d, vert=%s", h, w, mVertical?"y":"n"));
+            reorient();
+            notifyVerticalChangedListener(newVertical);
+        }
+
+        postCheckForInvalidLayout("sizeChanged");
+        super.onSizeChanged(w, h, oldw, oldh);
+    }
+
+    private void notifyVerticalChangedListener(boolean newVertical) {
+        if (mOnVerticalChangedListener != null) {
+            mOnVerticalChangedListener.onVerticalChanged(newVertical);
+        }
+    }
+
+    @Override
     protected void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
         updateRTLOrder();
@@ -477,55 +684,58 @@ public class NavigationBarView extends BaseNavigationBar {
         boolean isLayoutRtl = getResources().getConfiguration()
                 .getLayoutDirection() == LAYOUT_DIRECTION_RTL;
         if (mIsLayoutRtl != isLayoutRtl) {
-
-            // We swap all children of the 90 and 270 degree layouts, since they are vertical
-            View rotation90 = mRotatedViews[Surface.ROTATION_90];
-            swapChildrenOrderIfVertical(rotation90.findViewById(R.id.nav_buttons));
-            adjustExtraKeyGravity(rotation90, isLayoutRtl);
-
-            View rotation270 = mRotatedViews[Surface.ROTATION_270];
-            if (rotation90 != rotation270) {
-                swapChildrenOrderIfVertical(rotation270.findViewById(R.id.nav_buttons));
-                adjustExtraKeyGravity(rotation270, isLayoutRtl);
-            }
             mIsLayoutRtl = isLayoutRtl;
+            reorient();
         }
     }
 
-    private void adjustExtraKeyGravity(View navBar, boolean isLayoutRtl) {
-        View menu = navBar.findViewById(R.id.menu);
-        View imeSwitcher = navBar.findViewById(R.id.ime_switcher);
-        if (menu != null) {
-            FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) menu.getLayoutParams();
-            lp.gravity = isLayoutRtl ? Gravity.BOTTOM : Gravity.TOP;
-            menu.setLayoutParams(lp);
-        }
-        if (imeSwitcher != null) {
-            FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) imeSwitcher.getLayoutParams();
-            lp.gravity = isLayoutRtl ? Gravity.BOTTOM : Gravity.TOP;
-            imeSwitcher.setLayoutParams(lp);
+    /*
+    @Override
+    protected void onLayout (boolean changed, int left, int top, int right, int bottom) {
+        if (DEBUG) Log.d(TAG, String.format(
+                    "onLayout: %s (%d,%d,%d,%d)",
+                    changed?"changed":"notchanged", left, top, right, bottom));
+        super.onLayout(changed, left, top, right, bottom);
+    }
+
+    // uncomment this for extra defensiveness in WORKAROUND_INVALID_LAYOUT situations: if all else
+    // fails, any touch on the display will fix the layout.
+    @Override
+    public boolean onInterceptTouchEvent(MotionEvent ev) {
+        if (DEBUG) Log.d(TAG, "onInterceptTouchEvent: " + ev.toString());
+        if (ev.getAction() == MotionEvent.ACTION_DOWN) {
+            postCheckForInvalidLayout("touch");
         }
+        return super.onInterceptTouchEvent(ev);
     }
+    */
 
-    /**
-     * Swaps the children order of a LinearLayout if it's orientation is Vertical
-     *
-     * @param group The LinearLayout to swap the children from.
-     */
-    private void swapChildrenOrderIfVertical(View group) {
-        if (group instanceof LinearLayout) {
-            LinearLayout linearLayout = (LinearLayout) group;
-            if (linearLayout.getOrientation() == VERTICAL) {
-                int childCount = linearLayout.getChildCount();
-                ArrayList<View> childList = new ArrayList<>(childCount);
-                for (int i = 0; i < childCount; i++) {
-                    childList.add(linearLayout.getChildAt(i));
-                }
-                linearLayout.removeAllViews();
-                for (int i = childCount - 1; i >= 0; i--) {
-                    linearLayout.addView(childList.get(i));
-                }
+
+    private String getResourceName(int resId) {
+        if (resId != 0) {
+            final android.content.res.Resources res = getResources();
+            try {
+                return res.getResourceName(resId);
+            } catch (android.content.res.Resources.NotFoundException ex) {
+                return "(unknown)";
             }
+        } else {
+            return "(null)";
+        }
+    }
+
+    private void postCheckForInvalidLayout(final String how) {
+        mHandler.obtainMessage(MSG_CHECK_INVALID_LAYOUT, 0, 0, how).sendToTarget();
+    }
+
+    private static String visibilityToString(int vis) {
+        switch (vis) {
+            case View.INVISIBLE:
+                return "INVISIBLE";
+            case View.GONE:
+                return "GONE";
+            default:
+                return "VISIBLE";
         }
     }
 
@@ -569,92 +779,150 @@ public class NavigationBarView extends BaseNavigationBar {
             pw.print("null");
         } else {
             pw.print(PhoneStatusBar.viewInfo(button)
-                    + " " + visibilityToString(button.getVisibility())
-                    + " alpha=" + button.getAlpha()
-                    );
+                            + " " + visibilityToString(button.getVisibility())
+                            + " alpha=" + button.getAlpha()
+            );
         }
         pw.println();
     }
 
-    private class SettingsObserver extends UserContentObserver {
-
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
+    public interface OnVerticalChangedListener {
+        void onVerticalChanged(boolean isVertical);
+    }
 
-        @Override
-        protected void observe() {
-            super.observe();
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.DOUBLE_TAP_SLEEP_NAVBAR),
-                    false, this, UserHandle.USER_ALL);
+    void setListeners(OnClickListener recentsClickListener, OnTouchListener recentsPreloadListener,
+                      OnLongClickListener recentsBackListener, OnTouchListener homeSearchActionListener,
+                      OnLongClickListener longPressHomeListener) {
+        mRecentsClickListener = recentsClickListener;
+        mRecentsPreloadListener = recentsPreloadListener;
+        mHomeSearchActionListener = homeSearchActionListener;
+        mRecentsBackListener = recentsBackListener;
+        mLongPressHomeListener = longPressHomeListener;
+        updateButtonListeners();
+    }
 
-            // intialize mModlockDisabled
-            onChange(false);
+    private void removeButtonListeners() {
+        ViewGroup container = (ViewGroup) mCurrentView.findViewById(R.id.container);
+        int viewCount = container.getChildCount();
+        for (int i = 0; i < viewCount; i++) {
+            View button = container.getChildAt(i);
+            if (button instanceof KeyButtonView) {
+                button.setOnClickListener(null);
+                button.setOnTouchListener(null);
+                button.setLongClickable(false);
+                button.setOnLongClickListener(null);
+            }
         }
+    }
 
-        @Override
-        protected void unobserve() {
-            super.unobserve();
-            mContext.getContentResolver().unregisterContentObserver(this);
+    protected void updateButtonListeners() {
+        View recentView = mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_RECENT);
+        if (recentView != null) {
+            recentView.setOnClickListener(mRecentsClickListener);
+            recentView.setOnTouchListener(mRecentsPreloadListener);
+            recentView.setLongClickable(true);
+            recentView.setOnLongClickListener(mRecentsBackListener);
         }
-
-        @Override
-        protected void update() {
-            mDoubleTapToSleep = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.DOUBLE_TAP_SLEEP_NAVBAR, 0, UserHandle.USER_CURRENT) != 0;
+        View backView = mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_BACK);
+        if (backView != null) {
+            backView.setLongClickable(true);
+            backView.setOnLongClickListener(mRecentsBackListener);
+        }
+        View homeView = mCurrentView.findViewWithTag(NavbarEditor.NAVBAR_HOME);
+        if (homeView != null) {
+            homeView.setOnTouchListener(mHomeSearchActionListener);
+            homeView.setLongClickable(true);
+            homeView.setOnLongClickListener(mLongPressHomeListener);
         }
     }
 
-    @Override
-    protected void onDispose() {
-        if (mSettingsObserver != null) {
-            mSettingsObserver.unobserve();
-        }
+    public boolean isInEditMode() {
+        return mInEditMode;
     }
 
-    boolean isBarPulseFaded() {
-        if (mPulse == null) {
-            return false;
+    private void setButtonWithTagVisibility(Object tag, boolean visible) {
+        View findView = mCurrentView.findViewWithTag(tag);
+        if (findView == null) {
+            return;
+        }
+        int visibility = visible ? View.VISIBLE : View.INVISIBLE;
+        // if we're showing dpad arrow keys (e.g. the side button visibility where it's shown != -1)
+        // then don't actually update that buttons visibility, but update the stored value
+        if (getSideButtonVisibility(true) != -1
+                && findView.getId() == (mVertical ? R.id.six : R.id.one)) {
+            setSideButtonVisibility(true, visibility);
+        } else if (getSideButtonVisibility(false) != -1
+                && findView.getId() == (mVertical ? R.id.one : R.id.six)) {
+            setSideButtonVisibility(false, visibility);
         } else {
-            return mPulse.shouldDrawPulse();
+            findView.setVisibility(visibility);
         }
     }
 
     @Override
-    public boolean onStartPulse(Animation animatePulseIn) {
-        final View currentNavButtons = getCurrentView().findViewById(R.id.nav_buttons);
-        final View hiddenNavButtons = getHiddenView().findViewById(R.id.nav_buttons);
-
-        // no need to animate the GONE view, but keep alpha inline since onStartPulse
-        // is a oneshot call
-        hiddenNavButtons.setAlpha(PULSE_ALPHA_FADE);
-        currentNavButtons.animate()
-                .alpha(PULSE_ALPHA_FADE)
-                .setDuration(PULSE_FADE_OUT_DURATION)
-                .setListener(new AnimatorListenerAdapter() {
-                    @Override
-                    public void onAnimationEnd(Animator _a) {
-                        // shouldn't be null, mPulse just called into us
-                        if (mPulse != null) {
-                            mPulse.turnOnPulse();
-                        }
+    public Resources getResources() {
+        return mThemedResources != null ? mThemedResources : getContext().getResources();
+    }
+
+    public class NavBarReceiver extends BroadcastReceiver {
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            boolean edit = intent.getBooleanExtra("edit", false);
+            boolean save = intent.getBooleanExtra("save", false);
+            if (edit != mInEditMode) {
+                mInEditMode = edit;
+                if (edit) {
+                    removeButtonListeners();
+                    mEditBar.setEditMode(true);
+                } else {
+                    if (save) {
+                        mEditBar.saveKeys();
                     }
-                })
-                .start();
-        return true;
+                    mEditBar.setEditMode(false);
+                    updateSettings();
+                }
+            }
+        }
     }
 
-    @Override
-    public void onStopPulse(Animation animatePulseOut) {
-        final View currentNavButtons = getCurrentView().findViewById(R.id.nav_buttons);
-        final View hiddenNavButtons = getHiddenView().findViewById(R.id.nav_buttons);
-
-        hiddenNavButtons.setAlpha(1.0f);
-        currentNavButtons.animate()
-                .alpha(1.0f)
-                .setDuration(PULSE_FADE_IN_DURATION)
-                .start();
+    public void updateSettings() {
+        mEditBar.updateKeys();
+        removeButtonListeners();
+        updateButtonListeners();
+        updateShowDpadKeys();
+        setMenuVisibility(mShowMenu, true);
+    }
+
+    private class SettingsObserver extends ContentObserver {
+
+        SettingsObserver(Handler handler) {
+            super(handler);
+        }
+
+        public void observe() {
+            ContentResolver resolver = getContext().getContentResolver();
+            resolver.registerContentObserver(
+                    CMSettings.System.getUriFor(CMSettings.System.NAVIGATION_BAR_MENU_ARROW_KEYS),
+                    false, this);
+
+            // intialize mModlockDisabled
+            onChange(false);
+        }
+
+        public void unobserve() {
+            getContext().getContentResolver().unregisterContentObserver(this);
+        }
+
+        @Override
+        public void onChange(boolean selfChange, Uri uri) {
+            super.onChange(selfChange, uri);
+            updateShowDpadKeys();
+        }
+    }
+
+    private void updateShowDpadKeys() {
+        mShowDpadArrowKeys = CMSettings.System.getIntForUser(getContext().getContentResolver(),
+                CMSettings.System.NAVIGATION_BAR_MENU_ARROW_KEYS, 0, UserHandle.USER_CURRENT) != 0;
+        setNavigationIconHints(mNavigationIconHints, true);
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarViewTaskSwitchHelper.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarViewTaskSwitchHelper.java
index 941dc1d..fdfcdfb 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarViewTaskSwitchHelper.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarViewTaskSwitchHelper.java
@@ -21,13 +21,12 @@ import android.content.res.Resources;
 import android.view.GestureDetector;
 import android.view.MotionEvent;
 import android.view.ViewConfiguration;
-
 import com.android.systemui.R;
 import com.android.systemui.statusbar.BaseStatusBar;
 
 public class NavigationBarViewTaskSwitchHelper extends GestureDetector.SimpleOnGestureListener {
 
-    private PhoneStatusBar mBar;
+    private BaseStatusBar mBar;
     private boolean mIsVertical;
     private boolean mIsRTL;
 
@@ -45,7 +44,7 @@ public class NavigationBarViewTaskSwitchHelper extends GestureDetector.SimpleOnG
         mTaskSwitcherDetector = new GestureDetector(context, this);
     }
 
-    public void setBar(PhoneStatusBar phoneStatusBar) {
+    public void setBar(BaseStatusBar phoneStatusBar) {
         mBar = phoneStatusBar;
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
index 102c7cf..ef4aedb 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
@@ -19,37 +19,26 @@ package com.android.systemui.statusbar.phone;
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.animation.ArgbEvaluator;
-import android.graphics.drawable.BitmapDrawable;
 import android.animation.ObjectAnimator;
 import android.animation.PropertyValuesHolder;
 import android.animation.ValueAnimator;
 import android.content.ContentResolver;
 import android.app.ActivityManager;
 import android.app.StatusBarManager;
-import android.content.res.Resources;
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.graphics.*;
 import android.content.pm.ResolveInfo;
-import android.content.res.ColorStateList;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.database.ContentObserver;
-import android.os.AsyncTask;
 import android.graphics.Canvas;
 import android.graphics.Color;
-import android.graphics.drawable.ColorDrawable;
-import android.graphics.drawable.GradientDrawable;
-import android.graphics.drawable.GradientDrawable.Orientation;
-import android.graphics.PorterDuff.Mode;
 import android.graphics.Paint;
 import android.graphics.Point;
 import android.graphics.Rect;
 import android.net.Uri;
 import android.os.Handler;
 import android.os.PowerManager;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.os.RemoteException;
 import android.preference.PreferenceManager;
 import android.util.AttributeSet;
@@ -65,26 +54,21 @@ import android.view.WindowInsets;
 import android.view.WindowManager;
 import android.view.WindowManagerGlobal;
 import android.view.accessibility.AccessibilityEvent;
-import android.view.animation.Animation;
 import android.view.animation.AnimationUtils;
 import android.view.animation.Interpolator;
 import android.view.animation.PathInterpolator;
 import android.widget.FrameLayout;
-import android.widget.LinearLayout;
-import android.widget.ImageView;
 import android.widget.TextView;
-import android.view.animation.*;
 
 import com.android.internal.logging.MetricsLogger;
 import com.android.keyguard.KeyguardStatusView;
-import com.android.keyguard.KeyguardUpdateMonitor;
 import com.android.systemui.DejankUtils;
 import com.android.systemui.EventLogConstants;
 import com.android.systemui.EventLogTags;
 import com.android.systemui.R;
 import com.android.systemui.SwipeHelper;
 import com.android.systemui.qs.QSContainer;
-import com.android.systemui.qs.QSPanel;
+import com.android.systemui.qs.QSDragPanel;
 import com.android.systemui.statusbar.ExpandableNotificationRow;
 import com.android.systemui.statusbar.ExpandableView;
 import com.android.systemui.statusbar.FlingAnimationUtils;
@@ -95,14 +79,13 @@ import com.android.systemui.statusbar.StatusBarState;
 import com.android.systemui.statusbar.policy.HeadsUpManager;
 import com.android.systemui.statusbar.policy.KeyguardUserSwitcher;
 import com.android.systemui.statusbar.policy.LiveLockScreenController;
+import com.android.systemui.statusbar.policy.WeatherController;
+import com.android.systemui.statusbar.policy.WeatherControllerImpl;
 import com.android.systemui.statusbar.stack.NotificationStackScrollLayout;
 import com.android.systemui.statusbar.stack.StackStateAnimator;
-import org.cyanogenmod.internal.util.CmLockPatternUtils;
-import com.android.systemui.statusbar.*;
 
 import cyanogenmod.providers.CMSettings;
-
-import com.android.internal.util.rr.QSColorHelper;
+import cyanogenmod.weather.util.WeatherUtils;
 
 import java.util.List;
 
@@ -110,7 +93,7 @@ public class NotificationPanelView extends PanelView implements
         ExpandableView.OnHeightChangedListener, ObservableScrollView.Listener,
         View.OnClickListener, NotificationStackScrollLayout.OnOverscrollTopChangedListener,
         KeyguardAffordanceHelper.Callback, NotificationStackScrollLayout.OnEmptySpaceClickListener,
-        HeadsUpManager.OnHeadsUpChangedListener {
+        HeadsUpManager.OnHeadsUpChangedListener, WeatherController.Callback {
 
     private static final boolean DEBUG = false;
 
@@ -140,19 +123,14 @@ public class NotificationPanelView extends PanelView implements
             "user_returned_from_lls";
 
     public static final long DOZE_ANIMATION_DURATION = 700;
-    private CmLockPatternUtils mLockPatternUtils;
-
-    private int mQsColorSwitch;
-    private boolean mQsMasterSwitch;
-    public boolean mStatusBarLockedOnSecureKeyguard;
 
 
     private KeyguardAffordanceHelper mAfforanceHelper;
     private StatusBarHeaderView mHeader;
     private KeyguardUserSwitcher mKeyguardUserSwitcher;
     private KeyguardStatusBarView mKeyguardStatusBar;
-    private static QSContainer mQsContainer;
-    private QSPanel mQsPanel;
+    private QSContainer mQsContainer;
+    private QSDragPanel mQsPanel;
     private KeyguardStatusView mKeyguardStatusView;
     private ObservableScrollView mScrollView;
     private TextView mClockView;
@@ -166,8 +144,6 @@ public class NotificationPanelView extends PanelView implements
     private int mTrackingPointer;
     private VelocityTracker mVelocityTracker;
     private boolean mQsTracking;
-    private int mBgOrientation;
-    private GradientDrawable qSGd;
 
     /**
      * If set, the ongoing touch gesture might both trigger the expansion in {@link PanelView} and
@@ -184,9 +160,7 @@ public class NotificationPanelView extends PanelView implements
     private boolean mQsExpanded;
     private boolean mQsExpandedWhenExpandingStarted;
     private boolean mQsFullyExpanded;
-    public static boolean mKeyguardShowing;
-    private boolean mKeyguardOrShadeShowing;
-    public static boolean mHeadsUpShowing;
+    private boolean mKeyguardShowing;
     private boolean mDozing;
     private boolean mDozingOnDown;
     private int mStatusBarState;
@@ -262,7 +236,7 @@ public class NotificationPanelView extends PanelView implements
     private int mPositionMinSideMargin;
     private int mLastOrientation = -1;
     private boolean mClosingWithAlphaFadeOut;
-    public static boolean mHeadsUpAnimatingAway;
+    private boolean mHeadsUpAnimatingAway;
     private boolean mLaunchingAffordance;
     private String mLastCameraLaunchSource = KeyguardBottomAreaView.CAMERA_LAUNCH_SOURCE_AFFORDANCE;
 
@@ -282,66 +256,10 @@ public class NotificationPanelView extends PanelView implements
     private SettingsObserver mSettingsObserver;
 
     private int mOneFingerQuickSettingsIntercept;
-    private int mQsSmartPullDown;
     private boolean mDoubleTapToSleepEnabled;
-    private boolean mDoubleTapToSleepAnywhere;
     private int mStatusBarHeaderHeight;
     private GestureDetector mDoubleTapGesture;
 
-    public static boolean mBlurredStatusBarExpandedEnabled;
-    public static NotificationPanelView mNotificationPanelView;
-
-    private static int mBlurScale;
-    private static int mBlurRadius;
-    private static BlurUtils mBlurUtils;
-    private static FrameLayout mBlurredView;
-    private static ColorFilter mColorFilter;
-    private static int mBlurDarkColorFilter;
-    private static int mBlurMixedColorFilter;
-    private static int mBlurLightColorFilter;
-    private static int mTranslucencyPercentage;
-    private static AlphaAnimation mAlphaAnimation;
-    private static boolean mTranslucentQuickSettings;
-    
-    private static Animation.AnimationListener mAnimationListener = new Animation.AnimationListener() {
-
-        @Override
-        public void onAnimationStart(Animation anim) {
-            mBlurredView.setVisibility(View.VISIBLE);
-        }
-
-        @Override
-        public void onAnimationEnd(Animation anim) {}
-
-        @Override
-        public void onAnimationRepeat(Animation anim) {}
-
-    };
-
-    // Task manager
-    private boolean mShowTaskManager;
-    private boolean mTaskManagerShowing;
-    private LinearLayout mTaskManagerPanel;
-
-    // QS alpha
-    private int mQSShadeAlpha;
-
-    private int mQSBackgroundColor;
-    // QS stroke
-    private int mQSStroke;
-    private int mCustomStrokeColor;
-    private int mCustomStrokeThickness;
-    private int mCustomCornerRadius;
-    private int mCustomDashWidth;
-    private int mCustomDashGap;
-
-    // RR panel logo
-    private ImageView mRRPanelLogo;
-    private int mQSPanelLogo;
-    private int mQSPanelLogoColor;
-    private int mQSPanelLogoAlpha;
-    private int mQsPanelLogoStyle;
-
     // Used to identify whether showUnlock() can dismiss the keyguard
     // or not.
     // TODO - add a new state to make it easier to identify keyguard vs
@@ -360,7 +278,11 @@ public class NotificationPanelView extends PanelView implements
     private final GestureDetector mGestureDetector;
     private ViewLinker mViewLinker;
     private final UnlockMethodCache mUnlockMethodCache;
+    private boolean mDetailScrollLock;
 
+    private boolean mKeyguardWeatherEnabled;
+    private TextView mKeyguardWeatherInfo;
+    private WeatherControllerImpl mWeatherController;
 
     // Keep track of common user interactions on the lock screen
     private boolean mUserUnlocked;
@@ -416,9 +338,6 @@ public class NotificationPanelView extends PanelView implements
             }
         }
 
-        public void onChildTriggered(View v) {
-        }
-
         @Override
         public boolean updateSwipeProgress(View animView, boolean dismissable, float swipeProgress) {
             // Let live lockscreen know of swipe progress to allow
@@ -523,6 +442,11 @@ public class NotificationPanelView extends PanelView implements
         mLiveLockscreenController = liveController;
     }
 
+    public void setWeatherController(WeatherControllerImpl weatherController) {
+        mWeatherController = weatherController;
+        mWeatherController.addCallback(this);
+    }
+
     @Override
     protected void onFinishInflate() {
         super.onFinishInflate();
@@ -531,8 +455,8 @@ public class NotificationPanelView extends PanelView implements
         mKeyguardStatusBar = (KeyguardStatusBarView) findViewById(R.id.keyguard_header);
         mKeyguardStatusView = (KeyguardStatusView) findViewById(R.id.keyguard_status_view);
         mQsContainer = (QSContainer) findViewById(R.id.quick_settings_container);
-        mQsPanel = (QSPanel) findViewById(R.id.quick_settings_panel);
-        mTaskManagerPanel = (LinearLayout) findViewById(R.id.task_manager_panel);
+        mQsPanel = (QSDragPanel) findViewById(R.id.quick_settings_panel);
+        mQsPanel.setPanelView(this);
         mClockView = (TextView) findViewById(R.id.clock_view);
         mScrollView = (ObservableScrollView) findViewById(R.id.scroll_view);
         mScrollView.setFocusable(false);
@@ -551,7 +475,7 @@ public class NotificationPanelView extends PanelView implements
                 android.R.interpolator.fast_out_linear_in);
         mDozeAnimationInterpolator = AnimationUtils.loadInterpolator(getContext(),
                 android.R.interpolator.linear_out_slow_in);
-	findrrlogo();
+
         mViewLinker = new ViewLinker<NotificationStackScrollLayout>(mNotificationStackScroller,
                 new ViewLinker.LinkInfo(mKeyguardStatusBar, ViewLinker.LINK_ALPHA),
                 new ViewLinker.LinkInfo(mKeyguardStatusView, ViewLinker.LINK_ALPHA
@@ -612,7 +536,6 @@ public class NotificationPanelView extends PanelView implements
         mQsNavbarScrim = findViewById(R.id.qs_navbar_scrim);
         mAfforanceHelper = new KeyguardAffordanceHelper(this, getContext());
         mLastOrientation = getResources().getConfiguration().orientation;
-	qSGd = new GradientDrawable();
 
         // recompute internal state when qspanel height changes
         mQsContainer.addOnLayoutChangeListener(new OnLayoutChangeListener() {
@@ -627,109 +550,7 @@ public class NotificationPanelView extends PanelView implements
             }
         });
 
-        setQSPanelLogo();
-        setQSBackgroundColor();
-        setQSStroke();
-        mLockPatternUtils = new CmLockPatternUtils(getContext());
-            mNotificationPanelView = this;
-
-            mBlurUtils = new BlurUtils(mNotificationPanelView.getContext());
-
-            mAlphaAnimation = new AlphaAnimation(0.0f, 1.0f);
-            mAlphaAnimation.setDuration(75);
-            mAlphaAnimation.setAnimationListener(mAnimationListener);
-
-            mBlurredView = new FrameLayout(mNotificationPanelView.getContext());
-
-            mNotificationPanelView.addView(mBlurredView, 0, new FrameLayout.LayoutParams(
-                    FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT));
-            mNotificationPanelView.requestLayout();
-
-            mBlurredView.setTag("ready_to_blur");
-
-            mBlurredView.setVisibility(View.INVISIBLE);
-
-            handleQuickSettingsBackround();
-    }
-    private static void handleQuickSettingsBackround() {
-
-        if (mQsContainer == null)
-            return;
-        if (mKeyguardShowing) {
-            mQsContainer.getBackground().setAlpha(255);
-        } else {
-            mQsContainer.getBackground().setAlpha(mTranslucentQuickSettings ? mTranslucencyPercentage : 255);
-        }
-    }
-
-
-    public static void startBlurTask() {
-
-        if (!mBlurredStatusBarExpandedEnabled)
-            return;
-        try {
-            if (mBlurredView.getTag().toString().equals("blur_applied"))
-                return;
-        } catch (Exception e){
-        }
-        if (mNotificationPanelView == null)
-            return;  
-        if (mKeyguardShowing || mHeadsUpShowing || mHeadsUpAnimatingAway)
-            return;
-       
-        BlurTask.setBlurTaskCallback(new BlurUtils.BlurTaskCallback() {
-
-            @Override
-            public void blurTaskDone(Bitmap blurredBitmap) {
-
-                if (blurredBitmap != null) {
-
-                    int[] screenDimens = BlurTask.getRealScreenDimensions();
-                    mBlurredView.getLayoutParams().width = screenDimens[0];
-                    mBlurredView.requestLayout();
-
-                    BitmapDrawable drawable = new BitmapDrawable(blurredBitmap);
-                    drawable.setColorFilter(mColorFilter);
-
-                    mBlurredView.setBackground(drawable);
-
-                    mBlurredView.setTag("blur_applied");
-
-                } else {
-
-                    mBlurredView.setBackgroundColor(mBlurLightColorFilter);
-
-                    mBlurredView.setTag("error");
-
-                }
-                mBlurredView.startAnimation(mAlphaAnimation);
-            }
-
-            @Override
-            public void dominantColor(int color) {
-
-                double lightness = DisplayUtils.getColorLightness(color);
-
-                if (lightness >= 0.0 && color <= 1.0) {
-                    if (lightness <= 0.33) {
-                        mColorFilter = new PorterDuffColorFilter(mBlurLightColorFilter, PorterDuff.Mode.MULTIPLY);
-
-                    } else if (lightness >= 0.34 && lightness <= 0.66) {
-                        mColorFilter = new PorterDuffColorFilter(mBlurMixedColorFilter, PorterDuff.Mode.MULTIPLY);
-
-                    } else if (lightness >= 0.67 && lightness <= 1.0) {
-                        mColorFilter = new PorterDuffColorFilter(mBlurDarkColorFilter, PorterDuff.Mode.MULTIPLY);
-                    }
-
-                } else {
-                    mColorFilter = new PorterDuffColorFilter(mBlurMixedColorFilter, PorterDuff.Mode.MULTIPLY);
-                }
-            }
-        });
-
-        BlurTask.setBlurEngine(BlurUtils.BlurEngine.RenderScriptBlur);
-
-        new BlurTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
+        mKeyguardWeatherInfo = (TextView) mKeyguardStatusView.findViewById(R.id.weather_info);
     }
 
     public boolean isAffordanceSwipeInProgress() {
@@ -747,95 +568,7 @@ public class NotificationPanelView extends PanelView implements
     protected void onDetachedFromWindow() {
         super.onDetachedFromWindow();
         mSettingsObserver.unobserve();
-    }
-
-    public static void recycle() {
-
-        if (mBlurredView != null &&
-                mBlurredView.getBackground() != null) {
-            if (mBlurredView.getBackground() instanceof BitmapDrawable) {
-
-                Bitmap bitmap = ((BitmapDrawable) mBlurredView.getBackground()).getBitmap();
-                if (bitmap != null) {
-                    bitmap.recycle();
-                    bitmap = null;
-                }
-            }
-            mBlurredView.setBackground(null);
-        }
-
-        mBlurredView.setTag("ready_to_blur");
-
-        mBlurredView.setVisibility(View.INVISIBLE);
-
-    }
-
-    public static class BlurTask extends AsyncTask<Void, Void, Bitmap> {
-
-        private static int[] mScreenDimens;
-        private static BlurUtils.BlurEngine mBlurEngine;
-        private static BlurUtils.BlurTaskCallback mCallback;
-
-        private Bitmap mScreenBitmap;
-
-        public static void setBlurEngine(BlurUtils.BlurEngine blurEngine) {
-            mBlurEngine = blurEngine;
-        }
-
-        public static void setBlurTaskCallback(BlurUtils.BlurTaskCallback callBack) {
-            mCallback = callBack;
-        }
-
-        public static int[] getRealScreenDimensions() {
-            return mScreenDimens;
-        }
-
-        @Override
-        protected void onPreExecute() {
-
-            Context context = mNotificationPanelView.getContext();
-            mScreenDimens = DisplayUtils.getRealScreenDimensions(context);
-            
-            //We don't want SystemUI to crash for Arithmetic Exception
-            if(mBlurScale==0){
-                mBlurScale=1;
-            }
-
-            mScreenBitmap = DisplayUtils.takeSurfaceScreenshot(context, mBlurScale);
-        }
-
-        @Override
-        protected Bitmap doInBackground(Void... arg0) {
-
-            try {
-                if (mScreenBitmap == null)
-                    return null;
-
-                mCallback.dominantColor(DisplayUtils.getDominantColorByPixelsSampling(mScreenBitmap, 20, 20));
-
-                //We don't want SystemUI to crash for Arithmetic Exception
-                if(mBlurRadius == 0){
-                    mBlurRadius=1;
-                }
-                
-                mScreenBitmap = mBlurUtils.renderScriptBlur(mScreenBitmap, mBlurRadius);
-                return mScreenBitmap;
-
-            } catch (OutOfMemoryError e) {
-                return null;
-            }
-        }
-
-        @Override
-        protected void onPostExecute(Bitmap bitmap) {
-
-            if (bitmap != null) {
-                mCallback.blurTaskDone(bitmap);
-
-            } else {
-                mCallback.blurTaskDone(null);
-            }
-        }
+        mWeatherController.removeCallback(this);
     }
 
     @Override
@@ -1034,14 +767,9 @@ public class NotificationPanelView extends PanelView implements
         requestLayout();
     }
 
-    private boolean isQSEventBlocked() {
-        return mLockPatternUtils.isSecure(KeyguardUpdateMonitor.getCurrentUser())
-            && mStatusBarLockedOnSecureKeyguard && mKeyguardOrShadeShowing;
-    }
-
     public void setQsExpansionEnabled(boolean qsExpansionEnabled) {
-        mQsExpansionEnabled = qsExpansionEnabled && !isQSEventBlocked();
-        mHeader.setClickable(mQsExpansionEnabled);
+        mQsExpansionEnabled = qsExpansionEnabled;
+        mHeader.setClickable(qsExpansionEnabled);
     }
 
     @Override
@@ -1134,6 +862,14 @@ public class NotificationPanelView extends PanelView implements
             MetricsLogger.count(mContext, COUNTER_PANEL_OPEN_PEEK, 1);
             return true;
         }
+        if (mQsPanel.isOnSettingsPage() && isInQsArea(event.getX(), event.getY(), false)
+                && mQsExpanded) {
+            mIntercepting = false;
+            // we explicitly do not intercept the touch event here to let the qs settings page
+            // scroll as necessary while not blocking horizontal swipes and allowing the panel
+            // to be collapsed when grabbed below the qs settings page as well.
+            return false;
+        }
         if (!isFullyCollapsed() && onQsIntercept(event)) {
             return true;
         }
@@ -1310,9 +1046,6 @@ public class NotificationPanelView extends PanelView implements
                 && mStatusBarState == StatusBarState.KEYGUARD
                 && event.getY() < mStatusBarHeaderHeight) {
             mDoubleTapGesture.onTouchEvent(event);
-        } else if (mDoubleTapToSleepAnywhere
-                && mStatusBarState == StatusBarState.KEYGUARD) {
-            mDoubleTapGesture.onTouchEvent(event);
         }
         initDownStates(event);
         if (mListenForHeadsUp && !mHeadsUpTouchHelper.isTrackingHeadsUp()
@@ -1399,7 +1132,6 @@ public class NotificationPanelView extends PanelView implements
         if (action == MotionEvent.ACTION_DOWN && isFullyCollapsed()
                 && mQsExpansionEnabled) {
             mTwoFingerQsExpandPossible = true;
-            mStatusBar.resetQsPanelVisibility();
         }
         if (mTwoFingerQsExpandPossible && isOpenQsEvent(event)
                 && event.getY(event.getActionIndex()) < mStatusBarMinHeight
@@ -1416,9 +1148,14 @@ public class NotificationPanelView extends PanelView implements
     }
 
     private boolean isInQsArea(float x, float y) {
+        return isInQsArea(x, y, true);
+    }
+
+    private boolean isInQsArea(float x, float y, boolean includeNotifications) {
         return (x >= mScrollView.getX() && x <= mScrollView.getX() + mScrollView.getWidth()) &&
-                (y <= mNotificationStackScroller.getBottomMostNotificationBottom()
-                || y <= mQsContainer.getY() + mQsContainer.getHeight());
+                ((includeNotifications
+                        && y <= mNotificationStackScroller.getBottomMostNotificationBottom())
+                        || y <= mQsContainer.getY() + mQsContainer.getHeight());
     }
 
     private boolean isOpenQsEvent(MotionEvent event) {
@@ -1448,21 +1185,9 @@ public class NotificationPanelView extends PanelView implements
             case 2: // Left side pulldown
                 showQsOverride = isLayoutRtl() ? (w - region < x) : (x < region);
                 break;
-            case 3: // pull down anywhere
-                showQsOverride = true;
-                break;
         }
         showQsOverride &= mStatusBarState == StatusBarState.SHADE;
 
-        if (mQsSmartPullDown == 1 && !mStatusBar.hasActiveClearableNotifications()
-                || mQsSmartPullDown == 2 && !mStatusBar.hasActiveVisibleNotifications()
-                || (mQsSmartPullDown == 3 && !mStatusBar.hasActiveVisibleNotifications()
-                        && !mStatusBar.hasActiveClearableNotifications())) {
-            if (!isQSEventBlocked()) {
-                showQsOverride = true;
-            }
-        }
-
         return twoFingerDrag || showQsOverride || stylusButtonClickDrag || mouseButtonClickDrag;
     }
 
@@ -1550,8 +1275,13 @@ public class NotificationPanelView extends PanelView implements
                 mTrackingPointer = -1;
                 trackMovement(event);
                 float fraction = getQsExpansionFraction();
-                if ((fraction != 0f || y >= mInitialTouchY)
-                        && (fraction != 1f || y <= mInitialTouchY)) {
+                final boolean fling = (fraction != 0f || y >= mInitialTouchY)
+                        && (fraction != 1f || y <= mInitialTouchY);
+                final boolean flingExpand = Math.abs(getCurrentVelocity())
+                        > mFlingAnimationUtils.getMinVelocityPxPerSecond();
+                final boolean detailFling = mDetailScrollLock && mQsExpanded
+                        && flingExpand;
+                if ((fling && !mDetailScrollLock) || detailFling) {
                     flingQsWithCurrentVelocity(y,
                             event.getActionMasked() == MotionEvent.ACTION_CANCEL);
                 } else {
@@ -1647,14 +1377,11 @@ public class NotificationPanelView extends PanelView implements
             boolean goingToFullShade) {
         int oldState = mStatusBarState;
         boolean keyguardShowing = statusBarState == StatusBarState.KEYGUARD;
-	boolean keyguardOrShadeShowing = statusBarState == StatusBarState.KEYGUARD
-                || statusBarState == StatusBarState.SHADE_LOCKED;
         setKeyguardStatusViewVisibility(statusBarState, keyguardFadingAway, goingToFullShade);
         setKeyguardBottomAreaVisibility(statusBarState, goingToFullShade);
 
         mStatusBarState = statusBarState;
         mKeyguardShowing = keyguardShowing;
-        mKeyguardOrShadeShowing = keyguardOrShadeShowing;
         if (oldState != statusBarState && statusBarState == StatusBarState.KEYGUARD) {
             mCanDismissKeyguard = true;
         }
@@ -1691,12 +1418,6 @@ public class NotificationPanelView extends PanelView implements
         }
         resetVerticalPanelPosition();
         updateQsState();
-
-        try {
-            handleQuickSettingsBackround();
-            StatusBarHeaderView.handleStatusBarHeaderViewBackround();
-        } catch (Exception e){
-        }
     }
 
     private final Runnable mAnimateKeyguardStatusViewInvisibleEndRunnable = new Runnable() {
@@ -1935,6 +1656,7 @@ public class NotificationPanelView extends PanelView implements
         mNotificationStackScroller.setScrollingEnabled(
                 mStatusBarState != StatusBarState.KEYGUARD && (!mQsExpanded
                         || mQsExpansionFromOverscroll));
+        mQsPanel.setVisibility(expandVisually ? View.VISIBLE : View.INVISIBLE);
         mQsContainer.setVisibility(
                 mKeyguardShowing && !expandVisually ? View.INVISIBLE : View.VISIBLE);
         mScrollView.setTouchEnabled(mQsExpanded);
@@ -1967,7 +1689,6 @@ public class NotificationPanelView extends PanelView implements
         updateNotificationScrim(height);
         if (mKeyguardShowing) {
             updateHeaderKeyguard();
-            mStatusBar.resetQsPanelVisibility();
         }
         if (mStatusBarState == StatusBarState.KEYGUARD) {
             updateKeyguardBottomAreaAlpha();
@@ -2150,84 +1871,13 @@ public class NotificationPanelView extends PanelView implements
                 && y >= header.getTop() && y <= header.getBottom();
 
         if (mQsExpanded) {
-            return onHeader || (mScrollView.isScrolledToBottom() && yDiff < 0) && isInQsArea(x, y);
+            return onHeader || mDetailScrollLock
+                    || (mScrollView.isScrolledToBottom() && yDiff < 0) && isInQsArea(x, y);
         } else {
             return onHeader;
         }
     }
 
-    void setTaskManagerEnabled(boolean enabled) {
-        mShowTaskManager = enabled;
-        // explicity restore visibility states when disabled
-        // and TaskManager last state was showing
-        if (!enabled && mTaskManagerShowing) {
-            mTaskManagerShowing = false;
-            mQsPanel.setVisibility(View.VISIBLE);
-            mTaskManagerPanel.setVisibility(View.GONE);
-        }
-    }
-
-    public void setTaskManagerVisibility(boolean taskManagerShowing) {
-        if (mShowTaskManager) {
-            mTaskManagerShowing = taskManagerShowing;
-            cancelAnimation();
-            boolean expandVisually = mQsExpanded || mStackScrollerOverscrolling;
-            mQsPanel.setVisibility(expandVisually && !taskManagerShowing
-                    ? View.VISIBLE : View.GONE);
-            mTaskManagerPanel.setVisibility(expandVisually && taskManagerShowing
-                    && !mKeyguardShowing ? View.VISIBLE : View.GONE);
-	if(!mKeyguardShowing) {
-           	 if (mTaskManagerShowing) {
-               	 mTaskManagerPanel.startAnimation(getAnimation(true));
-               	 mQsPanel.startAnimation(getAnimation(false));
-            	 } else {
-                 mQsPanel.startAnimation(getAnimation(true));
-                 mTaskManagerPanel.startAnimation(getAnimation(false));
-            	 }
-            }
-            updateQsState();
-        }
-    }
-
-    private Animation getAnimation(boolean isIn) {
-        ContentResolver resolver = mContext.getContentResolver();
-        int animationResId = 0;
-        final int style = Settings.System.getInt(resolver,
-                Settings.System.QS_TASK_ANIMATION, 8);
-        if (style == 0) {
-            animationResId = isIn ? R.anim.push_down_in : R.anim.push_down_out;
-        } else if (style == 1) {
-            animationResId = isIn ? R.anim.last_app_in : R.anim.last_app_out;
-        } else if (style == 2) {
-            animationResId = isIn ? R.anim.push_left_in : R.anim.push_right_out;
-        } else if (style == 3) {
-            animationResId = isIn ? R.anim.push_right_in : R.anim.push_left_out;
-        } else if (style == 4) {
-            animationResId = isIn ? R.anim.rotate : R.anim.push_down_out;
-        } else if (style == 5) {
-            animationResId = isIn ? R.anim.turn_in : R.anim.turn_out;
-        } else if (style == 6) {
-            animationResId = isIn ? R.anim.push_up_in : R.anim.push_up_out;
-        } else if (style == 7) {
-            animationResId = isIn ? R.anim.recent_enter : R.anim.recent_exit;
-        } else if (style == 8) {
-            animationResId = isIn ? R.anim.fade_in : R.anim.fade_out;
-        } else if (style == 9) {
-            animationResId = isIn ? R.anim.last_app_in : R.anim.last_app_out;
-        } else if (style == 10) {
-            animationResId = isIn ? R.anim.search_bar_enter : R.anim.search_bar_exit;
-        } else if (style == 11) {
-            animationResId = isIn ? R.anim.toko_toast_enter : R.anim.toko_toast_exit;
-        }
-        return AnimationUtils.loadAnimation(mContext, animationResId);
-    }
-
-  private void cancelAnimation() {
-        if (mQsExpansionAnimator != null) {
-            mQsExpansionAnimator.cancel();
-        }
-    }
-
     @Override
     protected boolean isScrolledToBottom() {
         if (!isInSettings()) {
@@ -2312,7 +1962,7 @@ public class NotificationPanelView extends PanelView implements
      */
     private int getTempQsMaxExpansion() {
         int qsTempMaxExpansion = mQsMaxExpansionHeight;
-        if (mScrollYOverride != -1) {
+        if (mScrollYOverride != -1 && !mDetailScrollLock) {
             qsTempMaxExpansion -= mScrollYOverride;
         }
         return qsTempMaxExpansion;
@@ -3049,11 +2699,9 @@ public class NotificationPanelView extends PanelView implements
     @Override
     public void onHeadsUpPinnedModeChanged(final boolean inPinnedMode) {
         if (inPinnedMode) {
-            mHeadsUpShowing = true;
             mHeadsUpExistenceChangedRunnable.run();
             updateNotificationTranslucency();
         } else {
-            mHeadsUpShowing = false;
             mHeadsUpAnimatingAway = true;
             mNotificationStackScroller.runAfterAnimationFinished(
                     mHeadsUpExistenceChangedRunnable);
@@ -3165,71 +2813,8 @@ public class NotificationPanelView extends PanelView implements
                     CMSettings.System.STATUS_BAR_QUICK_QS_PULLDOWN), false, this);
             resolver.registerContentObserver(CMSettings.System.getUriFor(
                     CMSettings.System.DOUBLE_TAP_SLEEP_GESTURE), false, this);
-            resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOUBLE_TAP_SLEEP_ANYWHERE), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_SMART_PULLDOWN),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_TRANSPARENT_SHADE),
-                     false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_STROKE),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_STROKE_COLOR),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_STROKE_THICKNESS),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_CORNER_RADIUS),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_STROKE_DASH_WIDTH),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_STROKE_DASH_GAP),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_PANEL_LOGO),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_PANEL_LOGO_COLOR),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_PANEL_LOGO_ALPHA),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_PANEL_LOGO_STYLE),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_COLOR_SWITCH), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR_START), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR_CENTER), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR_END), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_GRADIENT_USE_CENTER_COLOR), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_GRADIENT_ORIENTATION), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.BLUR_SCALE_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.BLUR_RADIUS_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_EXPANDED_ENABLED_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PRECENTAGE_PREFERENCE_KEY), false, this);
+            resolver.registerContentObserver(CMSettings.Secure.getUriFor(
+                    CMSettings.Secure.LOCK_SCREEN_WEATHER_ENABLED), false, this);
             update();
         }
 
@@ -3245,24 +2830,7 @@ public class NotificationPanelView extends PanelView implements
 
         @Override
         public void onChange(boolean selfChange, Uri uri) {
-	   ContentResolver resolver = mContext.getContentResolver();
-	 if (uri.equals(Settings.System.getUriFor(
-		Settings.System.QS_BACKGROUND_COLOR_START))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR_CENTER))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_GRADIENT_USE_CENTER_COLOR))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR_END))) {
-                 setQSStroke();
-           } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_GRADIENT_ORIENTATION))) {
-                setQSStroke();
-           }  else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR))) {
-                setQSBackgroundColor();
-           }
-		update();
+            update();
         }
 
         public void update() {
@@ -3271,168 +2839,14 @@ public class NotificationPanelView extends PanelView implements
                     resolver, CMSettings.System.STATUS_BAR_QUICK_QS_PULLDOWN, 1);
             mDoubleTapToSleepEnabled = CMSettings.System.getInt(
                     resolver, CMSettings.System.DOUBLE_TAP_SLEEP_GESTURE, 1) == 1;
-            mStatusBarLockedOnSecureKeyguard = Settings.Secure.getIntForUser(
-                    resolver, Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD, 1,
-                    UserHandle.USER_CURRENT) == 1;
-            mDoubleTapToSleepAnywhere = Settings.System.getIntForUser(resolver,
-                    Settings.System.DOUBLE_TAP_SLEEP_ANYWHERE, 0, UserHandle.USER_CURRENT) == 1;
-
-            boolean liveLockScreenEnabled = CMSettings.Secure.getInt(
-                    resolver, CMSettings.Secure.LIVE_LOCK_SCREEN_ENABLED, 0) == 1;
-            mQSShadeAlpha = Settings.System.getInt(
-                    resolver, Settings.System.QS_TRANSPARENT_SHADE, 255);
-            mQsSmartPullDown = Settings.System.getIntForUser(
-                    resolver, Settings.System.QS_SMART_PULLDOWN, 0,
-                    UserHandle.USER_CURRENT);
-            mQSStroke = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_STROKE, 0);
-            mCustomStrokeColor = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_STROKE_COLOR, mContext.getResources().getColor(R.color.system_accent_color));
-            mCustomStrokeThickness = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_STROKE_THICKNESS, 4);
-            mCustomCornerRadius = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_CORNER_RADIUS, 0);
-            mCustomDashWidth = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_STROKE_DASH_WIDTH, 0);
-            mCustomDashGap = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_STROKE_DASH_GAP, 10);
-            mQSPanelLogo = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_PANEL_LOGO, 0);
-            mQSPanelLogoColor = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_PANEL_LOGO_COLOR, mContext.getResources().getColor(R.color.system_accent_color));
-            mQSPanelLogoAlpha = Settings.System.getInt(mContext.getContentResolver(),
-                        Settings.System.QS_PANEL_LOGO_ALPHA, 51);
-            mQSBackgroundColor = Settings.System.getInt( mContext.getContentResolver(), 
-			Settings.System.QS_BACKGROUND_COLOR, 0xff263238);
-            mBlurScale = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.BLUR_SCALE_PREFERENCE_KEY, 10);
-            mBlurRadius = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.BLUR_RADIUS_PREFERENCE_KEY, 5);
-            mTranslucentQuickSettings =  Settings.System.getIntForUser(resolver,
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mBlurredStatusBarExpandedEnabled = Settings.System.getIntForUser(resolver,
-                    Settings.System.STATUS_BAR_EXPANDED_ENABLED_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mTranslucencyPercentage = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PRECENTAGE_PREFERENCE_KEY, 60);
-            mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-            mQsMasterSwitch = Settings.System.getIntForUser(resolver,
-                    Settings.System.QS_CUSTOM_MASTER_SWITCH, 0, UserHandle.USER_CURRENT) == 1;
-	    mQsPanelLogoStyle = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_PANEL_LOGO_STYLE, 0);
-	    findrrlogo();
-            setQSPanelLogo();
-            setQSStroke();
-            setQSBackgroundColor();
-            mBlurDarkColorFilter = Color.LTGRAY;
-            mBlurMixedColorFilter = Color.GRAY;
-            mBlurLightColorFilter = Color.DKGRAY;
-            mTranslucencyPercentage = 255 - ((mTranslucencyPercentage * 255) / 100);
-	    handleQuickSettingsBackround();
-        }
-    }
-
-    private void setQSStroke() {
-        final GradientDrawable qSGd = new GradientDrawable();
-	final int bgColor = Settings.System.getInt(mContext.getContentResolver(),
-		Settings.System.QS_BACKGROUND_COLOR_START, 0xff263238);
-		        Orientation orientation = Orientation.TOP_BOTTOM;
-        mBgOrientation =
-                QSColorHelper.getQsBgGradientOrientation(mContext);
-	if (mQsMasterSwitch) {
-        if (mQsContainer != null) {
-            if (mQSStroke == 0) {
-	     if (mQsColorSwitch == 0) {
-                   qSGd.setColor(mContext.getResources().getColor(R.color.system_primary_color));
-	   	 } else if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-		   qSGd.setColor(mQSBackgroundColor);
-		 } else  if (mQsColorSwitch == 2 || mQsColorSwitch == 4) {
-	 	   qSGd.setColors(QSColorHelper.getBackgroundColors(mContext));
-	        }
-	        qSGd.setCornerRadius(mCustomCornerRadius);
-                mQsContainer.setBackground(qSGd);
-            } else if (mQSStroke == 1) { // use accent color for border
-	      if (mQsColorSwitch == 0) {
-                   qSGd.setColor(mContext.getResources().getColor(R.color.system_primary_color));
-	   	 } else if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-		   qSGd.setColor(mQSBackgroundColor);
-		 } else  if (mQsColorSwitch == 2 || mQsColorSwitch == 4) {
-	 	   qSGd.setColors(QSColorHelper.getBackgroundColors(mContext));
-	        }
-                qSGd.setStroke(mCustomStrokeThickness, mContext.getResources().getColor(R.color.system_accent_color),
-                        mCustomDashWidth, mCustomDashGap);
-            } else if (mQSStroke == 2) { // use custom border color
-   	      if (mQsColorSwitch == 0) {
-                   qSGd.setColor(mContext.getResources().getColor(R.color.system_primary_color));
-	   	 } else if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-		   qSGd.setColor(mQSBackgroundColor);
-		 } else if (mQsColorSwitch == 2 || mQsColorSwitch == 4) {
-	 	   qSGd.setColors(QSColorHelper.getBackgroundColors(mContext));
-	        }
-                qSGd.setStroke(mCustomStrokeThickness, mCustomStrokeColor, mCustomDashWidth, mCustomDashGap);
-            }
 
-            if (mQSStroke != 0) {
-                qSGd.setCornerRadius(mCustomCornerRadius);
-                mQsContainer.setBackground(qSGd);
-	        mQsPanel.setDetailBackgroundColor(bgColor);
-	        }
-	    }
-	 } 
-	 if (mQsColorSwitch == 2 || mQsColorSwitch == 4) {
-	 qSGd.setColors(QSColorHelper.getBackgroundColors(mContext));
-	  if (mBgOrientation == 45) {
-            orientation = Orientation.BL_TR;
-	  } else if (mBgOrientation == 90) {
-            orientation = Orientation.BOTTOM_TOP;
-	  } else if (mBgOrientation == 135) {
-            orientation = Orientation.BR_TL;
-          } else if (mBgOrientation == 180) {
-            orientation = Orientation.RIGHT_LEFT;
-          } else if (mBgOrientation == 225) {
-            orientation = Orientation.TR_BL;
-          } else if (mBgOrientation == 270) {
-            orientation = Orientation.TOP_BOTTOM;
-          } else if (mBgOrientation == 315) {
-            orientation = Orientation.TL_BR;
-          }
-           qSGd.setOrientation(orientation);
-	   mQsContainer.setBackground(qSGd);
-	   mQsPanel.setDetailBackgroundColor(bgColor);
-	   }
-    }
-
-    private void findrrlogo() {
-	if (mQsPanelLogoStyle == 0) {
-            mRRPanelLogo = (ImageView) findViewById(R.id.rr_panel_logo);
-	} else if (mQsPanelLogoStyle == 1) {
-	   mRRPanelLogo = (ImageView) findViewById(R.id.rr_panel_logo_1);
-	} else if (mQsPanelLogoStyle == 2) {
-	   mRRPanelLogo = (ImageView) findViewById(R.id.rr_panel_logo_2);
-	} else if (mQsPanelLogoStyle == 3) {
-	   mRRPanelLogo = (ImageView) findViewById(R.id.rr_panel_logo_3);
-	} else if (mQsPanelLogoStyle == 4) {
-	   mRRPanelLogo = (ImageView) findViewById(R.id.rr_panel_logo_4);
-	}
-   }
-
-    private void setQSPanelLogo() {
-        if (mQSPanelLogo == 0) {
-	    if (mRRPanelLogo != null) {
-            mRRPanelLogo.setVisibility(View.GONE);
-	    }
-        } else if (mQSPanelLogo == 1) {
-	    if (mRRPanelLogo != null) {
-            mRRPanelLogo.setImageAlpha(mQSPanelLogoAlpha);
-            mRRPanelLogo.setColorFilter(mContext.getResources().getColor(R.color.system_accent_color));
-            mRRPanelLogo.setVisibility(View.VISIBLE);
-	    }
-        } else if (mQSPanelLogo == 2) {
-	    if (mRRPanelLogo != null) {
-            mRRPanelLogo.setImageAlpha(mQSPanelLogoAlpha);
-            mRRPanelLogo.setColorFilter(mQSPanelLogoColor);
-            mRRPanelLogo.setVisibility(View.VISIBLE);
-	    }
+            boolean wasKeyguardWeatherEnabled = mKeyguardWeatherEnabled;
+            mKeyguardWeatherEnabled = CMSettings.Secure.getInt(
+                    resolver, CMSettings.Secure.LOCK_SCREEN_WEATHER_ENABLED, 0) == 1;
+            if (mWeatherController != null
+                    && wasKeyguardWeatherEnabled != mKeyguardWeatherEnabled) {
+                onWeatherChanged(mWeatherController.getWeatherInfo());
+            }
         }
     }
 
@@ -3449,6 +2863,7 @@ public class NotificationPanelView extends PanelView implements
         } else if (source == StatusBarManager.CAMERA_LAUNCH_SOURCE_SCREEN_GESTURE) {
             mLastCameraLaunchSource = KeyguardBottomAreaView.CAMERA_LAUNCH_SOURCE_SCREEN_GESTURE;
         } else {
+
             // Default.
             mLastCameraLaunchSource = KeyguardBottomAreaView.CAMERA_LAUNCH_SOURCE_AFFORDANCE;
         }
@@ -3506,37 +2921,44 @@ public class NotificationPanelView extends PanelView implements
         return !tasks.isEmpty() && pkgName.equals(tasks.get(0).topActivity.getPackageName());
     }
 
+    public void setDetailRequestedScrollLock(boolean detailScrollFlag) {
+        if (mDetailScrollLock != detailScrollFlag) {
+            if (mStatusBarState != StatusBarState.SHADE) {
+                mDetailScrollLock = false;
+            } else {
+                mDetailScrollLock = detailScrollFlag;
+            }
+            if (!detailScrollFlag && getQsExpansionFraction() > 0.3f) {
+                flingSettings(getCurrentVelocity(), true, new Runnable() {
+                    @Override
+                    public void run() {
+                        mStackScrollerOverscrolling = false;
+                        mQsExpansionFromOverscroll = false;
+                        updateQsState();
+                        updateHeader();
+                        updateMaxHeadsUpTranslation();
+                        updatePanelExpanded();
+                        requestLayout();
+                    }
+                }, false);
+            } else {
+                requestLayout();
+            }
+        }
+    }
 
- public void setQSBackgroundColor() {
-	final Resources res = getContext().getResources();
-        ContentResolver resolver = mContext.getContentResolver();
-	int mStockBg = res.getColor(R.color.quick_settings_panel_background);
-        mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-	if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-        	if (mQsContainer != null) {
-               		 mQsContainer.getBackground().setColorFilter(
-                         mQSBackgroundColor, Mode.SRC_ATOP);
-           		 }
-       		if (mQsPanel != null) {
-            		mQsPanel.setDetailBackgroundColor(mQSBackgroundColor);
-       			 }
-			}  else if (mQsColorSwitch == 0) {
-		if (mQsContainer != null) {
-               		 mQsContainer.getBackground().clearColorFilter();
-           		 }
-       		if (mQsPanel != null) {
-            		mQsPanel.setDetailBackgroundColor(mStockBg);
-       			 }
-		}
-	}
-
-    public void setQSColors() {
-        if (mQsPanel != null) {
-            mQsPanel.refreshAllTiles();
-	}
-       }
-
+    @Override
+    public void onWeatherChanged(WeatherController.WeatherInfo info) {
+        if (!mKeyguardWeatherEnabled || Double.isNaN(info.temp) || info.condition == null) {
+            mKeyguardWeatherInfo.setVisibility(GONE);
+        } else {
+            mKeyguardWeatherInfo.setText(mContext.getString(
+                    R.string.keyguard_status_view_weather_format,
+                    WeatherUtils.formatTemperature(info.temp, info.tempUnit),
+                    info.condition));
+            mKeyguardWeatherInfo.setVisibility(VISIBLE);
+        }
+    }
 
     private class SlideInAnimationListener implements ValueAnimator.AnimatorUpdateListener,
             ValueAnimator.AnimatorListener {
@@ -3649,7 +3071,7 @@ public class NotificationPanelView extends PanelView implements
         return getSharedPreferenceBoolean(KEY_USER_RETURNED_FROM_LLS, false);
     }
 
-    public boolean shouldShowScreenOnHints() {
+    private boolean shouldShowScreenOnHints() {
         return mScreenOnHintsEnabled && mStatusBar.isDeviceProvisioned() &&
                 mStatusBarState == StatusBarState.KEYGUARD;
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java
index 50bd18e..3a2c84c 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PanelView.java
@@ -65,7 +65,7 @@ public abstract class PanelView extends FrameLayout {
     private float mInitialOffsetOnTouch;
     private boolean mCollapsedAndHeadsUpOnDown;
     private float mExpandedFraction = 0;
-    protected static float mExpandedHeight = 0;
+    protected float mExpandedHeight = 0;
     private boolean mPanelClosedOnDown;
     private boolean mHasLayoutedSinceDown;
     private float mUpdateFlingVelocity;
@@ -680,8 +680,8 @@ public abstract class PanelView extends FrameLayout {
             }
             mUpdateExpandOnLayout = isFullyCollapsed();
             mFlingAnimationUtils.apply(animator, mExpandedHeight, target, vel, getHeight());
-            if (vel == 0) {
-                animator.setDuration(400);
+            if (expandBecauseOfFalsing && vel == 0) {
+                animator.setDuration(350);
             }
         } else {
             mFlingAnimationUtils.applyDismissing(animator, mExpandedHeight, target, vel,
@@ -767,7 +767,7 @@ public abstract class PanelView extends FrameLayout {
         }
     }
 
-    public synchronized void setExpandedHeightInternal(float h) {
+    public void setExpandedHeightInternal(float h) {
         float fhWithoutOverExpansion = getMaxPanelHeight() - getOverExpansionAmount();
         if (mHeightAnimator == null) {
             float overExpansionPixels = Math.max(0, h - fhWithoutOverExpansion);
@@ -828,7 +828,7 @@ public abstract class PanelView extends FrameLayout {
         return mExpandedHeight >= getMaxPanelHeight();
     }
 
-    public static boolean isFullyCollapsed() {
+    public boolean isFullyCollapsed() {
         return mExpandedHeight <= 0;
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
index 44eeb18..8f06328 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
@@ -19,15 +19,11 @@ package com.android.systemui.statusbar.phone;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
-import android.animation.TimeInterpolator;
-import android.annotation.ChaosLab;
-import android.annotation.ChaosLab.Classification;
 import android.annotation.NonNull;
 import android.app.ActivityManager;
 import android.app.ActivityManagerNative;
 import android.app.IActivityManager;
 import android.app.Notification;
-import android.hardware.display.DisplayManager;
 import android.app.PendingIntent;
 import android.app.StatusBarManager;
 import android.app.WallpaperManager;
@@ -45,7 +41,6 @@ import android.content.pm.ResolveInfo;
 import android.content.res.Configuration;
 import android.content.res.ThemeConfig;
 import android.content.res.Resources;
-import android.content.ServiceConnection;
 import android.database.ContentObserver;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
@@ -55,20 +50,16 @@ import android.graphics.Point;
 import android.graphics.PointF;
 import android.graphics.PorterDuff;
 import android.graphics.PorterDuffXfermode;
-import android.graphics.PorterDuff.Mode;
 import android.graphics.Rect;
-import android.graphics.Typeface;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.inputmethodservice.InputMethodService;
-import android.net.Uri;
 import android.media.AudioAttributes;
 import android.media.MediaMetadata;
 import android.media.session.MediaController;
 import android.media.session.MediaSession;
 import android.media.session.MediaSessionManager;
 import android.media.session.PlaybackState;
-import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.BatteryManager;
 import android.os.Bundle;
@@ -76,7 +67,6 @@ import android.os.Handler;
 import android.os.HandlerThread;
 import android.os.IBinder;
 import android.os.IPowerManager;
-import android.os.Looper;
 import android.os.Message;
 import android.os.PowerManager;
 import android.os.Process;
@@ -86,15 +76,10 @@ import android.os.SystemClock;
 import android.os.UserHandle;
 import android.os.UserManager;
 import android.os.Vibrator;
-import android.os.Message;
-import android.os.Messenger;
 import android.provider.Settings;
 import android.service.notification.NotificationListenerService;
 import android.service.notification.NotificationListenerService.RankingMap;
 import android.service.notification.StatusBarNotification;
-import android.text.SpannableString;
-import android.text.TextUtils;
-import android.text.style.RelativeSizeSpan;
 import android.util.ArraySet;
 import android.util.DisplayMetrics;
 import android.util.EventLog;
@@ -105,7 +90,6 @@ import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.HapticFeedbackConstants;
 import android.view.MotionEvent;
-import android.view.View.OnClickListener;
 import android.view.ThreadedRenderer;
 import android.view.VelocityTracker;
 import android.view.View;
@@ -116,8 +100,6 @@ import android.view.ViewGroup.LayoutParams;
 import android.view.ViewStub;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
-import android.view.WindowManagerGlobal;
-import android.view.WindowManagerPolicyControl;
 import android.view.accessibility.AccessibilityEvent;
 import android.view.animation.AccelerateDecelerateInterpolator;
 import android.view.animation.AccelerateInterpolator;
@@ -126,25 +108,13 @@ import android.view.animation.LinearInterpolator;
 import android.view.animation.PathInterpolator;
 import android.widget.AdapterView;
 import android.widget.FrameLayout;
-import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.TextView;
-import android.widget.LinearLayout;
-import android.widget.Toast;
-import com.android.systemui.recents.RecentsActivity;
+
 import com.android.internal.logging.MetricsLogger;
 import com.android.internal.statusbar.NotificationVisibility;
-import com.android.internal.statusbar.IStatusBarService;
 import com.android.internal.statusbar.StatusBarIcon;
 import com.android.internal.util.cm.ActionUtils;
-import com.android.internal.util.cm.WeatherController;
-import com.android.internal.util.cm.WeatherControllerImpl;
-import com.android.internal.util.cm.WeatherController.WeatherInfo;
-import com.android.internal.util.cm.Blur;
-import com.android.internal.utils.du.ActionHandler;
-import com.android.internal.utils.du.DUActionUtils;
-import com.android.internal.utils.du.DUPackageMonitor;
-import com.android.internal.utils.du.DUSystemReceiver;
 import com.android.keyguard.KeyguardHostView.OnDismissAction;
 import com.android.keyguard.KeyguardUpdateMonitor;
 import com.android.keyguard.KeyguardUpdateMonitorCallback;
@@ -162,21 +132,10 @@ import com.android.systemui.cm.UserContentObserver;
 import com.android.systemui.doze.DozeHost;
 import com.android.systemui.doze.DozeLog;
 import com.android.systemui.keyguard.KeyguardViewMediator;
-import com.android.systemui.navigation.NavigationController;
-import com.android.systemui.navigation.Navigator;
-import com.android.systemui.omni.StatusBarHeaderMachine;
-import com.android.systemui.qs.QSDetailItemsList;
-import com.android.systemui.qs.QSPanel;
-import com.android.systemui.qs.QSTile;
-import com.android.systemui.qs.QSTileView;
-import com.android.systemui.qs.SignalTileView;
-import com.android.systemui.recents.RecentsActivity;
+import com.android.systemui.qs.QSDragPanel;
 import com.android.systemui.recents.ScreenPinningRequest;
-import com.android.systemui.settings.BrightnessController;
-import com.android.systemui.screenshot.TakeScreenshotService;
 import com.android.systemui.statusbar.ActivatableNotificationView;
 import com.android.systemui.statusbar.BackDropView;
-import com.android.systemui.statusbar.BarTransitions;
 import com.android.systemui.statusbar.BaseStatusBar;
 import com.android.systemui.statusbar.CommandQueue;
 import com.android.systemui.statusbar.DismissView;
@@ -212,8 +171,6 @@ import com.android.systemui.statusbar.policy.KeyguardUserSwitcher;
 import com.android.systemui.statusbar.policy.LiveLockScreenController;
 import com.android.systemui.statusbar.policy.LocationControllerImpl;
 import com.android.systemui.statusbar.policy.NetworkController;
-import com.android.systemui.statusbar.policy.MinitBattery;
-import com.android.systemui.statusbar.policy.MinitBatteryController;
 import com.android.systemui.statusbar.policy.NetworkControllerImpl;
 import com.android.systemui.statusbar.policy.NextAlarmController;
 import com.android.systemui.statusbar.policy.PreviewInflater;
@@ -222,11 +179,11 @@ import com.android.systemui.statusbar.policy.SecurityControllerImpl;
 import com.android.systemui.statusbar.policy.SuControllerImpl;
 import com.android.systemui.statusbar.policy.UserInfoController;
 import com.android.systemui.statusbar.policy.UserSwitcherController;
+import com.android.systemui.statusbar.policy.WeatherControllerImpl;
 import com.android.systemui.statusbar.policy.ZenModeController;
 import com.android.systemui.statusbar.stack.NotificationStackScrollLayout;
 import com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnChildLocationsChangedListener;
 import com.android.systemui.statusbar.stack.StackStateAnimator;
-import com.android.systemui.statusbar.NotificationBackgroundView;
 import com.android.systemui.statusbar.stack.StackViewState;
 import com.android.systemui.volume.VolumeComponent;
 import cyanogenmod.app.CMContextConstants;
@@ -249,20 +206,20 @@ import static android.app.StatusBarManager.NAVIGATION_HINT_IME_SHOWN;
 import static android.app.StatusBarManager.WINDOW_STATE_HIDDEN;
 import static android.app.StatusBarManager.WINDOW_STATE_SHOWING;
 import static android.app.StatusBarManager.windowStateToString;
-import static com.android.systemui.statusbar.BarTransitions.MODE_LIGHTS_OUT;
-import static com.android.systemui.statusbar.BarTransitions.MODE_LIGHTS_OUT_TRANSPARENT;
-import static com.android.systemui.statusbar.BarTransitions.MODE_OPAQUE;
-import static com.android.systemui.statusbar.BarTransitions.MODE_SEMI_TRANSPARENT;
-import static com.android.systemui.statusbar.BarTransitions.MODE_TRANSLUCENT;
-import static com.android.systemui.statusbar.BarTransitions.MODE_TRANSPARENT;
-import static com.android.systemui.statusbar.BarTransitions.MODE_WARNING;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_LIGHTS_OUT;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_LIGHTS_OUT_TRANSPARENT;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_OPAQUE;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_SEMI_TRANSPARENT;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_TRANSLUCENT;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_TRANSPARENT;
+import static com.android.systemui.statusbar.phone.BarTransitions.MODE_WARNING;
 
 import cyanogenmod.providers.CMSettings;
 import cyanogenmod.themes.IThemeService;
 
 public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         DragDownHelper.DragDownCallback, ActivityStarter, OnUnlockMethodChangedListener,
-        HeadsUpManager.OnHeadsUpChangedListener, WeatherController.Callback {
+        HeadsUpManager.OnHeadsUpChangedListener {
     static final String TAG = "PhoneStatusBar";
     public static final boolean DEBUG = BaseStatusBar.DEBUG;
     public static final boolean SPEW = false;
@@ -316,36 +273,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     public static final int FADE_KEYGUARD_DURATION = 300;
     public static final int FADE_KEYGUARD_DURATION_PULSING = 96;
 
-    // Weather temperature
-    public static final int FONT_NORMAL = 0;
-    public static final int FONT_ITALIC = 1;
-    public static final int FONT_BOLD = 2;
-    public static final int FONT_BOLD_ITALIC = 3;
-    public static final int FONT_LIGHT = 4;
-    public static final int FONT_LIGHT_ITALIC = 5;
-    public static final int FONT_THIN = 6;
-    public static final int FONT_THIN_ITALIC = 7;
-    public static final int FONT_CONDENSED = 8;
-    public static final int FONT_CONDENSED_ITALIC = 9;
-    public static final int FONT_CONDENSED_LIGHT = 10;
-    public static final int FONT_CONDENSED_LIGHT_ITALIC = 11;
-    public static final int FONT_CONDENSED_BOLD = 12;
-    public static final int FONT_CONDENSED_BOLD_ITALIC = 13;
-    public static final int FONT_MEDIUM = 14;
-    public static final int FONT_MEDIUM_ITALIC = 15;
-    public static final int FONT_BLACK = 16;
-    public static final int FONT_BLACK_ITALIC = 17;
-    public static final int FONT_DANCINGSCRIPT = 18;
-    public static final int FONT_DANCINGSCRIPT_BOLD = 19;
-    public static final int FONT_COMINGSOON = 20;
-    public static final int FONT_NOTOSERIF = 21;
-    public static final int FONT_NOTOSERIF_ITALIC = 22;
-    public static final int FONT_NOTOSERIF_BOLD = 23;
-    public static final int FONT_NOTOSERIF_BOLD_ITALIC = 24;
-
     /** Allow some time inbetween the long press for back and recents. */
     private static final int LOCK_TO_APP_GESTURE_TOLERENCE = 200;
-	
 
     /** If true, the system is in the half-boot-to-decryption-screen state.
      * Prudently disable QS and notifications.  */
@@ -383,11 +312,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     UserSwitcherController mUserSwitcherController;
     NextAlarmController mNextAlarmController;
     KeyguardMonitor mKeyguardMonitor;
+    BrightnessMirrorController mBrightnessMirrorController;
     AccessibilityController mAccessibilityController;
+    WeatherControllerImpl mWeatherController;
     SuControllerImpl mSuController;
     FingerprintUnlockController mFingerprintUnlockController;
     LiveLockScreenController mLiveLockScreenController;
-    MinitBatteryController mMinitBatteryController;
 
     int mNaturalBarHeight = -1;
 
@@ -407,12 +337,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     private BatteryMeterView mBatteryView;
     private BatteryLevelTextView mBatteryTextView;
 
-    private int mQsColorSwitch;
-    public boolean mColorSwitch = false ;
-    private  View mIcon;
-    public SignalTileView mSignalView;	
-    public boolean mNavSwitch = false ;
-
     int mPixelFormat;
     Object mQueueLock = new Object();
 
@@ -423,21 +347,10 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     View mExpandedContents;
     TextView mNotificationPanelDebugText;
 
-    private QSPanel mQSPanel;
-
+    // settings
+    private QSDragPanel mQSPanel;
     private QSTileHost mQSTileHost;
-
-    // task manager
-    private TaskManager mTaskManager;
-    private LinearLayout mTaskManagerPanel;
-    private ImageButton mTaskManagerButton;
-    // task manager enabled
-    private boolean mShowTaskManager;
-    // task manager click state
-    private boolean mShowTaskList = false;
-
-    private boolean mShow4G;
-    private boolean mShow3G;	
+    private DevForceNavbarObserver mDevForceNavbarObserver;
 
     // top bar
     StatusBarHeaderView mHeader;
@@ -458,58 +371,13 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     private Bitmap mKeyguardWallpaper;
 
     int mKeyguardMaxNotificationCount;
-    boolean mExpandedVisible;
 
-    // RR logo
-    private boolean mRRlogo;
-    private ImageView rrLogo;
-    private int mRRLogoColor;	
-    private int mRRLogoStyle;
-
-    // QS Colors
-    private int mQsIconColor;
-    private int mLabelColor;
-
-   // Custom Logos
-
-    private boolean mCustomlogo;
-    private ImageView mCLogo;
-    private int mCustomlogoColor;	
-    private int mCustomlogoStyle;
-    private ImageView mSbgradient;
-
-    // Weather temperature
-    private TextView mWeatherTempView;
-    private int mWeatherTempState;
-    private int mWeatherTempStyle;
-    private int mWeatherTempColor;
-    private int mWeatherTempSize;
-    private int mWeatherTempFontStyle = FONT_NORMAL;
-    private WeatherControllerImpl mWeatherController;
-
-    private int mMaxKeyguardNotifConfig;
-    private boolean mCustomMaxKeyguard;
-
-    //Blur stuff
-    private int mBlurScale;
-    private int mBlurRadius;
-    private boolean mTranslucentQuickSettings;
-    private boolean mBlurredStatusBarExpandedEnabled;
-    private boolean mTranslucentNotifications;
-    private boolean mTranslucentHeader;
-    private int mHeaderTranslucencyPercentage;
-    private int mQSTranslucencyPercentage;
-    private int mNotTranslucencyPercentage;
-    private boolean mTranslucentRecents;
+    boolean mExpandedVisible;
 
     private int mNavigationBarWindowState = WINDOW_STATE_SHOWING;
 
     private int mStatusBarHeaderHeight;
 
-
-    private ActivityStarter mActivityStarter;
-    private ServiceConnection mScreenshotConnection = null;
-
     // the tracker view
     int mTrackingPosition; // the position of the top of the tracking view.
 
@@ -530,14 +398,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     int mInitialTouchX;
     int mInitialTouchY;
 
-
-    // last theme that was applied in order to detect theme change (as opposed
-    // to some other configuration change).
-    ThemeConfig mCurrentTheme;
-
     private boolean mRecreating = false;
-    private int mBatterySaverWarningColor;
-
 
     // for disabling the status bar
     int mDisabled1 = 0;
@@ -581,424 +442,25 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     // - The custom Recents Long Press, if selected.  When null, use default (switch last app).
     private ComponentName mCustomRecentsLongPressHandler = null;
 
-    private int mBlurLockRadius;
-    private Bitmap mBlurredImage = null;
-        private NavigationController mNavigationController;
-    private DUPackageMonitor mPackageMonitor;
-
-    private final Runnable mRemoveNavigationBar = new Runnable() {
-        @Override
-        public void run() {
-            removeNavigationBar();
-        }
-    };
-
-    private final Runnable mAddNavigationBar = new Runnable() {
-        @Override
-        public void run() {
-            forceAddNavigationBar();
-        }
-    };
-
-    private View.OnTouchListener mUserAutoHideListener = new View.OnTouchListener() {
-        @Override
-        public boolean onTouch(View v, MotionEvent event) {
-            checkUserAutohide(v, event);
-            return false;
-        }
-    };
-
-    private Navigator.OnVerticalChangedListener mVerticalChangedListener = new Navigator.OnVerticalChangedListener() {
-        @Override
-        public void onVerticalChanged(boolean isVertical) {
-            if (mAssistManager != null) {
-                mAssistManager.onConfigurationChanged();
-            }
-            mNotificationPanel.setQsScrimEnabled(!isVertical);
-        }
-    };
-
-    private DUSystemReceiver mDUReceiver = new DUSystemReceiver() {
-        @Override
-        protected void onSecureReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            if (TextUtils.equals(ActionHandler.INTENT_TOGGLE_FLASHLIGHT, action)) {
-                if (mFlashlightController.isAvailable()) {
-                    mFlashlightController.setFlashlight(!mFlashlightController.isEnabled());
-                }
-            }
-        }
-    };
-
     class SettingsObserver extends UserContentObserver {
-
         SettingsObserver(Handler handler) {
             super(handler);
         }
 
-
         @Override
         protected void observe() {
             super.observe();
-	ContentResolver resolver = mContext.getContentResolver();
-	resolver.registerContentObserver(CMSettings.System.getUriFor(
-			CMSettings.System.STATUS_BAR_BRIGHTNESS_CONTROL), false, this,
-			UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.SCREEN_BRIGHTNESS_MODE), false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_RR_LOGO),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_RR_LOGO_COLOR),
-			false, this, UserHandle.USER_ALL);	
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_SHOW_WEATHER_TEMP),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_WEATHER_TEMP_STYLE),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_WEATHER_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_WEATHER_SIZE),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_WEATHER_FONT_STYLE),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.LOCKSCREEN_ROTATION),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.LOCKSCREEN_BLUR_RADIUS), 
-			false, this);	
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.ENABLE_TASK_MANAGER),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.USE_SLIM_RECENTS), false, this,
-			UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.RECENT_CARD_BG_COLOR), false, this,
-			UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.RECENT_CARD_TEXT_COLOR),
-			false, this,UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.SHOW_FOURG),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.SHOW_THREEG),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.LOCKSCREEN_MAX_NOTIF_CONFIG),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.NOTIFICATION_DRAWER_CLEAR_ALL_ICON_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_RR_LOGO),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_RR_LOGO_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_RR_LOGO_STYLE),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_CUSTOM_HEADER_SHADOW),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.QS_COLOR_SWITCH),
-			false, this, UserHandle.USER_ALL);        
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_NETWORK_ICONS_SIGNAL_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_NETWORK_ICONS_NO_SIM_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_NETWORK_ICONS_AIRPLANE_MODE_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_STATUS_ICONS_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_NOTIFICATION_ICONS_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUSBAR_COLOR_SWITCH),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.BATTERY_ICON_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.BATTERY_TEXT_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.QS_BACKGROUND_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.QS_ICON_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.QS_TEXT_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.SHOW_CUSTOM_LOGO),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.CUSTOM_LOGO_COLOR),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.CUSTOM_LOGO_STYLE),
-			false, this, UserHandle.USER_ALL);                   
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.CLEAR_RECENTS_STYLE),
-			false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.CLEAR_RECENTS_STYLE_ENABLE),
-			false, this, UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.BATTERY_SAVER_MODE_COLOR),
-                    false, this, UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.NAVBAR_TINT_SWITCH),
-                    false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.NAVBAR_BUTTON_COLOR),
-                    false, this, UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.FLING_PULSE_ENABLED),
-                    false, this, UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System. SHOW_DARK_ICONS),
-                    false, this, UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW), false, this,
-                    UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW_COLOR), false, this,
+
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.System.STATUS_BAR_BRIGHTNESS_CONTROL), false, this,
                     UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-		    Settings.System.QS_STROKE), false, this,
-		    UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-		    Settings.System.STATUSBAR_CLOCK_COLOR_SWITCH), false, this,
-		    UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.NAVBAR_BUTTONS_ALPHA),
-                    false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.BLUR_SCALE_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.BLUR_RADIUS_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_EXPANDED_ENABLED_PREFERENCE_KEY), false, this);
             resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_HEADER_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PRECENTAGE_PREFERENCE_KEY), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_HEADER_PRECENTAGE_PREFERENCE_KEY), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PRECENTAGE_PREFERENCE_KEY), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_CUSTOM_MASTER_SWITCH), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_HEADER_MASTER_SWITCH), false, this, UserHandle.USER_ALL);       
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.RECENT_APPS_ENABLED_PREFERENCE_KEY), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BRIGHTNESS_SLIDER_COLOR), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_RIPPLE_COLOR), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_BRIGHTNESS_SLIDER_BG_COLOR), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_PANEL_LOGO_STYLE), false, this, UserHandle.USER_ALL);
-            update();
-        }
-
-	    @Override
-        public void onChange(boolean selfChange, Uri uri) {
-	if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_WEATHER_TEMP_STYLE))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_WEATHER_COLOR))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_WEATHER_SIZE))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_WEATHER_FONT_STYLE))) {
-		updateTempView();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.USE_SLIM_RECENTS))) {
-		updateRecents();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.RECENT_CARD_BG_COLOR))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.RECENT_CARD_TEXT_COLOR))) {
-		rebuildRecentsScreen();        
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.LOCKSCREEN_ROTATION))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.ACCELEROMETER_ROTATION))) {
-		mStatusBarWindowManager.updateKeyguardScreenRotation();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.SHOW_FOURG))) {
-		mShow4G = Settings.System.getIntForUser(
-		mContext.getContentResolver(),
-		Settings.System.SHOW_FOURG,
-		0, UserHandle.USER_CURRENT) == 1;
-		mNetworkController.onConfigurationChanged();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.SHOW_THREEG))) {
-		mShow3G = Settings.System.getIntForUser(
-		mContext.getContentResolver(),
-		Settings.System.SHOW_THREEG,
-		0, UserHandle.USER_CURRENT) == 1;
-		mNetworkController.onConfigurationChanged();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.NOTIFICATION_DRAWER_CLEAR_ALL_ICON_COLOR))) {
-		UpdateNotifDrawerClearAllIconColor();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_RR_LOGO_STYLE))) {
-		DontStressOnRecreate();
-		}  else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_NETWORK_ICONS_SIGNAL_COLOR))) {
-		updateNetworkSignalColor();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_NETWORK_ICONS_NO_SIM_COLOR))) {
-		updateNoSimColor();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_NETWORK_ICONS_AIRPLANE_MODE_COLOR))) {
-		updateAirplaneModeColor();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_STATUS_ICONS_COLOR))) {
-		updateStatusIconsColor();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUS_BAR_NOTIFICATION_ICONS_COLOR))) {
-		updateNotificationIconsColor();
-		}  else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.BATTERY_ICON_COLOR))) {
-		updatebatterycolor(); 
-		DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.BATTERY_TEXT_COLOR))) {
-		updatebatterycolor(); 
-		} else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.STATUSBAR_COLOR_SWITCH))) {
-                updatebatterycolor();    
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_COLOR_SWITCH))) {
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_ICON_COLOR))) {
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_TEXT_COLOR))) {
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_HEADER_TEXT_COLOR))
-                    || uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_BACKGROUND_COLOR))) {
-               	updateQsColors();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.SHOW_CUSTOM_LOGO))) {
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.CUSTOM_LOGO_STYLE))) {
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.CLEAR_RECENTS_STYLE))
-                    || uri.equals(Settings.System.getUriFor(
-                    Settings.System.CLEAR_RECENTS_STYLE_ENABLE))) {
-               	DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.BATTERY_SAVER_MODE_COLOR))) {
-                    mBatterySaverWarningColor = Settings.System.getIntForUser(
-                            mContext.getContentResolver(),
-                            Settings.System.BATTERY_SAVER_MODE_COLOR, 1,
-                            UserHandle.USER_CURRENT);
-                    if (mBatterySaverWarningColor != 0) {
-                        mBatterySaverWarningColor = mContext.getResources()
-                                .getColor(com.android.internal.R.color.battery_saver_mode_color);
-		    }
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.NAVBAR_TINT_SWITCH))) {
-		    mNavigationController.updateNavbarOverlay(getNavbarThemedResources());
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.NAVBAR_BUTTON_COLOR))) {
-		    mNavigationController.updateNavbarOverlay(getNavbarThemedResources());
-		}  else if (uri.equals(Settings.Secure.getUriFor(
-                    Settings.Secure.FLING_PULSE_ENABLED))) {
-		    makepulsetoast();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.SHOW_DARK_ICONS))) {
-                DontStressOnRecreate();
-		} else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_STROKE))) {
-                    int mQSStroke = Settings.System.getIntForUser(
-                            mContext.getContentResolver(),
-                            Settings.System.QS_STROKE, 1,
-                            UserHandle.USER_CURRENT);
-                    if (mQSStroke == 0) {
-                    DontStressOnRecreate();
-                    }
-               } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.STATUSBAR_CLOCK_COLOR_SWITCH))) {
-                    int mClockColorSwitch = Settings.System.getIntForUser(
-                            mContext.getContentResolver(),
-                            Settings.System.STATUSBAR_CLOCK_COLOR_SWITCH, 0,
-                            UserHandle.USER_CURRENT);
-                   DontStressOnRecreate();
-	      } else if (uri.equals(Settings.Secure.getUriFor(
-                    Settings.Secure.NAVBAR_BUTTONS_ALPHA))) {
-		   mNavigationController.updateNavbarOverlay(getNavbarThemedResources());
-              } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_HEADER_PREFERENCE_KEY))) {
-                    mTranslucentHeader = Settings.System.getIntForUser(
-                                        mContext.getContentResolver(),
-                                        Settings.System.TRANSLUCENT_HEADER_PREFERENCE_KEY,
-                                        0, UserHandle.USER_CURRENT) == 1;
-                    DontStressOnRecreate();
-            } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PREFERENCE_KEY))) {
-                    DontStressOnRecreate();
-            }  else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_EXPANDED_ENABLED_PREFERENCE_KEY))) {
-                    DontStressOnRecreate();
-            } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_CUSTOM_MASTER_SWITCH))) {
-                    DontStressOnRecreate();
-            } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_HEADER_MASTER_SWITCH))) {
-                    DontStressOnRecreate();
-            } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.RECENT_APPS_ENABLED_PREFERENCE_KEY))) {
-                    mTranslucentRecents = Settings.System.getIntForUser(
-                                        mContext.getContentResolver(),
-                                        Settings.System.RECENT_APPS_ENABLED_PREFERENCE_KEY,
-                                        0, UserHandle.USER_CURRENT) == 1;
-                    RecentsActivity.startBlurTask();
-                    updatePreferences(mContext);
-            } else if (uri.equals(Settings.System.getUriFor(
-		Settings.System.QS_BRIGHTNESS_SLIDER_COLOR))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.QS_RIPPLE_COLOR))
-		|| uri.equals(Settings.System.getUriFor(
-		Settings.System.QS_BRIGHTNESS_SLIDER_BG_COLOR))) {
-		DontStressOnRecreate();
-	    } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_PANEL_LOGO_STYLE))) {
-                    DontStressOnRecreate();
-            }
+                    Settings.System.SCREEN_BRIGHTNESS_MODE), false, this, UserHandle.USER_ALL);
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.System.NAVBAR_LEFT_IN_LANDSCAPE), false, this, UserHandle.USER_ALL);
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.Secure.RECENTS_LONG_PRESS_ACTIVITY), false, this);
             update();
         }
 
@@ -1009,7 +471,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             resolver.unregisterContentObserver(this);
         }
 
-
         @Override
         public void update() {
             ContentResolver resolver = mContext.getContentResolver();
@@ -1019,317 +480,52 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                             UserHandle.USER_CURRENT);
             mAutomaticBrightness = mode != Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL;
             mBrightnessControl = CMSettings.System.getIntForUser(
-			resolver, CMSettings.System.STATUS_BAR_BRIGHTNESS_CONTROL, 0,
-			UserHandle.USER_CURRENT) == 1;
-		mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-		mQsIconColor = Settings.System.getIntForUser(resolver,
-			Settings.System.QS_ICON_COLOR, 0xFFFFFFFF, mCurrentUserId);
-		mLabelColor = Settings.System.getIntForUser(resolver,
-			Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF, mCurrentUserId);
-		mRRLogoStyle = Settings.System.getIntForUser(
-			resolver, Settings.System.STATUS_BAR_RR_LOGO_STYLE, 0,
-			UserHandle.USER_CURRENT);
-		mRRlogo = Settings.System.getIntForUser(resolver,
-			Settings.System.STATUS_BAR_RR_LOGO, 0, mCurrentUserId) == 1;
-		mRRLogoColor = Settings.System.getIntForUser(resolver,
-			Settings.System.STATUS_BAR_RR_LOGO_COLOR, 0xFFFFFFFF, mCurrentUserId);
-	       if ( mRRLogoStyle == 0) {
-			rrLogo = (ImageView) mStatusBarView.findViewById(R.id.left_rr_logo);
-			} else if ( mRRLogoStyle == 1) {
-			rrLogo = (ImageView) mStatusBarView.findViewById(R.id.center_rr_logo);
-			} else if ( mRRLogoStyle == 2) {
-			rrLogo = (ImageView) mStatusBarView.findViewById(R.id.rr_logo);
-			} else if ( mRRLogoStyle == 3) {
-			rrLogo = (ImageView) mStatusBarView.findViewById(R.id.before_icons_rr_logo);
-			} 
-			showRRLogo(mRRlogo, mRRLogoColor,  mRRLogoStyle);
-
-		mCustomlogoStyle = Settings.System.getIntForUser(
-		resolver, Settings.System.CUSTOM_LOGO_STYLE, 0,
-		UserHandle.USER_CURRENT);
-		mCustomlogo = Settings.System.getIntForUser(resolver,
-		Settings.System.SHOW_CUSTOM_LOGO, 0, mCurrentUserId) == 1;
-		mCustomlogoColor = Settings.System.getIntForUser(resolver,
-		Settings.System.CUSTOM_LOGO_COLOR, 0xFFFFFFFF, mCurrentUserId);
-		if ( mCustomlogoStyle == 0) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom);
-		} else if ( mCustomlogoStyle == 1) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_1);
-		} else if ( mCustomlogoStyle == 2) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_2);
-		} else if ( mCustomlogoStyle == 3) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_3);
-		} else if ( mCustomlogoStyle == 4) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_4);
-		} else if ( mCustomlogoStyle == 5) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_5);
-		} else if ( mCustomlogoStyle == 6) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_6);
-		} else if ( mCustomlogoStyle == 7) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_7);
-		} else if ( mCustomlogoStyle == 8) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_8);
-		} else if ( mCustomlogoStyle == 9) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_9);
-		} else if ( mCustomlogoStyle == 10) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_10);
-		} else if ( mCustomlogoStyle == 11) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_11);
-		} else if ( mCustomlogoStyle == 12) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_12);
-		} else if ( mCustomlogoStyle == 13) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_13);
-		} else if ( mCustomlogoStyle == 14) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_14);
-		} else if ( mCustomlogoStyle == 15) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_15);
-		} else if ( mCustomlogoStyle == 16) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_16);
-		} else if ( mCustomlogoStyle == 17) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_17);
-		} else if ( mCustomlogoStyle == 18) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_18);
-		} else if ( mCustomlogoStyle == 19) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_19);
-		} else if ( mCustomlogoStyle == 20) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_20);
-		} else if ( mCustomlogoStyle == 21) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_21);
-		} else if ( mCustomlogoStyle == 22) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_22);
-		} else if ( mCustomlogoStyle == 23) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_23);
-		} else if ( mCustomlogoStyle == 24) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_24);
-		} else if ( mCustomlogoStyle == 25) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_25);
-		} else if ( mCustomlogoStyle == 26) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_26);
-		} else if ( mCustomlogoStyle == 27) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_27);
-		} else if ( mCustomlogoStyle == 28) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_28);
-		} else if ( mCustomlogoStyle == 29) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_29);
-		} else if ( mCustomlogoStyle == 30) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_30);
-		} else if ( mCustomlogoStyle == 31) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_31);
-		} else if ( mCustomlogoStyle == 32) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_32);
-		} else if ( mCustomlogoStyle == 33) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_33);
-		} else if ( mCustomlogoStyle == 34) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_34);
-		} else if ( mCustomlogoStyle == 35) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_35);
-		} else if ( mCustomlogoStyle == 36) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_36);
-		} else if ( mCustomlogoStyle == 37) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_37);
-		} else if ( mCustomlogoStyle == 38) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_38);
-		} else if ( mCustomlogoStyle == 39) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_39);
-		} else if ( mCustomlogoStyle == 40) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_40);
-		} else if ( mCustomlogoStyle == 41) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_41);
-		} else if ( mCustomlogoStyle == 42) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_42);
-		} else if ( mCustomlogoStyle == 43) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_43);
-		}
-
-	    showmCustomlogo(mCustomlogo, mCustomlogoColor,  mCustomlogoStyle);
-
-            boolean mShow4G = Settings.System.getIntForUser(resolver,
-                    Settings.System.SHOW_FOURG, 0, UserHandle.USER_CURRENT) == 1;
-	  
-	    boolean mShow3G = Settings.System.getIntForUser(resolver,
-                    Settings.System.SHOW_THREEG, 0, UserHandle.USER_CURRENT) == 1;
-            boolean showTaskManager = Settings.System.getIntForUser(resolver,
-                    Settings.System.ENABLE_TASK_MANAGER, 0, UserHandle.USER_CURRENT) == 1;
-            if (mShowTaskManager != showTaskManager) {
-                if (!mShowTaskManager) {
-                    // explicitly reset click state when disabled
-                    mShowTaskList = false;
-                }
-                mShowTaskManager = showTaskManager;
-                if (mHeader != null) {
-                    mHeader.setTaskManagerEnabled(showTaskManager);
-                }
-                if (mNotificationPanel != null) {
-                    mNotificationPanel.setTaskManagerEnabled(showTaskManager);
-                }
-            }
+                    resolver, CMSettings.System.STATUS_BAR_BRIGHTNESS_CONTROL, 0,
+                    UserHandle.USER_CURRENT) == 1;
+
             if (mNavigationBarView != null) {
                 boolean navLeftInLandscape = CMSettings.System.getIntForUser(resolver,
                         CMSettings.System.NAVBAR_LEFT_IN_LANDSCAPE, 0, UserHandle.USER_CURRENT) == 1;
                 mNavigationBarView.setLeftInLandscape(navLeftInLandscape);
             }
 
-            mWeatherTempState = Settings.System.getIntForUser(
-                    resolver, Settings.System.STATUS_BAR_SHOW_WEATHER_TEMP, 0,
-                    UserHandle.USER_CURRENT);
-
-            mWeatherTempStyle = Settings.System.getIntForUser(
-                    resolver, Settings.System.STATUS_BAR_WEATHER_TEMP_STYLE, 0,
-                    UserHandle.USER_CURRENT);
-
-            mWeatherTempColor = Settings.System.getIntForUser(resolver,
-                    Settings.System.STATUS_BAR_WEATHER_COLOR, 0xFFFFFFFF, mCurrentUserId);
-
-            mWeatherTempSize = Settings.System.getIntForUser(resolver,
-                    Settings.System.STATUS_BAR_WEATHER_SIZE, 14, mCurrentUserId);
-
-            mWeatherTempFontStyle = Settings.System.getIntForUser(resolver,
-                    Settings.System.STATUS_BAR_WEATHER_FONT_STYLE, FONT_NORMAL, mCurrentUserId);
-
-            mBlurLockRadius = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.LOCKSCREEN_BLUR_RADIUS, 14);
-
-            mMaxKeyguardNotifConfig = Settings.System.getIntForUser(resolver,
-                    Settings.System.LOCKSCREEN_MAX_NOTIF_CONFIG, 5, mCurrentUserId);
-
-            updateTempView();
-            
-            mBlurScale = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.BLUR_SCALE_PREFERENCE_KEY, 10);
-            mBlurRadius = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.BLUR_RADIUS_PREFERENCE_KEY, 5);
-            mTranslucentQuickSettings =  Settings.System.getIntForUser(resolver,
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mBlurredStatusBarExpandedEnabled = Settings.System.getIntForUser(resolver,
-                    Settings.System.STATUS_BAR_EXPANDED_ENABLED_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mTranslucentNotifications = Settings.System.getIntForUser(resolver,
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mTranslucentHeader = Settings.System.getIntForUser(resolver,
-                    Settings.System.TRANSLUCENT_HEADER_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mTranslucentRecents = Settings.System.getIntForUser(resolver,
-                    Settings.System.RECENT_APPS_ENABLED_PREFERENCE_KEY, 0, UserHandle.USER_CURRENT) == 1;
-            mQSTranslucencyPercentage = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSLUCENT_QUICK_SETTINGS_PRECENTAGE_PREFERENCE_KEY, 60);
-            mHeaderTranslucencyPercentage = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSLUCENT_HEADER_PRECENTAGE_PREFERENCE_KEY, 70);
-            mNotTranslucencyPercentage = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSLUCENT_NOTIFICATIONS_PRECENTAGE_PREFERENCE_KEY, 70);
-            //updatePreferences(this.mContext);
-            //RecentsActivity.startBlurTask();
+            // This method reads CMSettings.Secure.RECENTS_LONG_PRESS_ACTIVITY
+            updateCustomRecentsLongPressHandler(false);
         }
     }
 
-
     public void setStatusBarViewVisibility(boolean visible) {
         mStatusBarView.setVisibility(visible ? View.VISIBLE : View.INVISIBLE);
     }
 
-    private void updateWeatherTextState(String temp, int color, int size, int font) {
-        if (mWeatherTempState == 0 || TextUtils.isEmpty(temp)) {
-            mWeatherTempView.setVisibility(View.GONE);
-            return;
+    class DevForceNavbarObserver extends UserContentObserver {
+        DevForceNavbarObserver(Handler handler) {
+            super(handler);
         }
-        if (mWeatherTempState == 1) {
-            SpannableString span = new SpannableString(temp);
-            span.setSpan(new RelativeSizeSpan(0.7f), temp.length() - 1, temp.length(), 0);
-            mWeatherTempView.setText(span);
-        } else if (mWeatherTempState == 2) {
-            mWeatherTempView.setText(temp.substring(0, temp.length() - 1));
-        }
-        mWeatherTempView.setTextColor(color);
-        mWeatherTempView.setTextSize(size);
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mWeatherTempView.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mWeatherTempView.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mWeatherTempView.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mWeatherTempView.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mWeatherTempView.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mWeatherTempView.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
+
+        @Override
+        protected void observe() {
+            super.observe();
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.registerContentObserver(CMSettings.Global.getUriFor(
+                    CMSettings.Global.DEV_FORCE_SHOW_NAVBAR), false, this, UserHandle.USER_ALL);
         }
-        mWeatherTempView.setVisibility(View.VISIBLE);
-    }
 
-    private void updateTempView() {
-        if (mWeatherTempView != null) {
-            mWeatherTempView.setVisibility(View.GONE);
-            if (mWeatherTempStyle == 0) {
-                mWeatherTempView = (TextView) mStatusBarView.findViewById(R.id.weather_temp);
+        @Override
+        public void update() {
+            boolean visible = CMSettings.Global.getIntForUser(mContext.getContentResolver(),
+                    CMSettings.Global.DEV_FORCE_SHOW_NAVBAR, 0, UserHandle.USER_CURRENT) == 1;
+
+            if (visible) {
+                forceAddNavigationBar();
             } else {
-                mWeatherTempView = (TextView) mStatusBarView.findViewById(R.id.left_weather_temp);
+                removeNavigationBar();
             }
-	    updateWeatherTextState(mWeatherController.getWeatherInfo().temp,
-                    mWeatherTempColor, mWeatherTempSize, mWeatherTempFontStyle);
+
+            // Send a broadcast to Settings to update Key disabling when user changes
+            Intent intent = new Intent("com.cyanogenmod.action.UserChanged");
+            intent.setPackage("com.android.settings");
+            mContext.sendBroadcastAsUser(intent, new UserHandle(UserHandle.USER_CURRENT));
         }
     }
 
@@ -1339,13 +535,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             return;
         }
 
+        mNavigationBarView =
+                (NavigationBarView) View.inflate(mContext, R.layout.navigation_bar, null);
 
-        mNavigationBarView = mNavigationController.getNavigationBarView(mContext);
         mNavigationBarView.setDisabledFlags(mDisabled1);
-//      addNavigationBarCallback(mNavigationBarView);
-        mNavigationBarView.notifyInflateFromUser(); // let bar know we're not starting from boot
+        mNavigationBarView.setBar(this);
         addNavigationBar(true); // dynamically adding nav bar, reset System UI visibility!
-
     }
 
     // ensure quick settings is disabled until the current user makes it through the setup wizard
@@ -1373,10 +568,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             if (mIconPolicy != null) {
                 mIconPolicy.setCurrentUserSetup(mUserSetup);
             }
-
-            if (mQSPanel != null) {
-                mQSPanel.updateNumColumns();
-            }
         }
     };
 
@@ -1405,8 +596,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     private int mStatusBarMode;
     private int mNavigationBarMode;
 
-    private StatusBarHeaderMachine mStatusBarHeaderMachine;
-
     private ViewMediatorCallback mKeyguardViewMediatorCallback;
     private ScrimController mScrimController;
     private DozeScrimController mDozeScrimController;
@@ -1623,12 +812,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mCurrentTheme = ThemeConfig.getBootTheme(mContext.getContentResolver());
         }
 
-        // let's move it here and get it fired up nice and early and far away from statusbar recreation
-        if (mNavigationController == null) {
-            mNavigationController = new NavigationController(mContext, getNavbarThemedResources(), this, mAddNavigationBar,
-                    mRemoveNavigationBar);   
-        }
-
         mStatusBarWindow = new StatusBarWindowView(mContext, null);
         mStatusBarWindow.setService(this);
 
@@ -1641,6 +824,17 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
         addNavigationBar(false);
 
+        // Developer options - Force Navigation bar
+        try {
+            boolean needsNav = mWindowManagerService.needsNavigationBar();
+            if (!needsNav) {
+                mDevForceNavbarObserver = new DevForceNavbarObserver(mHandler);
+                mDevForceNavbarObserver.observe();
+            }
+        } catch (RemoteException ex) {
+            // no window manager? good luck with that
+        }
+
         SettingsObserver observer = new SettingsObserver(mHandler);
         observer.observe();
 
@@ -1688,7 +882,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     // ================================================================================
     // Constructing the view
     // ================================================================================
-    @ChaosLab(name="GestureAnywhere", classification=Classification.CHANGE_CODE)
     protected PhoneStatusBarView makeStatusBarView() {
         final Context context = mContext;
 
@@ -1719,10 +912,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mStatusBarView = (PhoneStatusBarView) mStatusBarWindowContent.findViewById(R.id.status_bar);
         mStatusBarView.setBar(this);
 
-        mPackageMonitor = new DUPackageMonitor();
-        mPackageMonitor.register(mContext, mHandler);
-        mPackageMonitor.addListener(mNavigationController);
-
         PanelHolder holder = (PanelHolder) mStatusBarWindowContent.findViewById(R.id.panel_holder);
         mStatusBarView.setPanelHolder(holder);
 
@@ -1757,27 +946,40 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mNotificationPanelDebugText.setVisibility(View.VISIBLE);
         }
 
-
         try {
             boolean showNav = mWindowManagerService.hasNavigationBar();
             if (DEBUG) Log.v(TAG, "hasNavigationBar=" + showNav);
             if (showNav && !mRecreating) {
-                mNavigationBarView = mNavigationController.getNavigationBarView(mContext);
+                mNavigationBarView =
+                    (NavigationBarView) View.inflate(context, R.layout.navigation_bar, null);
+                mNavigationBarView.updateResources(getNavbarThemedResources());
+
                 mNavigationBarView.setDisabledFlags(mDisabled1);
+                mNavigationBarView.setBar(this);
+                mNavigationBarView.setOnVerticalChangedListener(
+                        new NavigationBarView.OnVerticalChangedListener() {
+                    @Override
+                    public void onVerticalChanged(boolean isVertical) {
+                        if (mAssistManager != null) {
+                            mAssistManager.onConfigurationChanged();
+                        }
+                        mNotificationPanel.setQsScrimEnabled(!isVertical);
+                    }
+                });
+                mNavigationBarView.setOnTouchListener(new View.OnTouchListener() {
+                    @Override
+                    public boolean onTouch(View v, MotionEvent event) {
+                        checkUserAutohide(v, event);
+                        return false;
+                    }});
             }
         } catch (RemoteException ex) {
             // no window manager? good luck with that
         }
-        
-	if (!mRecreating) {
-            addGestureAnywhereView();
-            addAppCircleSidebar();
-        }
 
         if (mAssistManager == null) {
             mAssistManager = new AssistManager(this, context);
         }
-        
         if (mNavigationBarView == null) {
             mAssistManager.onConfigurationChanged();
         }
@@ -1850,34 +1052,21 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 mKeyguardBottomArea.getLockIcon());
         mKeyguardBottomArea.setKeyguardIndicationController(mKeyguardIndicationController);
 
-        mBatterySaverWarningColor = Settings.System.getIntForUser(
-                mContext.getContentResolver(),
-                Settings.System.BATTERY_SAVER_MODE_COLOR, 1,
-                UserHandle.USER_CURRENT);
-        if (mBatterySaverWarningColor != 0) {
-            mBatterySaverWarningColor = mContext.getResources()
-                   .getColor(com.android.internal.R.color.battery_saver_mode_color);
-        }
-
         // set the inital view visibility
         setAreThereNotifications();
 
-        mMinitBatteryController = new MinitBatteryController(mContext, mStatusBarView, mHeader, mKeyguardStatusBar);
-        mPackageMonitor.addListener(mMinitBatteryController);
-
         mIconController = new StatusBarIconController(
-                mContext, mStatusBarView, mKeyguardStatusBar, this);     
-	
+                mContext, mStatusBarView, mKeyguardStatusBar, this);
+
         // Background thread for any controllers that need it.
         mHandlerThread = new HandlerThread(TAG, Process.THREAD_PRIORITY_BACKGROUND);
         mHandlerThread.start();
-        
+
         // Other icons
         if (mLocationController == null) {
             mLocationController = new LocationControllerImpl(mContext,
                     mHandlerThread.getLooper()); // will post a notification
         }
-        
         if (mBatteryManager == null) {
             mBatteryManager = (BatteryManager) mContext.getSystemService(Context.BATTERY_SERVICE);
         }
@@ -1903,15 +1092,15 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                     // noop
                 }
             });
-        }    
+        }
         if (mBatteryManager.isDockBatterySupported()) {
             if (mDockBatteryController == null) {
                 mDockBatteryController = new DockBatteryController(mContext, mHandler);
             }
-	}
-	if (mNetworkController == null) {
-	    mNetworkController = new NetworkControllerImpl(mContext, mHandlerThread.getLooper());
-	}
+        }
+        if (mNetworkController == null) {
+            mNetworkController = new NetworkControllerImpl(mContext, mHandlerThread.getLooper());
+        }
         if (mHotspotController == null) {
             mHotspotController = new HotspotControllerImpl(mContext);
         }
@@ -1988,210 +1177,117 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mWeatherController = new WeatherControllerImpl(mContext);
         }
 
-        mWeatherTempStyle = Settings.System.getIntForUser(
-                mContext.getContentResolver(), Settings.System.STATUS_BAR_WEATHER_TEMP_STYLE, 0,
-                UserHandle.USER_CURRENT);
-        if (mWeatherTempStyle == 0) {
-            mWeatherTempView = (TextView) mStatusBarView.findViewById(R.id.weather_temp);
-        } else {
-            mWeatherTempView = (TextView) mStatusBarView.findViewById(R.id.left_weather_temp);
-        }
-
-        mWeatherTempColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_WEATHER_COLOR, 0xFFFFFFFF, mCurrentUserId);
-        mWeatherTempFontStyle = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_WEATHER_FONT_STYLE, FONT_NORMAL, mCurrentUserId);
-        mWeatherTempSize = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_WEATHER_SIZE, 14, mCurrentUserId);
-        mWeatherTempState = Settings.System.getIntForUser(
-                mContext.getContentResolver(), Settings.System.STATUS_BAR_SHOW_WEATHER_TEMP, 0,
-                UserHandle.USER_CURRENT);
-        if (mWeatherController == null) {
-            mWeatherController = new WeatherControllerImpl(mContext);
-        }
- 	updateTempView();
-        mWeatherController.addCallback(new WeatherController.Callback() {
-            @Override
-            public void onWeatherChanged(WeatherInfo temp) {
-                updateWeatherTextState(temp.temp, mWeatherTempColor, mWeatherTempSize, mWeatherTempFontStyle);
-            }
-        });
-        updateWeatherTextState(mWeatherController.getWeatherInfo().temp, mWeatherTempColor,
-                mWeatherTempSize, mWeatherTempFontStyle);
-
-	 mRRLogoStyle = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUS_BAR_RR_LOGO_STYLE, 0,
-                UserHandle.USER_CURRENT);
-        if ( mRRLogoStyle == 0) {
-                rrLogo = (ImageView) mStatusBarView.findViewById(R.id.left_rr_logo);
-            } else if ( mRRLogoStyle == 1) {
-                rrLogo = (ImageView) mStatusBarView.findViewById(R.id.center_rr_logo);
-            } else if ( mRRLogoStyle == 2) {
-			 rrLogo = (ImageView) mStatusBarView.findViewById(R.id.rr_logo);
-	    }else if ( mRRLogoStyle == 3) {
-                rrLogo = (ImageView) mStatusBarView.findViewById(R.id.before_icons_rr_logo);
-		}
-        mRRlogo = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUS_BAR_RR_LOGO, 0, mCurrentUserId) == 1;
-        mRRLogoColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUS_BAR_RR_LOGO_COLOR, 0xFFFFFFFF, mCurrentUserId);
-       showRRLogo(mRRlogo, mRRLogoColor,  mRRLogoStyle);
-
-	mCustomlogoStyle = Settings.System.getIntForUser(mContext.getContentResolver(), 
-		    Settings.System.CUSTOM_LOGO_STYLE, 0,
-                    UserHandle.USER_CURRENT);
-            mCustomlogo = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.SHOW_CUSTOM_LOGO, 0, mCurrentUserId) == 1;
-            mCustomlogoColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.CUSTOM_LOGO_COLOR, 0xFFFFFFFF, mCurrentUserId);
-		if ( mCustomlogoStyle == 0) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom);
-		} else if ( mCustomlogoStyle == 1) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_1);
-		} else if ( mCustomlogoStyle == 2) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_2);
-		} else if ( mCustomlogoStyle == 3) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_3);
-		} else if ( mCustomlogoStyle == 4) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_4);
-		} else if ( mCustomlogoStyle == 5) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_5);
-		} else if ( mCustomlogoStyle == 6) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_6);
-		} else if ( mCustomlogoStyle == 7) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_7);
-		} else if ( mCustomlogoStyle == 8) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_8);
-		} else if ( mCustomlogoStyle == 9) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_9);
-		} else if ( mCustomlogoStyle == 10) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_10);
-		} else if ( mCustomlogoStyle == 11) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_11);
-		} else if ( mCustomlogoStyle == 12) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_12);
-		} else if ( mCustomlogoStyle == 13) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_13);
-		} else if ( mCustomlogoStyle == 14) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_14);
-		} else if ( mCustomlogoStyle == 15) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_15);
-		} else if ( mCustomlogoStyle == 16) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_16);
-		} else if ( mCustomlogoStyle == 17) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_17);
-		} else if ( mCustomlogoStyle == 18) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_18);
-		} else if ( mCustomlogoStyle == 19) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_19);
-		} else if ( mCustomlogoStyle == 20) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_20);
-		} else if ( mCustomlogoStyle == 21) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_21);
-		} else if ( mCustomlogoStyle == 22) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_22);
-		} else if ( mCustomlogoStyle == 23) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_23);
-		} else if ( mCustomlogoStyle == 24) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_24);
-		} else if ( mCustomlogoStyle == 25) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_25);
-		} else if ( mCustomlogoStyle == 26) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_26);
-		} else if ( mCustomlogoStyle == 27) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_27);
-		} else if ( mCustomlogoStyle == 28) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_28);
-		} else if ( mCustomlogoStyle == 29) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_29);
-		} else if ( mCustomlogoStyle == 30) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_30);
-		} else if ( mCustomlogoStyle == 31) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_31);
-		} else if ( mCustomlogoStyle == 32) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_32);
-		} else if ( mCustomlogoStyle == 33) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_33);
-		} else if ( mCustomlogoStyle == 34) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_34);
-		} else if ( mCustomlogoStyle == 35) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_35);
-		} else if ( mCustomlogoStyle == 36) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_36);
-		} else if ( mCustomlogoStyle == 37) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_37);
-		} else if ( mCustomlogoStyle == 38) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_38);
-		} else if ( mCustomlogoStyle == 39) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_39);
-		} else if ( mCustomlogoStyle == 40) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_40);
-		} else if ( mCustomlogoStyle == 41) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_41);
-		} else if ( mCustomlogoStyle == 42) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_42);
-		} else if ( mCustomlogoStyle == 43) {
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_43);
-		}
-		showmCustomlogo(mCustomlogo, mCustomlogoColor,  mCustomlogoStyle);
-		boolean mShowdarkIcons= Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.SHOW_DARK_ICONS, 1, UserHandle.USER_CURRENT) == 1; 
-		    if (mShowdarkIcons) {    
-		    mSbgradient = (ImageView) mStatusBarView.findViewById(R.id.background_image);  
-		    mSbgradient.setVisibility(View.GONE);
-		    } else {
-		    mSbgradient = (ImageView) mStatusBarView.findViewById(R.id.background_image);  
-		    mSbgradient.setVisibility(View.VISIBLE); 
-		    }
-        mQsIconColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.QS_ICON_COLOR, 0xFFFFFFFF, mCurrentUserId);
-
-        mLabelColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.QS_TEXT_COLOR, 0xFFFFFFFF, mCurrentUserId);
-                
         mKeyguardUserSwitcher = new KeyguardUserSwitcher(mContext,
                 (ViewStub) mStatusBarWindowContent.findViewById(R.id.keyguard_user_switcher),
                 mKeyguardStatusBar, mNotificationPanel, mUserSwitcherController);
 
-         // Set up the quick settings tile panel
-        mQSPanel = (QSPanel) mStatusBarWindowContent.findViewById(R.id.quick_settings_panel);
-	if (mQSPanel != null) {
-            final QSTileHost qsh = new QSTileHost(mContext, this,
-                    mBluetoothController, mLocationController, mRotationLockController,
-                    mNetworkController, mZenModeController, mHotspotController,
-                    mCastController, mFlashlightController,
-                    mUserSwitcherController, mKeyguardMonitor,
-                    mSecurityController, mBatteryController);
-            mQSPanel.setHost(qsh);
-            mQSPanel.setTiles(qsh.getTiles());
+
+        // Set up the quick settings tile panel
+        mQSPanel = (QSDragPanel) mStatusBarWindowContent.findViewById(R.id.quick_settings_panel);
+        if (mQSPanel != null) {
+            if (mQSTileHost == null) {
+                mQSTileHost = new QSTileHost(mContext, this,
+                        mBluetoothController, mLocationController, mRotationLockController,
+                        mNetworkController, mZenModeController, mHotspotController,
+                        mCastController, mFlashlightController,
+                        mUserSwitcherController, mKeyguardMonitor,
+                        mSecurityController, mBatteryController);
+            }
+            mQSPanel.setHost(mQSTileHost);
+            if (mBrightnessMirrorController == null) {
+                mBrightnessMirrorController = new BrightnessMirrorController(mStatusBarWindowContent);
+            }
+            mQSPanel.setBrightnessMirror(mBrightnessMirrorController);
+            mQSPanel.setTiles(mQSTileHost.getTiles());
             mHeader.setQSPanel(mQSPanel);
-            qsh.setCallback(new QSTileHost.Callback() {
+            mQSTileHost.setCallback(new QSTileHost.Callback() {
                 @Override
                 public void onTilesChanged() {
-                    mQSPanel.setTiles(qsh.getTiles());
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            mQSPanel.setTiles(mQSTileHost.getTiles());
+                        }
+                    });
+                }
+
+                @Override
+                public void setEditing(final boolean editing) {
+                    if (mState != StatusBarState.SHADE) {
+                        return;
+                    }
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            mQSPanel.setEditing(editing);
+                            mHeader.setEditing(editing);
+                        }
+                    });
+                }
+
+                @Override
+                public boolean isEditing() {
+                    return mQSPanel.isEditing();
+                }
+
+                @Override
+                public void goToSettingsPage() {
+                    if (mState != StatusBarState.SHADE) {
+                        return;
+                    }
+                    setEditing(true);
+                    mHandler.postDelayed(new Runnable() {
+                        @Override
+                        public void run() {
+                            mQSPanel.goToSettingsPage();
+                        }
+                    }, 500);
+                }
+
+                @Override
+                public void resetTiles() {
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            mQSPanel.setEditing(false);
+                            mHeader.setEditing(false);
+
+                            // unregister custom tile service while we reset to not get
+                            // callbacks from custom tiles
+                            try {
+                                mCustomTileListenerService.unregisterAsSystemService();
+                            } catch (RemoteException e) {
+                                Log.e(TAG, "Unable to unregister custom tile listener", e);
+                            }
+
+                            mQSTileHost.resetTiles();
+
+                            // reregister service
+                            try {
+                                mCustomTileListenerService.registerAsSystemService(mContext,
+                                        new ComponentName(mContext.getPackageName(),
+                                                PhoneStatusBar.this.getClass().getCanonicalName()),
+                                        UserHandle.USER_ALL);
+                            } catch (RemoteException e) {
+                                Log.e(TAG, "Unable to register custom tile listener", e);
+                            }
+                        }
+                    });
                 }
             });
         }
 
-        // Task manager
-        mTaskManagerPanel =
-                (LinearLayout) mStatusBarWindowContent.findViewById(R.id.task_manager_panel);
-        mTaskManager = new TaskManager(mContext, mTaskManagerPanel);
-        mTaskManager.setActivityStarter(this);
-        mTaskManagerButton = (ImageButton) mHeader.findViewById(R.id.task_manager_button);
-        mTaskManagerButton.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View arg0) {
-                mShowTaskList = !mShowTaskList;
-                mNotificationPanel.setTaskManagerVisibility(mShowTaskList);
-            }
-        });
-        if (mRecreating) {
-            mHeader.setTaskManagerEnabled(mShowTaskManager);
-            mNotificationPanel.setTaskManagerEnabled(mShowTaskManager);
-            mShowTaskList = false;
+        // Set up the initial custom tile listener state.
+        try {
+            mCustomTileListenerService.registerAsSystemService(mContext,
+                    new ComponentName(mContext.getPackageName(), getClass().getCanonicalName()),
+                    UserHandle.USER_ALL);
+        } catch (RemoteException e) {
+            Log.e(TAG, "Unable to register custom tile listener", e);
         }
 
+        mQSPanel.getHost().setCustomTileListenerService(mCustomTileListenerService);
+
         // User info. Trigger first load.
         mHeader.setUserInfoController(mUserInfoController);
         mKeyguardStatusBar.setUserInfoController(mUserInfoController);
@@ -2210,9 +1306,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mKeyguardStatusBar.setBatteryController(mBatteryController);
         mHeader.setDockBatteryController(mDockBatteryController);
         mKeyguardStatusBar.setDockBatteryController(mDockBatteryController);
-        mHeader.setNextAlarmController(mNextAlarmController);
-        mHeader.setWeatherController(mWeatherController);
-
         if (mDockBatteryController != null) {
             DockBatteryMeterView dockBatteryMeterView =
                     ((DockBatteryMeterView) mStatusBarView.findViewById(R.id.dock_battery));
@@ -2232,6 +1325,11 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             }
         }
 
+        mHeader.setNextAlarmController(mNextAlarmController);
+        mHeader.setWeatherController(mWeatherController);
+
+        mNotificationPanel.setWeatherController(mWeatherController);
+
         PowerManager pm = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
         mBroadcastReceiver.onReceive(mContext,
                 new Intent(pm.isScreenOn() ? Intent.ACTION_SCREEN_ON : Intent.ACTION_SCREEN_OFF));
@@ -2241,7 +1339,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
         // receive broadcasts
         IntentFilter filter = new IntentFilter();
-        filter.addAction(Intent.ACTION_CONFIGURATION_CHANGED);
         filter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
         filter.addAction(Intent.ACTION_SCREEN_OFF);
         filter.addAction(Intent.ACTION_SCREEN_ON);
@@ -2257,7 +1354,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         context.registerReceiverAsUser(mDemoReceiver, UserHandle.ALL, demoFilter,
                 android.Manifest.permission.DUMP, null);
 
-
         // receive broadcasts for packages
         IntentFilter packageFilter = new IntentFilter();
         packageFilter.addAction(Intent.ACTION_PACKAGE_ADDED);
@@ -2267,11 +1363,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         packageFilter.addDataScheme("package");
         context.registerReceiver(mPackageBroadcastReceiver, packageFilter);
 
-        // flashlight action target for toggle
-        IntentFilter flashlightFilter = new IntentFilter();
-        flashlightFilter.addAction(ActionHandler.INTENT_TOGGLE_FLASHLIGHT);
-        context.registerReceiver(mDUReceiver, flashlightFilter);
-
         // listen for USER_SETUP_COMPLETE setting (per-user)
         resetUserSetupObserver();
 
@@ -2281,64 +1372,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         // Private API call to make the shadows look better for Recents
         ThreadedRenderer.overrideProperty("ambientRatio", String.valueOf(1.5f));
 
-        try {
-            BroadcastReceiver receiver = new BroadcastReceiver() {
-
-                @Override
-                public void onReceive(Context context, Intent intent) {
-                    if (NotificationPanelView.mKeyguardShowing) {
-                        return;
-                    }
-                    String action = intent.getAction();
-
-               if (action.equals(Intent.ACTION_CONFIGURATION_CHANGED)) {
-                        if (NotificationPanelView.mKeyguardShowing) {
-                            return;
-                        }
-                        RecentsActivity.onConfigurationChanged();
-
-                        if (mExpandedVisible && NotificationPanelView.mBlurredStatusBarExpandedEnabled && (!NotificationPanelView.mKeyguardShowing)) {
-                            makeExpandedInvisible();
-                        }
-                    }
-                }
-            };
-
-            IntentFilter intent = new IntentFilter();
-            intent.addAction(Intent.ACTION_CONFIGURATION_CHANGED);
-            this.mContext.registerReceiver(receiver, intent);
-
-            RecentsActivity.init(this.mContext);
-
-            updatePreferences(this.mContext);
-        } catch (Exception e){
-            Log.d("mango918", String.valueOf(e));
-        }
-
-        mStatusBarHeaderMachine = new StatusBarHeaderMachine(mContext);
-        mStatusBarHeaderMachine.addObserver(mHeader);
-        mStatusBarHeaderMachine.updateEnablement();
-        UpdateNotifDrawerClearAllIconColor();
-        updateNetworkIconColors();
         return mStatusBarView;
     }
 
-    @Override
-    public void onWeatherChanged(WeatherController.WeatherInfo info) {
-        SettingsObserver observer = new SettingsObserver(mHandler);
-        if (info.temp == null || info.condition == null) {
-            mWeatherTempView.setText(null);
-           // observer.update();
-        } else {
-            mWeatherTempView.setText(info.temp);
-           // observer.update();
-        }
-      }
-    public static void updatePreferences(Context context) {
-        RecentsActivity.updatePreferences(context);
-        BaseStatusBar.updatePreferences();
-    }
-
     private void clearAllNotifications() {
 
         // animate-swipe all dismissable notifications, then animate the shade closed
@@ -2406,7 +1442,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             if (i == 0) {
                 endRunnable = animationFinishAction;
             }
-            mStackScroller.dismissViewAnimated(view, endRunnable, totalDelay, 240);
+            mStackScroller.dismissViewAnimated(view, endRunnable, totalDelay, 260);
             currentDelay = Math.max(50, currentDelay - rowDelayDecrement);
             totalDelay += currentDelay;
         }
@@ -2452,6 +1488,86 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         return mNaturalBarHeight;
     }
 
+    private final CustomTileListenerService mCustomTileListenerService =
+            new CustomTileListenerService() {
+                @Override
+                public void onListenerConnected() {
+                    //Connected
+                }
+                @Override
+                public void onCustomTilePosted(final StatusBarPanelCustomTile sbc) {
+                    if (DEBUG) Log.d(TAG, "onCustomTilePosted: " + sbc.getCustomTile());
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            boolean isUpdate = mQSPanel.getHost().getCustomTileData()
+                                    .get(sbc.persistableKey()) != null;
+                            if (isUpdate) {
+                                mQSPanel.getHost().updateCustomTile(sbc);
+                            } else {
+                                mQSPanel.getHost().addCustomTile(sbc);
+                            }
+                        }
+                    });
+                }
+
+                @Override
+                public void onCustomTileRemoved(final StatusBarPanelCustomTile sbc) {
+                    if (DEBUG) Log.d(TAG, "onCustomTileRemoved: " + sbc.getCustomTile());
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            mQSPanel.getHost().removeCustomTileSysUi(sbc.persistableKey());
+                        }
+                    });
+                }
+            };
+
+    private View.OnClickListener mRecentsClickListener = new View.OnClickListener() {
+        public void onClick(View v) {
+            awakenDreams();
+            toggleRecentApps();
+        }
+    };
+
+    private long mLastLockToAppLongPress;
+    private View.OnLongClickListener mLongPressBackRecentsListener =
+            new View.OnLongClickListener() {
+        @Override
+        public boolean onLongClick(View v) {
+            handleLongPressBackRecents(v);
+            return true;
+        }
+    };
+
+    private final View.OnLongClickListener mLongPressHomeListener
+            = new View.OnLongClickListener() {
+        @Override
+        public boolean onLongClick(View v) {
+            if (shouldDisableNavbarGestures()) {
+                return false;
+            }
+            MetricsLogger.action(mContext, MetricsLogger.ACTION_ASSIST_LONG_PRESS);
+            mAssistManager.startAssist(new Bundle() /* args */);
+            awakenDreams();
+            if (mNavigationBarView != null) {
+                mNavigationBarView.abortCurrentGesture();
+            }
+            return true;
+        }
+    };
+
+    private final View.OnTouchListener mHomeActionListener = new View.OnTouchListener() {
+        public boolean onTouch(View v, MotionEvent event) {
+            switch (event.getAction()) {
+                case MotionEvent.ACTION_UP:
+                case MotionEvent.ACTION_CANCEL:
+                    awakenDreams();
+                    break;
+            }
+            return false;
+        }
+    };
 
     private void awakenDreams() {
         if (mDreamManager != null) {
@@ -2465,8 +1581,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     private void prepareNavigationBarView(boolean forceReset) {
         mNavigationBarView.reorient();
-        mNavigationBarView.setListeners(mUserAutoHideListener);
-        mNavigationBarView.setOnVerticalChangedListener(mVerticalChangedListener);
+
+        mNavigationBarView.setListeners(mRecentsClickListener, mRecentsPreloadOnTouchListener,
+                mLongPressBackRecentsListener, mHomeActionListener, mLongPressHomeListener);
         mAssistManager.onConfigurationChanged();
         if (forceReset) {
             // Nav Bar was added dynamically - we need to reset the mSystemUiVisibility and call
@@ -2494,23 +1611,23 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
         prepareNavigationBarView(forceReset);
 
-        mWindowManager.addView(mNavigationBarView.getBaseView(), getNavigationBarLayoutParams());
+        mWindowManager.addView(mNavigationBarView, getNavigationBarLayoutParams());
     }
 
     private void removeNavigationBar() {
         if (DEBUG) Log.d(TAG, "removeNavigationBar: about to remove " + mNavigationBarView);
         if (mNavigationBarView == null) return;
 
-        mWindowManager.removeView(mNavigationBarView.getBaseView());
+        mWindowManager.removeView(mNavigationBarView);
         mNavigationBarView = null;
     }
 
     private void repositionNavigationBar() {
-        if (mNavigationBarView == null || !mNavigationBarView.getBaseView().isAttachedToWindow()) return;
+        if (mNavigationBarView == null || !mNavigationBarView.isAttachedToWindow()) return;
 
         prepareNavigationBarView(false);
 
-        mWindowManager.updateViewLayout(mNavigationBarView.getBaseView(), getNavigationBarLayoutParams());
+        mWindowManager.updateViewLayout(mNavigationBarView, getNavigationBarLayoutParams());
     }
 
     private void notifyNavigationBarScreenOn(boolean screenOn) {
@@ -2527,13 +1644,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                     | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
                     | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
                     | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH
-                    | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH
-                    | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,
+                    | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH,
                 PixelFormat.TRANSLUCENT);
         // this will allow the navbar to run in an overlay on devices that support this
-/*        if (ActivityManager.isHighEndGfx()) {
+        if (ActivityManager.isHighEndGfx()) {
             lp.flags |= WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;
-        }*/ //*Keep for possible future use.
+        }
 
         lp.setTitle("NavigationBar");
         lp.windowAnimations = 0;
@@ -2646,7 +1762,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     @Override
     protected void refreshLayout(int layoutDirection) {
         if (mNavigationBarView != null) {
-            mNavigationBarView.getBaseView().setLayoutDirection(layoutDirection);
+            mNavigationBarView.setLayoutDirection(layoutDirection);
         }
         mIconController.refreshAllStatusBarIcons();
     }
@@ -2863,7 +1979,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     @Override
-    public void updateNotifications() {
+    protected void updateNotifications() {
         mNotificationData.filterAndSort();
 
         updateNotificationShade();
@@ -2876,14 +1992,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mNotificationPanel.notifyVisibleChildrenChanged();
     }
 
-    protected boolean hasActiveVisibleNotifications() {
-        return mNotificationData.hasActiveVisibleNotifications();
-    }
-
-    protected boolean hasActiveClearableNotifications() {
-        return mNotificationData.hasActiveClearableNotifications();
-    }
-
     @Override
     protected void setAreThereNotifications() {
 
@@ -3093,8 +2201,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         Bitmap backdropBitmap = null;
 
         // apply any album artwork first
-        if (mMediaMetadata != null && (Settings.System.getIntForUser(mContext.getContentResolver(),
-            Settings.System.LOCKSCREEN_MEDIA_METADATA, 1, UserHandle.USER_CURRENT) == 1)) {
+        if (mMediaMetadata != null) {
             backdropBitmap = mMediaMetadata.getBitmap(MediaMetadata.METADATA_KEY_ART);
             if (backdropBitmap == null) {
                 backdropBitmap = mMediaMetadata.getBitmap(MediaMetadata.METADATA_KEY_ALBUM_ART);
@@ -3102,12 +2209,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             }
         }
 
-        // apply blurred image
-        if (backdropBitmap == null) {
-            backdropBitmap = mBlurredImage;
-            // might still be null
-        }
-
         // HACK: Consider keyguard as visible if showing sim pin security screen
         KeyguardUpdateMonitor updateMonitor = KeyguardUpdateMonitor.getInstance(mContext);
         boolean keyguardVisible = mState != StatusBarState.SHADE || updateMonitor.isSimPinSecure();
@@ -3164,7 +2265,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 }
 
                 if (DEBUG_MEDIA_FAKE_ARTWORK) {
-                    final int c = 0xFF000000 | (int)(Math.random() * 0xFFFFFFFF);
+                    final int c = 0xFF000000 | (int)(Math.random() * 0xFFFFFF);
                     Log.v(TAG, String.format("DEBUG_MEDIA: setting new color: 0x%08x", c));
                     mBackdropBack.setBackgroundColor(0xFFFFFFFF);
                     mBackdropBack.setImageDrawable(new ColorDrawable(c));
@@ -3233,86 +2334,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }
     }
 
-    private void UpdateNotifDrawerClearAllIconColor() {
-        int color = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.NOTIFICATION_DRAWER_CLEAR_ALL_ICON_COLOR,
-                0xFFFFFFFF, mCurrentUserId);
-        if (mDismissView != null) {
-            mDismissView.updateIconColor(color);
-        }
-    }
-    
-    
-    private void updateNetworkIconColors() {
-        if (mIconController != null) {
-            mIconController.updateNetworkIconColors();
-        }
-        if (mKeyguardStatusBar != null) {
-            mKeyguardStatusBar.updateNetworkIconColors();
-        }
-    }
-    
-    public void updatebatterycolor() {
-      if (mIconController != null) {
-     mIconController.applyIconTint(); 
-     }
-     if (mKeyguardStatusBar != null) {
-     mKeyguardStatusBar.updateBatteryviews();
-     }
-    }
-
-    private void updateNetworkSignalColor() {
-        if (mIconController != null) {
-            mIconController.updateNetworkSignalColor();
-        }
-        if (mKeyguardStatusBar != null) {
-            mKeyguardStatusBar.updateNetworkIconColors();
-        }
-    }
-    
-    public void makepulsetoast() {
-    Toast.makeText(mContext,
-                        R.string.pulse_toast_message, Toast.LENGTH_SHORT).show();   
-    }
-
-    private void updateNoSimColor() {
-        if (mIconController != null) {
-            mIconController.updateNoSimColor();
-        }
-        if (mKeyguardStatusBar != null) {
-            mKeyguardStatusBar.updateNoSimColor();
-        }
-    }
-
-    private void updateAirplaneModeColor() {
-        if (mIconController != null) {
-            mIconController.updateAirplaneModeColor();
-        }
-        if (mKeyguardStatusBar != null) {
-            mKeyguardStatusBar.updateAirplaneModeColor();
-        }
-    }
-
-   public void updateQsColors() {
-	mNotificationPanel.setQSBackgroundColor();
-	mNotificationPanel.setQSColors();
-	}
-
-    private void updateStatusIconsColor() {
-
-        if (mIconController != null) {
-            mIconController.updateStatusIconsColor();
-        }
-    }
-
-    private void updateNotificationIconsColor() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-        if (mIconController != null) {
-            mIconController.updateNotificationIconsColor();
-        }
-    }
-
     private int adjustDisableFlags(int state) {
         if (!mLaunchTransitionFadingAway && !mKeyguardFadingAway
                 && (mExpandedVisible || mBouncerShowing || mWaitingForKeyguardExit)) {
@@ -3442,11 +2463,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         overrideActivityPendingAppTransition(true /* keyguardShowing */);
     }
 
-    @Override
-    public void startAction(boolean dismissShade) {
-        startActionDismissingPanel(dismissShade);
-    }
-
     public void setQsExpanded(boolean expanded) {
         mStatusBarWindowManager.setQsExpanded(expanded);
         mKeyguardStatusView.setImportantForAccessibility(expanded
@@ -3574,7 +2590,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     protected void updateHeadsUp(String key, Entry entry, boolean shouldInterrupt,
             boolean alertAgain) {
-        if (!mUseHeadsUp) return;
         final boolean wasHeadsUp = isHeadsUp(key);
         if (wasHeadsUp) {
             if (!shouldInterrupt) {
@@ -3661,7 +2676,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     void makeExpandedVisible(boolean force) {
-        NotificationPanelView.startBlurTask();
         if (SPEW) Log.d(TAG, "Make expanded visible: expanded visible=" + mExpandedVisible);
         if (!force && (mExpandedVisible || !panelsEnabled())) {
             return;
@@ -3679,9 +2693,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mWaitingForKeyguardExit = false;
         disable(mDisabledUnmodified1, mDisabledUnmodified2, !force /* animate */);
         setInteracting(StatusBarManager.WINDOW_STATUS_BAR, true);
-        if (mShowTaskManager) {
-            mTaskManager.refreshTaskManagerView();
-        }
     }
 
     public void animateCollapsePanels() {
@@ -3822,7 +2833,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (!mStatusBarKeyguardViewManager.isShowing()) {
             WindowManagerGlobal.getInstance().trimMemory(ComponentCallbacks2.TRIM_MEMORY_UI_HIDDEN);
         }
-        NotificationPanelView.recycle();
     }
 
     private void adjustBrightness(int x) {
@@ -3981,17 +2991,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (mNavigationBarView != null) {
             mNavigationBarView.setNavigationIconHints(hints);
         }
-
-        if (mPieController != null) {
-            mPieController.setNavigationIconHints(hints);
-        }
         checkBarModes();
     }
-	
-	@Override // CommandQueue
-    public void showCustomIntentAfterKeyguard(Intent intent) {
-        startActivityDismissingKeyguard(intent, false, false);
-    }
 
     @Override // CommandQueue
     public void setWindowState(int window, int state) {
@@ -4103,7 +3104,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 mSystemUiVisibility &= ~View.NAVIGATION_BAR_UNHIDE;
             }
 
-	if ((diff & View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR) != 0 || sbModeChanged) {
+            if ((diff & View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR) != 0 || sbModeChanged) {
                 boolean isTransparentBar = (mStatusBarMode == MODE_TRANSPARENT
                         || mStatusBarMode == MODE_LIGHTS_OUT_TRANSPARENT);
                 boolean allowLight = isTransparentBar && !mBatteryController.isPowerSave();
@@ -4113,12 +3114,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                                 != FingerprintUnlockController.MODE_WAKE_AND_UNLOCK_PULSING
                         && mFingerprintUnlockController.getMode()
                                 != FingerprintUnlockController.MODE_WAKE_AND_UNLOCK);
-		boolean mShowdarkIcons= Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.SHOW_DARK_ICONS, 1, UserHandle.USER_CURRENT) == 1;     
-		    if (mShowdarkIcons) {
-				 mIconController.setIconsDark(allowLight && light, animate);
-			}	
-	    }     
+                mIconController.setIconsDark(allowLight && light, animate);
+            }
             // restore the recents bit
             if (wasRecentsVisible) {
                 mSystemUiVisibility |= View.RECENT_APPS_VISIBLE;
@@ -4129,13 +3126,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }
     }
 
-    @Override  // CommandQueue
-    public void setAutoRotate(boolean enabled) {
-        Settings.System.putInt(mContext.getContentResolver(),
-                Settings.System.ACCELEROMETER_ROTATION,
-                enabled ? 1 : 0);
-    }
-
     private int computeBarMode(int oldVis, int newVis, BarTransitions transitions,
             int transientFlag, int translucentFlag) {
         final int oldMode = barMode(oldVis, transientFlag, translucentFlag);
@@ -4156,7 +3146,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 : MODE_OPAQUE;
     }
 
-
     private void checkBarModes() {
         if (mDemoMode) return;
         checkBarMode(mStatusBarMode, mStatusBarWindowState, mStatusBarView.getBarTransitions(),
@@ -4177,9 +3166,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (powerSave && getBarState() == StatusBarState.SHADE) {
             mode = MODE_WARNING;
         }
-        if (mode == MODE_WARNING) {
-            transitions.setWarningColor(mBatterySaverWarningColor);
-        }
         transitions.transitionTo(mode, anim);
     }
 
@@ -4282,9 +3268,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     public void topAppWindowChanged(boolean showMenu) {
-        if (mPieController != null && mPieController.getControlPanel() != null)
-            mPieController.getControlPanel().setMenu(showMenu);
-
         if (DEBUG) {
             Log.d(TAG, (showMenu?"showing":"hiding") + " the MENU button");
         }
@@ -4585,14 +3568,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }, cancelAction, afterKeyguardGone);
     }
 
-    public void startActionDismissingPanel(final boolean dismissShade) {
-        final boolean keyguardShowing = mStatusBarKeyguardViewManager.isShowing();
-        if (keyguardShowing) return;
-            if (dismissShade) {
-                animateCollapsePanels(CommandQueue.FLAG_EXCLUDE_NONE, true /* force */);
-            }
-    }
-
     private BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {
         public void onReceive(Context context, Intent intent) {
             if (DEBUG) Log.v(TAG, "onReceive: " + intent);
@@ -4613,14 +3588,10 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 notifyHeadsUpScreenOff();
                 finishBarAnimations();
                 resetUserExpandedStates();
-                // detach PA Pie when screen is turned off
-                if (mPieController != null) mPieController.detachPie();
             }
-
             else if (Intent.ACTION_SCREEN_ON.equals(action)) {
                 mScreenOn = true;
                 notifyNavigationBarScreenOn(true);
-                NotificationPanelView.recycle();
             } else if (Intent.ACTION_KEYGUARD_WALLPAPER_CHANGED.equals(action)) {
                 WallpaperManager wm = (WallpaperManager) mContext.getSystemService(
                         Context.WALLPAPER_SERVICE);
@@ -4629,10 +3600,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             } else if (cyanogenmod.content.Intent.ACTION_SCREEN_CAMERA_GESTURE.equals(action)) {
                 boolean userSetupComplete = Settings.Secure.getInt(mContext.getContentResolver(),
                         Settings.Secure.USER_SETUP_COMPLETE, 0) != 0;
-                if (!userSetupComplete) {
-                    if (DEBUG) Log.d(TAG, String.format(
-                            "userSetupComplete = %s, ignoring camera launch gesture.",
-                            userSetupComplete));
+                if (!userSetupComplete || !isDeviceProvisioned()) {
+                    if (DEBUG) {
+                        Log.d(TAG, String.format("userSetupComplete = $1%s, " +
+                                "deviceProvisioned = $2%s, ignoring camera launch gesture.",
+                                userSetupComplete, isDeviceProvisioned()));
+                    }
                     return;
                 }
 
@@ -4683,187 +3656,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }
     };
 
-
-
-    public void showRRLogo(boolean show , int color , int style) {
-        if (mStatusBarView == null) return;
-
-  	 if (!show) {
-            rrLogo.setVisibility(View.GONE);
-            return;
-        }
-	if (color != 0xFFFFFFFF) {
-       	    rrLogo.setColorFilter(color, Mode.SRC_IN);
-	} else {
-             rrLogo.clearColorFilter();
-        }
-        if (style == 0) {
-            rrLogo.setVisibility(View.GONE);
- 	    rrLogo = (ImageView) mStatusBarView.findViewById(R.id.left_rr_logo);
-        } else if (style == 1) {
-            rrLogo.setVisibility(View.GONE);        
-	    rrLogo = (ImageView) mStatusBarView.findViewById(R.id.center_rr_logo);
-        }   else if (style == 2) {
-            rrLogo.setVisibility(View.GONE);
-	    rrLogo = (ImageView) mStatusBarView.findViewById(R.id.rr_logo);       
-        } else if (style == 3) {
-            rrLogo.setVisibility(View.GONE);
-	    rrLogo = (ImageView) mStatusBarView.findViewById(R.id.before_icons_rr_logo);       
-        }
-        rrLogo.setVisibility(View.VISIBLE);
-	}
-
-    public void showmCustomlogo(boolean show , int color , int style) { 
-
-	if (mStatusBarView == null) return;
-
-  	 if (!show) {
-            mCLogo.setVisibility(View.GONE);
-            return;
-        }
-	if (color != 0xFFFFFFFF) {
-		mCLogo.setColorFilter(color, Mode.MULTIPLY);
-	} else {
-		mCLogo.clearColorFilter();
-	}
-		if ( style == 0) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom);
-		} else if ( style == 1) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_1);
-		} else if ( style == 2) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_2);
-		} else if ( style == 3) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_3);
-		} else if ( style == 4) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_4);
-		} else if ( style == 5) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_5);
-		} else if ( style == 6) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_6);
-		} else if ( style == 7) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_7);
-		} else if ( style == 8) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_8);
-		} else if ( style == 9) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_9);
-		} else if ( style == 10) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_10);
-		}  else if ( style == 11) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_11);
-		} else if ( style == 12) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_12);
-		} else if ( style == 13) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_13);
-		} else if ( style == 14) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_14);
-		} else if ( style  == 15) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_15);
-		} else if ( style  == 16) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_16);
-		} else if ( style  == 17) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_17);
-		} else if ( style  == 18) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_18);
-		} else if ( style  == 19) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_19);
-		} else if ( style  == 20) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_20);
-		} else if ( style  == 21) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_21);
-		} else if ( style  == 22) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_22);
-		} else if ( style  == 23) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_23);
-		} else if ( style  == 24) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_24);
-		} else if ( style  == 25) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_25);
-		} else if ( style  == 26) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_26);
-		} else if ( style  == 27) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_27);
-		} else if ( style == 28) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_28);
-		} else if ( style == 29) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_29);
-		} else if ( style == 30) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_30);
-		} else if ( style == 31) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_31);
-		} else if ( style == 32) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_32);
-		} else if ( style == 33) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_33);
-		} else if ( style == 34) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_34);
-		} else if ( style == 35) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_35);
-		} else if ( style == 36) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_36);
-		} else if ( style == 37) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_37);
-		} else if ( style == 38) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_38);
-		} else if ( style == 39) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_39);
-		} else if ( style == 40) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_40);
-		} else if ( style == 41) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_41);
-		} else if ( style == 42) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_42);
-		} else if ( style == 43) {
-		mCLogo.setVisibility(View.GONE);
-		mCLogo = (ImageView) mStatusBarView.findViewById(R.id.custom_43);
-		}
-		mCLogo.setVisibility(View.VISIBLE);
-
-	}
-  
-
     private void resetUserExpandedStates() {
         ArrayList<Entry> activeNotifications = mNotificationData.getActiveNotifications();
         final int notificationCount = activeNotifications.size();
@@ -4906,6 +3698,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mIconController.updateResources();
         mScreenPinningRequest.onConfigurationChanged();
         mNetworkController.onConfigurationChanged();
+        mStatusBarWindowManager.onConfigurationChanged(newConfig);
     }
 
     @Override
@@ -4926,6 +3719,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
         mKeyguardWallpaper = wm.getKeyguardBitmap();
         updateMediaMetaData(true);
+        if (mNavigationBarView != null) {
+            mNavigationBarView.updateSettings();
+        }
     }
 
     public void hideHeadsUp() {
@@ -4957,16 +3753,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 mUserSetupObserver, mCurrentUserId);
     }
 
-
-    public void resetQsPanelVisibility() {
-        mShowTaskList = mShowTaskList;
-        if (mShowTaskList) {
-            mQSPanel.setVisibility(View.VISIBLE);
-            mTaskManagerPanel.setVisibility(View.GONE);
-            mShowTaskList = false;
-        }
-    }
-
     private static void copyNotifications(ArrayList<Pair<String, StatusBarNotification>> dest,
             NotificationData source) {
         int N = source.size();
@@ -5001,9 +3787,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 mNetworkController.removeEmergencyListener(mHeader);
             }
         }
-        if (mLiveLockScreenController != null) {
-            mLiveLockScreenController.cleanup();
-        }    
         if (mHeadsUpManager != null) {
             mHeadsUpManager.removeListener(mNotificationPanel);
             mHeadsUpManager.removeListener(mScrimController);
@@ -5014,6 +3797,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (mKeyguardIndicationController != null) {
             mKeyguardIndicationController.cleanup();
         }
+        if (mLiveLockScreenController != null) {
+            mLiveLockScreenController.cleanup();
+        }
 
         mKeyguardBottomArea.cleanup();
         mStatusBarWindow.removeContent(mStatusBarWindowContent);
@@ -5040,6 +3826,15 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         // now remove all the notifications since we'll be re-creating these with the copied data
         mNotificationData.clear();
 
+        if (mCustomTileListenerService != null) {
+            try {
+                mCustomTileListenerService.unregisterAsSystemService();
+            } catch (RemoteException e) {
+                Log.e(TAG, "Unable to unregister custom tile listener", e);
+            }
+        }
+
+        mQSPanel.getHost().setCustomTileListenerService(null);
         mQSPanel.setListening(false);
 
         makeStatusBarView();
@@ -5067,12 +3862,11 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
         // Stop the command queue until the new status bar container settles and has a layout pass
         mCommandQueue.pause();
+
         // fix notification panel being shifted to the left by calling
         // instantCollapseNotificationPanel()
         instantCollapseNotificationPanel();
 
-        restartHalo();
-
         mStatusBarWindow.requestLayout();
         mStatusBarWindow.getViewTreeObserver().addOnGlobalLayoutListener(
                 new ViewTreeObserver.OnGlobalLayoutListener() {
@@ -5112,17 +3906,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 removeAllViews((ViewGroup) child);
             }
         }
-        if (parent instanceof AdapterView) {
-            //We know that when it's AdapterView it's from CM's QS detail items list
-            try {
-            QSDetailItemsList.QSDetailListAdapter adapter =
-                    (QSDetailItemsList.QSDetailListAdapter) ((AdapterView) parent).getAdapter();	    
-            adapter.clear();
-            adapter.notifyDataSetInvalidated();
-            } catch (ClassCastException e) { /*Catch it*/}
-        } else {
-            parent.removeAllViews();
-        }
+
+        // AdapterView does not support removeAllViews so check before calling
+        if (!(parent instanceof AdapterView)) parent.removeAllViews();
     }
 
     /**
@@ -5133,18 +3919,13 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
      * meantime, just update the things that we know change.
      */
     void updateResources(Configuration newConfig) {
-       SettingsObserver observer = new SettingsObserver(mHandler);
         // detect theme change.
         ThemeConfig newTheme = newConfig != null ? newConfig.themeConfig : null;
         final boolean updateStatusBar = shouldUpdateStatusbar(mCurrentTheme, newTheme);
         final boolean updateNavBar = shouldUpdateNavbar(mCurrentTheme, newTheme);
         if (newTheme != null) mCurrentTheme = (ThemeConfig) newTheme.clone();
         if (updateStatusBar) {
-	    DontStressOnRecreate();
-            if (mNavigationBarView != null) {
-                mNavigationBarView.onRecreateStatusbar();
-            }
-            observer.update();
+            recreateStatusBar();
         } else {
             loadDimens();
         }
@@ -5159,26 +3940,15 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (mNotificationPanel != null) {
             mNotificationPanel.updateResources();
         }
+        if (mBrightnessMirrorController != null) {
+            mBrightnessMirrorController.updateResources();
+        }
 
-        if (updateNavBar)  {
-            mNavigationController.updateNavbarOverlay(getNavbarThemedResources());
+        if (mNavigationBarView != null && updateNavBar)  {
+            mNavigationBarView.updateResources(getNavbarThemedResources());
         }
     }
 
-    private void DontStressOnRecreate() {
-        recreateStatusBar();
-        updateRowStates();
-        updateSpeedbump();
-        checkBarModes();
-        updateClearAll();
-        updateEmptyShadeView();
-        mDeviceInteractive = true;
-        mStackScroller.setAnimationsEnabled(true);
-        mNotificationPanel.setTouchDisabled(false);
-        updateVisibleToUser();
-
-    }   
-
     /**
      * Determines if we need to recreate the status bar due to a theme change.  We currently
      * check if the overlay for the status bar, fonts, or icons, or last theme change time is
@@ -5457,8 +4227,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mStatusBarWindow = null;
         }
         if (mNavigationBarView != null) {
-            mNavigationBarView.dispose();
-            mWindowManager.removeViewImmediate(mNavigationBarView.getBaseView());
+            mWindowManager.removeViewImmediate(mNavigationBarView);
             mNavigationBarView = null;
         }
         if (mHandlerThread != null) {
@@ -5467,11 +4236,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }
         mContext.unregisterReceiver(mBroadcastReceiver);
         mContext.unregisterReceiver(mDemoReceiver);
-        mContext.unregisterReceiver(mDUReceiver);
-        mPackageMonitor.removeListener(mNavigationController);
-        mPackageMonitor.removeListener(mMinitBatteryController);
-        mPackageMonitor.unregister();
-        mNavigationController.destroy();
         mAssistManager.destroy();
 
         final SignalClusterView signalCluster =
@@ -5596,9 +4360,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mDraggedDownRow.notifyHeightChanged(false  /* needsAnimation */);
             mDraggedDownRow = null;
         }
-        if (getNavigationBarView() != null) {
-            getNavigationBarView().setKeyguardShowing(true);
-        }
         mAssistManager.onLockscreenShown();
         mKeyguardBottomArea.requestFocus();
         try {
@@ -5740,7 +4501,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             // too heavy for the CPU and GPU on any device.
             if (mNavigationBarView != null) {
                 mNavigationBarView.setLayoutTransitionsEnabled(false);
-                mNavigationBarView.getBaseView().postDelayed(new Runnable() {
+                mNavigationBarView.postDelayed(new Runnable() {
                     @Override
                     public void run() {
                         mNavigationBarView.setLayoutTransitionsEnabled(true);
@@ -5765,9 +4526,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (mLiveLockScreenController.isShowingLiveLockScreenView()) {
             mLiveLockScreenController.getLiveLockScreenView().onKeyguardDismissed();
         }
-        if (getNavigationBarView() != null) {
-            getNavigationBarView().setKeyguardShowing(false);
-        }
         return staying;
     }
 
@@ -5912,7 +4670,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     public boolean onMenuPressed() {
-       return mState == StatusBarState.KEYGUARD && mStatusBarKeyguardViewManager.isSecure();
+        return mState == StatusBarState.KEYGUARD && mStatusBarKeyguardViewManager.onMenuPressed();
     }
 
     public void endAffordanceLaunch() {
@@ -6038,9 +4796,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     public void onUnlockHintStarted() {
         mKeyguardIndicationController.showTransientIndication(R.string.keyguard_unlock,
-                mNotificationPanel.shouldShowScreenOnHints() ?
-                KeyguardIndicationController.IndicationDirection.UP :
-                KeyguardIndicationController.IndicationDirection.NONE);
+                KeyguardIndicationController.IndicationDirection.UP);
     }
 
     public void onLlsHintStarted() {
@@ -6084,12 +4840,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     @Override
     protected int getMaxKeyguardNotifications() {
-        mCustomMaxKeyguard = Settings.System.getIntForUser(mContext.getContentResolver(),
-            Settings.System.LOCK_SCREEN_CUSTOM_NOTIF, 0, UserHandle.USER_CURRENT) == 1;
-
-        if (mCustomMaxKeyguard) {
-            return mMaxKeyguardNotifConfig;
-        } else {        
         int max = mKeyguardMaxNotificationCount;
         // When an interactive live lockscreen is showing
         // we want to limit the number of maximum notifications
@@ -6098,10 +4848,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             max--;
         }
         return max;
-        }
     }
 
-    public Navigator getNavigationBarView() {
+    public NavigationBarView getNavigationBarView() {
         return mNavigationBarView;
     }
 
@@ -6214,7 +4963,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mWakeUpTouchLocation = null;
         mStackScroller.setAnimationsEnabled(false);
         updateVisibleToUser();
-        mVisualizerView.setVisible(false);
+        if (mQSTileHost.isEditing()) {
+            mQSTileHost.setEditing(false);
+        }
         if (mLaunchCameraOnFinishedGoingToSleep) {
             mLaunchCameraOnFinishedGoingToSleep = false;
 
@@ -6238,10 +4989,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     public void onScreenTurningOn() {
         mScreenTurningOn = true;
-        mDeviceInteractive = true;
-        mStackScroller.setAnimationsEnabled(true);
-        mNotificationPanel.setTouchDisabled(false);
-        updateVisibleToUser();
         mNotificationPanel.onScreenTurningOn();
         if (mLaunchCameraOnScreenTurningOn) {
             mNotificationPanel.launchCamera(false, mLastCameraLaunchSource);
@@ -6270,6 +5017,82 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         }
     }
 
+    /**
+     * This handles long-press of both back and recents.  They are
+     * handled together to capture them both being long-pressed
+     * at the same time to exit screen pinning (lock task).
+     *
+     * When accessibility mode is on, only a long-press from recents
+     * is required to exit.
+     *
+     * In all other circumstances we try to pass through long-press events
+     * for Back, so that apps can still use it.  Which can be from two things.
+     * 1) Not currently in screen pinning (lock task).
+     * 2) Back is long-pressed without recents.
+     */
+    private void handleLongPressBackRecents(View v) {
+        try {
+            boolean sendBackLongPress = false;
+            boolean hijackRecentsLongPress = false;
+            IActivityManager activityManager = ActivityManagerNative.getDefault();
+            boolean isAccessiblityEnabled = mAccessibilityManager.isEnabled();
+            if (activityManager.isInLockTaskMode() && !isAccessiblityEnabled) {
+                long time = System.currentTimeMillis();
+                // If we recently long-pressed the other button then they were
+                // long-pressed 'together'
+                if ((time - mLastLockToAppLongPress) < LOCK_TO_APP_GESTURE_TOLERENCE) {
+                    activityManager.stopLockTaskModeOnCurrent();
+                    // When exiting refresh disabled flags.
+                    mNavigationBarView.setDisabledFlags(mDisabled1, true);
+                } else if (NavbarEditor.NAVBAR_BACK.equals(v.getTag())
+                        && !mNavigationBarView.getRecentsButton().isPressed()) {
+                    // If we aren't pressing recents right now then they presses
+                    // won't be together, so send the standard long-press action.
+                    sendBackLongPress = true;
+                } else if (NavbarEditor.NAVBAR_RECENT.equals(v.getTag())
+                         && !activityManager.isInLockTaskMode()) {
+                    hijackRecentsLongPress = true;
+                }
+                mLastLockToAppLongPress = time;
+            } else {
+                // If this is back still need to handle sending the long-press event.
+                if (NavbarEditor.NAVBAR_BACK.equals(v.getTag())) {
+                    sendBackLongPress = true;
+                } else if (NavbarEditor.NAVBAR_RECENT.equals(v.getTag())
+                         && !activityManager.isInLockTaskMode()) {
+                    hijackRecentsLongPress = true;
+                } else if (isAccessiblityEnabled && activityManager.isInLockTaskMode()) {
+                    // When in accessibility mode a long press that is recents (not back)
+                    // should stop lock task.
+                    activityManager.stopLockTaskModeOnCurrent();
+                    // When exiting refresh disabled flags.
+                    mNavigationBarView.setDisabledFlags(mDisabled1, true);
+                }
+            }
+            if (sendBackLongPress) {
+                KeyButtonView keyButtonView = (KeyButtonView) v;
+                keyButtonView.sendEvent(KeyEvent.ACTION_DOWN, KeyEvent.FLAG_LONG_PRESS);
+                keyButtonView.sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_LONG_CLICKED);
+            }
+
+            if (hijackRecentsLongPress) {
+                // If there is a user-selected, registered handler for the
+                // recents long press, start the Intent.  Otherwise,
+                // perform the default action, which is last app switching.
+
+                // Copy it so the value doesn't change between now and when the activity is started.
+                ComponentName customRecentsLongPressHandler = mCustomRecentsLongPressHandler;
+                if (customRecentsLongPressHandler != null) {
+                    startCustomRecentsLongPressActivity(customRecentsLongPressHandler);
+                } else {
+                    ActionUtils.switchToLastApp(mContext, mCurrentUserId);
+                }
+            }
+        } catch (RemoteException e) {
+            Log.d(TAG, "Unable to reach activity manager", e);
+        }
+    }
+
     protected View.OnTouchListener mRecentsPreloadOnTouchListener = new View.OnTouchListener() {
         @Override
         public boolean onTouch(View v, MotionEvent event) {
@@ -6593,23 +5416,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         updateDozingState();
     }
 
-
-   public void setBackgroundBitmap(Bitmap bmp) {
-        if (bmp == null && mBlurredImage == null) return;
-
-        if (bmp != null && mBlurLockRadius != 0) {
-            mBlurredImage = Blur.blurBitmap(mContext, bmp, mBlurLockRadius);
-        } else {
-            mBlurredImage = bmp;
-}
-        mHandler.post(new Runnable() {
-            @Override
-            public void run() {
-                updateMediaMetaData(true);
-            }
-        });
-    }
-
     public VisualizerView getVisualizer() {
         return mVisualizerView;
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java
index 2e79ab3..1395ff6 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java
@@ -36,7 +36,6 @@ import android.database.ContentObserver;
 import android.graphics.Bitmap;
 import android.media.AudioManager;
 import android.net.Uri;
-import android.os.Bundle;
 import android.os.Binder;
 import android.os.Handler;
 import android.os.IRemoteCallback;
@@ -88,7 +87,6 @@ public class PhoneStatusBarPolicy implements Callback {
     private static final String SLOT_ALARM_CLOCK = "alarm_clock";
     private static final String SLOT_MANAGED_PROFILE = "managed_profile";
     private static final String SLOT_SU = "su";
-    private static final String SLOT_HEADSET = "headset";
 
     private final Context mContext;
     private final StatusBarManager mService;
@@ -99,16 +97,12 @@ public class PhoneStatusBarPolicy implements Callback {
     private final UserInfoController mUserInfoController;
     private boolean mAlarmIconVisible;
     private final SuController mSuController;
-    private boolean mSuIndicatorVisible;
-    private int mHeadsetIconVisible;
-    private boolean mShowBluetoothBattery;
 
     // Assume it's all good unless we hear otherwise.  We don't always seem
     // to get broadcasts that it *is* there.
     IccCardConstants.State mSimState = IccCardConstants.State.READY;
 
     private boolean mZenVisible;
-    private boolean mShowZenIcon;
     private boolean mVolumeVisible;
     private boolean mCurrentUserSetup;
     private Float mBluetoothBatteryLevel = null;
@@ -138,9 +132,6 @@ public class PhoneStatusBarPolicy implements Callback {
             else if (action.equals(TelecomManager.ACTION_CURRENT_TTY_MODE_CHANGED)) {
                 updateTTY(intent);
             }
-            else if (action.equals(Intent.ACTION_HEADSET_PLUG)) {
-                updateHeadset(intent);
-	    }
             else if (action.equals(BluetoothHeadset.ACTION_VENDOR_SPECIFIC_HEADSET_EVENT)) {
                 updateBluetoothBattery(intent);
             }
@@ -181,7 +172,6 @@ public class PhoneStatusBarPolicy implements Callback {
         filter.addAction(AudioManager.INTERNAL_RINGER_MODE_CHANGED_ACTION);
         filter.addAction(TelephonyIntents.ACTION_SIM_STATE_CHANGED);
         filter.addAction(TelecomManager.ACTION_CURRENT_TTY_MODE_CHANGED);
-        filter.addAction(Intent.ACTION_HEADSET_PLUG);
         filter.addAction(BluetoothHeadset.ACTION_VENDOR_SPECIFIC_HEADSET_EVENT);
         filter.addCategory(BluetoothHeadset.VENDOR_SPECIFIC_HEADSET_EVENT_COMPANY_ID_CATEGORY
             + "." + Integer.toString(BluetoothAssignedNumbers.APPLE));
@@ -204,28 +194,13 @@ public class PhoneStatusBarPolicy implements Callback {
         //Update initial tty mode
         updateTTYMode();
 
-        //Bluetooth icon
-        mBTIconObserver.onChange(true);
-        mContext.getContentResolver().registerContentObserver(
-                Settings.System.getUriFor(Settings.System.BLUETOOTH_SHOW_BATTERY),
-                false, mBTIconObserver);
-
         // Alarm clock
         mService.setIcon(SLOT_ALARM_CLOCK, R.drawable.stat_sys_alarm, 0, null);
         mService.setIconVisibility(SLOT_ALARM_CLOCK, false);
-        mSettingsObserver.onChange(true);
+        mAlarmIconObserver.onChange(true);
         mContext.getContentResolver().registerContentObserver(
                 CMSettings.System.getUriFor(CMSettings.System.SHOW_ALARM_ICON),
-                false, mSettingsObserver);
-        mContext.getContentResolver().registerContentObserver(
-                Settings.System.getUriFor(Settings.System.SHOW_SU_INDICATOR),
-                false, mSettingsObserver);
-        mContext.getContentResolver().registerContentObserver(
-                Settings.System.getUriFor(Settings.System.SHOW_HEADSET_ICON),
-                false, mSettingsObserver);
-        mContext.getContentResolver().registerContentObserver(
-                Settings.System.getUriFor(Settings.System.SHOW_ZEN_ICON),
-                false, mSettingsObserver);
+                false, mAlarmIconObserver);
 
         // zen
         mService.setIcon(SLOT_ZEN, R.drawable.stat_sys_zen_important, 0, null);
@@ -236,10 +211,6 @@ public class PhoneStatusBarPolicy implements Callback {
         mService.setIconVisibility(SLOT_VOLUME, false);
         updateVolumeZen();
 
-        // headset
-        mService.setIcon(SLOT_HEADSET, R.drawable.stat_sys_headset, 0, null);
-        mService.setIconVisibility(SLOT_HEADSET, false);
-
         // cast
         mService.setIcon(SLOT_CAST, R.drawable.stat_sys_cast, 0, null);
         mService.setIconVisibility(SLOT_CAST, false);
@@ -264,46 +235,12 @@ public class PhoneStatusBarPolicy implements Callback {
         QSUtils.registerObserverForQSChanges(mContext, mQSListener);
     }
 
-    private ContentObserver mSettingsObserver = new ContentObserver(null) {
+    private ContentObserver mAlarmIconObserver = new ContentObserver(null) {
         @Override
         public void onChange(boolean selfChange, Uri uri) {
             mAlarmIconVisible = CMSettings.System.getInt(mContext.getContentResolver(),
                     CMSettings.System.SHOW_ALARM_ICON, 1) == 1;
-            mSuIndicatorVisible = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.SHOW_SU_INDICATOR, 1) == 1;
             updateAlarm();
-            updateSu();
-
-            mShowZenIcon = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.SHOW_ZEN_ICON, 1) == 1;
-            updateVolumeZen();
-
-            mHeadsetIconVisible = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.SHOW_HEADSET_ICON, 1);
-            Intent mHeadsetIntent = new Intent();
-            mHeadsetIntent.putExtra("state", mHeadsetIconVisible);
-            String s = "state";
-            Bundle b = new Bundle();
-            b.putString(String.valueOf(mHeadsetIconVisible), s);
-            mHeadsetIntent.putExtras(b);
-            AudioManager am1 = (AudioManager)mContext.getSystemService(Context.AUDIO_SERVICE);
-            if (am1.isWiredHeadsetOn()) {
-                updateHeadset(mHeadsetIntent);
-            }
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            onChange(selfChange, null);
-        }
-    };
-
-    private ContentObserver mBTIconObserver = new ContentObserver(null) {
-        @Override
-        public void onChange(boolean selfChange, Uri uri) {
-            mShowBluetoothBattery = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.BLUETOOTH_SHOW_BATTERY, 0) == 1;
-            updateBluetooth();
         }
 
         @Override
@@ -312,11 +249,6 @@ public class PhoneStatusBarPolicy implements Callback {
         }
     };
 
-    private final void updateHeadset(Intent intent) {
-        int state = intent.getIntExtra("state", 0);
-        mService.setIconVisibility(SLOT_HEADSET, ((state == 1 && (mHeadsetIconVisible == 1)))  ? true : false);
-    }
-
     public void setZenMode(int zen) {
         mZen = zen;
         updateVolumeZen();
@@ -406,14 +338,11 @@ public class PhoneStatusBarPolicy implements Callback {
             volumeDescription = mContext.getString(R.string.accessibility_ringer_vibrate);
         }
 
-        if (zenVisible && mShowZenIcon) {
+        if (zenVisible) {
             mService.setIcon(SLOT_ZEN, zenIconId, 0, zenDescription);
         }
-        if (zenVisible && !mShowZenIcon) {
-            mService.setIconVisibility(SLOT_ZEN, false);
-        }
         if (zenVisible != mZenVisible) {
-            mService.setIconVisibility(SLOT_ZEN, (zenVisible && mShowZenIcon));
+            mService.setIconVisibility(SLOT_ZEN, zenVisible);
             mZenVisible = zenVisible;
         }
 
@@ -466,9 +395,9 @@ public class PhoneStatusBarPolicy implements Callback {
         if (mBluetooth != null) {
             bluetoothEnabled = mBluetooth.isBluetoothEnabled();
             if (mBluetooth.isBluetoothConnected()) {
-                if (mBluetoothBatteryLevel == null && !mShowBluetoothBattery) {
+                if (mBluetoothBatteryLevel == null) {
                     iconId = R.drawable.stat_sys_data_bluetooth_connected;
-                } else if (mBluetoothBatteryLevel != null && mShowBluetoothBattery) {
+                } else {
                     if (mBluetoothBatteryLevel<=0.15f) {
                         iconId = R.drawable.stat_sys_data_bluetooth_connected_battery_1;
                     } else if (mBluetoothBatteryLevel<=0.375f) {
@@ -491,7 +420,6 @@ public class PhoneStatusBarPolicy implements Callback {
         mService.setIconVisibility(SLOT_BLUETOOTH, bluetoothEnabled);
     }
 
-
     private final void updateTTY(Intent intent) {
         int currentTtyMode = intent.getIntExtra(TelecomManager.EXTRA_CURRENT_TTY_MODE,
                 TelecomManager.TTY_MODE_OFF);
@@ -620,7 +548,7 @@ public class PhoneStatusBarPolicy implements Callback {
     };
 
     private void updateSu() {
-        mService.setIconVisibility(SLOT_SU, mSuController.hasActiveSessions() && mSuIndicatorVisible);
+        mService.setIconVisibility(SLOT_SU, mSuController.hasActiveSessions());
         final int userId = UserHandle.myUserId();
         if (isSuEnabledForUser(userId)) {
             publishSuCustomTile();
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarTransitions.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarTransitions.java
index 364dada..bb3095e 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarTransitions.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarTransitions.java
@@ -22,8 +22,6 @@ import android.animation.ObjectAnimator;
 import android.content.res.Resources;
 import android.view.View;
 
-import com.android.systemui.statusbar.BarTransitions;
-
 import com.android.systemui.R;
 
 public final class PhoneStatusBarTransitions extends BarTransitions {
@@ -34,8 +32,7 @@ public final class PhoneStatusBarTransitions extends BarTransitions {
     private final PhoneStatusBarView mView;
     private final float mIconAlphaWhenOpaque;
 
-    private View mLeftSide, mStatusIcons, mSignalCluster, mBattery, mClock,mNetworkTraffic, mRRLogo, mWeatherTextView ,mLeftWeatherTextView ,mCLogo, mMinitBattery;
-
+    private View mLeftSide, mStatusIcons, mSignalCluster, mBattery, mClock;
     private Animator mCurrentAnimation;
 
     public PhoneStatusBarTransitions(PhoneStatusBarView view) {
@@ -54,12 +51,6 @@ public final class PhoneStatusBarTransitions extends BarTransitions {
         mSignalCluster = mView.findViewById(R.id.signal_cluster);
         mBattery = mView.findViewById(R.id.battery);
         mClock = mView.findViewById(R.id.clock);
-        mNetworkTraffic = mView.findViewById(R.id.networkTraffic);
-        mRRLogo = mView.findViewById(R.id.rr_logo);
-	mCLogo =mView.findViewById(R.id.custom);
-        mWeatherTextView = mView.findViewById(R.id.weather_temp);
-        mLeftWeatherTextView = mView.findViewById(R.id.left_weather_temp);
-        mMinitBattery = mView.findViewById(R.id.minitBattery);
         applyModeBackground(-1, getMode(), false /*animate*/);
         applyMode(getMode(), false /*animate*/);
     }
@@ -103,14 +94,8 @@ public final class PhoneStatusBarTransitions extends BarTransitions {
                     animateTransitionTo(mLeftSide, newAlpha),
                     animateTransitionTo(mStatusIcons, newAlpha),
                     animateTransitionTo(mSignalCluster, newAlpha),
-                    animateTransitionTo(mNetworkTraffic, newAlpha),
-                    animateTransitionTo(mWeatherTextView, newAlpha),
-                    animateTransitionTo(mLeftWeatherTextView, newAlpha),
                     animateTransitionTo(mBattery, newAlphaBC),
-                    animateTransitionTo(mClock, newAlphaBC),
-                    animateTransitionTo(mRRLogo, newAlphaBC),
-		            animateTransitionTo(mCLogo, newAlphaBC),
-                    animateTransitionTo(mMinitBattery, newAlphaBC)
+                    animateTransitionTo(mClock, newAlphaBC)
                     );
             if (isLightsOut(mode)) {
                 anims.setDuration(LIGHTS_OUT_DURATION);
@@ -121,14 +106,8 @@ public final class PhoneStatusBarTransitions extends BarTransitions {
             mLeftSide.setAlpha(newAlpha);
             mStatusIcons.setAlpha(newAlpha);
             mSignalCluster.setAlpha(newAlpha);
-            mNetworkTraffic.setAlpha(newAlpha);
-            mWeatherTextView.setAlpha(newAlpha);
-            mLeftWeatherTextView.setAlpha(newAlpha);
             mBattery.setAlpha(newAlphaBC);
             mClock.setAlpha(newAlphaBC);
-            mRRLogo.setAlpha(newAlphaBC);
-	        mCLogo.setAlpha(newAlphaBC);
-            mMinitBattery.setAlpha(newAlphaBC);
         }
     }
-}
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java
index 17ef274..8c9daee 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java
@@ -17,27 +17,17 @@
 package com.android.systemui.statusbar.phone;
 
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.Resources;
-import android.database.ContentObserver;
-import android.net.Uri;
-import android.os.Handler;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.AttributeSet;
 import android.util.EventLog;
-import android.graphics.Typeface;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.accessibility.AccessibilityEvent;
-import android.widget.TextView;
 
 import com.android.systemui.DejankUtils;
 import com.android.systemui.EventLogTags;
 import com.android.systemui.R;
 
-import com.android.systemui.statusbar.BarTransitions;
-
 public class PhoneStatusBarView extends PanelBar {
     private static final String TAG = "PhoneStatusBarView";
     private static final boolean DEBUG = PhoneStatusBar.DEBUG;
@@ -58,46 +48,8 @@ public class PhoneStatusBarView extends PanelBar {
         }
     };
 
-    private int mShowCarrierLabel;
-    private TextView mCarrierLabel;
-
-    private int mCarrierLabelFontStyle = FONT_NORMAL;
-    public static final int FONT_NORMAL = 0;
-    public static final int FONT_ITALIC = 1;
-    public static final int FONT_BOLD = 2;
-    public static final int FONT_BOLD_ITALIC = 3;
-    public static final int FONT_LIGHT = 4;
-    public static final int FONT_LIGHT_ITALIC = 5;
-    public static final int FONT_THIN = 6;
-    public static final int FONT_THIN_ITALIC = 7;
-    public static final int FONT_CONDENSED = 8;
-    public static final int FONT_CONDENSED_ITALIC = 9;
-    public static final int FONT_CONDENSED_LIGHT = 10;
-    public static final int FONT_CONDENSED_LIGHT_ITALIC = 11;
-    public static final int FONT_CONDENSED_BOLD = 12;
-    public static final int FONT_CONDENSED_BOLD_ITALIC = 13;
-    public static final int FONT_MEDIUM = 14;
-    public static final int FONT_MEDIUM_ITALIC = 15;
-    public static final int FONT_BLACK = 16;
-    public static final int FONT_BLACK_ITALIC = 17;
-    public static final int FONT_DANCINGSCRIPT = 18;
-    public static final int FONT_DANCINGSCRIPT_BOLD = 19;
-    public static final int FONT_COMINGSOON = 20;
-    public static final int FONT_NOTOSERIF = 21;
-    public static final int FONT_NOTOSERIF_ITALIC = 22;
-    public static final int FONT_NOTOSERIF_BOLD = 23;
-    public static final int FONT_NOTOSERIF_BOLD_ITALIC = 24;
-        
-    private ContentObserver mObserver = new ContentObserver(new Handler()) {
-        public void onChange(boolean selfChange, Uri uri) {
-            showStatusBarCarrier();
-            updateVisibilities();
-        }
-    };
-
     public PhoneStatusBarView(Context context, AttributeSet attrs) {
         super(context, attrs);
-        showStatusBarCarrier();
 
         Resources res = getContext().getResources();
         mBarTransitions = new PhoneStatusBarTransitions(this);
@@ -115,143 +67,11 @@ public class PhoneStatusBarView extends PanelBar {
         mScrimController = scrimController;
     }
 
-    private void showStatusBarCarrier() {
-        ContentResolver resolver = getContext().getContentResolver();
-        mShowCarrierLabel = Settings.System.getIntForUser(getContext().getContentResolver(),
-                Settings.System.STATUS_BAR_SHOW_CARRIER, 1, UserHandle.USER_CURRENT);
-        mCarrierLabelFontStyle = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUS_BAR_CARRIER_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-    }
-
     @Override
     public void onFinishInflate() {
-        mCarrierLabel = (TextView) findViewById(R.id.statusbar_carrier_text);
-        updateVisibilities();
         mBarTransitions.init();
     }
 
-    private void updateVisibilities() {
-        if (mCarrierLabel != null) {
-            if (mShowCarrierLabel == 2) {
-                mCarrierLabel.setVisibility(View.VISIBLE);
-            } else if (mShowCarrierLabel == 3) {
-                mCarrierLabel.setVisibility(View.VISIBLE);
-            } else {
-                mCarrierLabel.setVisibility(View.GONE);
-
-            }
-            getFontStyle(mCarrierLabelFontStyle);
-
-        }
-    }
-
-    public void getFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                    Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                    Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                    Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif",
-                    Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-light",
-                    Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-light",
-                    Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-thin",
-                    Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-thin",
-                    Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                    Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                    Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed-light",
-                    Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed-light",
-                    Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                    Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-condensed",
-                    Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-medium",
-                    Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-medium",
-                    Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-black",
-                    Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("sans-serif-black",
-                    Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mCarrierLabel.setTypeface(Typeface.create("cursive",
-                    Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mCarrierLabel.setTypeface(Typeface.create("cursive",
-                    Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mCarrierLabel.setTypeface(Typeface.create("casual",
-                    Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mCarrierLabel.setTypeface(Typeface.create("serif",
-                    Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("serif",
-                    Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mCarrierLabel.setTypeface(Typeface.create("serif",
-                    Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mCarrierLabel.setTypeface(Typeface.create("serif",
-                    Typeface.BOLD_ITALIC));
-                break;
-        }
-    }
-
     @Override
     public void addPanel(PanelView pv) {
         super.addPanel(pv);
@@ -381,19 +201,4 @@ public class PhoneStatusBarView extends PanelBar {
         float scrimFraction = Math.max(mPanelFraction - mMinFraction / (1.0f - mMinFraction), 0);
         mScrimController.setPanelExpansion(scrimFraction);
     }
-
-    @Override
-    public void onAttachedToWindow() {
-        super.onAttachedToWindow();
-        getContext().getContentResolver().registerContentObserver(Settings.System.getUriFor(
-                "status_bar_show_carrier"), false, mObserver);
-        getContext().getContentResolver().registerContentObserver(Settings.System.getUriFor(
-                "status_bar_carrier_font_style"), false, mObserver);
-
-    }
-
-    @Override
-    public void onDetachedFromWindow() {
-        super.onDetachedFromWindow();
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
index 0a1ac4b..e88ed73 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
@@ -16,7 +16,6 @@
 
 package com.android.systemui.statusbar.phone;
 
-
 import android.app.ActivityManager;
 import android.app.PendingIntent;
 import android.content.ComponentName;
@@ -31,64 +30,41 @@ import android.os.RemoteException;
 import android.os.UserHandle;
 import android.provider.Settings;
 import android.text.TextUtils;
+import android.util.ArrayMap;
 import android.util.Log;
 
 import com.android.internal.logging.MetricsLogger;
 import android.widget.RemoteViews;
-import android.util.Log;
 import com.android.systemui.R;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.qs.tiles.AdbOverNetworkTile;
 import com.android.systemui.qs.tiles.AirplaneModeTile;
 import com.android.systemui.qs.tiles.AmbientDisplayTile;
-import com.android.systemui.qs.tiles.AppPickerTile;
 import com.android.systemui.qs.tiles.BatterySaverTile;
 import com.android.systemui.qs.tiles.BluetoothTile;
-import com.android.systemui.qs.tiles.BrightnessTile;
 import com.android.systemui.qs.tiles.CaffeineTile;
 import com.android.systemui.qs.tiles.CastTile;
 import com.android.systemui.qs.tiles.CellularTile;
 import com.android.systemui.qs.tiles.ColorInversionTile;
 import com.android.systemui.qs.tiles.CompassTile;
+import com.android.systemui.qs.tiles.CustomQSTile;
 import com.android.systemui.qs.tiles.DndTile;
+import com.android.systemui.qs.tiles.EditTile;
 import com.android.systemui.qs.tiles.FlashlightTile;
-import com.android.systemui.qs.tiles.FloatingWindowsTile;
-import com.android.systemui.qs.tiles.HaloTile;
 import com.android.systemui.qs.tiles.HeadsUpTile;
 import com.android.systemui.qs.tiles.HotspotTile;
 import com.android.systemui.qs.tiles.IntentTile;
-import com.android.systemui.qs.tiles.LiveDisplayTile;
 import com.android.systemui.qs.tiles.LocationTile;
-import com.android.systemui.qs.tiles.PieTile;
-import com.android.systemui.qs.tiles.AppCircleBarTile;
-import com.android.systemui.qs.tiles.ExpandedDesktopTile;
-import com.android.systemui.qs.tiles.KernelAdiutorTile;
-import com.android.systemui.qs.tiles.HardwareKeysTile;
-import com.android.systemui.qs.tiles.PulseTile;
-import com.android.systemui.qs.tiles.GestureAnyWhereTile;
-import com.android.systemui.qs.tiles.ScreenrecordTile;
-import com.android.systemui.qs.tiles.MusicTile;
-import com.android.systemui.qs.tiles.RRTile;
-import com.android.systemui.qs.tiles.KillAppTile;
-import com.android.systemui.qs.tiles.LteTile;
-import com.android.systemui.qs.tiles.ThemesTile;
-import com.android.systemui.qs.tiles.NavigationBarTile;
+import com.android.systemui.qs.tiles.LockscreenToggleTile;
 import com.android.systemui.qs.tiles.NfcTile;
 import com.android.systemui.qs.tiles.PerfProfileTile;
 import com.android.systemui.qs.tiles.ProfilesTile;
-import com.android.systemui.qs.tiles.RebootTile;
 import com.android.systemui.qs.tiles.RotationLockTile;
-import com.android.systemui.qs.tiles.LockscreenToggleTile;
-import com.android.systemui.qs.tiles.ScreenOffTile;
-import com.android.systemui.qs.tiles.PowerMenuTile;
-import com.android.systemui.qs.tiles.ScreenshotTile;
 import com.android.systemui.qs.tiles.ScreenTimeoutTile;
-import com.android.systemui.qs.tiles.SoundTile;
 import com.android.systemui.qs.tiles.SyncTile;
 import com.android.systemui.qs.tiles.UsbTetherTile;
 import com.android.systemui.qs.tiles.VolumeTile;
 import com.android.systemui.qs.tiles.WifiTile;
-import com.android.systemui.qs.tiles.VisualizerTile;
 import com.android.systemui.statusbar.CustomTileData;
 import com.android.systemui.statusbar.policy.BatteryController;
 import com.android.systemui.statusbar.policy.BluetoothController;
@@ -104,10 +80,10 @@ import com.android.systemui.statusbar.policy.UserSwitcherController;
 import com.android.systemui.statusbar.policy.ZenModeController;
 import com.android.systemui.tuner.TunerService;
 import com.android.systemui.tuner.TunerService.Tunable;
-import android.telephony.TelephonyManager;
+
 import cyanogenmod.app.CustomTileListenerService;
+import cyanogenmod.app.StatusBarPanelCustomTile;
 import cyanogenmod.providers.CMSettings;
-import com.android.internal.telephony.PhoneConstants;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -121,7 +97,7 @@ public class QSTileHost implements QSTile.Host, Tunable {
     private static final String TAG = "QSTileHost";
     private static final boolean DEBUG = Log.isLoggable(TAG, Log.DEBUG);
 
-    protected static final String TILES_SETTING = "sysui_qs_tiles";
+    public static final int TILES_PER_PAGE = 8;
 
     private final Context mContext;
     private final PhoneStatusBar mStatusBar;
@@ -140,9 +116,9 @@ public class QSTileHost implements QSTile.Host, Tunable {
     private final KeyguardMonitor mKeyguard;
     private final SecurityController mSecurity;
     private final BatteryController mBattery;
-    private Handler mHandler;
 
     private CustomTileData mCustomTileData;
+    private CustomTileListenerService mCustomTileListenerService;
 
     private Callback mCallback;
 
@@ -167,19 +143,35 @@ public class QSTileHost implements QSTile.Host, Tunable {
         mKeyguard = keyguard;
         mSecurity = security;
         mBattery = battery;
+        mCustomTileData = new CustomTileData();
 
         final HandlerThread ht = new HandlerThread(QSTileHost.class.getSimpleName(),
                 Process.THREAD_PRIORITY_BACKGROUND);
         ht.start();
         mLooper = ht.getLooper();
 
-        TunerService.get(mContext).addTunable(this, TILES_SETTING);
+        TunerService.get(mContext).addTunableByProvider(this, CMSettings.Secure.QS_TILES, true);
     }
 
     public void destroy() {
         TunerService.get(mContext).removeTunable(this);
     }
 
+    public boolean isEditing() {
+        if (mCallback != null) {
+            return mCallback.isEditing();
+        }
+        return false;
+    }
+
+    public void setEditing(boolean editing) {
+        mCallback.setEditing(editing);
+    }
+
+    void setCustomTileListenerService(CustomTileListenerService customTileListenerService) {
+        mCustomTileListenerService = customTileListenerService;
+    }
+
     @Override
     public void setCallback(Callback callback) {
         mCallback = callback;
@@ -190,22 +182,30 @@ public class QSTileHost implements QSTile.Host, Tunable {
         return mTiles.values();
     }
 
+    public List<String> getTileSpecs() {
+        return mTileSpecs;
+    }
+
+    public String getSpec(QSTile<?> tile) {
+        for (Map.Entry<String, QSTile<?>> entry : mTiles.entrySet()) {
+            if (entry.getValue() == tile) {
+                return entry.getKey();
+            }
+        }
+        return null;
+    }
+
     @Override
     public void startActivityDismissingKeyguard(final Intent intent) {
         mStatusBar.postStartActivityDismissingKeyguard(intent, 0);
     }
 
-   public static boolean deviceSupportsLte(Context ctx) {
-        final TelephonyManager tm = (TelephonyManager)
-                ctx.getSystemService(Context.TELEPHONY_SERVICE);
-        return (tm.getLteOnCdmaMode() == PhoneConstants.LTE_ON_CDMA_TRUE)
-                || tm.getLteOnGsmMode() != 0;
-    }
- public static boolean deviceSupportsDdsSupported(Context context) {
-        TelephonyManager tm = (TelephonyManager)
-                context.getSystemService(Context.TELEPHONY_SERVICE);
-        return tm.isMultiSimEnabled()
-                && tm.getMultiSimConfiguration() == TelephonyManager.MultiSimVariants.DSDA;
+    @Override
+    public void removeCustomTile(StatusBarPanelCustomTile customTile) {
+        if (mCustomTileListenerService != null) {
+            mCustomTileListenerService.removeCustomTile(customTile.getPackage(),
+                    customTile.getTag(), customTile.getId());
+        }
     }
 
     @Override
@@ -224,6 +224,11 @@ public class QSTileHost implements QSTile.Host, Tunable {
     }
 
     @Override
+    public RemoteViews.OnClickHandler getOnClickHandler() {
+        return mStatusBar.getOnClickHandler();
+    }
+
+    @Override
     public Looper getLooper() {
         return mLooper;
     }
@@ -290,18 +295,17 @@ public class QSTileHost implements QSTile.Host, Tunable {
     public SecurityController getSecurityController() {
         return mSecurity;
     }
-
-
+    
     @Override
     public void onTuningChanged(String key, String newValue) {
-        if (!TILES_SETTING.equals(key)) {
+        if (!CMSettings.Secure.QS_TILES.equals(key)) {
             return;
         }
         if (DEBUG) Log.d(TAG, "Recreating tiles");
         final List<String> tileSpecs = loadTileSpecs(newValue);
         if (tileSpecs.equals(mTileSpecs)) return;
         for (Map.Entry<String, QSTile<?>> tile : mTiles.entrySet()) {
-            if (!tileSpecs.contains(tile.getKey())) {
+            if (!tileSpecs.contains(tile.getKey()) && mCustomTileData.get(tile.getKey()) == null) {
                 if (DEBUG) Log.d(TAG, "Destroying tile: " + tile.getKey());
                 tile.getValue().destroy();
             }
@@ -313,7 +317,14 @@ public class QSTileHost implements QSTile.Host, Tunable {
             } else {
                 if (DEBUG) Log.d(TAG, "Creating tile: " + tileSpec);
                 try {
-                    newTiles.put(tileSpec, createTile(tileSpec));
+                    if (mCustomTileData.get(tileSpec) != null) {
+                        final CustomQSTile value = new CustomQSTile(this,
+                                mCustomTileData.get(tileSpec).sbc);
+                        newTiles.put(tileSpec, value);
+                    } else {
+                        final QSTile<?> tile = createTile(tileSpec);
+                        newTiles.put(tileSpec, tile);
+                    }
                 } catch (Throwable t) {
                     Log.w(TAG, "Error creating tile for spec: " + tileSpec, t);
                 }
@@ -328,64 +339,53 @@ public class QSTileHost implements QSTile.Host, Tunable {
         }
     }
 
-    protected QSTile<?> createTile(String tileSpec) {
-	if (tileSpec.equals("wifi")) return new WifiTile(this);
-	else if (tileSpec.equals("bt")) return new BluetoothTile(this);
-	else if (tileSpec.equals("inversion")) return new ColorInversionTile(this);
-	else if (tileSpec.equals("cell")) return new CellularTile(this);
-	else if (tileSpec.equals("airplane")) return new AirplaneModeTile(this);
-	else if (tileSpec.equals("dnd")) return new DndTile(this);
-	else if (tileSpec.equals("rotation")) return new RotationLockTile(this);
-	else if (tileSpec.equals("flashlight")) return new FlashlightTile(this);
-	else if (tileSpec.equals("location")) return new LocationTile(this);
-	else if (tileSpec.equals("cast")) return new CastTile(this);
-	else if (tileSpec.equals("hotspot")) return new HotspotTile(this);
-	else if (tileSpec.equals("adb_network")) return new AdbOverNetworkTile(this);
-	else if (tileSpec.equals("compass")) return new CompassTile(this);
-	else if (tileSpec.equals("nfc")) return new NfcTile(this);
-	else if (tileSpec.equals("profiles")) return new ProfilesTile(this);
-	else if (tileSpec.equals("sync")) return new SyncTile(this);
-	else if (tileSpec.equals("volume_panel")) return new VolumeTile(this);
-	else if (tileSpec.equals("usb_tether")) return new UsbTetherTile(this);
-	else if (tileSpec.equals("screen_timeout")) return new ScreenTimeoutTile(this);
-	else if (tileSpec.equals("performance")) return new PerfProfileTile(this);
-	else if (tileSpec.equals("ambient_display")) return new AmbientDisplayTile(this);
-	else if (tileSpec.equals("live_display")) return new LiveDisplayTile(this);
-	else if (tileSpec.equals("brightness")) return new BrightnessTile(this);
-	else if (tileSpec.equals("screen_off")) return new ScreenOffTile(this);
-	else if (tileSpec.equals("screenshot")) return new ScreenshotTile(this);
-	else if (tileSpec.equals("expanded_desktop")) return new ExpandedDesktopTile(this);
-	else if (tileSpec.equals("music")) return new MusicTile(this);
-	else if (tileSpec.equals("reboot")) return new RebootTile(this);
-	else if (tileSpec.equals("configurations")) return new RRTile(this);
-	else if (tileSpec.equals("heads_up")) return new HeadsUpTile(this);
-	else if (tileSpec.equals("lte")) return new LteTile(this);
-	else if (tileSpec.equals("themes")) return new ThemesTile(this);
-	else if (tileSpec.equals("navbar")) return new NavigationBarTile(this);
-	else if (tileSpec.equals("appcirclebar")) return new AppCircleBarTile(this);
-	else if (tileSpec.equals("kernel_adiutor")) return new KernelAdiutorTile(this);
-	else if (tileSpec.equals("screenrecord")) return new ScreenrecordTile(this);
-	else if (tileSpec.equals("gesture_anywhere")) return new GestureAnyWhereTile(this);
-	else if (tileSpec.equals("battery_saver")) return new BatterySaverTile(this);
-	else if (tileSpec.equals("power_menu")) return new PowerMenuTile(this);
-	else if (tileSpec.equals("app_picker")) return new AppPickerTile(this);
-	else if (tileSpec.equals("kill_app")) return new KillAppTile(this);
-	else if (tileSpec.equals("caffeine")) return new CaffeineTile(this);
-	else if (tileSpec.equals("hw_keys")) return new HardwareKeysTile(this);	
-	else if (tileSpec.equals("sound")) return new SoundTile(this);
-	else if (tileSpec.equals("lockscreen")) return new LockscreenToggleTile(this);
-	else if (tileSpec.equals("pulse")) return new PulseTile(this);
-	else if (tileSpec.equals("pie")) return new PieTile(this);
-	else if (tileSpec.equals("float_mode")) return new FloatingWindowsTile(this);
-	else if (tileSpec.equals("visualizer")) return new VisualizerTile(this);
-        else if (tileSpec.equals("halo")) return new HaloTile(this);
-	else if (tileSpec.startsWith(IntentTile.PREFIX)) return IntentTile.create(this,tileSpec);
-	else throw new IllegalArgumentException("Bad tile spec: " + tileSpec);
+    @Override
+    public void goToSettingsPage() {
+        if (mCallback != null) {
+            mCallback.goToSettingsPage();
+        }
+    }
+
+    public QSTile<?> createTile(String tileSpec) {
+        if (tileSpec.equals("wifi")) return new WifiTile(this);
+        else if (tileSpec.equals("bt")) return new BluetoothTile(this);
+        else if (tileSpec.equals("inversion")) return new ColorInversionTile(this);
+        else if (tileSpec.equals("cell")) return new CellularTile(this);
+        else if (tileSpec.equals("airplane")) return new AirplaneModeTile(this);
+        else if (tileSpec.equals("dnd")) return new DndTile(this);
+        else if (tileSpec.equals("rotation")) return new RotationLockTile(this);
+        else if (tileSpec.equals("flashlight")) return new FlashlightTile(this);
+        else if (tileSpec.equals("location")) return new LocationTile(this);
+        else if (tileSpec.equals("cast")) return new CastTile(this);
+        else if (tileSpec.equals("hotspot")) return new HotspotTile(this);
+        else if (tileSpec.equals("edit")) return new EditTile(this);
+        else if (tileSpec.equals("adb_network")) return new AdbOverNetworkTile(this);
+        else if (tileSpec.equals("compass")) return new CompassTile(this);
+        else if (tileSpec.equals("nfc")) return new NfcTile(this);
+        else if (tileSpec.equals("profiles")) return new ProfilesTile(this);
+        else if (tileSpec.equals("sync")) return new SyncTile(this);
+        else if (tileSpec.equals("volume_panel")) return new VolumeTile(this);
+        else if (tileSpec.equals("usb_tether")) return new UsbTetherTile(this);
+        else if (tileSpec.equals("screen_timeout")) return new ScreenTimeoutTile(this);
+        else if (tileSpec.equals("performance")) return new PerfProfileTile(this);
+        else if (tileSpec.equals("lockscreen")) return  new LockscreenToggleTile(this);
+        else if (tileSpec.equals("ambient_display")) return new AmbientDisplayTile(this);
+        else if (tileSpec.equals("heads_up")) return new HeadsUpTile(this);
+        else if (tileSpec.equals("battery_saver")) return new BatterySaverTile(this);
+        else if (tileSpec.equals("caffeine")) return new CaffeineTile(this);
+        else if (tileSpec.startsWith(IntentTile.PREFIX)) return IntentTile.create(this,tileSpec);
+        else if (TextUtils.split(tileSpec, "\\|").length == 3) {
+            /** restores placeholder for
+             * {@link cyanogenmod.app.StatusBarPanelCustomTile#persistableKey()} **/
+            return new CustomQSTile(this, tileSpec);
+        } else
+            throw new IllegalArgumentException("Bad tile spec: " + tileSpec);
     }
 
     protected List<String> loadTileSpecs(String tileList) {
         final Resources res = mContext.getResources();
-        final String defaultTileList = res.getString(R.string.quick_settings_tiles_default);
+        final String defaultTileList = res.getString(org.cyanogenmod.platform.internal.
+                R.string.config_defaultQuickSettingsTiles);
         if (tileList == null) {
             tileList = res.getString(R.string.quick_settings_tiles);
             if (DEBUG) Log.d(TAG, "Loaded tile specs from config: " + tileList);
@@ -406,6 +406,140 @@ public class QSTileHost implements QSTile.Host, Tunable {
                 tiles.add(tile);
             }
         }
+        // ensure edit tile is present, default placement should be handled in the default
+        // tile list.
+        if (!tiles.contains("edit")) {
+            tiles.add("edit");
+        }
         return tiles;
     }
+
+    public void remove(String tile) {
+        MetricsLogger.action(getContext(), MetricsLogger.TUNER_QS_REMOVE, tile);
+        List<String> tiles = new ArrayList<>(mTileSpecs);
+        tiles.remove(tile);
+        setTiles(tiles);
+    }
+
+    public void setTiles(List<String> tiles) {
+        CMSettings.Secure.putStringForUser(getContext().getContentResolver(),
+                CMSettings.Secure.QS_TILES,
+                TextUtils.join(",", tiles), ActivityManager.getCurrentUser());
+    }
+
+    public void initiateReset() {
+        if (mCallback != null) {
+            mCallback.resetTiles();
+        }
+    }
+
+    @Override
+    public void resetTiles() {
+        CMSettings.Secure.putStringForUser(getContext().getContentResolver(),
+                CMSettings.Secure.QS_TILES, "default", ActivityManager.getCurrentUser());
+    }
+
+    public QSTile<?> getTile(String spec) {
+        return mTiles.get(spec);
+    }
+
+    public static int getLabelResource(String spec) {
+        if (spec.equals("wifi")) return R.string.quick_settings_wifi_label;
+        else if (spec.equals("bt")) return R.string.quick_settings_bluetooth_label;
+        else if (spec.equals("inversion")) return R.string.quick_settings_inversion_label;
+        else if (spec.equals("cell")) return R.string.quick_settings_cellular_detail_title;
+        else if (spec.equals("airplane")) return R.string.airplane_mode;
+        else if (spec.equals("dnd")) return R.string.quick_settings_dnd_label;
+        else if (spec.equals("rotation")) return R.string.quick_settings_rotation_locked_label;
+        else if (spec.equals("flashlight")) return R.string.quick_settings_flashlight_label;
+        else if (spec.equals("location")) return R.string.quick_settings_location_label;
+        else if (spec.equals("cast")) return R.string.quick_settings_cast_title;
+        else if (spec.equals("hotspot")) return R.string.quick_settings_hotspot_label;
+        else if (spec.equals("edit")) return R.string.quick_settings_edit_label;
+        else if (spec.equals("adb_network")) return R.string.quick_settings_network_adb_label;
+        else if (spec.equals("compass")) return R.string.quick_settings_compass_label;
+        else if (spec.equals("nfc")) return R.string.quick_settings_nfc_label;
+        else if (spec.equals("profiles")) return R.string.quick_settings_profiles;
+        else if (spec.equals("sync")) return R.string.quick_settings_sync_label;
+        else if (spec.equals("volume_panel")) return R.string.quick_settings_volume_panel_label;
+        else if (spec.equals("usb_tether")) return R.string.quick_settings_usb_tether_label;
+        else if (spec.equals("screen_timeout")) return R.string.quick_settings_screen_timeout_detail_title;
+        else if (spec.equals("performance")) return R.string.qs_tile_performance;
+        else if (spec.equals("lockscreen")) return R.string.quick_settings_lockscreen_label;
+        else if (spec.equals("ambient_display")) return R.string.quick_settings_ambient_display_label;
+        else if (spec.equals("heads_up")) return R.string.quick_settings_heads_up_label;
+        else if (spec.equals("battery_saver")) return R.string.quick_settings_battery_saver_label;
+        else if (spec.equals("caffeine")) return R.string.quick_settings_caffeine_label;
+        return 0;
+    }
+
+    public static int getIconResource(String spec) {
+        if (spec.equals("wifi")) return R.drawable.ic_qs_wifi_full_4;
+        else if (spec.equals("bt")) return R.drawable.ic_qs_bluetooth_on;
+        else if (spec.equals("inversion")) return R.drawable.ic_invert_colors_enable_animation;
+        else if (spec.equals("cell")) return R.drawable.ic_qs_signal_full_4;
+        else if (spec.equals("airplane")) return R.drawable.ic_signal_airplane_enable;
+        else if (spec.equals("dnd")) return R.drawable.ic_dnd;
+        else if (spec.equals("rotation")) return R.drawable.ic_portrait_from_auto_rotate;
+        else if (spec.equals("flashlight")) return R.drawable.ic_signal_flashlight_enable;
+        else if (spec.equals("location")) return R.drawable.ic_signal_location_enable;
+        else if (spec.equals("cast")) return R.drawable.ic_qs_cast_on;
+        else if (spec.equals("hotspot")) return R.drawable.ic_hotspot_enable;
+        else if (spec.equals("edit")) return R.drawable.ic_qs_edit_tiles;
+        else if (spec.equals("adb_network")) return R.drawable.ic_qs_network_adb_on;
+        else if (spec.equals("compass")) return R.drawable.ic_qs_compass_on;
+        else if (spec.equals("nfc")) return R.drawable.ic_qs_nfc_on;
+        else if (spec.equals("profiles")) return R.drawable.ic_qs_profiles_on;
+        else if (spec.equals("sync")) return R.drawable.ic_qs_sync_on;
+        else if (spec.equals("volume_panel")) return R.drawable.ic_qs_volume_panel;
+        else if (spec.equals("usb_tether")) return R.drawable.ic_qs_usb_tether_on;
+        else if (spec.equals("screen_timeout")) return R.drawable.ic_qs_screen_timeout_short_avd;
+        else if (spec.equals("performance")) return R.drawable.ic_qs_perf_profile;
+        else if (spec.equals("lockscreen")) return R.drawable.ic_qs_lock_screen_on;
+        else if (spec.equals("ambient_display")) return R.drawable.ic_qs_ambientdisplay_on;
+        else if (spec.equals("heads_up")) return R.drawable.ic_qs_heads_up_on;
+        else if (spec.equals("battery_saver")) return R.drawable.ic_qs_battery_saver_on;
+        else if (spec.equals("caffeine")) return R.drawable.ic_qs_caffeine_on;
+        return 0;
+    }
+
+    void updateCustomTile(StatusBarPanelCustomTile sbc) {
+        synchronized (mTiles) {
+            if (mTiles.containsKey(sbc.persistableKey())) {
+                QSTile<?> tile = mTiles.get(sbc.persistableKey());
+                if (tile instanceof CustomQSTile) {
+                    CustomQSTile qsTile = (CustomQSTile) tile;
+                    qsTile.update(sbc);
+                }
+            }
+        }
+    }
+
+    void addCustomTile(StatusBarPanelCustomTile sbc) {
+        synchronized (mTiles) {
+            mCustomTileData.add(new CustomTileData.Entry(sbc));
+            mTileSpecs.add(sbc.persistableKey());
+            mTiles.put(sbc.persistableKey(), new CustomQSTile(this, sbc));
+            if (mCallback != null) {
+                mCallback.onTilesChanged();
+            }
+        }
+    }
+
+    void removeCustomTileSysUi(String key) {
+        synchronized (mTiles) {
+            if (mTiles.containsKey(key)) {
+                mTileSpecs.remove(key);
+                mTiles.remove(key);
+                mCustomTileData.remove(key);
+                if (mCallback != null) {
+                    mCallback.onTilesChanged();
+                }
+            }
+        }
+    }
+
+    public CustomTileData getCustomTileData() {
+        return mCustomTileData;
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/SettingsButton.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/SettingsButton.java
new file mode 100644
index 0000000..3e0aa18
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/SettingsButton.java
@@ -0,0 +1,161 @@
+/*
+ * Copyright (C) 2015 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.systemui.statusbar.phone;
+
+import android.animation.Animator;
+import android.animation.Animator.AnimatorListener;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.ObjectAnimator;
+import android.content.Context;
+import android.util.AttributeSet;
+import android.view.HapticFeedbackConstants;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewConfiguration;
+import android.view.animation.Animation;
+import android.view.animation.AnimationUtils;
+
+import android.view.animation.DecelerateInterpolator;
+import com.android.keyguard.AlphaOptimizedImageButton;
+
+public class SettingsButton extends AlphaOptimizedImageButton {
+
+    private static final long LONG_PRESS_LENGTH = 1000;
+    private static final long ACCEL_LENGTH = 750;
+    private static final long FULL_SPEED_LENGTH = 375;
+    private static final long RUN_DURATION = 350;
+
+    private boolean mUpToSpeed;
+    private ObjectAnimator mAnimator;
+
+    private float mSlop;
+
+    public SettingsButton(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mSlop = ViewConfiguration.get(getContext()).getScaledTouchSlop();
+    }
+
+    public boolean isAnimating() {
+        return mAnimator != null && mAnimator.isRunning();
+    }
+
+    public boolean isTunerClick() {
+        return mUpToSpeed;
+    }
+
+    public void consumeClick() {
+        mUpToSpeed = false;
+    }
+
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        switch (event.getActionMasked()) {
+            case MotionEvent.ACTION_DOWN:
+                postDelayed(mLongPressCallback, LONG_PRESS_LENGTH);
+                break;
+            case MotionEvent.ACTION_UP:
+                if (mUpToSpeed) {
+                    startExitAnimation();
+                } else {
+                    cancelLongClick();
+                }
+                break;
+            case MotionEvent.ACTION_CANCEL:
+                cancelLongClick();
+                break;
+            case MotionEvent.ACTION_MOVE:
+                float x = event.getX();
+                float y = event.getY();
+                if ((x < -mSlop) || (y < -mSlop) || (x > getWidth() + mSlop)
+                        || (y > getHeight() + mSlop)) {
+                    cancelLongClick();
+                    startExitAnimation();
+                }
+                break;
+        }
+        return super.onTouchEvent(event);
+    }
+
+    private void cancelLongClick() {
+        cancelAnimation();
+        mUpToSpeed = false;
+        removeCallbacks(mLongPressCallback);
+    }
+
+    private void cancelAnimation() {
+        if (mAnimator != null) {
+            mAnimator.removeAllListeners();
+            mAnimator.cancel();
+            mAnimator = null;
+        }
+    }
+
+    private void startExitAnimation() {
+        cancelAnimation();
+        animate()
+                .rotation(0)
+                .setDuration(ACCEL_LENGTH)
+                .setInterpolator(new DecelerateInterpolator(4))
+                .start();
+    }
+
+    protected void startAccelSpin() {
+        cancelAnimation();
+        mAnimator = ObjectAnimator.ofFloat(this, View.ROTATION, 0, 360);
+        mAnimator.setInterpolator(AnimationUtils.loadInterpolator(mContext,
+                android.R.interpolator.accelerate_quad));
+        mAnimator.setDuration(ACCEL_LENGTH);
+        mAnimator.addListener(new AnimatorListener() {
+            @Override
+            public void onAnimationStart(Animator animation) {
+            }
+
+            @Override
+            public void onAnimationRepeat(Animator animation) {
+            }
+
+            @Override
+            public void onAnimationEnd(Animator animation) {
+                startContinuousSpin();
+            }
+
+            @Override
+            public void onAnimationCancel(Animator animation) {
+            }
+        });
+        mAnimator.start();
+    }
+
+    protected void startContinuousSpin() {
+        cancelAnimation();
+        mUpToSpeed = true;
+        mAnimator = ObjectAnimator.ofFloat(this, View.ROTATION, 0, 360);
+        mAnimator.setInterpolator(AnimationUtils.loadInterpolator(mContext,
+                android.R.interpolator.linear));
+        mAnimator.setDuration(FULL_SPEED_LENGTH);
+        mAnimator.setRepeatCount(Animation.INFINITE);
+        mAnimator.start();
+
+        performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+    }
+
+    private final Runnable mLongPressCallback = new Runnable() {
+        @Override
+        public void run() {
+            startAccelSpin();
+        }
+    };
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarHeaderView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarHeaderView.java
index 4ccd576..f9b1f38 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarHeaderView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarHeaderView.java
@@ -23,34 +23,20 @@ import android.content.ContentUris;
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.IntentFilter;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.database.ContentObserver;
-import android.graphics.Bitmap;
-import android.graphics.Color;
 import android.graphics.Outline;
 import android.graphics.Rect;
 import android.graphics.drawable.Animatable;
-import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
-import android.graphics.drawable.GradientDrawable;
-import android.graphics.drawable.GradientDrawable.Orientation;
 import android.graphics.drawable.RippleDrawable;
-import android.graphics.Typeface;
 import android.os.Handler;
 import android.os.IRemoteCallback;
 import android.os.RemoteException;
 import android.os.UserHandle;
-import android.os.Vibrator;
 import android.provider.AlarmClock;
 import android.provider.CalendarContract;
-import android.graphics.drawable.TransitionDrawable;
-import android.net.Uri;
-import android.os.Handler;
-import android.os.UserHandle;
-import android.os.PowerManager;
-import android.provider.CalendarContract.Events;
 import android.provider.Settings;
 import android.net.Uri;
 import android.util.AttributeSet;
@@ -60,21 +46,13 @@ import android.util.TypedValue;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewOutlineProvider;
-import android.graphics.PorterDuff.Mode;
-import android.graphics.PorterDuffColorFilter;
-import android.graphics.ColorMatrix;
-import android.graphics.ColorMatrixColorFilter;
+import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 import android.widget.Switch;
 import android.widget.TextView;
-import android.widget.ImageButton;
-import android.widget.ImageView;
 import android.widget.Toast;
-import com.android.internal.util.cm.WeatherController;
-import com.android.internal.util.cm.WeatherControllerImpl;
-import com.android.internal.util.rr.SBEHeaderColorHelper;
-import com.android.internal.logging.MetricsConstants;
+
 import com.android.keyguard.KeyguardStatusView;
 import com.android.systemui.BatteryLevelTextView;
 import com.android.systemui.BatteryMeterView;
@@ -82,7 +60,7 @@ import com.android.systemui.DockBatteryMeterView;
 import com.android.systemui.FontSizeUtils;
 import com.android.systemui.R;
 import com.android.systemui.cm.UserContentObserver;
-import com.android.systemui.omni.StatusBarHeaderMachine;
+import com.android.systemui.qs.QSDragPanel;
 import com.android.systemui.qs.QSPanel;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.statusbar.policy.BatteryController;
@@ -90,26 +68,26 @@ import com.android.systemui.statusbar.policy.DockBatteryController;
 import com.android.systemui.statusbar.policy.NetworkControllerImpl.EmergencyListener;
 import com.android.systemui.statusbar.policy.NextAlarmController;
 import com.android.systemui.statusbar.policy.UserInfoController;
+import com.android.systemui.statusbar.policy.WeatherController;
+import com.android.systemui.statusbar.policy.WeatherControllerImpl;
+import com.android.systemui.tuner.TunerService;
 
 import java.text.NumberFormat;
 
 import cyanogenmod.app.StatusBarPanelCustomTile;
 import cyanogenmod.providers.CMSettings;
+import cyanogenmod.weather.util.WeatherUtils;
 import org.cyanogenmod.internal.logging.CMMetricsLogger;
 
 /**
  * The view to manage the header area in the expanded status bar.
  */
-public class StatusBarHeaderView extends RelativeLayout implements View.OnClickListener, View.OnLongClickListener,
-        NextAlarmController.NextAlarmChangeCallback, WeatherController.Callback, EmergencyListener,
-        StatusBarHeaderMachine.IStatusBarHeaderMachineObserver {
-    static final String TAG = "StatusBarHeaderView";
+public class StatusBarHeaderView extends RelativeLayout implements View.OnClickListener,
+        NextAlarmController.NextAlarmChangeCallback, WeatherController.Callback, EmergencyListener {
 
     private boolean mExpanded;
     private boolean mListening;
-    private PowerManager mPowerManager;
-    
-    private View mHeaderView;
+
     private ViewGroup mSystemIconsContainer;
     private ViewGroup mWeatherContainer;
     private View mSystemIconsSuperContainer;
@@ -123,25 +101,18 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
     private TextView mDateExpanded;
     private LinearLayout mSystemIcons;
     private View mSignalCluster;
-    private View mSettingsButton;
-    private View mHaloButton;
-    private boolean mHaloActive;
+    private SettingsButton mSettingsButton;
+    private View mSettingsContainer;
     private View mQsDetailHeader;
     private TextView mQsDetailHeaderTitle;
     private Switch mQsDetailHeaderSwitch;
-    private ImageButton mWeatherimage;
     private ImageView mQsDetailHeaderProgress;
     private TextView mEmergencyCallsOnly;
     private BatteryLevelTextView mBatteryLevel;
     private BatteryLevelTextView mDockBatteryLevel;
     private TextView mAlarmStatus;
     private TextView mWeatherLine1, mWeatherLine2;
-
-    protected int mDrawable;
-    private View mHeadsUpButton;
-    private boolean mShowHeadsUpButton;
-    private boolean mHeadsUpEnabled;
-    private boolean mShowhaloButton;
+    private TextView mEditTileDoneText;
 
     private boolean mShowEmergencyCallsOnly;
     private boolean mAlarmShowing;
@@ -153,8 +124,6 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
     private int mMultiUserExpandedMargin;
     private int mMultiUserCollapsedMargin;
 
-    private SettingsObserver mSettingsObserver;
-
     private int mClockMarginBottomExpanded;
     private int mClockMarginBottomCollapsed;
     private int mMultiUserSwitchWidthCollapsed;
@@ -162,28 +131,6 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
 
     private int mClockCollapsedSize;
     private int mClockExpandedSize;
-    private static boolean mTranslucentHeader;
-    private static int mTranslucencyPercentage;
-    private static StatusBarHeaderView mStatusBarHeaderView;
-
-    private int mStatusBarHeaderClockFont = FONT_NORMAL;
-    private int mStatusBarHeaderWeatherFont = FONT_NORMAL;
-    private int mStatusBarHeaderAlarmFont = FONT_NORMAL;
-    private int mStatusBarHeaderDateFont = FONT_NORMAL;	
-    private int mStatusBarHeaderDetailFont = FONT_NORMAL;	
-
-
-    // Task manager
-    private boolean mShowTaskManager;
-    private View mTaskManagerButton;
-
-    protected Vibrator mVibrator;
-    private boolean mQsVibLongpress = false;	
-    private boolean mQsVibrateHeader = false;
-    private boolean mQsVibrateHeaderLong = false;
-
-    private GradientDrawable gradientDrawable;
-    private boolean mQsMasterSwitch;
 
     /**
      * In collapsed QS, the clock and avatar are scaled down a bit post-layout to allow for a nice
@@ -195,7 +142,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
     private ActivityStarter mActivityStarter;
     private NextAlarmController mNextAlarmController;
     private WeatherController mWeatherController;
-    private QSPanel mQSPanel;
+    private QSDragPanel mQSPanel;
 
     private final Rect mClipBounds = new Rect();
 
@@ -208,55 +155,15 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
     private float mCurrentT;
     private boolean mShowingDetail;
     private boolean mDetailTransitioning;
+    private SettingsObserver mSettingsObserver;
     private boolean mShowWeather;
     private boolean mShowBatteryTextExpanded;
 
+    private QSTile.DetailAdapter mEditingDetailAdapter;
+    private boolean mEditing;
 
-
-    private ImageView mBackgroundImage;
-    private Drawable mCurrentBackground;
-    private float mLastHeight;
     private UserInfoController mUserInfoController;
 
-
-    // QS header alpha
-    private int mQSHeaderAlpha;
-
-    private int mQsColorSwitch ;	
-    private int mHeaderColor;
-    private int headerShadow;
-    private float textShadow;
-    private int tShadowColor;
-    private int customHeader;
-
-    // Font style
-    public static final int FONT_NORMAL = 0;
-    public static final int FONT_ITALIC = 1;
-    public static final int FONT_BOLD = 2;
-    public static final int FONT_BOLD_ITALIC = 3;
-    public static final int FONT_LIGHT = 4;
-    public static final int FONT_LIGHT_ITALIC = 5;
-    public static final int FONT_THIN = 6;
-    public static final int FONT_THIN_ITALIC = 7;
-    public static final int FONT_CONDENSED = 8;
-    public static final int FONT_CONDENSED_ITALIC = 9;
-    public static final int FONT_CONDENSED_LIGHT = 10;
-    public static final int FONT_CONDENSED_LIGHT_ITALIC = 11;
-    public static final int FONT_CONDENSED_BOLD = 12;
-    public static final int FONT_CONDENSED_BOLD_ITALIC = 13;
-    public static final int FONT_MEDIUM = 14;
-    public static final int FONT_MEDIUM_ITALIC = 15;
-    public static final int FONT_BLACK = 16;
-    public static final int FONT_BLACK_ITALIC = 17;
-    public static final int FONT_DANCINGSCRIPT = 18;
-    public static final int FONT_DANCINGSCRIPT_BOLD = 19;
-    public static final int FONT_COMINGSOON = 20;
-    public static final int FONT_NOTOSERIF = 21;
-    public static final int FONT_NOTOSERIF_ITALIC = 22;
-    public static final int FONT_NOTOSERIF_BOLD = 23;
-    public static final int FONT_NOTOSERIF_BOLD_ITALIC = 24;
-    private int mStatusBarHeaderFontStyle = FONT_NORMAL;
-
     public StatusBarHeaderView(Context context, AttributeSet attrs) {
         super(context, attrs);
     }
@@ -264,40 +171,24 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
     @Override
     protected void onFinishInflate() {
         super.onFinishInflate();
-        mHeaderView = findViewById(R.id.header);
         mSystemIconsSuperContainer = findViewById(R.id.system_icons_super_container);
         mSystemIconsContainer = (ViewGroup) findViewById(R.id.system_icons_container);
         mSystemIconsSuperContainer.setOnClickListener(this);
-        mSystemIconsSuperContainer.setOnLongClickListener(this);
         mDateGroup = findViewById(R.id.date_group);
         mDateGroup.setOnClickListener(this);
-        mDateGroup.setOnLongClickListener(this);
         mClock = findViewById(R.id.clock);
         mClock.setOnClickListener(this);
-        mClock.setOnLongClickListener(this);
         mTime = (TextView) findViewById(R.id.time_view);
         mAmPm = (TextView) findViewById(R.id.am_pm_view);
         mMultiUserSwitch = (MultiUserSwitch) findViewById(R.id.multi_user_switch);
-        mMultiUserSwitch.setOnLongClickListener(this);
         mMultiUserAvatar = (ImageView) findViewById(R.id.multi_user_avatar);
         mDateCollapsed = (TextView) findViewById(R.id.date_collapsed);
         mDateExpanded = (TextView) findViewById(R.id.date_expanded);
-        mSettingsButton = findViewById(R.id.settings_button);
+        mSettingsButton = (SettingsButton) findViewById(R.id.settings_button);
+        mSettingsContainer = findViewById(R.id.settings_button_container);
         mSettingsButton.setOnClickListener(this);
-        mSettingsButton.setOnLongClickListener(this);
-        mTaskManagerButton = findViewById(R.id.task_manager_button);
-        mTaskManagerButton.setOnLongClickListener(this);
-        mHaloButton = findViewById(R.id.halo_button);
-        mHaloButton.setOnClickListener(this);
-	mHaloButton.setOnLongClickListener(this);
-        mHeadsUpButton = findViewById(R.id.heads_up_button);
-        mHeadsUpButton.setOnClickListener(this);
-        mHeadsUpButton.setOnLongClickListener(this);
-        updateHeadsUpState();
-        updateStatusBarButtonsState();
         mQsDetailHeader = findViewById(R.id.qs_detail_header);
         mQsDetailHeader.setAlpha(0);
-        mVibrator = (Vibrator) mContext.getSystemService(Context.VIBRATOR_SERVICE);
         mQsDetailHeaderTitle = (TextView) mQsDetailHeader.findViewById(android.R.id.title);
         mQsDetailHeaderSwitch = (Switch) mQsDetailHeader.findViewById(android.R.id.toggle);
         mQsDetailHeaderProgress = (ImageView) findViewById(R.id.qs_detail_header_progress);
@@ -310,20 +201,14 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         mSystemIcons = (LinearLayout) findViewById(R.id.system_icons);
         mWeatherContainer = (LinearLayout) findViewById(R.id.weather_container);
         mWeatherContainer.setOnClickListener(this);
-        mWeatherContainer.setOnLongClickListener(this);
-        mWeatherimage = (ImageButton) findViewById(R.id.no_weather_image);
         mWeatherLine1 = (TextView) findViewById(R.id.weather_line_1);
         mWeatherLine2 = (TextView) findViewById(R.id.weather_line_2);
+        mEditTileDoneText = (TextView) findViewById(R.id.done);
         mSettingsObserver = new SettingsObserver(new Handler());
-        mBackgroundImage = (ImageView) findViewById(R.id.background_image);
-        mPowerManager = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
-	gradientDrawable = new GradientDrawable();
         loadDimens();
         updateVisibilities();
         updateClockScale();
-	updateAvatarScale();
-	setHeaderColor();
-	setSBEHStroke();
+        updateAvatarScale();
         addOnLayoutChangeListener(new View.OnLayoutChangeListener() {
             @Override
             public void onLayoutChange(View v, int left, int top, int right,
@@ -356,61 +241,12 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         if (d instanceof RippleDrawable) {
             ((RippleDrawable) d).setForceSoftware(true);
         }
-        d = mHaloButton.getBackground();
-        if (d instanceof RippleDrawable) {
-            ((RippleDrawable) d).setForceSoftware(true);
-        }
         d = mSystemIconsSuperContainer.getBackground();
         if (d instanceof RippleDrawable) {
             ((RippleDrawable) d).setForceSoftware(true);
         }
-
-        mStatusBarHeaderView = this;
-        handleStatusBarHeaderViewBackround();
-    }
-
-    public static void handleStatusBarHeaderViewBackround() {
-
-        if (NotificationPanelView.mNotificationPanelView == null)
-            return;
-
-        boolean mKeyguardShowing = NotificationPanelView.mKeyguardShowing;
-
-        if (mStatusBarHeaderView == null)
-            return;
-        if (mKeyguardShowing) {
-            mStatusBarHeaderView.getBackground().setAlpha(255);
-        } else {
-            mStatusBarHeaderView.getBackground().setAlpha(mTranslucentHeader ? mTranslucencyPercentage : 255);
-        }
     }
 
-    public void setHeaderColor() {
-	final Resources res = getContext().getResources();
-	mHeaderView = findViewById(R.id.header);
-	mQsDetailHeaderTitle = (TextView) mQsDetailHeader.findViewById(android.R.id.title);
-	int mStockHeaderText = res.getColor(R.color.qs_tile_text);
-	mBackgroundImage = (ImageView) findViewById(R.id.background_image);
-	int mQsDetailColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_HEADER_TEXT_COLOR, 0xFFFFFFFF);
-	if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-	if (mHeaderView != null) {
-            mHeaderView.getBackground().setColorFilter(
-                        mHeaderColor, Mode.SRC_IN);
-        }
-	if ( mQsDetailHeaderTitle != null) {
-	    mQsDetailHeaderTitle.setTextColor(mQsDetailColor);
-	  }
-	} else if (mQsColorSwitch == 0) {
-	if (mHeaderView != null) {
-            mHeaderView.getBackground().setColorFilter(null);
-        }
-	if ( mQsDetailHeaderTitle != null) {
-	    mQsDetailHeaderTitle.setTextColor(mStockHeaderText);
-		}
-	}	
-   }
-
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         super.onLayout(changed, l, t, r, b);
@@ -440,84 +276,18 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         FontSizeUtils.updateFontSize(this, R.id.empty_time_view, R.dimen.qs_time_expanded_size);
 
         mEmergencyCallsOnly.setText(com.android.internal.R.string.emergency_calls_only);
+
         mClockCollapsedSize = getResources().getDimensionPixelSize(R.dimen.qs_time_collapsed_size);
         mClockExpandedSize = getResources().getDimensionPixelSize(R.dimen.qs_time_expanded_size);
         mClockCollapsedScaleFactor = (float) mClockCollapsedSize / (float) mClockExpandedSize;
-        updateClockScale();
-        updateClockCollapsedMargin();
-	setclockcolor();
-	setdetailcolor();
-	setweathercolor1();
-	setweathercolor2();	
-	setalarmtextcolor();	    
-	setbatterytextcolor();
-	     
-    }
 
-
-  private void setSBEHStroke() {
-        ContentResolver resolver = mContext.getContentResolver();
-        final int mSBEHStroke = Settings.System.getInt(
-                resolver, Settings.System.STATUS_BAR_EXPANDED_HEADER_STROKE, 0);
-        final int mSBEHStrokeColor = Settings.System.getInt(
-                resolver, Settings.System.STATUS_BAR_EXPANDED_HEADER_STROKE_COLOR, mContext.getResources().getColor(R.color.system_accent_color));
-        final int mSBEHStrokeThickness = Settings.System.getInt(
-                resolver, Settings.System.STATUS_BAR_EXPANDED_HEADER_STROKE_THICKNESS, 4);
-        final int mSBEHCornerRadius = Settings.System.getInt(
-                resolver, Settings.System.STATUS_BAR_EXPANDED_HEADER_CORNER_RADIUS, 0);
-        final int mSBEHCustomDashWidth = Settings.System.getInt(
-                resolver, Settings.System.STATUS_BAR_EXPANDED_HEADER_STROKE_DASH_GAP, 0);
-        final int mSBEHCustomDashGap = Settings.System.getInt(
-                resolver, Settings.System.STATUS_BAR_EXPANDED_HEADER_STROKE_DASH_WIDTH, 10);
-        if (mQsMasterSwitch) {
-        if (mSBEHStroke == 0) { // Disable by setting border color to match bg color
-	    if (mQsColorSwitch == 0) {
-            gradientDrawable.setColor(mContext.getResources().getColor(R.color.system_secondary_color));
-	    } else if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-	    gradientDrawable.setColor(mHeaderColor);
-	    } else {
-	    gradientDrawable.setColors(SBEHeaderColorHelper.getBackgroundColors(mContext));
-	    }
-            gradientDrawable.setStroke(0, mSBEHStrokeColor);
-            gradientDrawable.setCornerRadius(mSBEHCornerRadius);
-            setBackground(gradientDrawable);
-        } else if (mSBEHStroke == 1) { // use accent color for border
-	    if (mQsColorSwitch == 0) {
-            gradientDrawable.setColor(mContext.getResources().getColor(R.color.system_secondary_color));
-	    } else if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-	    gradientDrawable.setColor(mHeaderColor);
-	    } else {
-	    gradientDrawable.setColors(SBEHeaderColorHelper.getBackgroundColors(mContext));
-	    }
-            gradientDrawable.setStroke(mSBEHStrokeThickness, mContext.getResources().getColor(R.color.system_accent_color),
-                    mSBEHCustomDashWidth, mSBEHCustomDashGap);
-        } else if (mSBEHStroke == 2) { // use custom border color
-	    if (mQsColorSwitch == 0) {
-            gradientDrawable.setColor(mContext.getResources().getColor(R.color.system_secondary_color));
-	    } else if (mQsColorSwitch == 1 || mQsColorSwitch == 3) {
-	    gradientDrawable.setColor(mHeaderColor);
-	    } else {
-	    gradientDrawable.setColors(SBEHeaderColorHelper.getBackgroundColors(mContext));
-	    }
-            gradientDrawable.setStroke(mSBEHStrokeThickness, mSBEHStrokeColor, mSBEHCustomDashWidth, mSBEHCustomDashGap);
+        if (mEditTileDoneText != null) {
+            mEditTileDoneText.setText(R.string.quick_settings_done);
         }
 
-        if (mSBEHStroke != 0) {
-            gradientDrawable.setCornerRadius(mSBEHCornerRadius);
-            setBackground(gradientDrawable);
-        }
-     }
-        if (mQsColorSwitch == 2 || mQsColorSwitch == 4 ) {
-        gradientDrawable.setColors(SBEHeaderColorHelper.getBackgroundColors(mContext));
-        setBackground(gradientDrawable);
-        }
-}
-
-    public void vibrateheader(int duration) {
-        if (mVibrator != null) {
-            if (mVibrator.hasVibrator()) { mVibrator.vibrate(duration); }
-        	}
-	}
+        updateClockScale();
+        updateClockCollapsedMargin();
+    }
 
     @Override
     protected void onDetachedFromWindow() {
@@ -565,6 +335,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         mClockCollapsedSize = getResources().getDimensionPixelSize(R.dimen.qs_time_collapsed_size);
         mClockExpandedSize = getResources().getDimensionPixelSize(R.dimen.qs_time_expanded_size);
         mClockCollapsedScaleFactor = (float) mClockCollapsedSize / (float) mClockExpandedSize;
+
     }
 
     public void setActivityStarter(ActivityStarter activityStarter) {
@@ -572,7 +343,6 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         if (mMultiUserSwitch != null) {
             mMultiUserSwitch.setActivityStarter(activityStarter);
         }
-	     	
     }
 
     public void setBatteryController(BatteryController batteryController) {
@@ -626,25 +396,23 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         boolean changed = expanded != mExpanded;
         mExpanded = expanded;
         if (changed) {
+            if (mShowingDetail && !expanded) {
+                mQsPanelCallback.onShowingDetail(null);
+            }
             updateEverything();
-            mPowerManager.cpuBoost(2500000);
         }
     }
 
     public void updateEverything() {
-	updateHeights();
+        updateHeights();
         updateVisibilities();
         updateSystemIconsLayoutParams();
+        updateClickTargets();
         updateMultiUserSwitch();
-        updateAvatarScale();
         updateClockScale();
+        updateAvatarScale();
         updateClockLp();
         requestCaptureValues();
-	     	
-    }
-
-    void setTaskManagerEnabled(boolean enabled) {
-        mShowTaskManager = enabled;
     }
 
     private void updateHeights() {
@@ -660,164 +428,21 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         mDateCollapsed.setVisibility(mExpanded && mAlarmShowing ? View.VISIBLE : View.INVISIBLE);
         mDateExpanded.setVisibility(mExpanded && mAlarmShowing ? View.INVISIBLE : View.VISIBLE);
         mAlarmStatus.setVisibility(mExpanded && mAlarmShowing ? View.VISIBLE : View.INVISIBLE);
-        mSettingsButton.setVisibility(mExpanded ? View.VISIBLE : View.INVISIBLE);
+        mSettingsContainer.setVisibility(mExpanded ? View.VISIBLE : View.INVISIBLE);
         mWeatherContainer.setVisibility(mExpanded && mShowWeather ? View.VISIBLE : View.GONE);
-	mHaloButton.setVisibility(mExpanded && mShowhaloButton ? View.VISIBLE : mShowhaloButton ? View.INVISIBLE : View.GONE);
-        mHeadsUpButton.setVisibility(mExpanded && mShowHeadsUpButton ? View.VISIBLE : mShowHeadsUpButton ? View.INVISIBLE : View.GONE);
-        mTaskManagerButton.setVisibility(mExpanded && mShowTaskManager ? View.VISIBLE : mShowTaskManager ? View.INVISIBLE : View.GONE);
-        mQsDetailHeader.setVisibility(mExpanded && mShowingDetail ? View.VISIBLE : View.GONE);
         mQsDetailHeader.setVisibility(mExpanded && mShowingDetail ? View.VISIBLE : View.INVISIBLE);
         if (mSignalCluster != null) {
             updateSignalClusterDetachment();
         }
-        mEmergencyCallsOnly.setVisibility(mExpanded && mShowEmergencyCallsOnly ? View.VISIBLE : View.GONE);
+        mEmergencyCallsOnly.setVisibility(mExpanded && mShowEmergencyCallsOnly ? VISIBLE : GONE);
         mBatteryLevel.setForceShown(mExpanded && mShowBatteryTextExpanded);
-        mBatteryLevel.setVisibility(View.VISIBLE);        		
+        mBatteryLevel.setVisibility(View.VISIBLE);
         if (mDockBatteryLevel != null) {
             mDockBatteryLevel.setForceShown(mExpanded && mShowBatteryTextExpanded);
             mDockBatteryLevel.setVisibility(View.VISIBLE);
         }
-        applyTextShadow();
-        applyHeaderBackgroundShadow();
     }
 
-	public void hidepanelItems() {
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.HIDE_PANEL_CLOCK, 1) == 1) {
-       	    mTime = (TextView) findViewById(R.id.time_view);
-            mTime.setVisibility(View.VISIBLE);
-	    
-        } else {
-        mTime = (TextView) findViewById(R.id.time_view);
-        mAmPm = (TextView) findViewById(R.id.am_pm_view);
-            mTime.setVisibility(View.GONE);
-	    mAmPm.setVisibility(View.GONE);
-        	}
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.HIDE_PANEL_DATE, 1) == 1) {
-        mDateGroup = findViewById(R.id.date_group);
-	mDateGroup .setVisibility(View.VISIBLE);
-        } else {
-         mDateGroup = findViewById(R.id.date_group);
-	 mDateGroup.setVisibility(View.INVISIBLE);
-        }
- 	if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.HIDE_PANEL_CLOCKVALUE, 1) == 1) {
-	mAmPm = (TextView) findViewById(R.id.am_pm_view);
-	mAmPm.setVisibility(View.VISIBLE);
-	} else {
-        mAmPm = (TextView) findViewById(R.id.am_pm_view);
-	    mAmPm.setVisibility(View.GONE);
-		}
-	if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.HIDE_PANEL_BATTERY, 1) == 1) {
-	mBatteryLevel = (BatteryLevelTextView) findViewById(R.id.battery_level_text);
-	mBatteryLevel.setVisibility(View.VISIBLE);
-	} else {
-       	mBatteryLevel = (BatteryLevelTextView) findViewById(R.id.battery_level_text);
-	    mBatteryLevel.setVisibility(View.INVISIBLE);
-		}
-	if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.HIDE_PANEL_ICONS, 1) == 1) {
-	mSystemIconsContainer = (ViewGroup) findViewById(R.id.system_icons_container);
-	mSystemIconsContainer.setVisibility(View.VISIBLE);
-        } else {
-       	mSystemIconsContainer = (ViewGroup) findViewById(R.id.system_icons_container);
-	mSystemIconsContainer.setVisibility(View.INVISIBLE);
-		}
-	if (Settings.System.getInt(mContext.getContentResolver(),
-              Settings.System.HIDE_USER_ICON, 1) == 1) {
-	mMultiUserSwitch = (MultiUserSwitch) findViewById(R.id.multi_user_switch);
-	mMultiUserSwitch.setVisibility(View.VISIBLE);
-	} else {
-	mMultiUserSwitch = (MultiUserSwitch) findViewById(R.id.multi_user_switch);
-	mMultiUserSwitch.setVisibility(View.INVISIBLE);
-  	 	}
-	}
-
-
-   public void setclockcolor()
-	{
-	ContentResolver resolver = getContext().getContentResolver();
-	mTime = (TextView) findViewById(R.id.time_view);
-	mAmPm = (TextView) findViewById(R.id.am_pm_view);
-        int color = Settings.System.getInt(resolver,
-                Settings.System.HEADER_CLOCK_COLOR, 0xFFFFFFFF);
-
-        if (mTime != null) {
-            mTime.setTextColor(color);
-        }
-	 if (mAmPm != null) {
-            mAmPm.setTextColor(color);
-        }
-	}
-
-   public void setbatterytextcolor()
-	{
-	ContentResolver resolver = getContext().getContentResolver();
-	mBatteryLevel = (BatteryLevelTextView) findViewById(R.id.battery_level_text);
-        int color = Settings.System.getInt(resolver,
-                Settings.System.HEADER_BATTERY_TEXT_COLOR, 0xFFFFFFFF);
-
-        if (mBatteryLevel != null) {
-            mBatteryLevel.setTextColor(color);
-        	}
-	}
-
-   public void setalarmtextcolor()
-	{
-	ContentResolver resolver = getContext().getContentResolver();
-	mAlarmStatus = (TextView) findViewById(R.id.alarm_status);
-        int color = Settings.System.getInt(resolver,
-                Settings.System.HEADER_ALARM_TEXT_COLOR, 0xFFFFFFFF);
-
-        if (mAlarmStatus != null) {
-            mAlarmStatus.setTextColor(color);
-        	}
-	}
- 
-  public void setdetailcolor()
-	{
-	ContentResolver resolver = getContext().getContentResolver();
-	mDateCollapsed = (TextView) findViewById(R.id.date_collapsed);
-        mDateExpanded = (TextView) findViewById(R.id.date_expanded);
-        int color = Settings.System.getInt(resolver,
-                Settings.System.HEADER_DETAIL_COLOR, 0xFFFFFFFF);
-
-        if (mDateCollapsed != null) {
-            mDateCollapsed.setTextColor(color);
-        }
- 	if (mDateExpanded != null) {
-            mDateExpanded.setTextColor(color);
-        }
-	}
-
-  public void setweathercolor1()
-	{
-	ContentResolver resolver = getContext().getContentResolver();
-	mWeatherLine1 = (TextView) findViewById(R.id.weather_line_1);
-        int color = Settings.System.getInt(resolver,
-                Settings.System.HEADER_WEATHERONE_COLOR, 0xFFFFFFFF);
-
-        if (mWeatherLine1 != null) {
-            mWeatherLine1.setTextColor(color);
-        }
-	}
-
-   public void setweathercolor2()
-	{
-	ContentResolver resolver = getContext().getContentResolver();
-	mWeatherLine2 = (TextView) findViewById(R.id.weather_line_2);
-        int color = Settings.System.getInt(resolver,
-                Settings.System.HEADER_WEATHERTWO_COLOR, 0xFFFFFFFF);
-
-        if (mWeatherLine2 != null) {
-            mWeatherLine2.setTextColor(color);
-        }
-	}
-
-
-
     private void updateSignalClusterDetachment() {
         boolean detached = mExpanded;
         if (detached != mSignalClusterDetached) {
@@ -835,32 +460,17 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         mSystemIcons.addView(mSignalCluster, 1);
     }
 
-
-  private void updateSystemIconsLayoutParams() {
+    private void updateSystemIconsLayoutParams() {
         RelativeLayout.LayoutParams lp = (LayoutParams) mSystemIconsSuperContainer.getLayoutParams();
-        int halo = mHaloButton != null ? mHaloButton.getId() : mSettingsButton.getId();
-        int headsUp = mShowHeadsUpButton && mExpanded ? mHeadsUpButton.getId() : halo;
-        int taskManager = mShowTaskManager && mExpanded ? mTaskManagerButton.getId() : headsUp;
-        int ruleHalo = mExpanded
-                ? halo
-                : mMultiUserSwitch.getId();
-        int ruleHeadsUpButton = mExpanded
-                ? headsUp
+        int rule = mExpanded
+                ? mSettingsContainer.getId()
                 : mMultiUserSwitch.getId();
-        int ruleTaskManager = mExpanded
-                ? taskManager
-                : mMultiUserSwitch.getId();
-        if (ruleHeadsUpButton != lp.getRules()[RelativeLayout.START_OF] &&
-            ruleTaskManager != lp.getRules()[RelativeLayout.START_OF] && 
-	    ruleHalo != lp.getRules()[RelativeLayout.START_OF]) {
-	    lp.addRule(RelativeLayout.START_OF, ruleHalo);
-            lp.addRule(RelativeLayout.START_OF, ruleHeadsUpButton);
-            lp.addRule(RelativeLayout.START_OF, ruleTaskManager);
+        if (rule != lp.getRules()[RelativeLayout.START_OF]) {
+            lp.addRule(RelativeLayout.START_OF, rule);
+            mSystemIconsSuperContainer.setLayoutParams(lp);
         }
-        mSystemIconsSuperContainer.setLayoutParams(lp);
     }
 
-
     private void updateListeners() {
         if (mListening) {
             mSettingsObserver.observe();
@@ -910,20 +520,15 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
 
     @Override
     public void onWeatherChanged(WeatherController.WeatherInfo info) {
-        if (info.temp == null || info.condition == null) {
-			mWeatherimage = (ImageButton) findViewById(R.id.no_weather_image);
-			mWeatherimage.setVisibility(View.VISIBLE);
+        if (Double.isNaN(info.temp) || info.condition == null) {
             mWeatherLine1.setText(null);
-            mWeatherLine2.setText(null);
         } else {
-            mWeatherimage.setVisibility(View.GONE);
             mWeatherLine1.setText(mContext.getString(
                     R.string.status_bar_expanded_header_weather_format,
-                    info.temp,
+                    WeatherUtils.formatTemperature(info.temp, info.tempUnit),
                     info.condition));
         }
-            mWeatherLine2.setText(info.city);
-
+        mWeatherLine2.setText(info.city);
     }
 
     private void updateClickTargets() {
@@ -969,27 +574,14 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         }
         mCurrentT = t;
         float height = mCollapsedHeight + t * (mExpandedHeight - mCollapsedHeight);
-        if (height != mLastHeight) {
-            if (height < mCollapsedHeight) {
-                height = mCollapsedHeight;
-            }
-            if (height > mExpandedHeight) {
-                height = mExpandedHeight;
-            }
-            final float heightFinal = height;
-            setClipping(heightFinal);
-
-            post(new Runnable() {
-                 public void run() {
-                    RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) mBackgroundImage.getLayoutParams(); 
-                    params.height = (int)heightFinal;
-                    mBackgroundImage.setLayoutParams(params);
-                }
-            });
-
-            updateLayoutValues(t);
-            mLastHeight = heightFinal;
+        if (height < mCollapsedHeight) {
+            height = mCollapsedHeight;
+        }
+        if (height > mExpandedHeight) {
+            height = mExpandedHeight;
         }
+        setClipping(height);
+        updateLayoutValues(t);
     }
 
     private void updateLayoutValues(float t) {
@@ -1006,7 +598,6 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         invalidateOutline();
     }
 
-
     private UserInfoController.OnUserInfoChangedListener mUserInfoChangedListener =
             new UserInfoController.OnUserInfoChangedListener() {
         @Override
@@ -1018,21 +609,20 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
     public void setUserInfoController(UserInfoController userInfoController) {
         mUserInfoController = userInfoController;
         userInfoController.addListener(mUserInfoChangedListener);
+        if (mMultiUserSwitch != null) {
+            mMultiUserSwitch.setUserInfoController(mUserInfoController);
+        }
     }
 
     @Override
     public void onClick(View v) {
-	boolean mQsVibrateHeader = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QUICK_SETTINGS_HEADER_VIBRATE, 0) == 1;
-	mQsVibLongpress = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QUICK_SETTINGS_ICON_VIBRATE, 0) == 1;
         if (v == mSettingsButton) {
-	    	if (mQsVibLongpress) {
-		vibrateheader(20);
-		} else { 
-		 vibrateheader(0);
-		}
-		startSettingsActivity();
+            if (mSettingsButton.isTunerClick()) {
+                mSettingsButton.consumeClick();
+                mQSPanel.getHost().setEditing(!mQSPanel.getHost().isEditing());
+            } else {
+                startSettingsActivity();
+            }
         } else if (v == mSystemIconsSuperContainer) {
             startBatteryActivity();
         } else if (v == mAlarmStatus && mNextAlarm != null) {
@@ -1046,96 +636,24 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
             startDateActivity();
         } else if (v == mWeatherContainer) {
             startForecastActivity();
-        } else if (v == mHeadsUpButton) {
-            startHeadsUpActivity();
-         } else if (v == mHaloButton) {
-            toggleHalo();
         }
-	if (mQsVibrateHeader) {
-	vibrateheader(20);	
-	} else {
-	vibrateheader(0);
-	}	
-    }
-	
-     public void checktile() {
-
-	}
-
-    @Override
-    public boolean onLongClick(View v) {
-	boolean mQsVibrateHeaderLong = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QUICK_SETTINGS_HEADER_VIBRATE_LONG, 0) == 1;
-	if (v == mSettingsButton) {
-            startSettingsLongClickActivity();
-        } 
-	 if (v == mSystemIconsSuperContainer) {
-            startBatteryLongClickActivity();
-        } else if (v == mClock) {
-            startClockLongClickActivity();
-        } else if (v == mDateGroup) {
-            startDateLongClickActivity();
-        } else if (v == mWeatherContainer) {
-            startForecastLongClickActivity();
-        } else if (v == mMultiUserSwitch) {
-            startUserLongClickActivity();       
-        } else if (v == mTaskManagerButton) {
-            startTaskManagerLongClickActivity();
-        } else if (v == mHeadsUpButton) {
-            startHeadsUpLongClickActivity();
-        }  else if (v == mHaloButton) {
-           halolongclick();
-        }
-	if (mQsVibrateHeaderLong) {
-	vibrateheader(20);	
-	} else {
-	vibrateheader(0);
-	}
-        return false;
     }
 
     private void startSettingsActivity() {
         mActivityStarter.startActivity(new Intent(android.provider.Settings.ACTION_SETTINGS),
                 true /* dismissShade */);
     }
-    
-       private void startSettingsLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-	intent.setClassName("com.android.systemui",
-            "com.android.systemui.tuner.QsActivity");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
 
     private void startBatteryActivity() {
         mActivityStarter.startActivity(new Intent(Intent.ACTION_POWER_USAGE_SUMMARY),
                 true /* dismissShade */);
     }
 
-    private void startBatteryLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.setClassName("com.android.settings",
-            "com.android.settings.Settings$BatterySaverSettingsActivity");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
-    private void startUserLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.setClassName("com.android.settings",
-            "com.android.settings.Settings$UserSettingsActivity");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
     private void startClockActivity() {
         mActivityStarter.startActivity(new Intent(AlarmClock.ACTION_SHOW_ALARMS),
                 true /* dismissShade */);
     }
 
-    private void startClockLongClickActivity() {
-        mActivityStarter.startActivity(new Intent(AlarmClock.ACTION_SET_ALARM),
-                true /* dismissShade */);
-    }
-
     private void startDateActivity() {
         Uri.Builder builder = CalendarContract.CONTENT_URI.buildUpon();
         builder.appendPath("time");
@@ -1144,12 +662,6 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         mActivityStarter.startActivity(intent, true /* dismissShade */);
     }
 
-    private void startDateLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_INSERT);
-            intent.setData(Events.CONTENT_URI);
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
     private void startForecastActivity() {
         Intent intent = new Intent(Intent.ACTION_MAIN);
         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
@@ -1157,56 +669,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         mActivityStarter.startActivity(intent, true /* dismissShade */);
     }
 
-    private void startForecastLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-	intent.setClassName("com.cyanogenmod.lockclock",
-            "com.cyanogenmod.lockclock.preference.Preferences");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
-    private void halolongclick() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.setClassName("com.android.settings",
-            "com.android.settings.Settings$HaloSettingsActivity");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
-
-
-    private void startTaskManagerLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.setClassName("com.android.settings",
-            "com.android.settings.Settings$RunningServicesActivity");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-
-        private void startHeadsUpActivity() {
-        Settings.Global.putInt(mContext.getContentResolver(),
-            Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED,
-        mHeadsUpEnabled ? 0 : 1);
-        mActivityStarter.startAction(true /* dismissShade */);
-
-        /* show a toast */
-        String enabled = mContext.getString(R.string.heads_up_enabled);
-        String disabled = mContext.getString(R.string.heads_up_disabled);
-        int duration = Toast.LENGTH_SHORT;
-        if (mHeadsUpEnabled) {
-            Toast toast = Toast.makeText(mContext, disabled, duration);
-            toast.show();
-        } else {
-            Toast toast = Toast.makeText(mContext, enabled, duration);
-            toast.show();
-        }
-    }
-
-    private void startHeadsUpLongClickActivity() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.setClassName("com.android.settings",
-            "com.android.settings.Settings$HeadsupSettingsActivity");
-        mActivityStarter.startActivity(intent, true /* dismissShade */);
-    }
-    
-    public void setQSPanel(QSPanel qsp) {
+    public void setQSPanel(QSDragPanel qsp) {
         mQSPanel = qsp;
         if (mQSPanel != null) {
             mQSPanel.setCallback(mQsPanelCallback);
@@ -1258,27 +721,10 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         }
         target.batteryY = mSystemIconsSuperContainer.getTop() + mSystemIconsContainer.getTop();
         target.batteryLevelAlpha = getAlphaForVisibility(mBatteryLevel);
-        target.settingsAlpha = getAlphaForVisibility(mSettingsButton);
+        target.settingsAlpha = getAlphaForVisibility(mSettingsContainer);
         target.settingsTranslation = mExpanded
                 ? 0
-                : mMultiUserSwitch.getLeft() - mSettingsButton.getLeft();
-        target.haloButtonAlpha = getAlphaForVisibility(mHaloButton);
-        target.haloButtonTranslation = mExpanded
-                ? 0
-                : mSettingsButton.getLeft() - mHaloButton.getLeft();
-        // heads up ALWAYS translates off of fixed settings button
-        target.headsUpAlpha = getAlphaForVisibility(mHeadsUpButton);
-        target.headsUpTranslation = mExpanded
-                ? 0
-                : mHaloButton.getLeft() - mHeadsUpButton.getLeft();
-        // task manager may translate off of heads up OR settings
-        final int whichButton = mShowHeadsUpButton
-                ? mHeadsUpButton.getLeft()
-		: mSettingsButton.getLeft();
-        target.taskManagerAlpha = getAlphaForVisibility(mTaskManagerButton);
-        target.taskManagerTranslation = mExpanded
-                ? 0
-                : whichButton - mTaskManagerButton.getLeft();
+                : mMultiUserSwitch.getLeft() - mSettingsContainer.getLeft();
         target.signalClusterAlpha = mSignalClusterDetached ? 0f : 1f;
         target.settingsRotation = !mExpanded ? 90f : 0f;
     }
@@ -1331,18 +777,11 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
             mSignalCluster.setTranslationX(0f);
             mSignalCluster.setTranslationY(0f);
         }
-        mSettingsButton.setTranslationY(mSystemIconsSuperContainer.getTranslationY());
-        mSettingsButton.setTranslationX(values.settingsTranslation);
-        mSettingsButton.setRotation(values.settingsRotation);
-        mHaloButton.setTranslationY(mSystemIconsSuperContainer.getTranslationY());
-        mHaloButton.setTranslationX(values.haloButtonTranslation);
-        mHaloButton.setRotation(values.settingsRotation);
-        mHeadsUpButton.setTranslationY(mSystemIconsSuperContainer.getTranslationY());
-        mHeadsUpButton.setTranslationX(values.haloButtonTranslation);
-        mHeadsUpButton.setRotation(values.settingsRotation);
-        mTaskManagerButton.setTranslationY(mSystemIconsSuperContainer.getTranslationY());
-        mTaskManagerButton.setTranslationX(values.taskManagerTranslation);
-        mTaskManagerButton.setRotation(values.settingsRotation);
+        if (!mSettingsButton.isAnimating()) {
+            mSettingsContainer.setTranslationY(mSystemIconsSuperContainer.getTranslationY());
+            mSettingsContainer.setTranslationX(values.settingsTranslation);
+            mSettingsButton.setRotation(values.settingsRotation);
+        }
         applyAlpha(mEmergencyCallsOnly, values.emergencyCallsOnlyAlpha);
         if (!mShowingDetail && !mDetailTransitioning) {
             // Otherwise it needs to stay invisible
@@ -1354,12 +793,8 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         if (mDockBatteryLevel != null) {
             applyAlpha(mDockBatteryLevel, values.batteryLevelAlpha);
         }
-        applyAlpha(mHaloButton, values.haloButtonAlpha);
-        applyAlpha(mHeadsUpButton, values.headsUpAlpha);
-        applyAlpha(mSettingsButton, values.settingsAlpha);
-        applyAlpha(mTaskManagerButton, values.taskManagerAlpha);
+        applyAlpha(mSettingsContainer, values.settingsAlpha);
         applyAlpha(mWeatherLine1, values.settingsAlpha);
-        applyAlpha(mWeatherimage, values.settingsAlpha);
         applyAlpha(mWeatherLine2, values.settingsAlpha);
         applyAlpha(mSignalCluster, values.signalClusterAlpha);
         if (!mExpanded) {
@@ -1369,6 +804,49 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         updateAmPmTranslation();
     }
 
+    public void setEditing(boolean editing) {
+        mEditing = editing;
+        if (editing && mEditingDetailAdapter == null) {
+            mEditingDetailAdapter = new QSTile.DetailAdapter() {
+                @Override
+                public int getTitle() {
+                    return R.string.quick_settings_edit_label;
+                }
+
+                @Override
+                public Boolean getToggleState() {
+                    return null;
+                }
+
+                @Override
+                public View createDetailView(Context context, View convertView, ViewGroup parent) {
+                    return null;
+                }
+
+                @Override
+                public Intent getSettingsIntent() {
+                    return null;
+                }
+
+                @Override
+                public StatusBarPanelCustomTile getCustomTile() {
+                    return null;
+                }
+
+                @Override
+                public void setToggleState(boolean state) {
+
+                }
+
+                @Override
+                public int getMetricsCategory() {
+                    return CMMetricsLogger.DONT_LOG;
+                }
+            };
+        }
+        mQsPanelCallback.onShowingDetail(mEditing ? mEditingDetailAdapter : null);
+        updateEverything();
+    }
 
     /**
      * Captures all layout values (position, visibility) for a certain state. This is used for
@@ -1390,14 +868,8 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         float batteryY;
         float batteryLevelAlpha;
         float batteryLevelExpandedAlpha;
-        float headsUpAlpha;
-        float headsUpTranslation;
-        float taskManagerAlpha;
-        float taskManagerTranslation;
         float settingsAlpha;
         float settingsTranslation;
-        float haloButtonAlpha;
-        float haloButtonTranslation;
         float signalClusterAlpha;
         float settingsRotation;
         float weatherY;
@@ -1411,11 +883,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
             avatarY = v1.avatarY * (1 - t) + v2.avatarY * t;
             batteryX = v1.batteryX * (1 - t) + v2.batteryX * t;
             batteryY = v1.batteryY * (1 - t) + v2.batteryY * t;
-            headsUpTranslation = v1.headsUpTranslation * (1 - t) + v2.headsUpTranslation * t;
-            taskManagerTranslation = v1.taskManagerTranslation * (1 - t) + v2.taskManagerTranslation * t;
             settingsTranslation = v1.settingsTranslation * (1 - t) + v2.settingsTranslation * t;
-            haloButtonTranslation =
-                    v1.haloButtonTranslation * (1 -t) + v2.haloButtonTranslation * t;
             weatherY = v1.weatherY * (1 - t) + v2.weatherY * t;
 
             float t1 = Math.max(0, t - 0.5f) * 2;
@@ -1428,15 +896,12 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
 
             float t3 = Math.max(0, t - 0.7f) / 0.3f;
             batteryLevelAlpha = v1.batteryLevelAlpha * (1 - t3) + v2.batteryLevelAlpha * t3;
-	    batteryLevelExpandedAlpha =
-                    v1.batteryLevelExpandedAlpha * (1 - t3) + v2.batteryLevelExpandedAlpha * t3;
-	    taskManagerAlpha = v1.taskManagerAlpha * (1 - t3) + v2.taskManagerAlpha * t3;
-	    headsUpAlpha = v1.headsUpAlpha * (1 - t3) + v2.headsUpAlpha * t3;
-            haloButtonAlpha = v1.haloButtonAlpha * (1 - t3) + v2.haloButtonAlpha * t3;
             settingsAlpha = v1.settingsAlpha * (1 - t3) + v2.settingsAlpha * t3;
             dateExpandedAlpha = v1.dateExpandedAlpha * (1 - t3) + v2.dateExpandedAlpha * t3;
             dateCollapsedAlpha = v1.dateCollapsedAlpha * (1 - t3) + v2.dateCollapsedAlpha * t3;
             alarmStatusAlpha = v1.alarmStatusAlpha * (1 - t3) + v2.alarmStatusAlpha * t3;
+            batteryLevelExpandedAlpha =
+                    v1.batteryLevelExpandedAlpha * (1 - t3) + v2.batteryLevelExpandedAlpha * t3;
         }
     }
 
@@ -1459,7 +924,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
             post(new Runnable() {
                 @Override
                 public void run() {
-                    handleShowingDetail(detail);
+                    handleShowingDetail(mEditing && detail == null ? mEditingDetailAdapter : detail);
                 }
             });
         }
@@ -1491,7 +956,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
             }
         }
 
-            private void handleShowingDetail(final QSTile.DetailAdapter detail) {
+        private void handleShowingDetail(final QSTile.DetailAdapter detail) {
             final boolean showingDetail = detail != null;
             transition(mClock, !showingDetail);
             transition(mDateGroup, !showingDetail);
@@ -1499,17 +964,29 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
                 transition(mWeatherContainer, !showingDetail);
             }
             if (mAlarmShowing) {
-                transition(mAlarmStatus, !showingDetail);
+                transition(mAlarmStatus, !showingDetail && !mDetailTransitioning);
             }
             transition(mQsDetailHeader, showingDetail);
             mShowingDetail = showingDetail;
             if (showingDetail) {
-                mQsDetailHeaderTitle.setText(QSTile.getDetailAdapterTitle(getContext(), detail));
+                mQsDetailHeaderTitle.setText(detail.getTitle());
                 final Boolean toggleState = detail.getToggleState();
-                if (toggleState == null) {
+                if (detail.getTitle() == R.string.quick_settings_edit_label) {
+                    mEditTileDoneText.setVisibility(View.VISIBLE);
                     mQsDetailHeaderSwitch.setVisibility(INVISIBLE);
+                    mQsDetailHeader.setClickable(true);
+                    mQsDetailHeader.setOnClickListener(new OnClickListener() {
+                        @Override
+                        public void onClick(View v) {
+                            mQSPanel.getHost().setEditing(false);
+                        }
+                    });
+                } else if (toggleState == null) {
+                    mQsDetailHeaderSwitch.setVisibility(INVISIBLE);
+                    mEditTileDoneText.setVisibility(View.GONE);
                     mQsDetailHeader.setClickable(false);
                 } else {
+                    mEditTileDoneText.setVisibility(View.GONE);
                     mQsDetailHeaderSwitch.setVisibility(VISIBLE);
                     mQsDetailHeaderSwitch.setChecked(toggleState);
                     mQsDetailHeader.setClickable(true);
@@ -1530,7 +1007,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         private void transition(final View v, final boolean in) {
             if (in) {
                 v.bringToFront();
-                v.setVisibility(View.VISIBLE);
+                v.setVisibility(VISIBLE);
             }
             if (v.hasOverlappingRendering()) {
                 v.animate().withLayer();
@@ -1541,7 +1018,7 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
                         @Override
                         public void run() {
                             if (!in) {
-                                v.setVisibility(View.INVISIBLE);
+                                v.setVisibility(INVISIBLE);
                             }
                             mDetailTransitioning = false;
                         }
@@ -1550,103 +1027,25 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
         }
     };
 
-    private void toggleHalo() {
-        Settings.Secure.putInt(mContext.getContentResolver(),
-                Settings.Secure.HALO_ACTIVE, !mHaloActive ? 1 : 0);
-    }
-
     class SettingsObserver extends UserContentObserver {
         SettingsObserver(Handler handler) {
             super(handler);
         }
-            
+
         @Override
         protected void observe() {
-        super.observe();
-        ContentResolver resolver = mContext.getContentResolver();
-	resolver.registerContentObserver(CMSettings.System.getUriFor(
-			CMSettings.System.STATUS_BAR_SHOW_WEATHER), false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(CMSettings.System.getUriFor(
-			CMSettings.System.STATUS_BAR_BATTERY_STYLE), false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(CMSettings.System.getUriFor(
-			CMSettings.System.STATUS_BAR_SHOW_BATTERY_PERCENT), false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.Global.getUriFor(
-			Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED), false, this);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADS_UP_SHOW_STATUS_BUTTON), false, this);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.QS_HEADER_COLOR), false, this);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_CUSTOM_HEADER_SHADOW), false, this, UserHandle.USER_ALL);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-			Settings.System.STATUS_BAR_CUSTOM_HEADER), false, this, UserHandle.USER_ALL);
-	resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW), false, this, UserHandle.USER_ALL);
-         resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW_COLOR), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_HEADER_PREFERENCE_KEY), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.TRANSLUCENT_HEADER_PRECENTAGE_PREFERENCE_KEY), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.HALO_ACTIVE), false, this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_COLOR_START),
-                    false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_COLOR_CENTER),
-                    false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_COLOR_END),
-                    false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_GRADIENT_USE_CENTER_COLOR),
-                    false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_GRADIENT_ORIENTATION),
-                    false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_COLOR_SWITCH),
-                    false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_HEADER_MASTER_SWITCH), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.QS_CUSTOM_MASTER_SWITCH), false, this);
+            super.observe();
+
+            ContentResolver resolver = mContext.getContentResolver();
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.System.STATUS_BAR_SHOW_WEATHER), false, this, UserHandle.USER_ALL);
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.System.STATUS_BAR_BATTERY_STYLE), false, this, UserHandle.USER_ALL);
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                    CMSettings.System.STATUS_BAR_SHOW_BATTERY_PERCENT), false, this, UserHandle.USER_ALL);
             update();
         }
 
-
-	@Override
-        public void onChange(boolean selfChange, Uri uri) {
-        if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_HEADER_COLOR))) {
-               	   setHeaderColor();
-        }  else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_COLOR_START))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_COLOR_CENTER))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_COLOR_END))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_GRADIENT_USE_CENTER_COLOR))
-                || uri.equals(Settings.System.getUriFor(
-                    Settings.System.STATUS_BAR_EXPANDED_HEADER_CORNER_RADIUS))) {
-                setSBEHStroke();
-	}  else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.HEADER_BACKGROUND_GRADIENT_ORIENTATION))) {
-                updateBgGradientOrientation();
-        } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_HEADER_MASTER_SWITCH))) {
-                    setSBEHStroke();
-                    setHeaderColor();
-        } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.QS_CUSTOM_MASTER_SWITCH))) {
-                    setSBEHStroke();
-                    setHeaderColor();
-           }
-	 update();
-	}
-
         @Override
         protected void unobserve() {
             super.unobserve();
@@ -1664,8 +1063,6 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
                     CMSettings.System.STATUS_BAR_BATTERY_STYLE, 0, currentUserId);
             boolean showExpandedBatteryPercentage = CMSettings.System.getIntForUser(resolver,
                     CMSettings.System.STATUS_BAR_SHOW_BATTERY_PERCENT, 0, currentUserId) == 0;
-            mHeadsUpEnabled = Settings.Global.getInt(
-                    resolver, Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED, 1) == 1;
 
             switch (batteryStyle) {
                 case 4: //BATTERY_METER_GONE
@@ -1678,771 +1075,9 @@ public class StatusBarHeaderView extends RelativeLayout implements View.OnClickL
 
             mShowBatteryTextExpanded = showExpandedBatteryPercentage;
             mShowWeather = CMSettings.System.getInt(
-                    resolver, CMSettings.System.STATUS_BAR_SHOW_WEATHER, 0) == 1;
-
-            mQSHeaderAlpha = Settings.System.getInt(
-                    resolver, Settings.System.QS_TRANSPARENT_HEADER, 255);
-
-            mStatusBarHeaderFontStyle = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUS_BAR_HEADER_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-	    mStatusBarHeaderWeatherFont = Settings.System.getIntForUser(resolver,
-                Settings.System.HEADER_WEATHER_FONT_STYLE , FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-	    mStatusBarHeaderClockFont =Settings.System.getIntForUser(resolver,
-                Settings.System.HEADER_CLOCK_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-	    mStatusBarHeaderAlarmFont =Settings.System.getIntForUser(resolver,
-                Settings.System.HEADER_ALARM_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-	    mStatusBarHeaderDateFont =Settings.System.getIntForUser(resolver,
-                Settings.System.HEADER_DATE_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-	    mStatusBarHeaderDetailFont =Settings.System.getIntForUser(resolver,
-                Settings.System.HEADER_DETAIL_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-            mShowHeadsUpButton = Settings.System.getInt(getContext().getContentResolver(),
-                Settings.System.HEADS_UP_SHOW_STATUS_BUTTON, 0) == 1;       
-	    mShowhaloButton = Settings.Secure.getInt(mContext.getContentResolver(),
-               Settings.Secure.HALO_ENABLE, 0) == 1 ;
-            headerShadow = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_SHADOW, 0,
-                    UserHandle.USER_CURRENT);
-            textShadow = Settings.System.getFloatForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW, 0,
-                    UserHandle.USER_CURRENT);
-
-            tShadowColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER_TEXT_SHADOW_COLOR, 0,
-                    UserHandle.USER_CURRENT);
-            customHeader = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.STATUS_BAR_CUSTOM_HEADER, 0,
-                    UserHandle.USER_CURRENT);
-            mQsColorSwitch = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.QS_COLOR_SWITCH, 0);
-            mHeaderColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.QS_HEADER_COLOR, 0xFFFFFFFF);
-            mQsMasterSwitch = Settings.System.getIntForUser(resolver,
-                    Settings.System.QS_HEADER_MASTER_SWITCH, 0, UserHandle.USER_CURRENT) == 1;
-	    setStatusBarHeaderFontStyle	(mStatusBarHeaderFontStyle);
-	    setStatusBarWeatherFontStyle(mStatusBarHeaderWeatherFont);
-	    setStatusBarClockFontStyle(mStatusBarHeaderClockFont);
-	    setStatusBarAlarmFontStyle(mStatusBarHeaderAlarmFont);
-	    setStatusBarDateFontStyle(mStatusBarHeaderDateFont);
-	    setStatusBarDetailFontStyle(mStatusBarHeaderDetailFont);
-	    setclockcolor();
-	    setdetailcolor();
-	    setweathercolor1();
-	    setweathercolor2();	
-	    setalarmtextcolor();
-	    setbatterytextcolor();
-	    hidepanelItems();
-	    setHeaderColor();
-            updateHeadsUpState();
-            updateStatusBarButtonsState();
-            mTranslucentHeader = Settings.System.getIntForUser(resolver,
-                Settings.System.TRANSLUCENT_HEADER_PREFERENCE_KEY, 0, currentUserId) == 1;
-            mTranslucencyPercentage = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.TRANSLUCENT_HEADER_PRECENTAGE_PREFERENCE_KEY, 70);
-            mTranslucencyPercentage = 255 - ((mTranslucencyPercentage * 255) / 100);
-            mHaloActive = Settings.Secure.getInt(resolver,
-                    Settings.Secure.HALO_ACTIVE, 0) == 1;
-            handleStatusBarHeaderViewBackround();
-	    updateEverything();
-            mHaloButton.setActivated(mHaloActive);
+                    resolver, CMSettings.System.STATUS_BAR_SHOW_WEATHER, 1) == 1;
             updateVisibilities();
             requestCaptureValues();
-	    updateBgGradientOrientation();
-	    setSBEHStroke();
-
-        }
-    }
-
-    private void updateStatusBarButtonsState() {
-        mShowHeadsUpButton = Settings.System.getIntForUser(getContext().getContentResolver(),
-                Settings.System.HEADS_UP_SHOW_STATUS_BUTTON, 0, ActivityManager.getCurrentUser()) == 1;
-        mShowTaskManager = Settings.System.getIntForUser(getContext().getContentResolver(),
-                Settings.System.ENABLE_TASK_MANAGER, 0, ActivityManager.getCurrentUser()) == 1;
-	mShowhaloButton = Settings.Secure.getIntForUser(mContext.getContentResolver(),
-               Settings.Secure.HALO_ENABLE, 0, ActivityManager.getCurrentUser()) == 1;
-    }
-
- private void updateBgGradientOrientation() {
-        Orientation orientation = Orientation.TOP_BOTTOM;
-        int mBgOrientation =
-                SBEHeaderColorHelper.getBgGradientOrientation(mContext);
-        if (mBgOrientation == 45) {
-            orientation = Orientation.BL_TR;
-        } else if (mBgOrientation == 90) {
-            orientation = Orientation.BOTTOM_TOP;
-        } else if (mBgOrientation == 135) {
-            orientation = Orientation.BR_TL;
-        } else if (mBgOrientation == 180) {
-            orientation = Orientation.RIGHT_LEFT;
-        } else if (mBgOrientation == 225) {
-            orientation = Orientation.TR_BL;
-        } else if (mBgOrientation == 270) {
-            orientation = Orientation.TOP_BOTTOM;
-        } else if (mBgOrientation == 315) {
-            orientation = Orientation.TL_BR;
-        }
-        gradientDrawable.setOrientation(orientation);
-    }
-
-    private void updateHeadsUpState() {
-        mHeadsUpEnabled = Settings.Global.getInt(
-                getContext().getContentResolver(), Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED, 1) == 1;
-        Drawable d = getResources().getDrawable(mHeadsUpEnabled
-                ? R.drawable.ic_heads_up_status_on
-                : R.drawable.ic_heads_up_status_off);
-        final ImageView v = (ImageView) mHeadsUpButton;
-        v.setImageDrawable(d);
-    }
-
-    private void doUpdateStatusBarCustomHeader(final Drawable next, final boolean force) {
-        if (next != null) {
-            if (next != mCurrentBackground) {
-                Log.i(TAG, "Updating status bar header background");
-                mBackgroundImage.setVisibility(View.VISIBLE);
-                setNotificationPanelHeaderBackground(next, force);
-                mCurrentBackground = next;
-                applyHeaderBackgroundShadow();
-            }
-        } else {
-            mCurrentBackground = null;
-            mBackgroundImage.setVisibility(View.GONE);
-        }
-    }
-
-    private void setNotificationPanelHeaderBackground(final Drawable dw, final boolean force) {
-        if (mBackgroundImage.getDrawable() != null && !force) {
-            Drawable[] arrayDrawable = new Drawable[2];
-            arrayDrawable[0] = mBackgroundImage.getDrawable();
-            arrayDrawable[1] = dw;
-
-            TransitionDrawable transitionDrawable = new TransitionDrawable(arrayDrawable);
-            transitionDrawable.setCrossFadeEnabled(true);
-            mBackgroundImage.setImageDrawable(transitionDrawable);
-            transitionDrawable.startTransition(1000);
-        } else {
-            mBackgroundImage.setImageDrawable(dw);
-        }
-        applyHeaderBackgroundShadow();
-    }
-
-    private void applyHeaderBackgroundShadow() {
-        if (customHeader == 1) {
-            ColorDrawable shadow = new ColorDrawable(Color.BLACK);
-            shadow.setAlpha(headerShadow);
-            mBackgroundImage.setForeground(shadow);
-        } else if (customHeader == 0) {
-            ColorDrawable shadow = new ColorDrawable(Color.BLACK);
-            shadow.setAlpha(0);
-            mBackgroundImage.setForeground(shadow);
-        }
-    }
-
-    @Override
-    public void updateHeader(final Drawable headerImage, final boolean force) {
-        post(new Runnable() {
-             public void run() {
-                // TODO we dont need to do this every time but we dont have
-                // an other place to know right now when custom header is enabled
-                doUpdateStatusBarCustomHeader(headerImage, force);
-            }
-        });
-    }
-
-    @Override
-    public void disableHeader() {
-        post(new Runnable() {
-             public void run() {
-                mCurrentBackground = null;
-                mBackgroundImage.setVisibility(View.GONE);
-            }
-        });
-    }
-
-    private void applyTextShadow() {
-        mTime.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mAmPm.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mDateCollapsed.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mDateExpanded.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mBatteryLevel.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mAlarmStatus.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mQsDetailHeaderTitle.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mWeatherLine1.setShadowLayer(textShadow, 0, 0, tShadowColor);
-        mWeatherLine2.setShadowLayer(textShadow, 0, 0, tShadowColor);
-    }
-        
-    private void setStatusBarDetailFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mAmPm.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mAmPm.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mAmPm.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                mAmPm.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mAmPm.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mAmPm.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mAmPm.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mAmPm.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                mAmPm.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mAmPm.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mAmPm.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mAmPm.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mAmPm.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mAmPm.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mAmPm.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mAmPm.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mAmPm.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
-        }
-    }
-
-
-    private void setStatusBarDateFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));       
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:  
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mDateCollapsed.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mDateCollapsed.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                mDateExpanded.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mDateCollapsed.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mDateCollapsed.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                mDateExpanded.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mDateCollapsed.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                mDateExpanded.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mDateCollapsed.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                mDateExpanded.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
-        }
-    }
-
-
-    private void setStatusBarAlarmFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mAlarmStatus.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-               mAlarmStatus.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-               mAlarmStatus.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-               mAlarmStatus.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-               mAlarmStatus.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-              mAlarmStatus.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-              mAlarmStatus.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-              mAlarmStatus.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-              mAlarmStatus.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
-        }
-
-        applyHeaderBackgroundShadow();
-    }
-
-    private void setStatusBarClockFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mTime.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mTime.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mTime.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));   
-                break;
-            case FONT_THIN:
-                mTime.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mTime.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mTime.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));;
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mTime.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mTime.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                mTime.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mTime.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mTime.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mTime.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mTime.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mTime.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mTime.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mTime.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mTime.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
-        }
-    }
-
-
-	private void setStatusBarWeatherFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));        
-                break;
-            case FONT_THIN_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-
-                break;
-            case FONT_BLACK:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mWeatherLine1.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mWeatherLine1.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                mWeatherLine2.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mWeatherLine1.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mWeatherLine1.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                mWeatherLine2.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mWeatherLine1.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                mWeatherLine2.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mWeatherLine1.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                mWeatherLine2.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
-        }
-    }
-
-    private void setStatusBarHeaderFontStyle(int font) {
-        switch (font) {
-            case FONT_NORMAL:
-            default:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                mBatteryLevel.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                mBatteryLevel.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                mBatteryLevel.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                mBatteryLevel.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("serif", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                mBatteryLevel.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                mBatteryLevel.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                mQsDetailHeaderTitle.setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
         }
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java
index 051394b..a7fa27d 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarIconController.java
@@ -16,21 +16,14 @@
 
 package com.android.systemui.statusbar.phone;
 
-import android.animation.Animator;
-import android.animation.AnimatorListenerAdapter;
 import android.animation.ArgbEvaluator;
 import android.animation.ValueAnimator;
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.ColorStateList;
-import android.database.ContentObserver;
 import android.graphics.Color;
-import android.graphics.PorterDuff.Mode;
-import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.SystemClock;
-import android.os.UserHandle;
 import android.provider.Settings;
 import android.text.TextUtils;
 import android.util.ArraySet;
@@ -43,9 +36,6 @@ import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import com.android.internal.statusbar.StatusBarIcon;
-import com.android.internal.util.rr.ColorHelper;
-import com.android.internal.util.slim.DeviceUtils;
-import com.android.internal.util.darkkat.StatusBarColorHelper;
 import com.android.internal.util.NotificationColorUtil;
 import com.android.systemui.BatteryLevelTextView;
 import com.android.systemui.BatteryMeterView;
@@ -55,7 +45,6 @@ import com.android.systemui.statusbar.NotificationData;
 import com.android.systemui.statusbar.SignalClusterView;
 import com.android.systemui.statusbar.StatusBarIconView;
 import com.android.systemui.statusbar.policy.Clock;
-import com.android.systemui.statusbar.policy.NetworkTraffic;
 import com.android.systemui.tuner.TunerService;
 import com.android.systemui.tuner.TunerService.Tunable;
 
@@ -91,28 +80,11 @@ public class StatusBarIconController implements Tunable {
     private BatteryMeterView mBatteryMeterView;
     private ClockController mClockController;
     private View mCenterClockLayout;
-    private TextView mCarrier;
-    private TextView mWeather;
-    private TextView mWeatherLeft;
 
     private int mIconSize;
     private int mIconHPadding;
 
     private int mIconTint = Color.WHITE;
-    private int mStatusIconsColor;
-    private int mStatusIconsColorOld;
-    private int mStatusIconsColorTint;
-    private int mNetworkSignalColor;
-    private int mNetworkSignalColorOld;
-    private int mNetworkSignalColorTint;
-    private int mNoSimColor;
-    private int mNoSimColorOld;
-    private int mNoSimColorTint;
-    private int mAirplaneModeColor;
-    private int mAirplaneModeColorOld;
-    private int mAirplaneModeColorTint;
-    private int mNotificationIconsColor;
-    private int mNotificationIconsColorTint;
     private float mDarkIntensity;
 
     private boolean mTransitionPending;
@@ -123,31 +95,11 @@ public class StatusBarIconController implements Tunable {
     private int mDarkModeIconColorSingleTone;
     private int mLightModeIconColorSingleTone;
 
-    private static final int STATUS_ICONS_COLOR         = 0;
-    private static final int NETWORK_SIGNAL_COLOR       = 1;
-    private static final int NO_SIM_COLOR               = 2;
-    private static final int AIRPLANE_MODE_COLOR        = 3;
-    private int mColorToChange;
-
     private final Handler mHandler;
     private boolean mTransitionDeferring;
     private long mTransitionDeferringStartTime;
     private long mTransitionDeferringDuration;
 
-    private Animator mColorTransitionAnimator;
-    public Boolean mColorSwitch = false ;
-
-    private TextView mCarrierLabel;
-    private int mCarrierLabelMode;
-    private ImageView mRRLogo;
-    private ImageView mRRLogoRight;
-    private ImageView mRRLogoCenter;
-    private ImageView mRRLogoBefore;
-
-    private int mCustomLogo;
-    private ImageView mCLogo;
-    private NetworkTraffic mNetworkTraffic;
-
     private final ArraySet<String> mIconBlacklist = new ArraySet<>();
 
     private final Runnable mTransitionDeferringDoneRunnable = new Runnable() {
@@ -161,8 +113,6 @@ public class StatusBarIconController implements Tunable {
             PhoneStatusBar phoneStatusBar) {
         mContext = context;
         mPhoneStatusBar = phoneStatusBar;
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
         mNotificationColorUtil = NotificationColorUtil.getInstance(context);
         mSystemIconArea = (LinearLayout) statusBar.findViewById(R.id.system_icon_area);
         mStatusIcons = (LinearLayout) statusBar.findViewById(R.id.statusIcons);
@@ -181,48 +131,12 @@ public class StatusBarIconController implements Tunable {
                 android.R.interpolator.fast_out_slow_in);
         mDarkModeIconColorSingleTone = context.getColor(R.color.dark_mode_icon_color_single_tone);
         mLightModeIconColorSingleTone = context.getColor(R.color.light_mode_icon_color_single_tone);
-	mRRLogo = (ImageView) statusBar.findViewById(R.id.left_rr_logo);
-	mRRLogoRight = (ImageView) statusBar.findViewById(R.id.rr_logo);
-	mRRLogoCenter = (ImageView) statusBar.findViewById(R.id.center_rr_logo);
-	mRRLogoBefore = (ImageView) statusBar.findViewById(R.id.before_icons_rr_logo);
-        mCarrierLabel = (TextView) statusBar.findViewById(R.id.statusbar_carrier_text);
-        mWeather = (TextView) statusBar.findViewById(R.id.weather_temp);
-        mWeatherLeft = (TextView) statusBar.findViewById(R.id.left_weather_temp);
-	getcustomlogos(statusBar);
-	mNetworkTraffic = (NetworkTraffic) statusBar.findViewById(R.id.networkTraffic);
         mHandler = new Handler();
         mClockController = new ClockController(statusBar, mNotificationIcons, mHandler);
         mCenterClockLayout = statusBar.findViewById(R.id.center_clock_layout);
-        SettingsObserver settingsObserver = new SettingsObserver(mHandler);
-        settingsObserver.observe();
         updateResources();
-        carrierLabelVisibility();
 
         TunerService.get(mContext).addTunable(this, ICON_BLACKLIST);
-	
-        setUpCustomColors();
-        mColorTransitionAnimator = createColorTransitionAnimator(0, 1);
-    }
-
-    private void setUpCustomColors() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if (mColorSwitch) {
-        mStatusIconsColor = StatusBarColorHelper.getStatusIconsColor(mContext);
-        mStatusIconsColorOld = mStatusIconsColor;
-        mStatusIconsColorTint = mStatusIconsColor;
-        mNetworkSignalColor = StatusBarColorHelper.getNetworkSignalColor(mContext);
-        mNetworkSignalColorOld = mNetworkSignalColor;
-        mNetworkSignalColorTint = mNetworkSignalColor;
-        mNoSimColor = StatusBarColorHelper.getNoSimColor(mContext);
-        mNoSimColorOld = mNoSimColor;
-        mNoSimColorTint = mNoSimColor;
-        mAirplaneModeColor = StatusBarColorHelper.getAirplaneModeColor(mContext);
-        mAirplaneModeColorOld = mAirplaneModeColor;
-        mAirplaneModeColorTint = mAirplaneModeColor;
-        mNotificationIconsColor = StatusBarColorHelper.getNotificationIconsColor(mContext);
-        mNotificationIconsColorTint = mNotificationIconsColor; 
-	}
     }
 
     @Override
@@ -252,14 +166,11 @@ public class StatusBarIconController implements Tunable {
                 com.android.internal.R.dimen.status_bar_icon_size);
         mIconHPadding = mContext.getResources().getDimensionPixelSize(
                 R.dimen.status_bar_icon_padding);
-        //mClockController.updateFontSize();
-        carrierLabelVisibility();
+        mClockController.updateFontSize();
     }
 
     public void addSystemIcon(String slot, int index, int viewIndex, StatusBarIcon icon) {
         boolean blocked = mIconBlacklist.contains(slot);
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
         StatusBarIconView view = new StatusBarIconView(mContext, slot, null, blocked);
         view.set(icon);
         mStatusIcons.addView(view, viewIndex, new LinearLayout.LayoutParams(
@@ -269,23 +180,15 @@ public class StatusBarIconController implements Tunable {
         mStatusIconsKeyguard.addView(view, viewIndex, new LinearLayout.LayoutParams(
                 ViewGroup.LayoutParams.WRAP_CONTENT, mIconSize));
         applyIconTint();
-	if(mColorSwitch) {
-        updateStatusIconsKeyguardColor();
-	}
     }
 
     public void updateSystemIcon(String slot, int index, int viewIndex,
-            StatusBarIcon old, StatusBarIcon icon) {	
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
+            StatusBarIcon old, StatusBarIcon icon) {
         StatusBarIconView view = (StatusBarIconView) mStatusIcons.getChildAt(viewIndex);
         view.set(icon);
         view = (StatusBarIconView) mStatusIconsKeyguard.getChildAt(viewIndex);
         view.set(icon);
         applyIconTint();
-        if(mColorSwitch) {
-        updateStatusIconsKeyguardColor();
-	}
     }
 
     public void removeSystemIcon(String slot, int index, int viewIndex) {
@@ -348,7 +251,6 @@ public class StatusBarIconController implements Tunable {
         }
 
         applyNotificationIconsTint();
-        carrierLabelVisibility();
     }
 
     public void hideSystemIconArea(boolean animate) {
@@ -373,47 +275,6 @@ public class StatusBarIconController implements Tunable {
 
     public void setClockVisibility(boolean visible) {
         mClockController.setVisibility(visible);
-
-    }
-
-    public void carrierLabelVisibility() {
-        final ContentResolver resolver = mContext.getContentResolver();
-
-        mCarrierLabelMode = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUS_BAR_SHOW_CARRIER, 1, UserHandle.USER_CURRENT);
-
-        boolean mUserDisabledStatusbarCarrier = false;
-
-        if (mCarrierLabelMode == 0 || mCarrierLabelMode == 1) {
-            mUserDisabledStatusbarCarrier = true;
-        }
-
-        boolean hideCarrier = Settings.System.getInt(resolver,
-                Settings.System.HIDE_CARRIER_MAX_SWITCH, 0) == 1;
-
-        int maxAllowedIcons = Settings.System.getInt(resolver,
-                Settings.System.HIDE_CARRIER_MAX_NOTIFICATION, 1);
-
-        boolean forceHideByNumberOfIcons = false;
-        int currentVisibleNotificationIcons = 0;
-
-        if (mNotificationIcons != null) {
-            currentVisibleNotificationIcons = mNotificationIcons.getChildCount();
-        }
-
-        if (mCarrierLabelMode == 2 || mCarrierLabelMode == 3) {
-            if (hideCarrier && currentVisibleNotificationIcons >= maxAllowedIcons) {
-               forceHideByNumberOfIcons = true;
-            }
-        }
-
-        if (mCarrierLabel != null) {
-            if (!forceHideByNumberOfIcons && !mUserDisabledStatusbarCarrier ) {
-               mCarrierLabel.setVisibility(View.VISIBLE);
-            } else {
-               mCarrierLabel.setVisibility(View.GONE);
-            }
-        }
     }
 
     public void dump(PrintWriter pw) {
@@ -523,26 +384,10 @@ public class StatusBarIconController implements Tunable {
 
     private void setIconTintInternal(float darkIntensity) {
         mDarkIntensity = darkIntensity;
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;	
- 
-	if (mColorSwitch) {
-        mStatusIconsColorTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
-                mStatusIconsColor, StatusBarColorHelper.getStatusIconsColorDark(mContext));
-        mNetworkSignalColorTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
-                mNetworkSignalColor, StatusBarColorHelper.getNetworkSignalColorDark(mContext));
-        mNoSimColorTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
-                mNoSimColor, StatusBarColorHelper.getNoSimColorDark(mContext));
-        mAirplaneModeColorTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
-                mAirplaneModeColor, StatusBarColorHelper.getAirplaneModeColorDark(mContext));
-        mNotificationIconsColorTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
-                mNotificationIconsColor, StatusBarColorHelper.getNotificationIconsColorDark(mContext));
-	} else {
-		 mIconTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
-              mLightModeIconColorSingleTone, mDarkModeIconColorSingleTone);
-	}
+        mIconTint = (int) ArgbEvaluator.getInstance().evaluate(darkIntensity,
+                mLightModeIconColorSingleTone, mDarkModeIconColorSingleTone);
         applyIconTint();
-    }  
+    }
 
     private void deferIconTintChange(float darkIntensity) {
         if (mTintChangePending && darkIntensity == mPendingDarkIntensity) {
@@ -552,105 +397,26 @@ public class StatusBarIconController implements Tunable {
         mPendingDarkIntensity = darkIntensity;
     }
 
-    public void applyIconTint() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	int batterytext = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.BATTERY_TEXT_COLOR, 0xFFFFFFFF);
-        int mBatteryIconColor = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.BATTERY_ICON_COLOR, 0xFFFFFFFF);
+    private void applyIconTint() {
         for (int i = 0; i < mStatusIcons.getChildCount(); i++) {
             StatusBarIconView v = (StatusBarIconView) mStatusIcons.getChildAt(i);
-	    if (mColorSwitch) {
-            v.setImageTintList(ColorStateList.valueOf(mStatusIconsColorTint));
-	    } else {
-	    v.setImageTintList(ColorStateList.valueOf(mIconTint));
-        	}
-	}
-	if (mColorSwitch) {
-        mSignalCluster.setIconTint(
-                mNetworkSignalColorTint, mNoSimColorTint, mAirplaneModeColorTint, mDarkIntensity);
-        mMoreIcon.setImageTintList(ColorStateList.valueOf(mNotificationIconsColorTint));
-	mBatteryLevelTextView.setTextColor(batterytext);
-	mBatteryMeterView.setDarkIntensity(mBatteryIconColor);
-	} else {
-	mSignalCluster.setIconStockTint(mIconTint, mDarkIntensity);
-        mMoreIcon.setImageTintList(ColorStateList.valueOf(mIconTint));
-	mBatteryLevelTextView.setTextColor(mIconTint);
-        }
-        if (Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUSBAR_CLOCK_COLOR_SWITCH, 0,
-                UserHandle.USER_CURRENT) == 0) {
-            mClockController.setTextColor(mIconTint);
+            v.setImageTintList(ColorStateList.valueOf(mIconTint));
         }
+        mSignalCluster.setIconTint(mIconTint, mDarkIntensity);
+        mMoreIcon.setImageTintList(ColorStateList.valueOf(mIconTint));
+        mBatteryLevelTextView.setTextColor(mIconTint);
         mBatteryMeterView.setDarkIntensity(mDarkIntensity);
-        if (Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUS_BAR_CARRIER_COLOR,
-                mContext.getResources().getColor(R.color.status_bar_clock_color),
-                UserHandle.USER_CURRENT) == mContext.getResources().
-                getColor(R.color.status_bar_clock_color)) {
-	if (mCarrierLabel !=null) {
-            mCarrierLabel.setTextColor(mIconTint);
-	    }
-        }
-	if (Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUS_BAR_RR_LOGO_COLOR, 0xFFFFFFFF,
-                UserHandle.USER_CURRENT) == 0xFFFFFFFF) {
-		if (mRRLogo != null) {
-       		 mRRLogo.setImageTintList(ColorStateList.valueOf(mIconTint));
-		} if (mRRLogoCenter != null) {
-        	mRRLogoCenter.setImageTintList(ColorStateList.valueOf(mIconTint));
-		} if (mRRLogoRight != null) {
-       		 mRRLogoRight.setImageTintList(ColorStateList.valueOf(mIconTint));
-		} if (mRRLogoBefore != null) {
-       		 mRRLogoBefore.setImageTintList(ColorStateList.valueOf(mIconTint));
-		}
-	}
-        if (Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.STATUS_BAR_WEATHER_COLOR, 0xFFFFFFFF,
-                UserHandle.USER_CURRENT) == 0xFFFFFFFF) {
-		if (mWeather !=null) {
-         	   mWeather.setTextColor(mIconTint);
-		} if (mWeatherLeft !=null) {
-       	     	   mWeatherLeft.setTextColor(mIconTint);
-       	        }
-	}
-	mCustomLogo = Settings.System.getIntForUser(
-		mContext.getContentResolver(), Settings.System.CUSTOM_LOGO_STYLE, 0,
-		UserHandle.USER_CURRENT);
-	int mCustomlogoColor = Settings.System.getIntForUser(mContext.getContentResolver(),
-		Settings.System.CUSTOM_LOGO_COLOR, 0xFFFFFFFF, UserHandle.USER_CURRENT);
-        if (mCustomlogoColor == 0xFFFFFFFF || mCustomLogo !=0 || mCustomLogo !=1) { 
-	// we cant set imagetintlist on 1st 2 logos and the last one. They are non colorable. Hence use a condition.
-		if (mCLogo!=null) {
-		    if (mCustomLogo == 43) {
-		    mCLogo.setColorFilter(mCustomlogoColor, Mode.MULTIPLY);
-		    } else {
-         	    mCLogo.setImageTintList(ColorStateList.valueOf(mIconTint));
-		    }
-		} 
-	} 
-	if (Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.NETWORK_TRAFFIC_COLOR, 0xFFFFFFFF,
-                UserHandle.USER_CURRENT) == 0xFFFFFFFF) {
- 	mNetworkTraffic.setDarkIntensity(mDarkIntensity);
-	}
+        mClockController.setTextColor(mIconTint);
         applyNotificationIconsTint();
     }
 
     private void applyNotificationIconsTint() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;	
         for (int i = 0; i < mNotificationIcons.getChildCount(); i++) {
             StatusBarIconView v = (StatusBarIconView) mNotificationIcons.getChildAt(i);
             boolean isPreL = Boolean.TRUE.equals(v.getTag(R.id.icon_is_pre_L));
             boolean colorize = !isPreL || isGrayscale(v);
             if (colorize) {
-		if (mColorSwitch) {
-                v.setImageTintList(ColorStateList.valueOf(mNotificationIconsColorTint));
-		} else {
-		v.setImageTintList(ColorStateList.valueOf(mIconTint));
-		}
+                v.setImageTintList(ColorStateList.valueOf(mIconTint));
             }
         }
     }
@@ -710,63 +476,10 @@ public class StatusBarIconController implements Tunable {
         return ret;
     }
 
-    private ValueAnimator createColorTransitionAnimator(float start, float end) {
-        ValueAnimator animator = ValueAnimator.ofFloat(start, end);
-
-        animator.setDuration(500);
-        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
-            @Override public void onAnimationUpdate(ValueAnimator animation) {
-                float position = animation.getAnimatedFraction();
-                int blendedFrame;
-                int blended;
-                if (mColorToChange == NETWORK_SIGNAL_COLOR) {
-                    blended = ColorHelper.getBlendColor(
-                            mNetworkSignalColorOld, mNetworkSignalColor, position);
-                    mSignalCluster.applyNetworkSignalTint(blended);
-                } else if (mColorToChange == NO_SIM_COLOR) {
-                    blended = ColorHelper.getBlendColor(
-                            mNoSimColorOld, mNoSimColor, position);
-                    mSignalCluster.applyNoSimTint(blended);
-                } else if (mColorToChange == AIRPLANE_MODE_COLOR) {
-                    blended = ColorHelper.getBlendColor(
-                            mAirplaneModeColorOld, mAirplaneModeColor, position);
-                    mSignalCluster.applyAirplaneModeTint(blended);
-                 } else if (mColorToChange == STATUS_ICONS_COLOR) {
-                    blended = ColorHelper.getBlendColor(
-                            mStatusIconsColorOld, mStatusIconsColor, position);
-                    for (int i = 0; i < mStatusIcons.getChildCount(); i++) {
-                        StatusBarIconView v = (StatusBarIconView) mStatusIcons.getChildAt(i);
-                        v.setImageTintList(ColorStateList.valueOf(blended));
-                    }
-                }
-            }
-        });
-        animator.addListener(new AnimatorListenerAdapter() {
-            @Override
-            public void onAnimationEnd(Animator animation) {
-                if (mColorToChange == NETWORK_SIGNAL_COLOR) {
-                    mNetworkSignalColorOld = mNetworkSignalColor;
-                    mNetworkSignalColorTint = mNetworkSignalColor;
-                } else if (mColorToChange == NO_SIM_COLOR) {
-                    mNoSimColorOld = mNoSimColor;
-                    mNoSimColorTint = mNoSimColor;
-                } else if (mColorToChange == AIRPLANE_MODE_COLOR) {
-                    mAirplaneModeColorOld = mAirplaneModeColor;
-                    mAirplaneModeColorTint = mAirplaneModeColor;
-                } else if (mColorToChange == STATUS_ICONS_COLOR) {
-                    mStatusIconsColorOld = mStatusIconsColor;
-                    mStatusIconsColorTint = mStatusIconsColor;
-                }
-            }
-        });
-        return animator;
-    }
-
     public void refreshAllStatusBarIcons() {
         refreshAllIconsForLayout(mStatusIcons);
         refreshAllIconsForLayout(mStatusIconsKeyguard);
         refreshAllIconsForLayout(mNotificationIcons);
-        carrierLabelVisibility();
     }
 
     public LinearLayout getStatusIcons() {
@@ -790,215 +503,4 @@ public class StatusBarIconController implements Tunable {
             }
         }
     }
-
-    public void updateStatusIconsColor() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-        
-	if(mColorSwitch) {
-	mStatusIconsColor = StatusBarColorHelper.getStatusIconsColor(mContext);
-       		 if (mStatusIcons.getChildCount() > 0) {
-           		 mColorToChange = STATUS_ICONS_COLOR;
-            		 mColorTransitionAnimator.start();
-       		} else {
-            		mStatusIconsColorOld = mStatusIconsColor;
-            		mStatusIconsColorTint = mStatusIconsColor;
-       			 }
-	} else {
-      	applyIconTint();
-	}
-    }
-
-    public void updateStatusIconsKeyguardColor() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if(mColorSwitch) {
-        if (mStatusIconsKeyguard.getChildCount() > 0) {
-            for (int index = 0; index < mStatusIconsKeyguard.getChildCount(); index++) {
-                StatusBarIconView v = (StatusBarIconView) mStatusIconsKeyguard.getChildAt(index);
-                v.setImageTintList(ColorStateList.valueOf(mStatusIconsColor));
-        	    }
-        	}
-	} else {
-	applyIconTint();
-	}
-    }
-
-
-    public void updateNetworkIconColors() {
-	mColorSwitch =  Settings.System.getInt(mContext.getContentResolver(),
-				 Settings.System.STATUSBAR_COLOR_SWITCH, 0) == 1;
-	if (mColorSwitch) {
-        mNetworkSignalColor = StatusBarColorHelper.getNetworkSignalColor(mContext);
-        mNoSimColor = StatusBarColorHelper.getNoSimColor(mContext);
-        mAirplaneModeColor = StatusBarColorHelper.getAirplaneModeColor(mContext);
-        mNetworkSignalColorOld = mNetworkSignalColor;
-        mNoSimColorOld = mNoSimColor;
-        mAirplaneModeColorOld = mAirplaneModeColor;
-        mNetworkSignalColorTint = mNetworkSignalColor;
-        mNoSimColorTint = mNoSimColor;
-        mAirplaneModeColorTint = mAirplaneModeColor;
-        mSignalCluster.setIconTint(mNetworkSignalColor, mNoSimColor, mAirplaneModeColor, mDarkIntensity);
-	} 
-    }
-
-    public void updateNetworkSignalColor() {
-        mNetworkSignalColor = StatusBarColorHelper.getNetworkSignalColor(mContext);
-        mColorToChange = NETWORK_SIGNAL_COLOR;
-        mColorTransitionAnimator.start();
-	}
-
-    public void updateNoSimColor() {
-        mNoSimColor = StatusBarColorHelper.getNoSimColor(mContext);
-        mColorToChange = NO_SIM_COLOR;
-        mColorTransitionAnimator.start();
-	}
-
-    public void updateAirplaneModeColor() {
-        mAirplaneModeColor = StatusBarColorHelper.getAirplaneModeColor(mContext);
-        mColorToChange = AIRPLANE_MODE_COLOR;
-        mColorTransitionAnimator.start();
-	}
-
-    public void updateNotificationIconsColor() {
-	if(mColorSwitch) {
-        mNotificationIconsColor = StatusBarColorHelper.getNotificationIconsColor(mContext);
-        mNotificationIconsColorTint = mNotificationIconsColor;
-        for (int i = 0; i < mNotificationIcons.getChildCount(); i++) {
-            StatusBarIconView v = (StatusBarIconView) mNotificationIcons.getChildAt(i);
-            boolean isPreL = Boolean.TRUE.equals(v.getTag(R.id.icon_is_pre_L));
-            boolean colorize = !isPreL || isGrayscale(v);
-            if (colorize) {
-                v.setImageTintList(ColorStateList.valueOf(mNotificationIconsColor));
-            }
-        }
-        mMoreIcon.setImageTintList(ColorStateList.valueOf(mNotificationIconsColor));
-	} else {
-	applyIconTint();
-		}
-	}
-
-   public void getcustomlogos(View statusBar) {
-	mCustomLogo = Settings.System.getIntForUser(
-		mContext.getContentResolver(), Settings.System.CUSTOM_LOGO_STYLE, 0,
-		UserHandle.USER_CURRENT);
-		if ( mCustomLogo == 2) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_2);
-		} else if ( mCustomLogo == 3) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_3);
-		} else if ( mCustomLogo == 4) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_4);
-		} else if ( mCustomLogo == 5) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_5);
-		} else if ( mCustomLogo == 6) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_6);
-		} else if ( mCustomLogo == 7) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_7);
-		} else if ( mCustomLogo == 8) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_8);
-		} else if ( mCustomLogo == 9) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_9);
-		} else if ( mCustomLogo == 10) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_10);
-		} else if ( mCustomLogo == 11) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_11);
-		} else if ( mCustomLogo == 12) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_12);
-		} else if ( mCustomLogo == 13) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_13);
-		} else if ( mCustomLogo == 14) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_14);
-		} else if ( mCustomLogo  == 15) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_15);
-		} else if ( mCustomLogo  == 16) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_16);
-		} else if ( mCustomLogo  == 17) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_17);
-		} else if ( mCustomLogo  == 18) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_18);
-		} else if ( mCustomLogo  == 19) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_19);
-		} else if ( mCustomLogo  == 20) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_20);
-		} else if ( mCustomLogo  == 21) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_21);
-		} else if ( mCustomLogo  == 22) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_22);
-		} else if ( mCustomLogo  == 23) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_23);
-		} else if ( mCustomLogo  == 24) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_24);
-		} else if ( mCustomLogo  == 25) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_25);
-		} else if ( mCustomLogo  == 26) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_26);
-		} else if ( mCustomLogo  == 27) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_27);
-		} else if ( mCustomLogo == 28) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_28);
-		} else if ( mCustomLogo == 29) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_29);
-		} else if ( mCustomLogo == 30) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_30);
-		} else if ( mCustomLogo == 31) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_31);
-		} else if ( mCustomLogo == 32) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_32);
-		} else if ( mCustomLogo == 33) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_33);
-		} else if ( mCustomLogo == 34) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_34);
-		} else if ( mCustomLogo == 35) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_35);
-		} else if ( mCustomLogo == 36) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_36);
-		} else if ( mCustomLogo == 37) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_37);
-		} else if ( mCustomLogo == 38) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_38);
-		} else if ( mCustomLogo == 39) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_39);
-		} else if ( mCustomLogo == 40) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_40);
-		} else if ( mCustomLogo == 41) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_41);
-		} else if ( mCustomLogo == 42) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_42);
-		} else if ( mCustomLogo == 43) {
-		mCLogo = (ImageView) statusBar.findViewById(R.id.custom_43);
-		}
-
-    }
-
-    public int getCurrentVisibleNotificationIcons() {
-        return mNotificationIcons.getChildCount();
-    }
-
-    class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-    }
-
-    void observe() {
-         ContentResolver resolver = mContext.getContentResolver();
-         resolver.registerContentObserver(Settings.System
-                 .getUriFor(Settings.System.HIDE_CARRIER_MAX_SWITCH),
-                 false, this, UserHandle.USER_CURRENT);
-         resolver.registerContentObserver(Settings.System
-                 .getUriFor(Settings.System.HIDE_CARRIER_MAX_NOTIFICATION),
-                 false, this, UserHandle.USER_CURRENT);
-    }
-
-    @Override
-    public void onChange(boolean selfChange, Uri uri) {
-        super.onChange(selfChange, uri);
-
-        if (uri.equals(Settings.System.getUriFor(
-            Settings.System.HIDE_CARRIER_MAX_SWITCH))
-            || uri.equals(Settings.System.getUriFor(
-            Settings.System.HIDE_CARRIER_MAX_NOTIFICATION))) {
-            carrierLabelVisibility();
-            }
-        }
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java
index 6567d1f..96cf093 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java
@@ -18,7 +18,6 @@ package com.android.systemui.statusbar.phone;
 
 import android.content.ComponentCallbacks2;
 import android.content.Context;
-import android.graphics.Bitmap;
 import android.graphics.PixelFormat;
 import android.os.Bundle;
 import android.os.SystemClock;
@@ -444,7 +443,7 @@ public class StatusBarKeyguardViewManager {
     private Runnable mMakeNavigationBarVisibleRunnable = new Runnable() {
         @Override
         public void run() {
-            mPhoneStatusBar.getNavigationBarView().getBaseView().setVisibility(View.VISIBLE);
+            mPhoneStatusBar.getNavigationBarView().setVisibility(View.VISIBLE);
         }
     };
 
@@ -479,7 +478,7 @@ public class StatusBarKeyguardViewManager {
                     }
                 } else {
                     mContainer.removeCallbacks(mMakeNavigationBarVisibleRunnable);
-                    mPhoneStatusBar.getNavigationBarView().getBaseView().setVisibility(View.GONE);
+                    mPhoneStatusBar.getNavigationBarView().setVisibility(View.GONE);
                 }
             }
         }
@@ -578,10 +577,6 @@ public class StatusBarKeyguardViewManager {
         return mPhoneStatusBar.isKeyguardShowingMedia();
     }
 
-    public void setBackgroundBitmap(Bitmap bmp) {
-        mPhoneStatusBar.setBackgroundBitmap(bmp);
-    }
-
     public void setKeyguardExternalViewFocus(boolean hasFocus) {
         mStatusBarWindowManager.setKeyguardExternalViewFocus(hasFocus);
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowManager.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowManager.java
index a1c7e3c..f0d7828 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowManager.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowManager.java
@@ -18,13 +18,14 @@ package com.android.systemui.statusbar.phone;
 
 import android.content.Context;
 import android.content.pm.ActivityInfo;
+import android.content.res.Configuration;
 import android.content.res.Resources;
+import android.database.ContentObserver;
 import android.graphics.Point;
 import android.graphics.PixelFormat;
+import android.os.Handler;
 import android.os.SystemProperties;
-import android.os.UserHandle;
 import android.provider.Settings;
-import android.util.Log;
 import android.view.Gravity;
 import android.view.Display;
 import android.view.SurfaceSession;
@@ -39,7 +40,6 @@ import com.android.systemui.statusbar.StatusBarState;
 import com.android.systemui.statusbar.policy.KeyguardMonitor;
 import com.android.systemui.statusbar.policy.LiveLockScreenController;
 import cyanogenmod.providers.CMSettings;
-import org.cyanogenmod.internal.util.CmLockPatternUtils;
 
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
@@ -56,7 +56,9 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
     private WindowManager.LayoutParams mLp;
     private WindowManager.LayoutParams mLpChanged;
     private int mBarHeight;
+    private boolean mKeyguardScreenRotation;
     private final float mScreenBrightnessDoze;
+    private final boolean mBlurSupported;
 
     private boolean mKeyguardBlurEnabled;
     private boolean mShowingMedia;
@@ -64,14 +66,13 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
     private final SurfaceSession mFxSession;
 
     private final KeyguardMonitor mKeyguardMonitor;
+    private int mCurrentOrientation;
 
     private static final int TYPE_LAYER_MULTIPLIER = 10000; // refer to WindowManagerService.TYPE_LAYER_MULTIPLIER
     private static final int TYPE_LAYER_OFFSET = 1000;      // refer to WindowManagerService.TYPE_LAYER_OFFSET
 
     private static final int STATUS_BAR_LAYER = 16 * TYPE_LAYER_MULTIPLIER + TYPE_LAYER_OFFSET;
 
-    private boolean mKeyguardScreenRotation;
-
     private final State mCurrentState = new State();
     private LiveLockScreenController mLiveLockScreenController;
 
@@ -81,31 +82,23 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
         mKeyguardScreenRotation = shouldEnableKeyguardScreenRotation();
         mScreenBrightnessDoze = mContext.getResources().getInteger(
                 com.android.internal.R.integer.config_screenBrightnessDoze) / 255f;
+        mBlurSupported = mContext.getResources().getBoolean(
+                com.android.internal.R.bool.config_ui_blur_enabled);
 
         mKeyguardMonitor = kgm;
         mKeyguardMonitor.addCallback(this);
-        mKeyguardBlurEnabled = mContext.getResources().getBoolean(
-                com.android.internal.R.bool.config_ui_blur_enabled);
         mFxSession = new SurfaceSession();
     }
 
     private boolean shouldEnableKeyguardScreenRotation() {
         Resources res = mContext.getResources();
-        final boolean configLockRotationValue =
-                res.getBoolean(R.bool.config_enableLockScreenRotation);
-        boolean enableLockScreenRotation = Settings.System.getIntForUser(
-                mContext.getContentResolver(), Settings.System.LOCKSCREEN_ROTATION,
-                configLockRotationValue ? 1 : 0, UserHandle.USER_CURRENT) != 0;
-        boolean enableAccelerometerRotation = Settings.System.getIntForUser(
-                mContext.getContentResolver(), Settings.System.ACCELEROMETER_ROTATION, 0,
-                UserHandle.USER_CURRENT) != 0;
-
-        return SystemProperties.getBoolean("lockscreen.rot_override",false)
-               || (enableLockScreenRotation && enableAccelerometerRotation);
-    }
-
-    public void updateKeyguardScreenRotation() {
-        mKeyguardScreenRotation = shouldEnableKeyguardScreenRotation();
+        boolean enableAccelerometerRotation = Settings.System.getInt(mContext.getContentResolver(),
+                Settings.System.ACCELEROMETER_ROTATION, 1) != 0;
+        boolean enableLockScreenRotation = CMSettings.System.getInt(mContext.getContentResolver(),
+                CMSettings.System.LOCKSCREEN_ROTATION, 0) != 0;
+        return SystemProperties.getBoolean("lockscreen.rot_override", false)
+                || (res.getBoolean(R.bool.config_enableLockScreenRotation)
+                && (enableLockScreenRotation && enableAccelerometerRotation));
     }
 
     /**
@@ -139,15 +132,22 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
         mLpChanged = new WindowManager.LayoutParams();
         mLpChanged.copyFrom(mLp);
 
-        if (mKeyguardBlurEnabled) {
+        mKeyguardBlurEnabled = mBlurSupported ?
+                CMSettings.Secure.getInt(mContext.getContentResolver(),
+                CMSettings.Secure.LOCK_SCREEN_BLUR_ENABLED, 1) == 1 : false;
+        if (mBlurSupported) {
             Display display = mWindowManager.getDefaultDisplay();
             Point xy = new Point();
             display.getRealSize(xy);
+            mCurrentOrientation = mContext.getResources().getConfiguration().orientation;
             mKeyguardBlur = new BlurLayer(mFxSession, xy.x, xy.y, "KeyGuard");
             if (mKeyguardBlur != null) {
                 mKeyguardBlur.setLayer(STATUS_BAR_LAYER - 2);
             }
         }
+
+        SettingsObserver observer = new SettingsObserver(new Handler());
+        observer.observe(mContext);
     }
 
     private void applyKeyguardFlags(State state) {
@@ -278,8 +278,7 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
         boolean isblur = false;
         if (mCurrentState.keyguardShowing && mKeyguardBlurEnabled
                 && !mCurrentState.keyguardOccluded
-                && !mShowingMedia
-                && !isShowingLiveLockScreen()) {
+                && !mShowingMedia) {
             isblur = true;
         }
         if (mKeyguardBlur != null) {
@@ -364,6 +363,16 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
         setKeyguardOccluded(hasFocus);
     }
 
+    public void onConfigurationChanged(Configuration newConfig) {
+        if (mKeyguardBlur != null && newConfig.orientation != mCurrentOrientation) {
+            Display display = mWindowManager.getDefaultDisplay();
+            Point xy = new Point();
+            display.getRealSize(xy);
+            mKeyguardBlur.setSize(xy.x, xy.y);
+            mCurrentOrientation = newConfig.orientation;
+        }
+    }
+
     /**
      * @param state The {@link StatusBarState} of the status bar.
      */
@@ -419,13 +428,6 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
         mLiveLockScreenController = liveLockScreenController;
     }
 
-    private boolean isShowingLiveLockScreen() {
-        CmLockPatternUtils lockPatternUtils = new CmLockPatternUtils(mContext);
-        return (CMSettings.Secure.getInt(mContext.getContentResolver(),
-                CMSettings.Secure.LIVE_LOCK_SCREEN_ENABLED, 0) == 1)
-                && lockPatternUtils.isThirdPartyKeyguardEnabled();
-    }
-
     private static class State {
         boolean keyguardShowing;
         boolean keyguardOccluded;
@@ -476,4 +478,39 @@ public class StatusBarWindowManager implements KeyguardMonitor.Callback {
             return result.toString();
         }
     }
+
+    private class SettingsObserver extends ContentObserver {
+        public SettingsObserver(Handler handler) {
+            super(handler);
+        }
+
+        public void observe(Context context) {
+            context.getContentResolver().registerContentObserver(
+                    CMSettings.Secure.getUriFor(CMSettings.Secure.LOCK_SCREEN_BLUR_ENABLED),
+                    false,
+                    this);
+            context.getContentResolver().registerContentObserver(
+                    Settings.System.getUriFor(Settings.System.ACCELEROMETER_ROTATION),
+                    false,
+                    this);
+            context.getContentResolver().registerContentObserver(
+                    CMSettings.System.getUriFor(CMSettings.System.LOCKSCREEN_ROTATION),
+                    false,
+                    this);
+        }
+
+        public void unobserve(Context context) {
+            context.getContentResolver().unregisterContentObserver(this);
+        }
+
+        @Override
+        public void onChange(boolean selfChange) {
+            mKeyguardBlurEnabled = mBlurSupported ?
+                    CMSettings.Secure.getInt(mContext.getContentResolver(),
+                    CMSettings.Secure.LOCK_SCREEN_BLUR_ENABLED, 1) == 1 : false;
+            mKeyguardScreenRotation = shouldEnableKeyguardScreenRotation();
+            // update the state
+            apply(mCurrentState);
+        }
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowView.java
index e6209f8..56ced84 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarWindowView.java
@@ -29,12 +29,12 @@ import android.graphics.Rect;
 import android.media.session.MediaSessionLegacyHelper;
 import android.net.Uri;
 import android.os.Handler;
-import android.os.UserHandle;
 import android.os.IBinder;
 import android.os.IPowerManager;
 import android.os.PowerManager;
 import android.os.RemoteException;
 import android.os.ServiceManager;
+import android.os.PowerManager;
 import android.provider.Settings;
 import android.util.AttributeSet;
 import android.util.Log;
@@ -70,7 +70,6 @@ public class StatusBarWindowView extends FrameLayout {
     private int mStatusBarHeaderHeight;
 
     private boolean mDoubleTapToSleepEnabled;
-    private boolean mDoubleTapToSleepLockScreen;
     private GestureDetector mDoubleTapGesture;
     private Handler mHandler = new Handler();
     private SettingsObserver mSettingsObserver;
@@ -192,7 +191,7 @@ public class StatusBarWindowView extends FrameLayout {
 
     @Override
     public boolean dispatchTouchEvent(MotionEvent ev) {
-        if (mBrightnessMirror != null && mBrightnessMirror.getVisibility() == View.VISIBLE) {
+        if (mBrightnessMirror != null && mBrightnessMirror.getVisibility() == VISIBLE) {
             // Disallow new pointers while the brightness mirror is visible. This is so that you
             // can't touch anything other than the brightness slider while the mirror is showing
             // and the rest of the panel is transparent.
@@ -209,17 +208,8 @@ public class StatusBarWindowView extends FrameLayout {
         if (mDoubleTapToSleepEnabled
                 && ev.getY() < mStatusBarHeaderHeight) {
             if (DEBUG) Log.w(TAG, "logging double tap gesture");
-		mDoubleTapGesture.onTouchEvent(ev);
-		}
-	final int h = getMeasuredHeight();
-        if (mDoubleTapToSleepLockScreen &&
-                mService.getBarState() == StatusBarState.KEYGUARD
-                && (ev.getY() < (h / 3) ||
-                ev.getY() > (h - mStatusBarHeaderHeight))) {
-            if (DEBUG) Log.w(TAG, "logging lock screen double tap gesture");
             mDoubleTapGesture.onTouchEvent(ev);
         }
-
         if (mNotificationPanel.isFullyExpanded()
                 && mStackScrollLayout.getVisibility() == View.VISIBLE
                 && mService.getBarState() == StatusBarState.KEYGUARD
@@ -318,10 +308,8 @@ public class StatusBarWindowView extends FrameLayout {
 
         void observe() {
             ContentResolver resolver = mContext.getContentResolver();
-	    resolver.registerContentObserver(CMSettings.System.getUriFor(
-                    CMSettings.System.DOUBLE_TAP_SLEEP_GESTURE), false, this);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.DOUBLE_TAP_SLEEP_LOCK_SCREEN), false, this);
+            resolver.registerContentObserver(CMSettings.System.getUriFor(
+                            CMSettings.System.DOUBLE_TAP_SLEEP_GESTURE), false, this);
             update();
         }
 
@@ -344,8 +332,6 @@ public class StatusBarWindowView extends FrameLayout {
             ContentResolver resolver = mContext.getContentResolver();
             mDoubleTapToSleepEnabled = CMSettings.System
                     .getInt(resolver, CMSettings.System.DOUBLE_TAP_SLEEP_GESTURE, 1) == 1;
-            mDoubleTapToSleepLockScreen = Settings.System.getIntForUser(resolver,
-                    Settings.System.DOUBLE_TAP_SLEEP_LOCK_SCREEN, 0, UserHandle.USER_CURRENT) == 1;
         }
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/SystemUIDialog.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/SystemUIDialog.java
index d701b3c..9ebb79f 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/SystemUIDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/SystemUIDialog.java
@@ -33,12 +33,7 @@ public class SystemUIDialog extends AlertDialog {
         super(context, R.style.Theme_SystemUI_Dialog);
         mContext = context;
 
-        getWindow().setType(WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL);
-        getWindow().addFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM
-                | WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
-        WindowManager.LayoutParams attrs = getWindow().getAttributes();
-        attrs.setTitle(getClass().getSimpleName());
-        getWindow().setAttributes(attrs);
+        makeSystemUIDialog(this);
     }
 
     public void setShowForAllUsers(boolean show) {
@@ -62,4 +57,13 @@ public class SystemUIDialog extends AlertDialog {
     public void setNegativeButton(int resId, OnClickListener onClick) {
         setButton(BUTTON_NEGATIVE, mContext.getString(resId), onClick);
     }
+
+    public static void makeSystemUIDialog(AlertDialog d) {
+        d.getWindow().setType(WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL);
+        d.getWindow().addFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM
+                | WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
+        WindowManager.LayoutParams attrs = d.getWindow().getAttributes();
+        attrs.setTitle(SystemUIDialog.class.getClass().getSimpleName());
+        d.getWindow().setAttributes(attrs);
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java
index 55a119b..c59a0d8 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/BatteryController.java
@@ -40,7 +40,6 @@ public class BatteryController extends BroadcastReceiver implements BatteryState
 
     public static final int STYLE_ICON_PORTRAIT = 0;
     public static final int STYLE_CIRCLE = 2;
-    public static final int STYLE_DOTTED_CIRCLE = 3;
     public static final int STYLE_GONE = 4;
     public static final int STYLE_ICON_LANDSCAPE = 5;
     public static final int STYLE_TEXT = 6;
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/BrightnessMirrorController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/BrightnessMirrorController.java
index c6bea36..1ccf80b 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/BrightnessMirrorController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/BrightnessMirrorController.java
@@ -21,13 +21,8 @@ import com.android.systemui.statusbar.ScrimView;
 import com.android.systemui.statusbar.phone.PhoneStatusBar;
 import com.android.systemui.statusbar.phone.StatusBarWindowView;
 
-import android.content.ContentResolver;
-import android.content.Context;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.view.View;
 import android.view.ViewPropertyAnimator;
-import android.widget.ImageView;
 import android.widget.FrameLayout;
 
 /**
@@ -42,21 +37,14 @@ public class BrightnessMirrorController {
     private final View mBrightnessMirror;
     private final View mPanelHolder;
     private final int[] mInt2Cache = new int[2];
-    private final ImageView mIcon;
-    private Context mContext;
 
-    public BrightnessMirrorController(Context context, View statusBarWindow) {
-        mContext = context;
+    public BrightnessMirrorController(View statusBarWindow) {
         mScrimBehind = (ScrimView) statusBarWindow.findViewById(R.id.scrim_behind);
         mBrightnessMirror = statusBarWindow.findViewById(R.id.brightness_mirror);
         mPanelHolder = statusBarWindow.findViewById(R.id.panel_holder);
-        mIcon = (ImageView) statusBarWindow.findViewById(R.id.brightness_icon);
-        // enable the brightness icon
-        mIcon.setVisibility(View.VISIBLE);
     }
 
     public void showMirror() {
-        updateIcon();
         mBrightnessMirror.setVisibility(View.VISIBLE);
         mScrimBehind.animateViewAlpha(0.0f, TRANSITION_DURATION_OUT, PhoneStatusBar.ALPHA_OUT);
         outAnimation(mPanelHolder.animate())
@@ -71,7 +59,6 @@ public class BrightnessMirrorController {
             @Override
             public void run() {
                 mBrightnessMirror.setVisibility(View.INVISIBLE);
-                mPanelHolder.destroyDrawingCache();
             }
         });
     }
@@ -122,16 +109,4 @@ public class BrightnessMirrorController {
         mBrightnessMirror.setPadding(padding, mBrightnessMirror.getPaddingTop(),
                 padding, mBrightnessMirror.getPaddingBottom());
     }
-
-    private void updateIcon() {
-        if (mIcon != null) {
-            boolean automatic = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.SCREEN_BRIGHTNESS_MODE,
-                    Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL,
-                    UserHandle.USER_CURRENT) != Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL;
-            mIcon.setImageResource(automatic ?
-                    com.android.systemui.R.drawable.ic_qs_brightness_auto_on_new :
-                    com.android.systemui.R.drawable.ic_qs_brightness_auto_off_new);
-        }
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java
index 0a72c8c..0cc82dc 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/Clock.java
@@ -18,24 +18,18 @@ package com.android.systemui.statusbar.policy;
 
 import android.app.ActivityManager;
 import android.content.BroadcastReceiver;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.res.TypedArray;
-import android.database.ContentObserver;
-import android.graphics.Typeface;
 import android.os.Bundle;
-import android.os.Handler;
 import android.os.UserHandle;
-import android.provider.Settings;
 import android.text.Spannable;
 import android.text.SpannableStringBuilder;
 import android.text.format.DateFormat;
 import android.text.style.CharacterStyle;
 import android.text.style.RelativeSizeSpan;
 import android.util.AttributeSet;
-import android.view.View;
 import android.widget.TextView;
 
 import com.android.systemui.DemoMode;
@@ -44,11 +38,7 @@ import com.android.systemui.cm.UserContentObserver;
 
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
-import java.util.Date;
-import java.util.GregorianCalendar;
 import java.util.Locale;
-import java.util.Timer;
-import java.util.TimerTask;
 import java.util.TimeZone;
 
 import libcore.icu.LocaleData;
@@ -69,92 +59,6 @@ public class Clock extends TextView implements DemoMode {
 
     private int mAmPmStyle = AM_PM_STYLE_GONE;
 
-    public static final int CLOCK_DATE_DISPLAY_GONE = 0;
-    public static final int CLOCK_DATE_DISPLAY_SMALL = 1;
-    public static final int CLOCK_DATE_DISPLAY_NORMAL = 2;
-
-    public static final int CLOCK_DATE_STYLE_REGULAR = 0;
-    public static final int CLOCK_DATE_STYLE_LOWERCASE = 1;
-    public static final int CLOCK_DATE_STYLE_UPPERCASE = 2;
-
-    public static final int STYLE_DATE_LEFT  = 0;
-    public static final int STYLE_DATE_RIGHT = 1;
-    
-     public static final int FONT_NORMAL = 0;
-     public static final int FONT_ITALIC = 1;
-     public static final int FONT_BOLD = 2;
-     public static final int FONT_BOLD_ITALIC = 3;
-     public static final int FONT_LIGHT = 4;
-     public static final int FONT_LIGHT_ITALIC = 5;
-     public static final int FONT_THIN = 6;
-     public static final int FONT_THIN_ITALIC = 7;
-     public static final int FONT_CONDENSED = 8;
-     public static final int FONT_CONDENSED_ITALIC = 9;
-     public static final int FONT_CONDENSED_LIGHT = 10;
-     public static final int FONT_CONDENSED_LIGHT_ITALIC = 11;
-     public static final int FONT_CONDENSED_BOLD = 12;
-     public static final int FONT_CONDENSED_BOLD_ITALIC = 13;
-     public static final int FONT_MEDIUM = 14;
-     public static final int FONT_MEDIUM_ITALIC = 15;
-     public static final int FONT_BLACK = 16;
-     public static final int FONT_BLACK_ITALIC = 17;
-     public static final int FONT_DANCINGSCRIPT = 18;
-     public static final int FONT_DANCINGSCRIPT_BOLD = 19;
-     public static final int FONT_COMINGSOON = 20;
-     public static final int FONT_NOTOSERIF = 21;
-     public static final int FONT_NOTOSERIF_ITALIC = 22;
-     public static final int FONT_NOTOSERIF_BOLD = 23;
-     public static final int FONT_NOTOSERIF_BOLD_ITALIC = 24;
-     private int mClockFontStyle = FONT_NORMAL;
-     private int mClockFontSize = 14;
-     protected int mclockColor;
-
-    protected int mClockDateDisplay = CLOCK_DATE_DISPLAY_GONE;
-    protected int mClockDateStyle = CLOCK_DATE_STYLE_REGULAR;
-    protected int mClockColorSwitch;
-
-    private SettingsObserver mSettingsObserver;
-
-    protected class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUS_BAR_DATE), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUS_BAR_DATE_STYLE), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUS_BAR_DATE_FORMAT), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUSBAR_CLOCK_COLOR), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUSBAR_CLOCK_DATE_POSITION), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUSBAR_CLOCK_COLOR_SWITCH), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                    .getUriFor(Settings.System.STATUSBAR_CLOCK_FONT_STYLE), false,
-                    this, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System
-                   .getUriFor(Settings.System.STATUSBAR_CLOCK_FONT_SIZE), false,
-                    this, UserHandle.USER_ALL);
-            updateSettings();
-        }
-
-        @Override
-        public void onChange(boolean selfChange) {
-            updateSettings();
-        }
-    }
-
     public Clock(Context context) {
         this(context, null);
     }
@@ -191,11 +95,8 @@ public class Clock extends TextView implements DemoMode {
         // The time zone may have changed while the receiver wasn't registered, so update the Time
         mCalendar = Calendar.getInstance(TimeZone.getDefault());
 
-        if (mSettingsObserver == null) {
-            mSettingsObserver = new SettingsObserver(new Handler());
-        }
-        mSettingsObserver.observe();
-        updateSettings();
+        // Make sure we update to the current time
+        updateClock();
     }
 
     @Override
@@ -203,7 +104,6 @@ public class Clock extends TextView implements DemoMode {
         super.onDetachedFromWindow();
         if (mAttached) {
             getContext().unregisterReceiver(mIntentReceiver);
-            getContext().getContentResolver().unregisterContentObserver(mSettingsObserver);
             mAttached = false;
         }
     }
@@ -222,9 +122,8 @@ public class Clock extends TextView implements DemoMode {
                 final Locale newLocale = getResources().getConfiguration().locale;
                 if (! newLocale.equals(mLocale)) {
                     mLocale = newLocale;
+                    mClockFormatString = ""; // force refresh
                 }
-                updateSettings();
-                return;
             }
             updateClock();
         }
@@ -234,11 +133,6 @@ public class Clock extends TextView implements DemoMode {
         if (mDemoMode || mCalendar == null) return;
         mCalendar.setTimeInMillis(System.currentTimeMillis());
         setText(getSmallTime());
-        if (mClockColorSwitch == 1) {
-            setTextColor(mclockColor);
-        }
-        getFontStyle(mClockFontStyle);
-        setTextSize(mClockFontSize);
     }
 
     private final CharSequence getSmallTime() {
@@ -251,7 +145,6 @@ public class Clock extends TextView implements DemoMode {
 
         SimpleDateFormat sdf;
         String format = is24 ? d.timeFormat_Hm : d.timeFormat_hm;
-
         if (!format.equals(mClockFormatString)) {
             /*
              * Search for an unquoted "a" in the format string, so we can
@@ -288,66 +181,13 @@ public class Clock extends TextView implements DemoMode {
         } else {
             sdf = mClockFormat;
         }
+        String result = sdf.format(mCalendar.getTime());
 
-        CharSequence dateString = null;
-
-        String result = "";
-        String timeResult = sdf.format(mCalendar.getTime());
-        String dateResult = "";
-
-        int clockDatePosition = Settings.System.getInt(getContext().getContentResolver(),
-            Settings.System.STATUSBAR_CLOCK_DATE_POSITION, 0);
-
-        if (mClockDateDisplay != CLOCK_DATE_DISPLAY_GONE) {
-            Date now = new Date();
-
-            String clockDateFormat = Settings.System.getString(getContext().getContentResolver(),
-                    Settings.System.STATUS_BAR_DATE_FORMAT);
-            if (clockDateFormat == null || clockDateFormat.isEmpty()) {
-                // Set dateString to short uppercase Weekday (Default for AOKP) if empty
-                dateString = DateFormat.format("EEE", now);
-            } else {
-                dateString = DateFormat.format(clockDateFormat, now) ;
-            }
-            if (mClockDateStyle == CLOCK_DATE_STYLE_LOWERCASE) {
-                // When Date style is small, convert date to lowercase
-                dateResult = dateString.toString().toLowerCase();
-            } else if (mClockDateStyle == CLOCK_DATE_STYLE_UPPERCASE) {
-                dateResult = dateString.toString().toUpperCase();
-            } else {
-                dateResult = dateString.toString();
-            }
-            result = (clockDatePosition == STYLE_DATE_LEFT) ?
-                    dateResult + " " + timeResult : timeResult + " " + dateResult;
-        } else {
-            // No date, just show time
-            result = timeResult;
-        }
-
-        SpannableStringBuilder formatted = new SpannableStringBuilder(result);
-
-        if (mClockDateDisplay != CLOCK_DATE_DISPLAY_NORMAL) {
-            if (dateString != null) {
-                int dateStringLen = dateString.length();
-                int timeStringOffset =
-                        (clockDatePosition == STYLE_DATE_RIGHT) ?
-                        timeResult.length() + 1 : 0;
-                if (mClockDateDisplay == CLOCK_DATE_DISPLAY_GONE) {
-                    formatted.delete(0, dateStringLen);
-                } else {
-                    if (mClockDateDisplay == CLOCK_DATE_DISPLAY_SMALL) {
-                        CharacterStyle style = new RelativeSizeSpan(0.7f);
-                        formatted.setSpan(style, timeStringOffset,
-                                          timeStringOffset + dateStringLen,
-                                          Spannable.SPAN_EXCLUSIVE_INCLUSIVE);
-                    }
-                }
-            }
-        }
         if (mAmPmStyle != AM_PM_STYLE_NORMAL) {
             int magic1 = result.indexOf(MAGIC1);
             int magic2 = result.indexOf(MAGIC2);
             if (magic1 >= 0 && magic2 > magic1) {
+                SpannableStringBuilder formatted = new SpannableStringBuilder(result);
                 if (mAmPmStyle == AM_PM_STYLE_GONE) {
                     formatted.delete(magic1, magic2+1);
                 } else {
@@ -359,121 +199,12 @@ public class Clock extends TextView implements DemoMode {
                     formatted.delete(magic2, magic2 + 1);
                     formatted.delete(magic1, magic1 + 1);
                 }
+                return formatted;
             }
         }
-        return formatted;
-    }
 
-    protected void updateSettings() {
-        ContentResolver resolver = mContext.getContentResolver();
-        mClockFormatString = "";
-        mClockDateDisplay = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUS_BAR_DATE, CLOCK_DATE_DISPLAY_GONE,
-                UserHandle.USER_CURRENT);
-        mClockDateStyle = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUS_BAR_DATE_STYLE, CLOCK_DATE_STYLE_REGULAR,
-                UserHandle.USER_CURRENT);
-        mClockFontStyle = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUSBAR_CLOCK_FONT_STYLE, FONT_NORMAL,
-                UserHandle.USER_CURRENT);
-        mClockFontSize = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUSBAR_CLOCK_FONT_SIZE, 14,
-                UserHandle.USER_CURRENT);
-        int defaultColor = getResources().getColor(R.color.status_bar_clock_color);
-        mclockColor = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUSBAR_CLOCK_COLOR, defaultColor,
-                UserHandle.USER_CURRENT);
-        mClockColorSwitch = Settings.System.getIntForUser(resolver,
-                Settings.System.STATUSBAR_CLOCK_COLOR_SWITCH, 0,
-                UserHandle.USER_CURRENT);
-        if (mclockColor == Integer.MIN_VALUE) {
-            // flag to reset the color
-            mclockColor = defaultColor;
-        }
-        if (mAttached) {
-            updateClock();
-        }
-    }
-    
-    public void getFontStyle(int font) {
-         switch (font) {
-             case FONT_NORMAL:
-             default:
-                 setTypeface(Typeface.create("sans-serif", Typeface.NORMAL));
-                break;
-            case FONT_ITALIC:
-                setTypeface(Typeface.create("sans-serif", Typeface.ITALIC));
-                break;
-            case FONT_BOLD:
-                setTypeface(Typeface.create("sans-serif", Typeface.BOLD));
-                break;
-            case FONT_BOLD_ITALIC:
-                setTypeface(Typeface.create("sans-serif", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_LIGHT:
-                setTypeface(Typeface.create("sans-serif-light", Typeface.NORMAL));
-                break;
-            case FONT_LIGHT_ITALIC:
-                setTypeface(Typeface.create("sans-serif-light", Typeface.ITALIC));
-                break;
-            case FONT_THIN:
-                setTypeface(Typeface.create("sans-serif-thin", Typeface.NORMAL));
-                break;
-            case FONT_THIN_ITALIC:
-                setTypeface(Typeface.create("sans-serif-thin", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED:
-                setTypeface(Typeface.create("sans-serif-condensed", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_ITALIC:
-                setTypeface(Typeface.create("sans-serif-condensed", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_LIGHT:
-                setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.NORMAL));
-                break;
-            case FONT_CONDENSED_LIGHT_ITALIC:
-                setTypeface(Typeface.create("sans-serif-condensed-light", Typeface.ITALIC));
-                break;
-            case FONT_CONDENSED_BOLD:
-                setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD));
-                break;
-            case FONT_CONDENSED_BOLD_ITALIC:
-                setTypeface(Typeface.create("sans-serif-condensed", Typeface.BOLD_ITALIC));
-                break;
-            case FONT_MEDIUM:
-                setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
-                break;
-            case FONT_MEDIUM_ITALIC:
-                setTypeface(Typeface.create("sans-serif-medium", Typeface.ITALIC));
-                break;
-            case FONT_BLACK:
-                setTypeface(Typeface.create("sans-serif-black", Typeface.NORMAL));
-                break;
-            case FONT_BLACK_ITALIC:
-                setTypeface(Typeface.create("sans-serif-black", Typeface.ITALIC));
-                break;
-            case FONT_DANCINGSCRIPT:
-                setTypeface(Typeface.create("cursive", Typeface.NORMAL));
-                break;
-            case FONT_DANCINGSCRIPT_BOLD:
-                setTypeface(Typeface.create("cursive", Typeface.BOLD));
-                break;
-            case FONT_COMINGSOON:
-                setTypeface(Typeface.create("casual", Typeface.NORMAL));
-                break;
-            case FONT_NOTOSERIF:
-                setTypeface(Typeface.create("serif", Typeface.NORMAL));
-               break;
-            case FONT_NOTOSERIF_ITALIC:
-                setTypeface(Typeface.create("serif", Typeface.ITALIC));
-                break;
-            case FONT_NOTOSERIF_BOLD:
-                setTypeface(Typeface.create("serif", Typeface.BOLD));
-                break;
-            case FONT_NOTOSERIF_BOLD_ITALIC:
-                setTypeface(Typeface.create("serif", Typeface.BOLD_ITALIC));
-                break;
-        }
+        return result;
+
     }
 
     private boolean mDemoMode;
@@ -512,3 +243,4 @@ public class Clock extends TextView implements DemoMode {
         updateClock();
     }
 }
+
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/HeadsUpManager.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/HeadsUpManager.java
index 30926db..3d1212b 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/HeadsUpManager.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/HeadsUpManager.java
@@ -21,7 +21,6 @@ import android.content.res.Resources;
 import android.database.ContentObserver;
 import android.os.Handler;
 import android.os.SystemClock;
-import android.os.UserHandle;
 import android.provider.Settings;
 import android.util.ArrayMap;
 import android.util.Log;
@@ -29,7 +28,6 @@ import android.util.Pools;
 import android.view.View;
 import android.view.ViewTreeObserver;
 import android.view.accessibility.AccessibilityEvent;
-import android.widget.Toast;
 
 import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.R;
@@ -52,16 +50,17 @@ import java.util.TreeSet;
 public class HeadsUpManager implements ViewTreeObserver.OnComputeInternalInsetsListener {
     private static final String TAG = "HeadsUpManager";
     private static final boolean DEBUG = false;
+    private static final String SETTING_HEADS_UP_SNOOZE_LENGTH_MS = "heads_up_snooze_length_ms";
     private static final int TAG_CLICKED_NOTIFICATION = R.id.is_clicked_heads_up_tag;
 
-    private int mHeadsUpNotificationDecay;
-    private int mSnoozeLengthMs;
+    private final int mHeadsUpNotificationDecay;
     private final int mMinimumDisplayTime;
 
     private final int mTouchAcceptanceDelay;
     private final ArrayMap<String, Long> mSnoozedPackages;
     private final HashSet<OnHeadsUpChangedListener> mListeners = new HashSet<>();
-    private Handler mHandler = new Handler();
+    private final int mDefaultSnoozeLengthMs;
+    private final Handler mHandler = new Handler();
     private final Pools.Pool<HeadsUpEntry> mEntryPool = new Pools.Pool<HeadsUpEntry>() {
 
         private Stack<HeadsUpEntry> mPoolObjects = new Stack<>();
@@ -87,6 +86,7 @@ public class HeadsUpManager implements ViewTreeObserver.OnComputeInternalInsetsL
     private final int mNotificationsTopPadding;
     private final Context mContext;
     private PhoneStatusBar mBar;
+    private int mSnoozeLengthMs;
     private ContentObserver mSettingsObserver;
     private HashMap<String, HeadsUpEntry> mHeadsUpEntries = new HashMap<>();
     private TreeSet<HeadsUpEntry> mSortedEntries = new TreeSet<>();
@@ -108,17 +108,28 @@ public class HeadsUpManager implements ViewTreeObserver.OnComputeInternalInsetsL
         Resources resources = mContext.getResources();
         mTouchAcceptanceDelay = resources.getInteger(R.integer.touch_acceptance_delay);
         mSnoozedPackages = new ArrayMap<>();
+        mDefaultSnoozeLengthMs = resources.getInteger(R.integer.heads_up_default_snooze_length_ms);
+        mSnoozeLengthMs = mDefaultSnoozeLengthMs;
         mMinimumDisplayTime = resources.getInteger(R.integer.heads_up_notification_minimum_time);
-        mHeadsUpNotificationDecay = Settings.System.getIntForUser(context.getContentResolver(),
-                Settings.System.HEADS_UP_TIMEOUT,
-                context.getResources().getInteger(R.integer.heads_up_notification_decay),
-                UserHandle.USER_CURRENT);
-        mSnoozeLengthMs = Settings.System.getIntForUser(context.getContentResolver(),
-                Settings.System.HEADS_UP_SNOOZE_LENGTH_MS,
-                context.getResources().getInteger(R.integer.heads_up_default_snooze_length_ms),
-                UserHandle.USER_CURRENT);
+        mHeadsUpNotificationDecay = resources.getInteger(R.integer.heads_up_notification_decay);
         mClock = new Clock();
 
+        mSnoozeLengthMs = Settings.Global.getInt(context.getContentResolver(),
+                SETTING_HEADS_UP_SNOOZE_LENGTH_MS, mDefaultSnoozeLengthMs);
+        mSettingsObserver = new ContentObserver(mHandler) {
+            @Override
+            public void onChange(boolean selfChange) {
+                final int packageSnoozeLengthMs = Settings.Global.getInt(
+                        context.getContentResolver(), SETTING_HEADS_UP_SNOOZE_LENGTH_MS, -1);
+                if (packageSnoozeLengthMs > -1 && packageSnoozeLengthMs != mSnoozeLengthMs) {
+                    mSnoozeLengthMs = packageSnoozeLengthMs;
+                    if (DEBUG) Log.v(TAG, "mSnoozeLengthMs = " + mSnoozeLengthMs);
+                }
+            }
+        };
+        context.getContentResolver().registerContentObserver(
+                Settings.Global.getUriFor(SETTING_HEADS_UP_SNOOZE_LENGTH_MS), false,
+                mSettingsObserver);
         mStatusBarWindowView = statusBarWindowView;
         mStatusBarHeight = resources.getDimensionPixelSize(
                 com.android.internal.R.dimen.status_bar_height);
@@ -321,11 +332,6 @@ public class HeadsUpManager implements ViewTreeObserver.OnComputeInternalInsetsL
             String packageName = entry.entry.notification.getPackageName();
             mSnoozedPackages.put(snoozeKey(packageName, mUser),
                     SystemClock.elapsedRealtime() + mSnoozeLengthMs);
-            if (mSnoozeLengthMs != 0) {
-                Toast.makeText(mContext,
-                        mContext.getString(R.string.heads_up_snooze_message,
-                        mSnoozeLengthMs / 60 / 1000), Toast.LENGTH_LONG).show();
-            }
         }
         mReleaseOnExpandFinish = true;
     }
@@ -568,14 +574,6 @@ public class HeadsUpManager implements ViewTreeObserver.OnComputeInternalInsetsL
         }
 
         public void updateEntry() {
-            mHeadsUpNotificationDecay = Settings.System.getIntForUser(mContext.getContentResolver(),
-                    Settings.System.HEADS_UP_TIMEOUT,
-                    mContext.getResources().getInteger(R.integer.heads_up_notification_decay),
-                    UserHandle.USER_CURRENT);
-            mSnoozeLengthMs = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.HEADS_UP_SNOOZE_LENGTH_MS,
-                mContext.getResources().getInteger(R.integer.heads_up_default_snooze_length_ms),
-                UserHandle.USER_CURRENT);
             mSortedEntries.remove(HeadsUpEntry.this);
             long currentTime = mClock.currentTimeMillis();
             earliestRemovaltime = currentTime + mMinimumDisplayTime;
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
index d3a4937..f7d6f85 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
@@ -19,8 +19,6 @@ import android.content.Context;
 import android.content.Intent;
 import android.net.NetworkCapabilities;
 import android.os.Looper;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.os.SystemProperties;
 import android.telephony.PhoneStateListener;
 import android.telephony.ServiceState;
@@ -67,7 +65,7 @@ public class MobileSignalController extends SignalController<
     private ServiceState mServiceState;
     private SignalStrength mSignalStrength;
     private MobileIconGroup mDefaultIcons;
-    private Config mConfig;	
+    private Config mConfig;
 
     // TODO: Reduce number of vars passed in, if we have the NetworkController, probably don't
     // need listener lists anymore.
@@ -184,28 +182,25 @@ public class MobileSignalController extends SignalController<
             mDefaultIcons = TelephonyIcons.THREE_G;
         }
 
-       boolean mShow3G = Settings.System.getIntForUser(
-            mContext.getContentResolver(), Settings.System.SHOW_THREEG,
-                0, UserHandle.USER_CURRENT) == 1;
- 	if(mShow3G) {	
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSDPA, TelephonyIcons.THREE_G);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSUPA, TelephonyIcons.THREE_G);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSPA, TelephonyIcons.THREE_G);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSPAP, TelephonyIcons.THREE_G);
-        } else {
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSDPA, TelephonyIcons.H);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSUPA, TelephonyIcons.H);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSPA, TelephonyIcons.H);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSPAP, TelephonyIcons.HP);
-	}
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.SHOW_FOURG, 0) == 1) {
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE, TelephonyIcons.FOUR_G);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA,
+        MobileIconGroup hGroup = TelephonyIcons.THREE_G;
+        if (mConfig.hspaDataDistinguishable) {
+            hGroup = TelephonyIcons.H;
+        }
+        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSDPA, hGroup);
+        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSUPA, hGroup);
+        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSPA, hGroup);
+        if (mConfig.hspaDataDistinguishable) {
+            hGroup = TelephonyIcons.HP;
+        }
+        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_HSPAP, hGroup);
+
+        if (mConfig.show4gForLte) {
+            mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE, TelephonyIcons.FOUR_G);
+            mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA,
                 TelephonyIcons.FOUR_G_PLUS);
         } else {
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE, TelephonyIcons.LTE);
-        mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA, TelephonyIcons.LTE);
+            mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE, TelephonyIcons.LTE);
+            mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA, TelephonyIcons.LTE);
         }
         mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_IWLAN, TelephonyIcons.WFC);
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java
index 0e7ee25..57b0dba 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java
@@ -27,7 +27,6 @@ import java.util.List;
 public interface NetworkController {
 
     boolean hasMobileDataFeature();
-    boolean isAdvancedDataTileEnabled();
     void addSignalCallback(SignalCallback cb);
     void removeSignalCallback(SignalCallback cb);
     void setWifiEnabled(boolean enabled);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
index f90efd4..7e1bf05 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
@@ -18,9 +18,7 @@ package com.android.systemui.statusbar.policy;
 
 import static android.net.NetworkCapabilities.NET_CAPABILITY_VALIDATED;
 
-import android.app.ActivityManager;
 import android.content.BroadcastReceiver;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
@@ -829,18 +827,20 @@ public class NetworkControllerImpl extends BroadcastReceiver
 
     @VisibleForTesting
     static class Config {
+        boolean showAtLeast3G = false;
         boolean alwaysShowCdmaRssi = false;
-	boolean showAtLeast3G = false;
+        boolean show4gForLte = false;
         boolean hspaDataDistinguishable;
         boolean showRsrpSignalLevelforLTE;
 
         static Config readConfig(Context context) {
             Config config = new Config();
             Resources res = context.getResources();
-	
-	    config.showAtLeast3G = res.getBoolean(R.bool.config_showMin3G);       
+
+            config.showAtLeast3G = res.getBoolean(R.bool.config_showMin3G);
             config.alwaysShowCdmaRssi =
                     res.getBoolean(com.android.internal.R.bool.config_alwaysUseCdmaRssi);
+            config.show4gForLte = res.getBoolean(R.bool.config_show4GForLTE);
             config.hspaDataDistinguishable =
                     res.getBoolean(R.bool.config_hspa_data_distinguishable);
             config.showRsrpSignalLevelforLTE =
@@ -848,12 +848,4 @@ public class NetworkControllerImpl extends BroadcastReceiver
             return config;
         }
     }
-
-    /**
-     * Check the advanced data tile setting
-     */
-    public boolean isAdvancedDataTileEnabled() {
-        return Settings.Secure.getIntForUser(mContext.getContentResolver(),
-                Settings.Secure.QS_DATA_ADVANCED, 0, ActivityManager.getCurrentUser()) == 1;
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/UserSwitcherController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/UserSwitcherController.java
index d331099..38fb275 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/UserSwitcherController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/UserSwitcherController.java
@@ -588,6 +588,11 @@ public class UserSwitcherController {
         }
 
         @Override
+        public StatusBarPanelCustomTile getCustomTile() {
+            return null;
+        }
+
+        @Override
         public Boolean getToggleState() {
             return null;
         }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherController.java
index 1fa4956..0f71bcc 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherController.java
@@ -25,8 +25,9 @@ public interface WeatherController {
         void onWeatherChanged(WeatherInfo temp);
     }
     public static class WeatherInfo {
-        public String temp = null;
+        public double temp = Double.NaN;
         public String city = null;
         public String condition = null;
+        public int tempUnit;
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherControllerImpl.java
index f452b7a..1a798f0 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/WeatherControllerImpl.java
@@ -21,9 +21,12 @@ import android.content.Context;
 import android.content.Intent;
 import android.database.ContentObserver;
 import android.database.Cursor;
+import android.net.Uri;
 import android.os.Handler;
 import android.util.Log;
+import cyanogenmod.providers.CMSettings;
 import cyanogenmod.providers.WeatherContract;
+import cyanogenmod.weather.CMWeatherManager;
 import cyanogenmod.weather.util.WeatherUtils;
 
 import java.util.ArrayList;
@@ -32,6 +35,8 @@ import static cyanogenmod.providers.WeatherContract.WeatherColumns.CURRENT_CITY;
 import static cyanogenmod.providers.WeatherContract.WeatherColumns.CURRENT_CONDITION;
 import static cyanogenmod.providers.WeatherContract.WeatherColumns.CURRENT_TEMPERATURE;
 import static cyanogenmod.providers.WeatherContract.WeatherColumns.CURRENT_TEMPERATURE_UNIT;
+import static cyanogenmod.providers.WeatherContract.WeatherColumns.TempUnit.CELSIUS;
+import static cyanogenmod.providers.WeatherContract.WeatherColumns.TempUnit.FAHRENHEIT;
 
 public class WeatherControllerImpl implements WeatherController {
 
@@ -39,6 +44,8 @@ public class WeatherControllerImpl implements WeatherController {
     private static final boolean DEBUG = Log.isLoggable(TAG, Log.DEBUG);
     private WeatherContentObserver mWeatherContentObserver;
     private Handler mHandler;
+    private int mWeatherUnit;
+    private Uri mWeatherTempetarureUri;
 
     public static final ComponentName COMPONENT_WEATHER_FORECAST = new ComponentName(
             "com.cyanogenmod.lockclock", "com.cyanogenmod.lockclock.weather.ForecastActivity");
@@ -61,9 +68,13 @@ public class WeatherControllerImpl implements WeatherController {
                 mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
         mHandler = new Handler();
         mWeatherContentObserver = new WeatherContentObserver(mHandler);
+        mWeatherTempetarureUri
+                = CMSettings.Global.getUriFor(CMSettings.Global.WEATHER_TEMPERATURE_UNIT);
         mContext.getContentResolver().registerContentObserver(
-                WeatherContract.WeatherColumns.CURRENT_WEATHER_URI,
-                true, mWeatherContentObserver);
+                WeatherContract.WeatherColumns.CURRENT_WEATHER_URI,true, mWeatherContentObserver);
+        mContext.getContentResolver().registerContentObserver(mWeatherTempetarureUri, true,
+                mWeatherContentObserver);
+        queryWeatherTempUnit();
         queryWeather();
     }
 
@@ -97,7 +108,16 @@ public class WeatherControllerImpl implements WeatherController {
         } else {
             try {
                 c.moveToFirst();
-                mCachedInfo.temp = WeatherUtils.formatTemperature(c.getDouble(0), c.getInt(1));
+                double temp = c.getDouble(0);
+                int reportedUnit = c.getInt(1);
+                if (reportedUnit == CELSIUS && mWeatherUnit == FAHRENHEIT) {
+                    temp = WeatherUtils.celsiusToFahrenheit(temp);
+                } else if (reportedUnit == FAHRENHEIT && mWeatherUnit == CELSIUS) {
+                    temp = WeatherUtils.fahrenheitToCelsius(temp);
+                }
+
+                mCachedInfo.temp = temp;
+                mCachedInfo.tempUnit = mWeatherUnit;
                 mCachedInfo.city = c.getString(2);
                 mCachedInfo.condition = c.getString(3);
             } finally {
@@ -112,18 +132,53 @@ public class WeatherControllerImpl implements WeatherController {
         }
     }
 
-    private final class WeatherContentObserver extends ContentObserver {
+    private class WeatherContentObserver extends ContentObserver {
 
         public WeatherContentObserver(Handler handler) {
             super(handler);
         }
 
         @Override
+        public void onChange(boolean selfChange, Uri uri) {
+            if (uri != null) {
+                if (uri.compareTo(WeatherContract.WeatherColumns.CURRENT_WEATHER_URI) == 0) {
+                    queryWeather();
+                    fireCallback();
+                } else if (uri.compareTo(mWeatherTempetarureUri) == 0) {
+                    queryWeatherTempUnit();
+                    fixCachedWeatherInfo();
+                    fireCallback();
+                } else {
+                    super.onChange(selfChange, uri);
+                }
+            }
+        }
+
+        @Override
         public void onChange(boolean selfChange) {
-            super.onChange(selfChange);
-            if (DEBUG) Log.d(TAG, "Received onChange notification");
-            queryWeather();
-            fireCallback();
+            onChange(selfChange, null);
+        }
+    }
+
+    private void queryWeatherTempUnit() {
+        try {
+            mWeatherUnit = CMSettings.Global.getInt(mContext.getContentResolver(),
+                    CMSettings.Global.WEATHER_TEMPERATURE_UNIT);
+        } catch (CMSettings.CMSettingNotFoundException e) {
+            //CMSettingsProvider should have taken care of setting a default value for this setting
+            //so how is that we ended up here?? We need to set a valid temp unit anyway to keep
+            //this going
+            mWeatherUnit = WeatherContract.WeatherColumns.TempUnit.CELSIUS;
+        }
+    }
+
+    private void fixCachedWeatherInfo() {
+        if (mCachedInfo.tempUnit == CELSIUS && mWeatherUnit == FAHRENHEIT) {
+            mCachedInfo.temp = WeatherUtils.celsiusToFahrenheit(mCachedInfo.temp);
+            mCachedInfo.tempUnit = FAHRENHEIT;
+        } else if (mCachedInfo.tempUnit == FAHRENHEIT && mWeatherUnit == CELSIUS) {
+            mCachedInfo.temp = WeatherUtils.fahrenheitToCelsius(mCachedInfo.temp);
+            mCachedInfo.tempUnit = CELSIUS;
         }
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java b/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java
index 1d16e34..b6e131a 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java
@@ -627,9 +627,6 @@ public class NotificationStackScrollLayout extends ViewGroup
         return false;
     }
 
-    public void onChildTriggered(View v) {
-    }
-
     public void onBeginDrag(View v) {
         setSwipingInProgress(true);
         mAmbientState.onBeginDrag(v);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/tv/TvStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/tv/TvStatusBar.java
index c04c5b8..bbe5dd9 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/tv/TvStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/tv/TvStatusBar.java
@@ -16,7 +16,6 @@
 
 package com.android.systemui.statusbar.tv;
 
-import android.content.Intent;
 import android.os.IBinder;
 import android.service.notification.NotificationListenerService.RankingMap;
 import android.service.notification.StatusBarNotification;
@@ -104,20 +103,12 @@ public class TvStatusBar extends BaseStatusBar {
     public void notificationLightPulse(int argb, int onMillis, int offMillis) {
     }
 
-    @Override // CommandQueue
-    public void setAutoRotate(boolean enabled) {
-    }
-
-    @Override // CommandQueue
-    public void showCustomIntentAfterKeyguard(Intent intent) {
-    }
-
     @Override
     protected void setAreThereNotifications() {
     }
 
     @Override
-    public void updateNotifications() {
+    protected void updateNotifications() {
     }
 
     @Override
diff --git a/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java b/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
index 44391b0..53fbef7 100644
--- a/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
+++ b/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
@@ -10,19 +10,28 @@
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the mSpecific language governing permissions and
+ * See the License for the specific language governing permissions and
  * limitations under the License.
  */
 package com.android.systemui.tuner;
 
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
 import android.app.ActivityManager;
 import android.app.AlertDialog;
 import android.app.Fragment;
 import android.content.ClipData;
+import android.content.ClipDescription;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.graphics.Canvas;
+import android.graphics.Point;
+import android.graphics.PointF;
+import android.graphics.Rect;
+import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.provider.Settings.Secure;
+import android.support.v4.view.ViewPager;
 import android.text.TextUtils;
 import android.util.Log;
 import android.view.DragEvent;
@@ -30,11 +39,9 @@ import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.view.MotionEvent;
 import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.View.OnDragListener;
-import android.view.View.OnTouchListener;
 import android.view.ViewGroup;
 import android.widget.EditText;
 import android.widget.FrameLayout;
@@ -42,6 +49,8 @@ import android.widget.ScrollView;
 
 import com.android.internal.logging.MetricsLogger;
 import com.android.systemui.R;
+import com.android.systemui.qs.QSDragPanel;
+import com.android.systemui.qs.QSPage;
 import com.android.systemui.qs.QSPanel;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.qs.QSTile.Host.Callback;
@@ -52,6 +61,7 @@ import com.android.systemui.statusbar.phone.QSTileHost;
 import com.android.systemui.statusbar.policy.SecurityController;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 public class QsTuner extends Fragment implements Callback {
@@ -59,16 +69,13 @@ public class QsTuner extends Fragment implements Callback {
     private static final String TAG = "QsTuner";
 
     private static final int MENU_RESET = Menu.FIRST;
+    private static final int MENU_EDIT = Menu.FIRST + 1;
 
     private DraggableQsPanel mQsPanel;
     private CustomHost mTileHost;
 
-    private FrameLayout mDropTarget;
-
     private ScrollView mScrollRoot;
 
-    private FrameLayout mAddTarget;
-
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -78,6 +85,7 @@ public class QsTuner extends Fragment implements Callback {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         menu.add(0, MENU_RESET, 0, com.android.internal.R.string.reset);
+        menu.add(0, MENU_EDIT, 0, "toggle edit");
     }
 
     public void onResume() {
@@ -93,8 +101,11 @@ public class QsTuner extends Fragment implements Callback {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
+            case MENU_EDIT:
+                mQsPanel.setEditing(!mQsPanel.isEditing());
+                break;
             case MENU_RESET:
-                mTileHost.reset();
+                mTileHost.resetTiles();
                 break;
             case android.R.id.home:
                 getFragmentManager().popBackStack();
@@ -105,7 +116,7 @@ public class QsTuner extends Fragment implements Callback {
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
-            Bundle savedInstanceState) {
+                             Bundle savedInstanceState) {
         mScrollRoot = (ScrollView) inflater.inflate(R.layout.tuner_qs, container, false);
 
         mQsPanel = new DraggableQsPanel(getContext());
@@ -116,11 +127,6 @@ public class QsTuner extends Fragment implements Callback {
         mQsPanel.refreshAllTiles();
         ((ViewGroup) mScrollRoot.findViewById(R.id.all_details)).addView(mQsPanel, 0);
 
-        mDropTarget = (FrameLayout) mScrollRoot.findViewById(R.id.remove_target);
-        setupDropTarget();
-        mAddTarget = (FrameLayout) mScrollRoot.findViewById(R.id.add_target);
-        setupAddTarget();
-        mQsPanel.updateResources();
         return mScrollRoot;
     }
 
@@ -130,122 +136,27 @@ public class QsTuner extends Fragment implements Callback {
         super.onDestroyView();
     }
 
-    private void setupDropTarget() {
-        QSTileView tileView = new QSTileView(getContext());
-        QSTile.State state = new QSTile.State();
-        state.visible = true;
-        state.icon = ResourceIcon.get(R.drawable.ic_delete);
-        state.label = getString(com.android.internal.R.string.delete);
-        tileView.onStateChanged(state);
-        mDropTarget.addView(tileView);
-        mDropTarget.setVisibility(View.GONE);
-        new DragHelper(tileView, new DropListener() {
-            @Override
-            public void onDrop(String sourceText) {
-                mTileHost.remove(sourceText);
-                mQsPanel.refreshAllTiles();
-                mQsPanel.updateResources();
-            }
-        });
-    }
-
-    private void setupAddTarget() {
-        QSTileView tileView = new QSTileView(getContext());
-        QSTile.State state = new QSTile.State();
-        state.visible = true;
-        state.icon = ResourceIcon.get(R.drawable.ic_add_circle_qs);
-        state.label = getString(R.string.add_tile);
-        tileView.onStateChanged(state);
-        mAddTarget.addView(tileView);
-        tileView.setClickable(true);
-        tileView.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                mTileHost.showAddDialog();
-                mQsPanel.updateResources();
-            }
-        });
+    @Override
+    public void onTilesChanged() {
+        mQsPanel.setTiles(mTileHost.getTiles());
     }
 
-    public void onStartDrag() {
-        mDropTarget.post(new Runnable() {
-            @Override
-            public void run() {
-                mDropTarget.setVisibility(View.VISIBLE);
-                mAddTarget.setVisibility(View.GONE);
-            }
-        });
+    @Override
+    public void setEditing(boolean editing) {
+        mQsPanel.setEditing(editing);
     }
 
-    public void stopDrag() {
-        mDropTarget.post(new Runnable() {
-            @Override
-            public void run() {
-                mDropTarget.setVisibility(View.GONE);
-                mAddTarget.setVisibility(View.VISIBLE);
-            }
-        });
+    @Override
+    public boolean isEditing() {
+        return mTileHost.isEditing();
     }
 
     @Override
-    public void onTilesChanged() {
-        mQsPanel.setTiles(mTileHost.getTiles());
-        mQsPanel.refreshAllTiles();
-        mQsPanel.updateResources();
+    public void goToSettingsPage() {
     }
 
-    public static int getLabelResource(String mSpec) {
-        if (mSpec.equals("wifi")) return R.string.quick_settings_wifi_label;
-        else if (mSpec.equals("bt")) return R.string.quick_settings_bluetooth_label;
-        else if (mSpec.equals("inversion")) return R.string.quick_settings_inversion_label;
-        else if (mSpec.equals("cell")) return R.string.quick_settings_cellular_detail_title;
-        else if (mSpec.equals("airplane")) return R.string.airplane_mode;
-        else if (mSpec.equals("dnd")) return R.string.quick_settings_dnd_label;
-        else if (mSpec.equals("rotation")) return R.string.quick_settings_rotation_locked_label;
-        else if (mSpec.equals("flashlight")) return R.string.quick_settings_flashlight_label;
-        else if (mSpec.equals("location")) return R.string.quick_settings_location_label;
-        else if (mSpec.equals("cast")) return R.string.quick_settings_cast_title;
-        else if (mSpec.equals("hotspot")) return R.string.quick_settings_hotspot_label;
-        else if (mSpec.equals("adb_network")) return R.string.quick_settings_network_adb_label;
-        else if (mSpec.equals("compass")) return R.string.quick_settings_compass_label;
-        else if (mSpec.equals("nfc")) return R.string.quick_settings_nfc_label;
-        else if (mSpec.equals("profiles")) return R.string.quick_settings_profiles;
-        else if (mSpec.equals("sync")) return R.string.quick_settings_sync_label;
-        else if (mSpec.equals("volume_panel")) return R.string.quick_settings_volume_panel_label;
-        else if (mSpec.equals("usb_tether")) return R.string.quick_settings_usb_tether_label;
-        else if (mSpec.equals("screen_timeout")) return R.string.quick_settings_screen_timeout_detail_title;
-        else if (mSpec.equals("performance")) return R.string.qs_tile_performance;
-        else if (mSpec.equals("ambient_display")) return R.string.quick_settings_ambient_display_label;
-        else if (mSpec.equals("live_display")) return R.string.live_display_title;
-        else if (mSpec.equals("music")) return R.string.quick_settings_music_label;
-        else if (mSpec.equals("brightness")) return R.string.quick_settings_brightness_label;
-        else if (mSpec.equals("screen_off")) return R.string.quick_settings_screen_off_label;
-        else if (mSpec.equals("screenshot")) return R.string.quick_settings_screenshot_label;
-        else if (mSpec.equals("expanded_desktop")) return R.string.quick_settings_expanded_desktop_label;
-        else if (mSpec.equals("reboot")) return R.string.quick_settings_reboot_label;
-        else if (mSpec.equals("configurations")) return R.string.quick_settings_rrtools;
-        else if (mSpec.equals("heads_up")) return R.string.quick_settings_heads_up_label;
-        else if (mSpec.equals("lte")) return R.string.qs_lte_label;
-        else if (mSpec.equals("themes")) return R.string.quick_settings_themes;
-        else if (mSpec.equals("navbar")) return R.string.quick_settings_navigation_bar;
-        else if (mSpec.equals("appcirclebar")) return R.string.quick_settings_appcirclebar_title;
-        else if (mSpec.equals("kernel_adiutor")) return R.string.quick_settings_kernel_title;
-        else if (mSpec.equals("screenrecord")) return R.string.quick_settings_screenrecord;
-        else if (mSpec.equals("gesture_anywhere")) return R.string.quick_settings_gesture_anywhere_label;
-        else if (mSpec.equals("battery_saver")) return R.string.quick_settings_battery_saver_label;
-        else if (mSpec.equals("power_menu")) return R.string.quick_settings_power_menu_label;
-        else if (mSpec.equals("app_picker")) return R.string.navbar_app_picker;
-        else if (mSpec.equals("kill_app")) return R.string.qs_kill_app;
-        else if (mSpec.equals("caffeine")) return R.string.quick_settings_caffeine_label;
-        else if (mSpec.equals("hw_keys")) return R.string.quick_settings_hwkeys_title;
-        else if (mSpec.equals("sound")) return R.string.quick_settings_sound_label;
-        else if (mSpec.equals("lockscreen")) return R.string.quick_settings_lockscreen_label;
-        else if (mSpec.equals("pulse")) return R.string.quick_settings_pulse_label;
-        else if (mSpec.equals("pie")) return R.string.quick_settings_pie;
-        else if (mSpec.equals("float_mode")) return R.string.recent_float_mode_title;
-        else if (mSpec.equals("visualizer")) return R.string.quick_settings_visualizer_label;
-	else if (mSpec.equals("halo")) return R.string.quick_settings_halo_on;
-        return 0;
+    @Override
+    public void resetTiles() {
     }
 
     private static class CustomHost extends QSTileHost {
@@ -256,7 +167,7 @@ public class QsTuner extends Fragment implements Callback {
         }
 
         @Override
-        protected QSTile<?> createTile(String tileSpec) {
+        public QSTile<?> createTile(String tileSpec) {
             return new DraggableTile(this, tileSpec);
         }
 
@@ -277,80 +188,6 @@ public class QsTuner extends Fragment implements Callback {
             setTiles(order);
         }
 
-        public void remove(String tile) {
-            MetricsLogger.action(getContext(), MetricsLogger.TUNER_QS_REMOVE, tile);
-            List<String> tiles = new ArrayList<>(mTileSpecs);
-            tiles.remove(tile);
-            setTiles(tiles);
-        }
-
-        public void add(String tile) {
-            MetricsLogger.action(getContext(), MetricsLogger.TUNER_QS_ADD, tile);
-            List<String> tiles = new ArrayList<>(mTileSpecs);
-            tiles.add(tile);
-            setTiles(tiles);
-        }
-
-      public void reset() {
-            Secure.putStringForUser(getContext().getContentResolver(), TILES_SETTING,
-                    getContext().getString(R.string.quick_settings_tiles_reset),
-                    ActivityManager.getCurrentUser());
-        }
-        
-
-        private void setTiles(List<String> tiles) {
-            Secure.putStringForUser(getContext().getContentResolver(), TILES_SETTING,
-                    TextUtils.join(",", tiles), ActivityManager.getCurrentUser());
-        }
-
-        public void showAddDialog() {
-            List<String> tiles = mTileSpecs;
-            int numBroadcast = 0;
-            for (int i = 0; i < tiles.size(); i++) {
-                if (tiles.get(i).startsWith(IntentTile.PREFIX)) {
-                    numBroadcast++;
-                }
-            }
-            String[] defaults =
-                getContext().getString(R.string.quick_settings_tiles_default).split(",");
-            final String[] available = new String[defaults.length + 1
-                                                  - (tiles.size() - numBroadcast)];
-            final String[] availableTiles = new String[available.length];
-            int index = 0;
-            for (int i = 0; i < defaults.length; i++) {
-                if (tiles.contains(defaults[i])) {
-                    continue;
-                }
-                int resource = getLabelResource(defaults[i]);
-                if (resource != 0) {
-                    availableTiles[index] = defaults[i];
-                    available[index++] = getContext().getString(resource);
-                } else {
-                    availableTiles[index] = defaults[i];
-                    available[index++] = defaults[i];
-                }
-            }
-            new AlertDialog.Builder(getContext())
-                    .setTitle(R.string.add_tile)
-                    .setItems(available, new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            if (which < available.length - 1) {
-                                add(availableTiles[which]);
-                            }
-                        }
-                    }).show();
-        }
-
-        private boolean isValid(String action) {
-            for (int i = 0; i < action.length(); i++) {
-                char c = action.charAt(i);
-                if (!Character.isAlphabetic(c) && !Character.isDigit(c) && c != '.') {
-                    return false;
-                }
-            }
-            return true;
-        }
-
         private static class BlankSecurityController implements SecurityController {
             @Override
             public boolean hasDeviceOwner() {
@@ -401,8 +238,7 @@ public class QsTuner extends Fragment implements Callback {
         }
     }
 
-    private static class DraggableTile extends QSTile<QSTile.State>
-            implements DropListener {
+    public static class DraggableTile extends QSTile<QSTile.State> {
         private String mSpec;
         private QSTileView mView;
 
@@ -419,6 +255,11 @@ public class QsTuner extends Fragment implements Callback {
         }
 
         @Override
+        public boolean hasDualTargetsDetails() {
+            return "wifi".equals(mSpec) || "bt".equals(mSpec);
+        }
+
+        @Override
         public void setListening(boolean listening) {
         }
 
@@ -439,7 +280,7 @@ public class QsTuner extends Fragment implements Callback {
         }
 
         private String getLabel() {
-            int resource = getLabelResource(mSpec);
+            int resource = QSTileHost.getLabelResource(mSpec);
             if (resource != 0) {
                 return mContext.getString(resource);
             }
@@ -467,44 +308,6 @@ public class QsTuner extends Fragment implements Callback {
             else if (mSpec.equals("cast")) return R.drawable.ic_qs_cast_on;
             else if (mSpec.equals("hotspot")) return R.drawable.ic_hotspot_enable;
             else if (mSpec.equals("adb_network")) return R.drawable.ic_qs_network_adb_on;
-            else if (mSpec.equals("compass")) return R.drawable.ic_qs_compass_on;
-	    else if (mSpec.equals("nfc")) return R.drawable.ic_qs_nfc_on;
-	    else if (mSpec.equals("profiles")) return R.drawable.ic_qs_profiles_on;
-	    else if (mSpec.equals("sync")) return R.drawable.ic_qs_sync_on;
-	    else if (mSpec.equals("volume_panel")) return R.drawable.ic_qs_volume_panel;
-	    else if (mSpec.equals("usb_tether")) return R.drawable.ic_qs_usb_tether_on;
-	    else if (mSpec.equals("screen_timeout")) return R.drawable.ic_qs_screen_timeout_short_avd;
-	    else if (mSpec.equals("performance")) return R.drawable.ic_qs_perf_profile;
-	    else if (mSpec.equals("ambient_display")) return R.drawable.ic_qs_ambientdisplay_on;
-	    else if (mSpec.equals("live_display")) return R.drawable.ic_livedisplay_auto;
-	    else if (mSpec.equals("music")) return R.drawable.ic_qs_media_play;
-	    else if (mSpec.equals("brightness")) return R.drawable.ic_qs_brightness_auto_on;
-	    else if (mSpec.equals("screen_off")) return R.drawable.ic_qs_power;
-	    else if (mSpec.equals("screenshot")) return R.drawable.ic_qs_screenshot;
-	    else if (mSpec.equals("expanded_desktop")) return R.drawable.ic_qs_expanded_desktop;
-	    else if (mSpec.equals("reboot")) return R.drawable.ic_qs_reboot;
-	    else if (mSpec.equals("configurations")) return R.drawable.ic_rr_tools;
-	    else if (mSpec.equals("heads_up")) return R.drawable.ic_qs_heads_up_on;
-	    else if (mSpec.equals("lte")) return R.drawable.ic_qs_lte_on;
-	    else if (mSpec.equals("themes")) return R.drawable.ic_qs_themes;
-	    else if (mSpec.equals("navbar")) return R.drawable.ic_qs_navbar_on;
-	    else if (mSpec.equals("appcirclebar")) return R.drawable.ic_qs_appcirclebar_on;
-	    else if (mSpec.equals("kernel_adiutor")) return R.drawable.ic_qs_kernel_adiutor;	
-	    else if (mSpec.equals("screenrecord")) return R.drawable.ic_qs_screenrecord;	
-	    else if (mSpec.equals("gesture_anywhere")) return R.drawable.ic_qs_gestures_on;
-	    else if (mSpec.equals("battery_saver")) return R.drawable.ic_qs_battery_saver_on;
-	    else if (mSpec.equals("power_menu")) return R.drawable.ic_qs_power_menu;
-	    else if (mSpec.equals("app_picker")) return R.drawable.ic_qs_app_picker;
-	    else if (mSpec.equals("kill_app")) return R.drawable.ic_app_kill;
-	    else if (mSpec.equals("caffeine")) return R.drawable.ic_qs_caffeine_on;
-	    else if (mSpec.equals("hw_keys")) return R.drawable.ic_qs_hwkeys_on;
-	    else if (mSpec.equals("sound")) return R.drawable.ic_qs_ringer_silent;
-	    else if (mSpec.equals("lockscreen")) return R.drawable.ic_qs_lock_screen_on;
-	    else if (mSpec.equals("pulse")) return R.drawable.ic_qs_pulse;
-	    else if (mSpec.equals("pie")) return R.drawable.ic_qs_pie;
-	    else if (mSpec.equals("float_mode")) return R.drawable.ic_qs_floating_on;
-	    else if (mSpec.equals("visualizer")) return R.drawable.ic_qs_visualizer_static;
-	    else if (mSpec.equals("halo")) return R.drawable.ic_notify_halo_normal;
             return R.drawable.android;
         }
 
@@ -522,81 +325,19 @@ public class QsTuner extends Fragment implements Callback {
         }
 
         @Override
-        public void onDrop(String sourceText) {
-            ((CustomHost) mHost).replace(mSpec, sourceText);
-        }
-
-    }
-
-    private class DragHelper implements OnDragListener {
-
-        private final View mView;
-        private final DropListener mListener;
-
-        public DragHelper(View view, DropListener dropListener) {
-            mView = view;
-            mListener = dropListener;
-            mView.setOnDragListener(this);
-        }
-
-        @Override
-        public boolean onDrag(View v, DragEvent event) {
-            switch (event.getAction()) {
-                case DragEvent.ACTION_DRAG_ENTERED:
-                    mView.setBackgroundColor(0x77ffffff);
-                    break;
-                case DragEvent.ACTION_DRAG_ENDED:
-                    stopDrag();
-                case DragEvent.ACTION_DRAG_EXITED:
-                    mView.setBackgroundColor(0x0);
-                    break;
-                case DragEvent.ACTION_DROP:
-                    stopDrag();
-                    String text = event.getClipData().getItemAt(0).getText().toString();
-                    mListener.onDrop(text);
-                    break;
-            }
-            return true;
+        public String toString() {
+            return mSpec;
         }
-
     }
 
-    public interface DropListener {
-        void onDrop(String sourceText);
-    }
+    private class DraggableQsPanel extends QSDragPanel {
 
-    private class DraggableQsPanel extends QSPanel implements OnTouchListener {
         public DraggableQsPanel(Context context) {
             super(context);
-            mBrightnessView.setVisibility(View.GONE);
-        }
 
-        @Override
-        protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-            for (TileRecord r : mRecords) {
-                new DragHelper(r.tileView, (DraggableTile) r.tile);
-                r.tileView.setTag(r.tile);
-                r.tileView.setOnTouchListener(this);
-
-                for (int i = 0; i < r.tileView.getChildCount(); i++) {
-                    r.tileView.getChildAt(i).setClickable(false);
-                }
-            }
+            setEditing(true);
         }
 
-        @Override
-        public boolean onTouch(View v, MotionEvent event) {
-            switch (event.getAction()) {
-                case MotionEvent.ACTION_DOWN:
-                    String tileSpec = (String) ((DraggableTile) v.getTag()).mSpec;
-                    ClipData data = ClipData.newPlainText(tileSpec, tileSpec);
-                    v.startDrag(data, new View.DragShadowBuilder(v), null, 0);
-                    onStartDrag();
-                    return true;
-            }
-            return false;
-        }
     }
 
 }
diff --git a/packages/SystemUI/src/com/android/systemui/tuner/TunerFragment.java b/packages/SystemUI/src/com/android/systemui/tuner/TunerFragment.java
index a3483e5..0bc663b 100644
--- a/packages/SystemUI/src/com/android/systemui/tuner/TunerFragment.java
+++ b/packages/SystemUI/src/com/android/systemui/tuner/TunerFragment.java
@@ -46,7 +46,6 @@ public class TunerFragment extends PreferenceFragment {
 
     private static final String KEY_STATUSBAR_BLACKLIST = "statusbar_icon_blacklist";
     private static final String KEY_DEMO_MODE = "demo_mode";
-    private static final String KEY_QS_TUNER = "qs_tuner";
 
     public static final String SETTING_SEEN_TUNER_WARNING = "seen_tuner_warning";
 
@@ -80,16 +79,6 @@ public class TunerFragment extends PreferenceFragment {
                 return true;
             }
         });
-        findPreference(KEY_QS_TUNER).setOnPreferenceClickListener(new OnPreferenceClickListener() {
-            @Override
-            public boolean onPreferenceClick(Preference preference) {
-                FragmentTransaction ft = getFragmentManager().beginTransaction();
-                ft.replace(android.R.id.content, new QsTuner(), "QsTuner");
-                ft.addToBackStack(null);
-                ft.commit();
-                return true;
-            }
-        });
         if (Settings.Secure.getInt(getContext().getContentResolver(), SETTING_SEEN_TUNER_WARNING,
                 0) == 0) {
             new AlertDialog.Builder(getContext())
diff --git a/packages/SystemUI/src/com/android/systemui/tuner/TunerService.java b/packages/SystemUI/src/com/android/systemui/tuner/TunerService.java
index 9c2b3a9..3e7477c 100644
--- a/packages/SystemUI/src/com/android/systemui/tuner/TunerService.java
+++ b/packages/SystemUI/src/com/android/systemui/tuner/TunerService.java
@@ -31,6 +31,7 @@ import android.os.Handler;
 import android.os.Looper;
 import android.os.UserHandle;
 import android.provider.Settings;
+import android.text.TextUtils;
 import android.util.ArrayMap;
 
 import com.android.systemui.BatteryMeterView;
@@ -40,6 +41,7 @@ import com.android.systemui.SystemUI;
 import com.android.systemui.SystemUIApplication;
 import com.android.systemui.settings.CurrentUserTracker;
 import com.android.systemui.statusbar.phone.SystemUIDialog;
+import cyanogenmod.providers.CMSettings;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -84,17 +86,31 @@ public class TunerService extends SystemUI {
     }
 
     private void addTunable(Tunable tunable, String key) {
+        addTunableByProvider(tunable, key, false);
+    }
+
+    public void addTunableByProvider(Tunable tunable, String key, boolean cm) {
         if (!mTunableLookup.containsKey(key)) {
             mTunableLookup.put(key, new ArrayList<Tunable>());
         }
         mTunableLookup.get(key).add(tunable);
-        Uri uri = Settings.Secure.getUriFor(key);
+        Uri uri;
+        if (!cm) {
+            uri = Settings.Secure.getUriFor(key);
+        } else {
+            uri = CMSettings.Secure.getUriFor(key);
+        }
         if (!mListeningUris.containsKey(uri)) {
             mListeningUris.put(uri, key);
             mContentResolver.registerContentObserver(uri, false, mObserver, mCurrentUser);
         }
         // Send the first state.
-        String value = Settings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+        String value;
+        if (cm) {
+            value = CMSettings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+        } else {
+            value = Settings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+        }
         tunable.onTuningChanged(key, value);
     }
 
@@ -116,7 +132,18 @@ public class TunerService extends SystemUI {
 
     public void reloadSetting(Uri uri) {
         String key = mListeningUris.get(uri);
-        String value = Settings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+
+        // Handle possible null keys
+        if (TextUtils.isEmpty(key)) {
+            return;
+        }
+
+        String value;
+        if (uri.getAuthority().equals(CMSettings.AUTHORITY)) {
+            value = CMSettings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+        } else {
+            value = Settings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+        }
         for (Tunable tunable : mTunableLookup.get(key)) {
             tunable.onTuningChanged(key, value);
         }
@@ -124,8 +151,14 @@ public class TunerService extends SystemUI {
 
     private void reloadAll() {
         for (String key : mTunableLookup.keySet()) {
-            String value = Settings.Secure.getStringForUser(mContentResolver, key,
-                    mCurrentUser);
+            String value;
+            Uri uri = CMSettings.Secure.getUriFor(key);
+            if (uri.getAuthority() != null && uri.getAuthority().equals(CMSettings.AUTHORITY)) {
+                value = CMSettings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);
+            } else {
+                value = Settings.Secure.getStringForUser(mContentResolver, key,
+                        mCurrentUser);
+            }
             for (Tunable tunable : mTunableLookup.get(key)) {
                 tunable.onTuningChanged(key, value);
             }
@@ -140,7 +173,12 @@ public class TunerService extends SystemUI {
         mContext.sendBroadcast(intent);
 
         for (String key : mTunableLookup.keySet()) {
-            Settings.Secure.putString(mContentResolver, key, null);
+            Uri uri = CMSettings.Secure.getUriFor(key);
+            if (uri.getAuthority() != null && uri.getAuthority().equals(CMSettings.AUTHORITY)) {
+                CMSettings.Secure.putString(mContentResolver, key, null);
+            } else {
+                Settings.Secure.putString(mContentResolver, key, null);
+            }
         }
     }
 
@@ -180,6 +218,7 @@ public class TunerService extends SystemUI {
                 // Tell the tuner (in main SysUI process) to clear all its settings.
                 context.sendBroadcast(new Intent(TunerService.ACTION_CLEAR));
                 // Disable access to tuner.
+                TunerService.setTunerEnabled(context, false);
                 // Make them sit through the warning dialog again.
                 Settings.Secure.putInt(context.getContentResolver(),
                         TunerFragment.SETTING_SEEN_TUNER_WARNING, 0);
@@ -191,8 +230,27 @@ public class TunerService extends SystemUI {
         dialog.show();
     }
 
+    public static final void setTunerEnabled(Context context, boolean enabled) {
+        userContext(context).getPackageManager().setComponentEnabledSetting(
+                new ComponentName(context, TunerActivity.class),
+                enabled ? PackageManager.COMPONENT_ENABLED_STATE_ENABLED
+                        : PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
+                        PackageManager.DONT_KILL_APP);
+    }
+
     public static final boolean isTunerEnabled(Context context) {
-        return true;
+        return userContext(context).getPackageManager().getComponentEnabledSetting(
+                new ComponentName(context, TunerActivity.class))
+                == PackageManager.COMPONENT_ENABLED_STATE_ENABLED;
+    }
+
+    private static Context userContext(Context context) {
+        try {
+            return context.createPackageContextAsUser(context.getPackageName(), 0,
+                    new UserHandle(ActivityManager.getCurrentUser()));
+        } catch (NameNotFoundException e) {
+            return context;
+        }
     }
 
     private class Observer extends ContentObserver {
diff --git a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java
index 3cb33db..9fda531 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialog.java
@@ -36,9 +36,6 @@ import android.graphics.Rect;
 import android.graphics.drawable.AnimatedVectorDrawable;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
-import android.graphics.drawable.GradientDrawable;
-import android.graphics.drawable.GradientDrawable.Orientation;
-import android.graphics.PorterDuff.Mode;
 import android.media.AudioManager;
 import android.media.AudioSystem;
 import android.os.Debug;
@@ -78,8 +75,6 @@ import com.android.systemui.statusbar.policy.ZenModeController;
 import com.android.systemui.volume.VolumeDialogController.State;
 import com.android.systemui.volume.VolumeDialogController.StreamState;
 
-import com.android.internal.util.rr.VolumeDialogColorHelper;
-
 import java.io.PrintWriter;
 import java.util.ArrayList;
 import java.util.List;
@@ -136,18 +131,6 @@ public class VolumeDialog {
     private long mCollapseTime;
     private int mLastActiveStream;
 
-    // Volume dialog alpha
-    private int mVolumeDialogAlpha;
-
-    // Volume dialog stroke
-    private int mVolumeDialogStroke;
-    private int mCustomStrokeColor;
-    private int mCustomStrokeThickness;
-    private int mCustomCornerRadius;
-    private int mCustomDashWidth;
-    private int mCustomDashGap;
-    private GradientDrawable volumeDialogGd;
-
     public VolumeDialog(Context context, int windowType, VolumeDialogController controller,
                         ZenModeController zenModeController, Callback callback) {
         mContext = context;
@@ -188,7 +171,6 @@ public class VolumeDialog {
         mDialogContentView = (ViewGroup) mDialog.findViewById(R.id.volume_dialog_content);
         mExpandButton = (ImageButton) mDialogView.findViewById(R.id.volume_expand_button);
         mExpandButton.setOnClickListener(mClickExpand);
-        volumeDialogGd = new GradientDrawable();
         updateWindowWidthH();
         updateExpandButtonH();
         mLayoutTransition = new LayoutTransition();
@@ -230,9 +212,7 @@ public class VolumeDialog {
         mZenFooter.init(zenModeController);
 
         mAccessibility.init();
-	
-	updateExpandButtonColor();
-	setVolumeAlpha();
+
         controller.addCallback(mControllerCallbackH, mHandler);
         controller.getState();
     }
@@ -278,17 +258,6 @@ public class VolumeDialog {
         mHandler.sendEmptyMessage(H.RECHECK_ALL);
     }
 
-    private void updateExpandButtonColor() {
-	boolean mDialogSwitch = Settings.System.getInt(mContext.getContentResolver(),
-               Settings.System.VOLUME_DIALOG_COLOR_SWITCH, 0) == 1 ;
-        final int mExpandButtonColor = VolumeDialogColorHelper.getExpandButtonColor(mContext);
-	if (mDialogSwitch) {
-        	if (mExpandButton != null) {
-           	    mExpandButton.setColorFilter(mExpandButtonColor, Mode.MULTIPLY);
-       		   }
-	  }
-    }
-
     private void addRow(int stream, int iconRes, int iconMuteRes, boolean important) {
         final VolumeRow row = initRow(stream, iconRes, iconMuteRes, important);
         if (!mRows.isEmpty()) {
@@ -427,14 +396,8 @@ public class VolumeDialog {
                 return false;
             }
         });
-	boolean mDialogSwitch = Settings.System.getInt(mContext.getContentResolver(),
-               Settings.System.VOLUME_DIALOG_COLOR_SWITCH, 0) == 1 ;
-	final ColorStateList iconColor = VolumeDialogColorHelper.getIconColorList(mContext);
         row.icon = (ImageButton) row.view.findViewById(R.id.volume_row_icon);
         row.icon.setImageResource(iconRes);
-	if(mDialogSwitch) {
-	row.icon.setImageTintList(iconColor);
-	}
         row.icon.setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -503,11 +466,9 @@ public class VolumeDialog {
     private int computeTimeoutH() {
         if (mAccessibility.mFeedbackEnabled) return 20000;
         if (mSafetyWarning != null) return 5000;
-        int mVolumeDialogTimeout = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_TIMEOUT, 3000);
-        if (mExpanded || mExpandButtonAnimationRunning) return mVolumeDialogTimeout;
-        if (mActiveStream == AudioManager.STREAM_MUSIC) return mVolumeDialogTimeout;
-        return mVolumeDialogTimeout;
+        if (mExpanded || mExpandButtonAnimationRunning) return 5000;
+        if (mActiveStream == AudioManager.STREAM_MUSIC) return 1500;
+        return 3000;
     }
 
     protected void dismissH(int reason) {
@@ -612,10 +573,6 @@ public class VolumeDialog {
         final VolumeRow activeRow = getActiveRow();
         updateFooterH();
         updateExpandButtonH();
-        setVolumeStroke();
-	updateExpandButtonColor();
-	updateBgGradientOrientation();
-        setVolumeAlpha();
         if (!mShowing) {
             trimObsoleteH();
         }
@@ -748,8 +705,7 @@ public class VolumeDialog {
 
         // update slider max
         final int max = ss.levelMax * 100;
-        final boolean maxChanged = max != row.slider.getMax();
-        if (maxChanged) {
+        if (max != row.slider.getMax()) {
             row.slider.setMax(max);
         }
 
@@ -805,7 +761,7 @@ public class VolumeDialog {
         final boolean enableSlider = !zenMuted;
         final int vlevel = row.ss.muted && (isRingVibrate || !isRingStream && !zenMuted) ? 0
                 : row.ss.level;
-        updateVolumeRowSliderH(row, enableSlider, vlevel, maxChanged);
+        updateVolumeRowSliderH(row, enableSlider, vlevel);
     }
 
     private void updateVolumeRowHeaderVisibleH(VolumeRow row) {
@@ -818,30 +774,18 @@ public class VolumeDialog {
     }
 
     private void updateVolumeRowSliderTintH(VolumeRow row, boolean isActive) {
-        final ColorStateList sliderIconColor = VolumeDialogColorHelper.getSliderIconColorList(mContext);
-        final ColorStateList sliderColor = VolumeDialogColorHelper.getSliderColorList(mContext);
-        final ColorStateList sliderInactiveColor = VolumeDialogColorHelper.getSliderInactiveColorList(mContext);
-	boolean mDialogSwitch = Settings.System.getInt(mContext.getContentResolver(),
-               Settings.System.VOLUME_DIALOG_COLOR_SWITCH, 0) == 1 ;
         if (isActive && mExpanded) {
             row.slider.requestFocus();
         }
         final ColorStateList tint = isActive && row.slider.isEnabled() ? mActiveSliderTint
                 : mInactiveSliderTint;
-	if (mDialogSwitch) {
-        row.cachedSliderTint = sliderColor;
-        row.slider.setProgressTintList(sliderColor);
-        row.slider.setProgressBackgroundTintList(sliderInactiveColor);
-        row.slider.setThumbTintList(sliderIconColor);
-	} else {
         if (tint == row.cachedSliderTint) return;
         row.cachedSliderTint = tint;
         row.slider.setProgressTintList(tint);
         row.slider.setThumbTintList(tint);
-	}
     }
 
-    private void updateVolumeRowSliderH(VolumeRow row, boolean enable, int vlevel, boolean maxChanged) {
+    private void updateVolumeRowSliderH(VolumeRow row, boolean enable, int vlevel) {
         row.slider.setEnabled(enable);
         updateVolumeRowSliderTintH(row, row.stream == mActiveStream);
         if (row.tracking) {
@@ -865,7 +809,7 @@ public class VolumeDialog {
             }
         }
         final int newProgress = vlevel * 100;
-        if (progress != newProgress || maxChanged) {
+        if (progress != newProgress) {
             if (mShowing && rowVisible) {
                 // animate!
                 if (row.anim != null && row.anim.isRunning()
@@ -1222,84 +1166,4 @@ public class VolumeDialog {
         void onZenSettingsClicked();
         void onZenPrioritySettingsClicked();
     }
-
-    private void setVolumeAlpha() {
-        mVolumeDialogAlpha = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSPARENT_VOLUME_DIALOG, 255);
-            if (mDialogView != null) {
-                mDialogView.getBackground().setAlpha(mVolumeDialogAlpha);
-            }
-    }
-
-     public void setVolumeStroke() {
-        mVolumeDialogStroke = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_STROKE, 0);
-        mCustomStrokeColor = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_STROKE_COLOR, mContext.getResources().getColor(R.color.system_accent_color));
-        mCustomStrokeThickness = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_STROKE_THICKNESS, 4);
-        mCustomCornerRadius = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_CORNER_RADIUS, 2);
-        mCustomDashWidth = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_STROKE_DASH_WIDTH, 0);
-        mCustomDashGap = Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.VOLUME_DIALOG_STROKE_DASH_GAP, 10);
-
-	boolean mDialogSwitch = Settings.System.getInt(mContext.getContentResolver(),
-               Settings.System.VOLUME_DIALOG_COLOR_SWITCH, 0) == 1 ;
-
-        if (mVolumeDialogStroke == 0) { // Disable by setting border thickness to 0
-	    if (mDialogSwitch) {
-            volumeDialogGd.setColors(VolumeDialogColorHelper.getBackgroundColors(mContext));
-	    } else {
-	    volumeDialogGd.setColor(mContext.getResources().getColor(R.color.system_primary_color));
-	    volumeDialogGd.setStroke(0, mContext.getResources().getColor(R.color.system_accent_color));
-   	    }
-	    volumeDialogGd.setStroke(0, mCustomStrokeColor);
-            volumeDialogGd.setCornerRadius(mCustomCornerRadius);
-            mDialogView.setBackground(volumeDialogGd);
-        } else if (mVolumeDialogStroke == 1) { // use accent color for border
-	    if (mDialogSwitch) {
-            volumeDialogGd.setColors(VolumeDialogColorHelper.getBackgroundColors(mContext));
-	    } else {
-	    volumeDialogGd.setColor(mContext.getResources().getColor(R.color.system_primary_color));
-	    }
-            volumeDialogGd.setStroke(mCustomStrokeThickness, mContext.getResources().getColor(R.color.system_accent_color),
-                    mCustomDashWidth, mCustomDashGap);
-        } else if (mVolumeDialogStroke == 2) { // use custom border color
-	    if (mDialogSwitch) {
-            volumeDialogGd.setColors(VolumeDialogColorHelper.getBackgroundColors(mContext));
-	    } else {
-	    volumeDialogGd.setColor(mContext.getResources().getColor(R.color.system_primary_color));
-	    }
-            volumeDialogGd.setStroke(mCustomStrokeThickness, mCustomStrokeColor, mCustomDashWidth, mCustomDashGap);
-        }
-
-        if (mVolumeDialogStroke != 0) {
-            volumeDialogGd.setCornerRadius(mCustomCornerRadius);
-            mDialogView.setBackground(volumeDialogGd);
-        }
-}
-
-  private void updateBgGradientOrientation() {
-        Orientation orientation = Orientation.TOP_BOTTOM;
-        int mBgOrientation =
-                VolumeDialogColorHelper.getBgGradientOrientation(mContext);
-        if (mBgOrientation == 45) {
-            orientation = Orientation.BL_TR;
-        } else if (mBgOrientation == 90) {
-            orientation = Orientation.BOTTOM_TOP;
-        } else if (mBgOrientation == 135) {
-            orientation = Orientation.BR_TL;
-        } else if (mBgOrientation == 180) {
-            orientation = Orientation.RIGHT_LEFT;
-        } else if (mBgOrientation == 225) {
-            orientation = Orientation.TR_BL;
-        } else if (mBgOrientation == 270) {
-            orientation = Orientation.TOP_BOTTOM;
-        } else if (mBgOrientation == 315) {
-            orientation = Orientation.TL_BR;
-        }
-        volumeDialogGd.setOrientation(orientation);
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogComponent.java b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogComponent.java
index 62161af..742b18b 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogComponent.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogComponent.java
@@ -19,24 +19,19 @@ package com.android.systemui.volume;
 import android.content.Context;
 import android.content.Intent;
 import android.content.res.Configuration;
-import android.content.ContentResolver;
 import android.media.AudioManager;
 import android.media.VolumePolicy;
 import android.os.Bundle;
 import android.os.Handler;
-import android.net.Uri;
 import android.provider.Settings;
 import android.view.WindowManager;
 
-
 import com.android.systemui.SystemUI;
 import com.android.systemui.keyguard.KeyguardViewMediator;
 import com.android.systemui.qs.tiles.DndTile;
 import com.android.systemui.statusbar.phone.PhoneStatusBar;
 import com.android.systemui.statusbar.policy.ZenModeController;
 
-import com.android.systemui.cm.UserContentObserver;
-
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
 
@@ -49,8 +44,6 @@ public class VolumeDialogComponent implements VolumeComponent {
     private final VolumeDialogController mController;
     private final ZenModeController mZenModeController;
     private VolumeDialog mDialog;
-    private SettingsObserver mSettingsObserver;
-    private boolean mDialogSwitch;
     private final VolumePolicy mVolumePolicy = new VolumePolicy(
             true,  // volumeDownToEnterSilent
             true,  // volumeUpToExitSilent
@@ -71,8 +64,6 @@ public class VolumeDialogComponent implements VolumeComponent {
         mZenModeController = zen;
         mDialog = new VolumeDialog(context, WindowManager.LayoutParams.TYPE_VOLUME_OVERLAY,
                 mController, zen, mVolumeDialogCallback);
-	mSettingsObserver = new SettingsObserver(new Handler());
-	mSettingsObserver.observe();
         applyConfiguration();
     }
 
@@ -154,50 +145,4 @@ public class VolumeDialogComponent implements VolumeComponent {
                 mController, mZenModeController, mVolumeDialogCallback);
         applyConfiguration();
     }
-
-    class SettingsObserver extends UserContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-            
-        @Override
-        protected void observe() {
-        super.observe();
-        ContentResolver resolver = mContext.getContentResolver();
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.VOLUME_DIALOG_COLOR_SWITCH),
-                    false, this);
-        resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.VOLUME_DIALOG_ICON_COLOR),
-                    false, this);
-            update();
-        }
-
-
-	@Override
-        public void onChange(boolean selfChange, Uri uri) {
-        if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.VOLUME_DIALOG_COLOR_SWITCH))) {
-               	   recreateDialog();
-        } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.VOLUME_DIALOG_ICON_COLOR))) {
-               	   recreateDialog();
-        } 
-	 update();
-	}
-
-        @Override
-        protected void unobserve() {
-            super.unobserve();
-
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.unregisterContentObserver(this);
-        }
-
-        @Override
-        public void update() {
-	mDialogSwitch = Settings.System.getInt(mContext.getContentResolver(),
-               Settings.System.VOLUME_DIALOG_COLOR_SWITCH, 0) == 1 ;
-        }
-    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogController.java b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogController.java
index 1d25c1f..9269c1c 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogController.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogController.java
@@ -872,7 +872,6 @@ public class VolumeDialogController {
             filter.addAction(AudioManager.RINGER_MODE_CHANGED_ACTION);
             filter.addAction(AudioManager.INTERNAL_RINGER_MODE_CHANGED_ACTION);
             filter.addAction(AudioManager.STREAM_MUTE_CHANGED_ACTION);
-            filter.addAction(AudioManager.VOLUME_STEPS_CHANGED_ACTION);
             filter.addAction(NotificationManager.ACTION_EFFECTS_SUPPRESSOR_CHANGED);
             filter.addAction(Intent.ACTION_CONFIGURATION_CHANGED);
             filter.addAction(Intent.ACTION_SCREEN_OFF);
@@ -922,8 +921,6 @@ public class VolumeDialogController {
                 if (D.BUG) Log.d(TAG, "onReceive STREAM_MUTE_CHANGED_ACTION stream=" + stream
                         + " muted=" + muted);
                 changed = updateStreamMuteW(stream, muted);
-            } else if (action.equals(AudioManager.VOLUME_STEPS_CHANGED_ACTION)) {
-                getState();
             } else if (action.equals(NotificationManager.ACTION_EFFECTS_SUPPRESSOR_CHANGED)) {
                 if (D.BUG) Log.d(TAG, "onReceive ACTION_EFFECTS_SUPPRESSOR_CHANGED");
                 changed = updateEffectsSuppressorW(mNoMan.getEffectsSuppressor());
diff --git a/packages/SystemUI/src/com/android/systemui/volume/ZenFooter.java b/packages/SystemUI/src/com/android/systemui/volume/ZenFooter.java
index cda21fb..0fb80c0 100644
--- a/packages/SystemUI/src/com/android/systemui/volume/ZenFooter.java
+++ b/packages/SystemUI/src/com/android/systemui/volume/ZenFooter.java
@@ -18,7 +18,6 @@ package com.android.systemui.volume;
 import android.animation.LayoutTransition;
 import android.animation.ValueAnimator;
 import android.content.Context;
-import android.graphics.PorterDuff.Mode;
 import android.provider.Settings.Global;
 import android.service.notification.ZenModeConfig;
 import android.util.AttributeSet;
@@ -27,13 +26,9 @@ import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
-import android.provider.Settings;
-
 import com.android.systemui.R;
 import com.android.systemui.statusbar.policy.ZenModeController;
 
-import com.android.internal.util.rr.VolumeDialogColorHelper;
-
 import java.util.Objects;
 
 /**
@@ -53,8 +48,6 @@ public class ZenFooter extends LinearLayout {
     private ZenModeConfig mConfig;
     private ZenModeController mController;
 
-    public boolean mDialogSwitch;
-
     public ZenFooter(Context context, AttributeSet attrs) {
         super(context, attrs);
         mContext = context;
@@ -131,7 +124,6 @@ public class ZenFooter extends LinearLayout {
 
     public void update() {
         mIcon.setImageResource(isZenNone() ? R.drawable.ic_dnd_total_silence : R.drawable.ic_dnd);
-	updatecolor(mIcon);
         final String line1 =
                 isZenPriority() ? mContext.getString(R.string.interruption_level_priority)
                 : isZenAlarms() ? mContext.getString(R.string.interruption_level_alarms)
@@ -155,15 +147,5 @@ public class ZenFooter extends LinearLayout {
     public void cleanup() {
         mController.removeCallback(mZenModeCallback);
     }
-  
-    void updatecolor(ImageView icon) {
-	boolean mDialogSwitch = Settings.System.getInt(mContext.getContentResolver(),
-               Settings.System.VOLUME_DIALOG_COLOR_SWITCH, 0) == 1 ;
-	int mExpandButtonColor = VolumeDialogColorHelper.getExpandButtonColor(mContext);
-        if(mDialogSwitch) {
-			if(icon != null) {
-			icon.setColorFilter(mExpandButtonColor, Mode.MULTIPLY);
-			}
-   	}
-   }
+
 }
diff --git a/packages/SystemUI/src/com/viewpagerindicator/CirclePageIndicator.java b/packages/SystemUI/src/com/viewpagerindicator/CirclePageIndicator.java
new file mode 100644
index 0000000..4286983
--- /dev/null
+++ b/packages/SystemUI/src/com/viewpagerindicator/CirclePageIndicator.java
@@ -0,0 +1,527 @@
+/*
+ * Copyright (C) 2011 Patrik Akerfeldt
+ * Copyright (C) 2011 Jake Wharton
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.viewpagerindicator;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Paint.Style;
+import android.graphics.drawable.Drawable;
+import android.support.v4.view.MotionEventCompat;
+import android.support.v4.view.ViewConfigurationCompat;
+import android.support.v4.view.ViewPager;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewConfiguration;
+import com.android.systemui.R;
+
+import static android.graphics.Paint.ANTI_ALIAS_FLAG;
+import static android.widget.LinearLayout.HORIZONTAL;
+import static android.widget.LinearLayout.VERTICAL;
+
+/**
+ * Draws circles (one for each view). The current view position is filled and
+ * others are only stroked.
+ */
+public class CirclePageIndicator extends View implements PageIndicator {
+    private static final int INVALID_POINTER = -1;
+
+    private float mRadius;
+    private final Paint mPaintPageFill = new Paint(ANTI_ALIAS_FLAG);
+    private final Paint mPaintStroke = new Paint(ANTI_ALIAS_FLAG);
+    private final Paint mPaintFill = new Paint(ANTI_ALIAS_FLAG);
+    private ViewPager mViewPager;
+    private ViewPager.OnPageChangeListener mListener;
+    private int mCurrentPage;
+    private int mSnapPage;
+    private float mPageOffset;
+    private int mScrollState;
+    private int mOrientation;
+    private boolean mCentered;
+    private boolean mSnap;
+
+    private int mTouchSlop;
+    private float mLastMotionX = -1;
+    private int mActivePointerId = INVALID_POINTER;
+    private boolean mIsDragging;
+
+    private Bitmap mSettingsIcon;
+    private boolean mEditing;
+
+    public CirclePageIndicator(Context context) {
+        this(context, null);
+    }
+
+    public CirclePageIndicator(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public CirclePageIndicator(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        if (isInEditMode()) return;
+
+        //Load defaults from resources
+        final Resources res = getResources();
+        final int defaultPageColor = res.getColor(R.color.default_circle_indicator_page_color);
+        final int defaultFillColor = res.getColor(R.color.default_circle_indicator_fill_color);
+        final int defaultOrientation = res.getInteger(R.integer.default_circle_indicator_orientation);
+        final int defaultStrokeColor = res.getColor(R.color.default_circle_indicator_stroke_color);
+        final float defaultStrokeWidth = res.getDimension(R.dimen.default_circle_indicator_stroke_width);
+        final float defaultRadius = res.getDimension(R.dimen.default_circle_indicator_radius);
+        final boolean defaultCentered = res.getBoolean(R.bool.default_circle_indicator_centered);
+        final boolean defaultSnap = res.getBoolean(R.bool.default_circle_indicator_snap);
+
+        //Retrieve styles attributes
+        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CirclePageIndicator, defStyle, 0);
+
+        mCentered = a.getBoolean(R.styleable.CirclePageIndicator_centered, defaultCentered);
+        mOrientation = a.getInt(R.styleable.CirclePageIndicator_android_orientation, defaultOrientation);
+        mPaintPageFill.setStyle(Style.FILL);
+        mPaintPageFill.setColor(a.getColor(R.styleable.CirclePageIndicator_pageColor, defaultPageColor));
+        mPaintStroke.setStyle(Style.STROKE);
+        mPaintStroke.setColor(a.getColor(R.styleable.CirclePageIndicator_strokeColor, defaultStrokeColor));
+        mPaintStroke.setStrokeWidth(a.getDimension(R.styleable.CirclePageIndicator_strokeWidth, defaultStrokeWidth));
+        mPaintFill.setStyle(Style.FILL);
+        mPaintFill.setColor(a.getColor(R.styleable.CirclePageIndicator_indicatorFillColor, defaultFillColor));
+        mRadius = a.getDimension(R.styleable.CirclePageIndicator_radius, defaultRadius);
+        mSnap = a.getBoolean(R.styleable.CirclePageIndicator_snap, defaultSnap);
+
+        Drawable background = a.getDrawable(R.styleable.CirclePageIndicator_android_background);
+        if (background != null) {
+            setBackgroundDrawable(background);
+        }
+
+        a.recycle();
+
+        final ViewConfiguration configuration = ViewConfiguration.get(context);
+        mTouchSlop = ViewConfigurationCompat.getScaledPagingTouchSlop(configuration);
+
+        mSettingsIcon = BitmapFactory.decodeResource(res, R.drawable.ic_mini_settings);
+    }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return false;
+    }
+
+    public void setCentered(boolean centered) {
+        mCentered = centered;
+        invalidate();
+    }
+
+    public boolean isCentered() {
+        return mCentered;
+    }
+
+    public void setPageColor(int pageColor) {
+        mPaintPageFill.setColor(pageColor);
+        invalidate();
+    }
+
+    public int getPageColor() {
+        return mPaintPageFill.getColor();
+    }
+
+    public void setFillColor(int fillColor) {
+        mPaintFill.setColor(fillColor);
+        invalidate();
+    }
+
+    public int getFillColor() {
+        return mPaintFill.getColor();
+    }
+
+    public void setOrientation(int orientation) {
+        switch (orientation) {
+            case HORIZONTAL:
+            case VERTICAL:
+                mOrientation = orientation;
+                requestLayout();
+                break;
+
+            default:
+                throw new IllegalArgumentException("Orientation must be either HORIZONTAL or VERTICAL.");
+        }
+    }
+
+    public int getOrientation() {
+        return mOrientation;
+    }
+
+    public void setStrokeColor(int strokeColor) {
+        mPaintStroke.setColor(strokeColor);
+        invalidate();
+    }
+
+    public int getStrokeColor() {
+        return mPaintStroke.getColor();
+    }
+
+    public void setStrokeWidth(float strokeWidth) {
+        mPaintStroke.setStrokeWidth(strokeWidth);
+        invalidate();
+    }
+
+    public float getStrokeWidth() {
+        return mPaintStroke.getStrokeWidth();
+    }
+
+    public void setRadius(float radius) {
+        mRadius = radius;
+        invalidate();
+    }
+
+    public float getRadius() {
+        return mRadius;
+    }
+
+    public void setSnap(boolean snap) {
+        mSnap = snap;
+        invalidate();
+    }
+
+    public boolean isSnap() {
+        return mSnap;
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+
+        if (mViewPager == null) {
+            return;
+        }
+        final int count = mViewPager.getAdapter().getCount();
+        if (count == 0) {
+            return;
+        }
+
+        if (mCurrentPage >= count) {
+            setCurrentItem(count - 1);
+            return;
+        }
+
+        int longSize;
+        int longPaddingBefore;
+        int longPaddingAfter;
+        int shortPaddingBefore;
+        if (mOrientation == HORIZONTAL) {
+            longSize = getWidth();
+            longPaddingBefore = getPaddingLeft();
+            longPaddingAfter = getPaddingRight();
+            shortPaddingBefore = getPaddingTop();
+        } else {
+            longSize = getHeight();
+            longPaddingBefore = getPaddingTop();
+            longPaddingAfter = getPaddingBottom();
+            shortPaddingBefore = getPaddingLeft();
+        }
+
+        final float threeRadius = mRadius * 3;
+        final float shortOffset = shortPaddingBefore + mRadius;
+        float longOffset = longPaddingBefore + mRadius;
+        if (mCentered) {
+            longOffset += ((longSize - longPaddingBefore - longPaddingAfter) / 2.0f) - ((count * threeRadius) / 2.0f);
+        }
+
+        float dX;
+        float dY;
+
+        float pageFillRadius = mRadius;
+        if (mPaintStroke.getStrokeWidth() > 0) {
+            pageFillRadius -= mPaintStroke.getStrokeWidth() / 2.0f;
+        }
+
+        //Draw stroked circles
+        for (int iLoop = 0; iLoop < count; iLoop++) {
+            float drawLong = longOffset + (iLoop * threeRadius);
+            if (mOrientation == HORIZONTAL) {
+                dX = drawLong;
+                dY = shortOffset;
+            } else {
+                dX = shortOffset;
+                dY = drawLong;
+            }
+            // Only paint fill if not completely transparent
+            if (mPaintPageFill.getAlpha() > 0) {
+                if (mEditing && iLoop == 0) {
+                    canvas.drawBitmap(mSettingsIcon,
+                            (int) (dX - mRadius),
+                            (int) (dY - mRadius),
+                            mPaintPageFill);
+                } else {
+                    canvas.drawCircle(dX, dY, (float) (pageFillRadius / 1.5f), mPaintPageFill);
+                }
+            }
+
+            // Only paint stroke if a stroke width was non-zero
+            if (pageFillRadius != mRadius) {
+                canvas.drawCircle(dX, dY, mRadius, mPaintStroke);
+            }
+        }
+
+        //Draw the filled circle according to the current scroll
+        float cx = (mSnap ? mSnapPage : mCurrentPage) * threeRadius;
+        if (!mSnap) {
+            cx += mPageOffset * threeRadius;
+        }
+        if (mOrientation == HORIZONTAL) {
+            dX = longOffset + cx;
+            dY = shortOffset;
+        } else {
+            dX = shortOffset;
+            dY = longOffset + cx;
+        }
+        canvas.drawCircle(dX, dY, mRadius, mPaintFill);
+    }
+
+    public boolean onTouchEvent(MotionEvent ev) {
+        if (super.onTouchEvent(ev)) {
+            return true;
+        }
+        if ((mViewPager == null) || (mViewPager.getAdapter().getCount() == 0)) {
+            return false;
+        }
+
+        final int action = ev.getAction() & MotionEventCompat.ACTION_MASK;
+        switch (action) {
+            case MotionEvent.ACTION_DOWN:
+                mActivePointerId = MotionEventCompat.getPointerId(ev, 0);
+                mLastMotionX = ev.getX();
+                break;
+
+            case MotionEvent.ACTION_MOVE: {
+                final int activePointerIndex = MotionEventCompat.findPointerIndex(ev, mActivePointerId);
+                final float x = MotionEventCompat.getX(ev, activePointerIndex);
+                final float deltaX = x - mLastMotionX;
+
+                if (!mIsDragging) {
+                    if (Math.abs(deltaX) > mTouchSlop) {
+                        mIsDragging = true;
+                    }
+                }
+
+                if (mIsDragging) {
+                    mLastMotionX = x;
+                    if (mViewPager.isFakeDragging() || mViewPager.beginFakeDrag()) {
+                        mViewPager.fakeDragBy(deltaX);
+                    }
+                }
+
+                break;
+            }
+
+            case MotionEvent.ACTION_CANCEL:
+            case MotionEvent.ACTION_UP:
+                if (!mIsDragging) {
+                    final int count = mViewPager.getAdapter().getCount();
+                    final int width = getWidth();
+                    final float halfWidth = width / 2f;
+                    final float sixthWidth = width / 6f;
+
+                    if ((mCurrentPage > 0) && (ev.getX() < halfWidth - sixthWidth)) {
+                        if (action != MotionEvent.ACTION_CANCEL) {
+                            mViewPager.setCurrentItem(mCurrentPage - 1);
+                        }
+                        return true;
+                    } else if ((mCurrentPage < count - 1) && (ev.getX() > halfWidth + sixthWidth)) {
+                        if (action != MotionEvent.ACTION_CANCEL) {
+                            mViewPager.setCurrentItem(mCurrentPage + 1);
+                        }
+                        return true;
+                    }
+                }
+
+                mIsDragging = false;
+                mActivePointerId = INVALID_POINTER;
+                if (mViewPager.isFakeDragging()) mViewPager.endFakeDrag();
+                break;
+
+            case MotionEventCompat.ACTION_POINTER_DOWN: {
+                final int index = MotionEventCompat.getActionIndex(ev);
+                mLastMotionX = MotionEventCompat.getX(ev, index);
+                mActivePointerId = MotionEventCompat.getPointerId(ev, index);
+                break;
+            }
+
+            case MotionEventCompat.ACTION_POINTER_UP:
+                final int pointerIndex = MotionEventCompat.getActionIndex(ev);
+                final int pointerId = MotionEventCompat.getPointerId(ev, pointerIndex);
+                if (pointerId == mActivePointerId) {
+                    final int newPointerIndex = pointerIndex == 0 ? 1 : 0;
+                    mActivePointerId = MotionEventCompat.getPointerId(ev, newPointerIndex);
+                }
+                mLastMotionX = MotionEventCompat.getX(ev, MotionEventCompat.findPointerIndex(ev, mActivePointerId));
+                break;
+        }
+
+        return true;
+    }
+
+    @Override
+    public void setViewPager(ViewPager view) {
+        if (mViewPager == view) {
+            return;
+        }
+        if (mViewPager != null) {
+            mViewPager.setOnPageChangeListener(null);
+        }
+        if (view.getAdapter() == null) {
+            throw new IllegalStateException("ViewPager does not have adapter instance.");
+        }
+        mViewPager = view;
+        mViewPager.setOnPageChangeListener(this);
+        invalidate();
+    }
+
+    @Override
+    public void setViewPager(ViewPager view, int initialPosition) {
+        setViewPager(view);
+        setCurrentItem(initialPosition);
+    }
+
+    @Override
+    public void setCurrentItem(int item) {
+        if (mViewPager == null) {
+            throw new IllegalStateException("ViewPager has not been bound.");
+        }
+        mViewPager.setCurrentItem(item);
+        mCurrentPage = item;
+        invalidate();
+    }
+
+    @Override
+    public void notifyDataSetChanged() {
+        invalidate();
+    }
+
+    @Override
+    public void onPageScrollStateChanged(int state) {
+        mScrollState = state;
+
+        if (mListener != null) {
+            mListener.onPageScrollStateChanged(state);
+        }
+    }
+
+    @Override
+    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+        mCurrentPage = position;
+        mPageOffset = positionOffset;
+        invalidate();
+
+        if (mListener != null) {
+            mListener.onPageScrolled(position, positionOffset, positionOffsetPixels);
+        }
+    }
+
+    @Override
+    public void onPageSelected(int position) {
+        if (mSnap || mScrollState == ViewPager.SCROLL_STATE_IDLE) {
+            mCurrentPage = position;
+            mSnapPage = position;
+            invalidate();
+        }
+
+        if (mListener != null) {
+            mListener.onPageSelected(position);
+        }
+    }
+
+    @Override
+    public void setOnPageChangeListener(ViewPager.OnPageChangeListener listener) {
+        mListener = listener;
+    }
+
+    /*
+     * (non-Javadoc)
+     *
+     * @see android.view.View#onMeasure(int, int)
+     */
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        if (mOrientation == HORIZONTAL) {
+            setMeasuredDimension(measureLong(widthMeasureSpec), measureShort(heightMeasureSpec));
+        } else {
+            setMeasuredDimension(measureShort(widthMeasureSpec), measureLong(heightMeasureSpec));
+        }
+    }
+
+    /**
+     * Determines the width of this view
+     *
+     * @param measureSpec
+     *            A measureSpec packed into an int
+     * @return The width of the view, honoring constraints from measureSpec
+     */
+    private int measureLong(int measureSpec) {
+        int result;
+        int specMode = MeasureSpec.getMode(measureSpec);
+        int specSize = MeasureSpec.getSize(measureSpec);
+
+        if ((specMode == MeasureSpec.EXACTLY) || (mViewPager == null)) {
+            //We were told how big to be
+            result = specSize;
+        } else {
+            //Calculate the width according the views count
+            final int count = mViewPager.getAdapter().getCount();
+            result = (int)(getPaddingLeft() + getPaddingRight()
+                    + (count * 2 * mRadius) + (count - 1) * mRadius + 1);
+            //Respect AT_MOST value if that was what is called for by measureSpec
+            if (specMode == MeasureSpec.AT_MOST) {
+                result = Math.min(result, specSize);
+            }
+        }
+        return result;
+    }
+
+    /**
+     * Determines the height of this view
+     *
+     * @param measureSpec
+     *            A measureSpec packed into an int
+     * @return The height of the view, honoring constraints from measureSpec
+     */
+    private int measureShort(int measureSpec) {
+        int result;
+        int specMode = MeasureSpec.getMode(measureSpec);
+        int specSize = MeasureSpec.getSize(measureSpec);
+
+        if (specMode == MeasureSpec.EXACTLY) {
+            //We were told how big to be
+            result = specSize;
+        } else {
+            //Measure the height
+            result = (int)(2 * mRadius + getPaddingTop() + getPaddingBottom() + 1);
+            //Respect AT_MOST value if that was what is called for by measureSpec
+            if (specMode == MeasureSpec.AT_MOST) {
+                result = Math.min(result, specSize);
+            }
+        }
+        return result;
+    }
+
+    public void setEditing(boolean editing) {
+        mEditing = editing;
+        invalidate();
+    }
+}
diff --git a/packages/SystemUI/src/com/viewpagerindicator/PageIndicator.java b/packages/SystemUI/src/com/viewpagerindicator/PageIndicator.java
new file mode 100644
index 0000000..c08c00a
--- /dev/null
+++ b/packages/SystemUI/src/com/viewpagerindicator/PageIndicator.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright (C) 2011 Patrik Akerfeldt
+ * Copyright (C) 2011 Jake Wharton
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.viewpagerindicator;
+
+import android.support.v4.view.ViewPager;
+
+/**
+ * A PageIndicator is responsible to show an visual indicator on the total views
+ * number and the current visible view.
+ */
+public interface PageIndicator extends ViewPager.OnPageChangeListener {
+    /**
+     * Bind the indicator to a ViewPager.
+     *
+     * @param view
+     */
+    void setViewPager(ViewPager view);
+
+    /**
+     * Bind the indicator to a ViewPager.
+     *
+     * @param view
+     * @param initialPosition
+     */
+    void setViewPager(ViewPager view, int initialPosition);
+
+    /**
+     * <p>Set the current page of both the ViewPager and indicator.</p>
+     *
+     * <p>This <strong>must</strong> be used if you need to set the page before
+     * the views are drawn on screen (e.g., default start page).</p>
+     *
+     * @param item
+     */
+    void setCurrentItem(int item);
+
+    /**
+     * Set a page change listener which will receive forwarded events.
+     *
+     * @param listener
+     */
+    void setOnPageChangeListener(ViewPager.OnPageChangeListener listener);
+
+    /**
+     * Notify the indicator that the fragment list has changed.
+     */
+    void notifyDataSetChanged();
+}
diff --git a/packages/VpnDialogs/AndroidManifest.xml b/packages/VpnDialogs/AndroidManifest.xml
index 32e1e6d..375c5d8 100644
--- a/packages/VpnDialogs/AndroidManifest.xml
+++ b/packages/VpnDialogs/AndroidManifest.xml
@@ -24,7 +24,7 @@
     <application android:label="VpnDialogs"
             android:allowBackup="false" >
         <activity android:name=".ConfirmDialog"
-                android:theme="@*android:style/Theme.Material.DayNight.Dialog.Alert">
+                android:theme="@*android:style/Theme.DeviceDefault.Light.Dialog.Alert">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
                 <category android:name="android.intent.category.DEFAULT"/>
@@ -32,7 +32,7 @@
         </activity>
 
         <activity android:name=".ManageDialog"
-                android:theme="@*android:style/Theme.Material.DayNight.Dialog.Alert"
+                android:theme="@*android:style/Theme.DeviceDefault.Light.Dialog.Alert"
                 android:noHistory="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
diff --git a/packages/VpnDialogs/res/values-csb-rPL/strings.xml b/packages/VpnDialogs/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..4afbe1f
--- /dev/null
+++ b/packages/VpnDialogs/res/values-csb-rPL/strings.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2011 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Dialog title to identify the request from a VPN application. [CHAR LIMIT=60] -->
+  <!-- Dialog message to warn about the risk of using a VPN application. [CHAR LIMIT=NONE] -->
+  <!-- Dialog title for built-in VPN. [CHAR LIMIT=40]  -->
+  <!-- Button label to configure the current VPN session. [CHAR LIMIT=20] -->
+  <!-- Button label to disconnect the current VPN session. [CHAR LIMIT=20] -->
+  <!-- Label for the name of the current VPN session. [CHAR LIMIT=20] -->
+  <!-- Label for the duration of the current VPN session. [CHAR LIMIT=20] -->
+  <!-- Label for the network usage of data transmitted over VPN. [CHAR LIMIT=20] -->
+  <!-- Label for the network usage of data received over VPN. [CHAR LIMIT=20] -->
+  <!-- Formatted string for the network usage over VPN. [CHAR LIMIT=40] -->
+</resources>
diff --git a/packages/WallpaperCropper/AndroidManifest.xml b/packages/WallpaperCropper/AndroidManifest.xml
index 92b0195..81d1085 100644
--- a/packages/WallpaperCropper/AndroidManifest.xml
+++ b/packages/WallpaperCropper/AndroidManifest.xml
@@ -20,14 +20,8 @@
         package="com.android.wallpapercropper" >
         <uses-permission android:name="android.permission.SET_WALLPAPER" />
         <uses-permission android:name="android.permission.SET_WALLPAPER_HINTS" />
-        <uses-permission android:name="android.permission.MANAGE_DOCUMENTS" />
-        <uses-permission android:name="android.permission.SET_KEYGUARD_WALLPAPER" />
-        <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
-
-        <application
-            android:requiredForAllUsers="true"
-            android:largeHeap="true">
 
+        <application android:requiredForAllUsers="true">
         <activity
             android:name="WallpaperCropActivity"
             android:theme="@style/Theme.WallpaperCropper"
diff --git a/packages/WallpaperCropper/res/layout/actionbar_set_wallpaper.xml b/packages/WallpaperCropper/res/layout/actionbar_set_wallpaper.xml
index aec804c..97cd620 100644
--- a/packages/WallpaperCropper/res/layout/actionbar_set_wallpaper.xml
+++ b/packages/WallpaperCropper/res/layout/actionbar_set_wallpaper.xml
@@ -34,4 +34,3 @@
         android:text="@string/wallpaper_instructions"
         android:textColor="@color/set_wallpaper_text_color" />
 </FrameLayout>
-
diff --git a/packages/WallpaperCropper/res/values-csb-rPL/strings.xml b/packages/WallpaperCropper/res/values-csb-rPL/strings.xml
new file mode 100644
index 0000000..0e609fe
--- /dev/null
+++ b/packages/WallpaperCropper/res/values-csb-rPL/strings.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Generated by crowdin.com-->
+<!-- Copyright (C) 2013 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+  <!-- Button label on Wallpaper picker screen; user selects this button to set a specific wallpaper -->
+  <!-- Error message when an image is selected as a wallpaper,
+         but the wallpaper cropper cannot load it. The user will
+         usually see this when using another app and trying to set
+         an image as the wallpaper -->
+</resources>
diff --git a/packages/WallpaperCropper/res/values/styles.xml b/packages/WallpaperCropper/res/values/styles.xml
index 2f85d71..a34b25a 100644
--- a/packages/WallpaperCropper/res/values/styles.xml
+++ b/packages/WallpaperCropper/res/values/styles.xml
@@ -15,18 +15,14 @@
 -->
 
 <resources>
-    <style name="Theme.WallpaperCropper" parent="@android:style/Theme.Material.DayNight">
+    <style name="Theme.WallpaperCropper" parent="@android:style/Theme.DeviceDefault">
         <item name="android:actionBarStyle">@style/WallpaperCropperActionBar</item>
         <item name="android:windowFullscreen">true</item>
         <item name="android:windowActionBarOverlay">true</item>
     </style>
 
-    <style name="WallpaperCropperActionBar" parent="@android:style/Widget.DeviceDefault.ActionBar">
+    <style name="WallpaperCropperActionBar" parent="android:style/Widget.DeviceDefault.ActionBar">
         <item name="android:displayOptions">showCustom</item>
         <item name="android:background">#88000000</item>
     </style>
-
-    <style name="ActionBarSetWallpaperStyle" parent="@android:style/Widget.DeviceDefault.ActionButton">
-        <item name="android:textColor">#ffffffff</item>
-    </style>
 </resources>
diff --git a/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java b/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java
index 03bd5e1..a319beb 100644
--- a/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java
+++ b/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java
@@ -75,7 +75,6 @@ public class WallpaperCropActivity extends Activity {
     protected CropView mCropView;
     protected Uri mUri;
     private View mSetWallpaperButton;
-    private boolean mKeyguardMode;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -92,8 +91,6 @@ public class WallpaperCropActivity extends Activity {
         mCropView = (CropView) findViewById(R.id.cropView);
 
         Intent cropIntent = getIntent();
-        String keyguardModeString = cropIntent.getStringExtra("keyguardMode");
-        mKeyguardMode = keyguardModeString != null && keyguardModeString.equals("1");
         final Uri imageUri = cropIntent.getData();
 
         if (imageUri == null) {
@@ -101,15 +98,11 @@ public class WallpaperCropActivity extends Activity {
             finish();
             return;
         }
-		
-	getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
-		| View.SYSTEM_UI_FLAG_FULLSCREEN
-                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
 
         // Action bar
         // Show the custom action bar view
         final ActionBar actionBar = getActionBar();
-        actionBar.setCustomView(mKeyguardMode ? R.layout.actionbar_set_keyguard_wallpaper : R.layout.actionbar_set_wallpaper);
+        actionBar.setCustomView(R.layout.actionbar_set_wallpaper);
         actionBar.getCustomView().setOnClickListener(
                 new View.OnClickListener() {
                     @Override
@@ -317,7 +310,7 @@ public class WallpaperCropActivity extends Activity {
     protected void setWallpaper(String filePath, final boolean finishActivityWhenDone) {
         int rotation = getRotationFromExif(filePath);
         BitmapCropTask cropTask = new BitmapCropTask(
-                this, filePath, null, rotation, 0, 0, true, false, mKeyguardMode, null);
+                this, filePath, null, rotation, 0, 0, true, false, null);
         final Point bounds = cropTask.getImageBounds();
         Runnable onEndCrop = new Runnable() {
             public void run() {
@@ -351,7 +344,7 @@ public class WallpaperCropActivity extends Activity {
             }
         };
         BitmapCropTask cropTask = new BitmapCropTask(this, res, resId,
-                crop, rotation, outSize.x, outSize.y, true, false, mKeyguardMode, onEndCrop);
+                crop, rotation, outSize.x, outSize.y, true, false, onEndCrop);
         cropTask.execute();
     }
 
@@ -444,7 +437,7 @@ public class WallpaperCropActivity extends Activity {
             }
         };
         BitmapCropTask cropTask = new BitmapCropTask(this, uri,
-                cropRect, cropRotation, outWidth, outHeight, true, false, mKeyguardMode, onEndCrop);
+                cropRect, cropRotation, outWidth, outHeight, true, false, onEndCrop);
         if (onBitmapCroppedHandler != null) {
             cropTask.setOnBitmapCropped(onBitmapCroppedHandler);
         }
@@ -472,46 +465,45 @@ public class WallpaperCropActivity extends Activity {
         Resources mResources;
         OnBitmapCroppedHandler mOnBitmapCroppedHandler;
         boolean mNoCrop;
-        boolean mKeyguardMode;
 
         public BitmapCropTask(Context c, String filePath,
                 RectF cropBounds, int rotation, int outWidth, int outHeight,
-                boolean setWallpaper, boolean saveCroppedBitmap, boolean keyguardMode, Runnable onEndRunnable) {
+                boolean setWallpaper, boolean saveCroppedBitmap, Runnable onEndRunnable) {
             mContext = c;
             mInFilePath = filePath;
             init(cropBounds, rotation,
-                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, keyguardMode, onEndRunnable);
+                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, onEndRunnable);
         }
 
         public BitmapCropTask(byte[] imageBytes,
                 RectF cropBounds, int rotation, int outWidth, int outHeight,
-                boolean setWallpaper, boolean saveCroppedBitmap, boolean keyguardMode, Runnable onEndRunnable) {
+                boolean setWallpaper, boolean saveCroppedBitmap, Runnable onEndRunnable) {
             mInImageBytes = imageBytes;
             init(cropBounds, rotation,
-                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, keyguardMode, onEndRunnable);
+                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, onEndRunnable);
         }
 
         public BitmapCropTask(Context c, Uri inUri,
                 RectF cropBounds, int rotation, int outWidth, int outHeight,
-                boolean setWallpaper, boolean saveCroppedBitmap, boolean keyguardMode, Runnable onEndRunnable) {
+                boolean setWallpaper, boolean saveCroppedBitmap, Runnable onEndRunnable) {
             mContext = c;
             mInUri = inUri;
             init(cropBounds, rotation,
-                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, keyguardMode, onEndRunnable);
+                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, onEndRunnable);
         }
 
         public BitmapCropTask(Context c, Resources res, int inResId,
                 RectF cropBounds, int rotation, int outWidth, int outHeight,
-                boolean setWallpaper, boolean saveCroppedBitmap, boolean keyguardMode, Runnable onEndRunnable) {
+                boolean setWallpaper, boolean saveCroppedBitmap, Runnable onEndRunnable) {
             mContext = c;
             mInResId = inResId;
             mResources = res;
             init(cropBounds, rotation,
-                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, keyguardMode, onEndRunnable);
+                    outWidth, outHeight, setWallpaper, saveCroppedBitmap, onEndRunnable);
         }
 
         private void init(RectF cropBounds, int rotation, int outWidth, int outHeight,
-                boolean setWallpaper, boolean saveCroppedBitmap, boolean keyguardMode, Runnable onEndRunnable) {
+                boolean setWallpaper, boolean saveCroppedBitmap, Runnable onEndRunnable) {
             mCropBounds = cropBounds;
             mRotation = rotation;
             mOutWidth = outWidth;
@@ -519,7 +511,6 @@ public class WallpaperCropActivity extends Activity {
             mSetWallpaper = setWallpaper;
             mSaveCroppedBitmap = saveCroppedBitmap;
             mOnEndRunnable = onEndRunnable;
-            mKeyguardMode = keyguardMode;
         }
 
         public void setOnBitmapCropped(OnBitmapCroppedHandler handler) {
@@ -593,11 +584,7 @@ public class WallpaperCropActivity extends Activity {
                 try {
                     InputStream is = regenerateInputStream();
                     if (is != null) {
-                        if (mKeyguardMode) {
-                            wallpaperManager.setKeyguardStream(is);
-                        } else {
-                            wallpaperManager.setStream(is);
-                        }
+                        wallpaperManager.setStream(is);
                         Utils.closeSilently(is);
                     }
                 } catch (IOException e) {
@@ -793,11 +780,7 @@ public class WallpaperCropActivity extends Activity {
                     if (mSetWallpaper && wallpaperManager != null) {
                         try {
                             byte[] outByteArray = tmpOut.toByteArray();
-                            if (mKeyguardMode) {
-                                wallpaperManager.setKeyguardStream(new ByteArrayInputStream(outByteArray));
-                            } else {
-                                wallpaperManager.setStream(new ByteArrayInputStream(outByteArray));
-                            }
+                            wallpaperManager.setStream(new ByteArrayInputStream(outByteArray));
                             if (mOnBitmapCroppedHandler != null) {
                                 mOnBitmapCroppedHandler.onBitmapCropped(outByteArray);
                             }
diff --git a/preloaded-classes b/preloaded-classes
index 4c0cc61..4d7a6e1 100644
--- a/preloaded-classes
+++ b/preloaded-classes
@@ -2265,7 +2265,6 @@ com.android.internal.os.ZygoteConnection$Arguments
 com.android.internal.os.ZygoteInit
 com.android.internal.os.ZygoteInit$MethodAndArgsCaller
 com.android.internal.os.ZygoteSecurityException
-com.android.internal.policy.IPolicy
 com.android.internal.policy.PhoneFallbackEventHandler
 com.android.internal.policy.PhoneLayoutInflater
 com.android.internal.policy.PhoneWindow
@@ -2279,8 +2278,6 @@ com.android.internal.policy.PhoneWindow$PanelFeatureState$SavedState
 com.android.internal.policy.PhoneWindow$PanelFeatureState$SavedState$1
 com.android.internal.policy.PhoneWindow$RotationWatcher
 com.android.internal.policy.PhoneWindow$RotationWatcher$1
-com.android.internal.policy.Policy
-com.android.internal.policy.PolicyManager
 com.android.internal.telephony.ISub
 com.android.internal.telephony.ISub$Stub
 com.android.internal.telephony.ISub$Stub$Proxy
diff --git a/services/core/Android.mk b/services/core/Android.mk
index 93aed43..d2ecac9 100644
--- a/services/core/Android.mk
+++ b/services/core/Android.mk
@@ -9,7 +9,7 @@ LOCAL_SRC_FILES += \
     java/com/android/server/EventLogTags.logtags \
     java/com/android/server/am/EventLogTags.logtags
 
-LOCAL_JAVA_LIBRARIES := services.net telephony-common org.dirtyunicorns.utils
+LOCAL_JAVA_LIBRARIES := services.net telephony-common
 LOCAL_STATIC_JAVA_LIBRARIES := tzdata_update
 
 LOCAL_JAVA_LIBRARIES += services.accessibility
diff --git a/services/core/java/com/android/server/BatteryService.java b/services/core/java/com/android/server/BatteryService.java
index 42b348b..839ba6e 100644
--- a/services/core/java/com/android/server/BatteryService.java
+++ b/services/core/java/com/android/server/BatteryService.java
@@ -194,7 +194,6 @@ public final class BatteryService extends SystemService {
     private int mBatteryLowARGB;
     private int mBatteryMediumARGB;
     private int mBatteryFullARGB;
-    private int mBatteryReallyFullARGB;
     private boolean mMultiColorLed;
 
     private boolean mSentLowBatteryBroadcast = false;
@@ -222,6 +221,8 @@ public final class BatteryService extends SystemService {
                 com.android.internal.R.integer.config_lowBatteryCloseWarningBump);
         mShutdownBatteryTemperature = mContext.getResources().getInteger(
                 com.android.internal.R.integer.config_shutdownBatteryTemperature);
+        mShowBatteryFullyChargedNotification = mContext.getResources().getBoolean(
+                com.android.internal.R.bool.config_showBatteryFullyChargedNotification);
 
         // watch for invalid charger messages if the invalid_charger switch exists
         if (new File("/sys/devices/virtual/switch/invalid_charger/state").exists()) {
@@ -1119,13 +1120,8 @@ public final class BatteryService extends SystemService {
                 mBatteryLight.setModes(mNotificationLedBrightnessLevel,
                         mMultipleLedsEnabled);
                 if (status == BatteryManager.BATTERY_STATUS_FULL || level >= 90) {
-                    if (level == 100) {
-                        // Battery is really full
-                        mBatteryLight.setColor(mBatteryReallyFullARGB);
-                    } else {
-                        // Battery is full or charging and nearly full
-                        mBatteryLight.setColor(mBatteryFullARGB);
-                    }
+                    // Battery is full or charging and nearly full
+                    mBatteryLight.setColor(mBatteryFullARGB);
                 } else {
                     if (isHvdcpPresent()) {
                         // Blinking orange if HVDCP charger
@@ -1249,10 +1245,6 @@ public final class BatteryService extends SystemService {
         void observe() {
             ContentResolver resolver = mContext.getContentResolver();
 
-            // Battery fully charged notification enabled
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.BATTERY_FULLY_CHARGED_NOTIFICATION), false, this, UserHandle.USER_ALL);
-
             // Battery light enabled
             resolver.registerContentObserver(CMSettings.System.getUriFor(
                     CMSettings.System.BATTERY_LIGHT_ENABLED), false, this, UserHandle.USER_ALL);
@@ -1287,9 +1279,6 @@ public final class BatteryService extends SystemService {
                 resolver.registerContentObserver(
                         CMSettings.System.getUriFor(CMSettings.System.BATTERY_LIGHT_FULL_COLOR),
                         false, this, UserHandle.USER_ALL);
-                resolver.registerContentObserver(
-                        Settings.System.getUriFor(Settings.System.BATTERY_LIGHT_REALLY_FULL_COLOR),
-                        false, this, UserHandle.USER_ALL);
             }
 
             update();
@@ -1303,9 +1292,6 @@ public final class BatteryService extends SystemService {
             ContentResolver resolver = mContext.getContentResolver();
             Resources res = mContext.getResources();
 
-            mShowBatteryFullyChargedNotification =  Settings.System.getInt(
-		resolver, Settings.System.BATTERY_FULLY_CHARGED_NOTIFICATION, 0) == 1;
-
             // Battery light enabled
             mLightEnabled = CMSettings.System.getInt(resolver,
                     CMSettings.System.BATTERY_LIGHT_ENABLED, 1) != 0;
@@ -1324,9 +1310,6 @@ public final class BatteryService extends SystemService {
             mBatteryFullARGB = CMSettings.System.getInt(resolver,
                     CMSettings.System.BATTERY_LIGHT_FULL_COLOR, res.getInteger(
                     com.android.internal.R.integer.config_notificationsBatteryFullARGB));
-            mBatteryReallyFullARGB = Settings.System.getInt(resolver,
-                    Settings.System.BATTERY_LIGHT_REALLY_FULL_COLOR, res.getInteger(
-                    com.android.internal.R.integer.config_notificationsBatteryReallyFullARGB));
 
             // Notification LED brightness
             if (mAdjustableNotificationLedBrightness) {
diff --git a/services/core/java/com/android/server/ConnectivityService.java b/services/core/java/com/android/server/ConnectivityService.java
index 1489fd8..2a47460 100644
--- a/services/core/java/com/android/server/ConnectivityService.java
+++ b/services/core/java/com/android/server/ConnectivityService.java
@@ -159,7 +159,6 @@ import java.util.List;
 import java.util.Map;
 import java.util.Objects;
 import java.util.concurrent.atomic.AtomicInteger;
-import java.util.Random;
 
 /**
  * @hide
@@ -647,23 +646,18 @@ public class ConnectivityService extends IConnectivityManager.Stub
         mTrackerHandler = new NetworkStateTrackerHandler(mHandlerThread.getLooper());
 
         // setup our unique device name
-        // either to (in order): current net.hostname
-        //                       DEVICE_HOSTNAME
-        //                       android-ANDROID_ID
-        //                       android-r-RANDOM_NUMBER
-        if (TextUtils.isEmpty(SystemProperties.get("net.hostname"))) {
-            String hostname = CMSettings.Secure.getString(context.getContentResolver(),
-                    CMSettings.Secure.DEVICE_HOSTNAME);
+        String hostname = CMSettings.Secure.getString(context.getContentResolver(),
+                CMSettings.Secure.DEVICE_HOSTNAME);
+        if (TextUtils.isEmpty(hostname) &&
+                TextUtils.isEmpty(SystemProperties.get("net.hostname"))) {
             String id = Settings.Secure.getString(context.getContentResolver(),
                     Settings.Secure.ANDROID_ID);
-            if (!TextUtils.isEmpty(hostname)) {
-                SystemProperties.set("net.hostname", hostname);
-            } else if (!TextUtils.isEmpty(id)) {
+            if (id != null && id.length() > 0) {
                 String name = new String("android-").concat(id);
                 SystemProperties.set("net.hostname", name);
-            } else {
-                SystemProperties.set("net.hostname", "android-r-" + new Random().nextInt());
             }
+        } else {
+            SystemProperties.set("net.hostname", hostname);
         }
 
         // read our default dns server ip
diff --git a/services/core/java/com/android/server/DeviceIdleController.java b/services/core/java/com/android/server/DeviceIdleController.java
index 5b89339..71650c3 100644
--- a/services/core/java/com/android/server/DeviceIdleController.java
+++ b/services/core/java/com/android/server/DeviceIdleController.java
@@ -57,7 +57,6 @@ import android.os.Process;
 import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.SystemClock;
-import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.provider.Settings;
 import android.util.ArrayMap;
@@ -881,8 +880,7 @@ public class DeviceIdleController extends SystemService
 
         synchronized (this) {
             mEnabled = getContext().getResources().getBoolean(
-                    com.android.internal.R.bool.config_enableAutoPowerModes) ||
-                    SystemProperties.getBoolean("persist.sys.doze_powersave", false);
+                    com.android.internal.R.bool.config_enableAutoPowerModes);
             SystemConfig sysConfig = SystemConfig.getInstance();
             ArraySet<String> allowPowerExceptIdle = sysConfig.getAllowInPowerSaveExceptIdle();
             for (int i=0; i<allowPowerExceptIdle.size(); i++) {
diff --git a/services/core/java/com/android/server/InputMethodManagerService.java b/services/core/java/com/android/server/InputMethodManagerService.java
index cefad3b..a9f6e40 100644
--- a/services/core/java/com/android/server/InputMethodManagerService.java
+++ b/services/core/java/com/android/server/InputMethodManagerService.java
@@ -143,8 +143,8 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Locale;
 
-import cyanogenmod.providers.CMSettings;
 import cyanogenmod.hardware.CMHardwareManager;
+import cyanogenmod.providers.CMSettings;
 
 import org.cyanogenmod.internal.util.QSUtils;
 import org.cyanogenmod.internal.util.QSUtils.OnQSChanged;
@@ -203,7 +203,6 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
     private final HardKeyboardListener mHardKeyboardListener;
     private final WindowManagerService mWindowManagerService;
     private final AppOpsManager mAppOpsManager;
-    private CMHardwareManager mCMHardware;
 
     final InputBindResult mNoBinding = new InputBindResult(null, null, null, -1, -1);
 
@@ -241,6 +240,7 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
     private boolean mShowOngoingImeSwitcherForPhones;
     private boolean mNotificationShown;
     private final boolean mImeSelectedOnBoot;
+    private CMHardwareManager mCMHardware;
 
     static class SessionState {
         final ClientState client;
@@ -508,15 +508,32 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
                         }
                     }, userId);
 
+            if (mCMHardware.isSupported(CMHardwareManager.FEATURE_HIGH_TOUCH_SENSITIVITY)) {
+                resolver.registerContentObserver(CMSettings.System.getUriFor(
+                        CMSettings.System.HIGH_TOUCH_SENSITIVITY_ENABLE), false, this, userId);
+            }
+            if (mCMHardware.isSupported(CMHardwareManager.FEATURE_TOUCH_HOVERING)) {
+                resolver.registerContentObserver(CMSettings.Secure.getUriFor(
+                        CMSettings.Secure.FEATURE_TOUCH_HOVERING), false, this, userId);
+            }
+
             mRegistered = true;
         }
 
         @Override public void onChange(boolean selfChange, Uri uri) {
             final Uri showImeUri =
                     Settings.Secure.getUriFor(Settings.Secure.SHOW_IME_WITH_HARD_KEYBOARD);
+            final Uri touchSensitivityUri =
+                    CMSettings.System.getUriFor(CMSettings.System.HIGH_TOUCH_SENSITIVITY_ENABLE);
+            final Uri touchHoveringUri =
+                    CMSettings.Secure.getUriFor(CMSettings.Secure.FEATURE_TOUCH_HOVERING);
             synchronized (mMethodMap) {
                 if (showImeUri.equals(uri)) {
                     updateKeyboardFromSettingsLocked();
+                } else if (touchSensitivityUri.equals(uri)) {
+                    updateTouchSensitivity();
+                } else if (touchHoveringUri.equals(uri)) {
+                    updateTouchHovering();
                 } else {
                     boolean enabledChanged = false;
                     String newEnabled = mSettings.getEnabledInputMethodsStr();
@@ -1068,6 +1085,7 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
                     mSettings.getEnabledInputMethodListLocked(), newUserId,
                     mContext.getBasePackageName());
         }
+
         updateTouchHovering();
         updateTouchSensitivity();
 
@@ -1720,8 +1738,7 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
     }
 
     private boolean shouldShowImeSwitcherLocked(int visibility) {
-        // Don't use this config here since it's not hard coded anymore
-//      if (!mShowOngoingImeSwitcherForPhones) return false;
+        if (!mShowOngoingImeSwitcherForPhones) return false;
         if (mSwitchingDialog != null) return false;
         if (isScreenLocked()) return false;
         if ((visibility & InputMethodService.IME_ACTIVE) == 0) return false;
@@ -1803,7 +1820,7 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
             updateSystemUiLocked(token, vis, backDisposition);
         }
     }
-    
+
     // Caution! This method is called in this class. Handle multi-user carefully
     private void updateSystemUiLocked(IBinder token, int vis, int backDisposition) {
         if (!calledWithValidToken(token)) {
@@ -1827,42 +1844,43 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
                 mStatusBar.setImeWindowStatus(token, vis, backDisposition,
                         needsToShowImeSwitcher);
             }
-            // this way, we pipe the hint and only control show/hide notification
-            if (mShowOngoingImeSwitcherForPhones) {
-                final InputMethodInfo imi = mMethodMap.get(mCurMethodId);
-                if (imi != null && needsToShowImeSwitcher) {
-                    // Used to load label
-                    final CharSequence title = mRes.getText(
-                            com.android.internal.R.string.select_input_method);
-                    final CharSequence summary = InputMethodUtils.getImeAndSubtypeDisplayName(
-                            mContext, imi, mCurrentSubtype);
-                    mImeSwitcherNotification.setContentTitle(title)
-                            .setContentText(summary)
-                            .setContentIntent(mImeSwitchPendingIntent);
-                        if (mNotificationManager != null) {
-                        mNotificationManager.notifyAsUser(null,
-                                com.android.internal.R.string.select_input_method,
-                                mImeSwitcherNotification.build(), UserHandle.ALL);
-                        mNotificationShown = true;
+            final InputMethodInfo imi = mMethodMap.get(mCurMethodId);
+            if (imi != null && needsToShowImeSwitcher) {
+                // Used to load label
+                final CharSequence title = mRes.getText(
+                        com.android.internal.R.string.select_input_method);
+                final CharSequence summary = InputMethodUtils.getImeAndSubtypeDisplayName(
+                        mContext, imi, mCurrentSubtype);
+                mImeSwitcherNotification.setContentTitle(title)
+                        .setContentText(summary)
+                        .setContentIntent(mImeSwitchPendingIntent);
+                if ((mNotificationManager != null)
+                        && !mWindowManagerService.hasNavigationBar()) {
+                    if (DEBUG) {
+                        Slog.d(TAG, "--- show notification: label =  " + summary);
                     }
-                    publishImeSelectorCustomTile(imi);
-                } else {
-                    if (mNotificationShown && mNotificationManager != null) {
-                        if (DEBUG) {
-                            Slog.d(TAG, "--- hide notification");
-                        }
-                        mNotificationManager.cancelAsUser(null,
-                                com.android.internal.R.string.select_input_method, UserHandle.ALL);
-                        mNotificationShown = false;
+                    mNotificationManager.notifyAsUser(null,
+                            com.android.internal.R.string.select_input_method,
+                            mImeSwitcherNotification.build(), UserHandle.ALL);
+                    mNotificationShown = true;
+                }
+                publishImeSelectorCustomTile(imi);
+            } else {
+                if (mNotificationShown && mNotificationManager != null) {
+                    if (DEBUG) {
+                        Slog.d(TAG, "--- hide notification");
                     }
-                    unpublishImeSelectorCustomTile();
+                    mNotificationManager.cancelAsUser(null,
+                            com.android.internal.R.string.select_input_method, UserHandle.ALL);
+                    mNotificationShown = false;
                 }
+                unpublishImeSelectorCustomTile();
             }
         } finally {
             Binder.restoreCallingIdentity(ident);
         }
     }
-    
+
     @Override
     public void registerSuggestionSpansForNotification(SuggestionSpan[] spans) {
         if (!calledFromValidUser()) {
@@ -1963,13 +1981,14 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
             // There is no longer an input method set, so stop any current one.
             unbindCurrentMethodLocked(true, false);
         }
-
-        // we always show the IME switcher notification by default and we
-        // pipe IME hints regardless of notification enabled state
-        mShowOngoingImeSwitcherForPhones =
-                CMSettings.System.getIntForUser(mContext.getContentResolver(),
-                        CMSettings.System.STATUS_BAR_IME_SWITCHER, 1, UserHandle.USER_CURRENT) == 1;
-
+        // code to disable the CM Phone IME switcher with config_show_cmIMESwitcher set = false
+        try {
+            mShowOngoingImeSwitcherForPhones = CMSettings.System.getInt(mContext.getContentResolver(),
+            CMSettings.System.STATUS_BAR_IME_SWITCHER) == 1;
+        } catch (CMSettings.CMSettingNotFoundException e) {
+            mShowOngoingImeSwitcherForPhones = mRes.getBoolean(
+            com.android.internal.R.bool.config_show_cmIMESwitcher);
+        }
         // Here is not the perfect place to reset the switching controller. Ideally
         // mSwitchingController and mSettings should be able to share the same state.
         // TODO: Make sure that mSwitchingController and mSettings are sharing the
@@ -1977,7 +1996,7 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
         mSwitchingController.resetCircularListLocked(mContext);
 
     }
-    
+
     private void updateTouchSensitivity() {
         if (!mCMHardware.isSupported(CMHardwareManager.FEATURE_HIGH_TOUCH_SENSITIVITY)) {
             return;
@@ -1998,7 +2017,6 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
                 touchHovering);
     }
 
-
     public void updateKeyboardFromSettingsLocked() {
         mShowImeWithHardKeyboard = mSettings.isShowImeWithHardKeyboardEnabled();
         if (mSwitchingDialog != null
@@ -2396,10 +2414,6 @@ public class InputMethodManagerService extends IInputMethodManager.Stub
         return res;
     }
 
-    public boolean isImeShowing() {
-        return mInputShown;
-    }
-
     @Override
     public void showInputMethodPickerFromClient(
             IInputMethodClient client, int auxiliarySubtypeMode) {
diff --git a/services/core/java/com/android/server/LockSettingsService.java b/services/core/java/com/android/server/LockSettingsService.java
index 1d9e9bc..317e5a0 100644
--- a/services/core/java/com/android/server/LockSettingsService.java
+++ b/services/core/java/com/android/server/LockSettingsService.java
@@ -61,6 +61,8 @@ import java.util.List;
 import java.util.Timer;
 import java.util.TimerTask;
 
+import cyanogenmod.providers.CMSettings;
+
 /**
  * Keeps the lock pattern/password data and related settings for each user.
  * Used by LockPatternUtils. Needs to be a service because Settings app also needs
@@ -826,8 +828,8 @@ public class LockSettingsService extends ILockSettings.Stub {
         Secure.LOCK_PATTERN_ENABLED,
         Secure.LOCK_BIOMETRIC_WEAK_FLAGS,
         Secure.LOCK_PATTERN_VISIBLE,
-        Secure.LOCK_PASS_TO_SECURITY_VIEW,
         Secure.LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED,
+        CMSettings.Secure.LOCK_PASS_TO_SECURITY_VIEW,
         Secure.LOCK_PATTERN_SIZE,
         Secure.LOCK_DOTS_VISIBLE,
         Secure.LOCK_SHOW_ERROR_PATH,
diff --git a/services/core/java/com/android/server/VibratorService.java b/services/core/java/com/android/server/VibratorService.java
index c228422..f637c4f 100644
--- a/services/core/java/com/android/server/VibratorService.java
+++ b/services/core/java/com/android/server/VibratorService.java
@@ -24,6 +24,7 @@ import android.content.IntentFilter;
 import android.content.pm.PackageManager;
 import android.database.ContentObserver;
 import android.hardware.input.InputManager;
+import android.net.Uri;
 import android.os.BatteryStats;
 import android.os.Handler;
 import android.os.IVibratorService;
@@ -55,6 +56,9 @@ import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.ListIterator;
 
+import cyanogenmod.hardware.CMHardwareManager;
+import cyanogenmod.providers.CMSettings;
+
 public class VibratorService extends IVibratorService.Stub
         implements InputManager.InputDeviceListener {
     private static final String TAG = "VibratorService";
@@ -86,6 +90,10 @@ public class VibratorService extends IVibratorService.Stub
     private int mCurVibUid = -1;
     private boolean mLowPowerMode;
     private SettingsObserver mSettingObserver;
+    private CMHardwareManager mHardware;
+    private int mMinVibratorIntensity;
+    private int mMaxVibratorIntensity;
+    private int mVibratorIntensity;
 
     native static boolean vibratorExists();
     native static void vibratorOn(long milliseconds);
@@ -241,9 +249,20 @@ public class VibratorService extends IVibratorService.Stub
             @Override
             public void onReceive(Context context, Intent intent) {
                 updateInputDeviceVibrators();
+                updateVibratorIntensity();
             }
         }, new IntentFilter(Intent.ACTION_USER_SWITCHED), null, mH);
 
+        mHardware = CMHardwareManager.getInstance(mContext);
+        if (mHardware.isSupported(CMHardwareManager.FEATURE_VIBRATOR)) {
+            mContext.getContentResolver().registerContentObserver(
+                    CMSettings.Secure.getUriFor(CMSettings.Secure.VIBRATOR_INTENSITY),
+                    true, mSettingObserver, UserHandle.USER_ALL);
+            mMinVibratorIntensity = mHardware.getVibratorMinIntensity();
+            mMaxVibratorIntensity = mHardware.getVibratorMaxIntensity();
+            updateVibratorIntensity();
+        }
+
         updateInputDeviceVibrators();
     }
 
@@ -253,11 +272,22 @@ public class VibratorService extends IVibratorService.Stub
         }
 
         @Override
-        public void onChange(boolean SelfChange) {
-            updateInputDeviceVibrators();
+        public void onChange(boolean selfChange, Uri uri) {
+            if (uri.equals(CMSettings.Secure.getUriFor(CMSettings.Secure.VIBRATOR_INTENSITY))) {
+                updateVibratorIntensity();
+            } else {
+                updateInputDeviceVibrators();
+            }
         }
     }
 
+    private void updateVibratorIntensity() {
+        mVibratorIntensity = CMSettings.Secure.getIntForUser(mContext.getContentResolver(),
+                CMSettings.Secure.VIBRATOR_INTENSITY, mHardware.getVibratorDefaultIntensity(),
+                UserHandle.USER_CURRENT);
+        mHardware.setVibratorIntensity(mVibratorIntensity);
+    }
+
     @Override // Binder call
     public boolean hasVibrator() {
         return doVibratorExists();
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 9d0c7ef..d6480f3 100755
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -44,6 +44,7 @@ import android.app.ApplicationThreadNative;
 import android.app.BroadcastOptions;
 import android.app.IActivityContainer;
 import android.app.IActivityContainerCallback;
+import android.app.IActivityManager;
 import android.app.IAppTask;
 import android.app.ITaskStackListener;
 import android.app.ProfilerInfo;
@@ -1485,16 +1486,10 @@ public final class ActivityManagerService extends ActivityManagerNative
                         return;
                     }
                     if (mShowDialogs && !mSleeping && !mShuttingDown) {
-                        if (Settings.System.getInt(mContext.getContentResolver(),
-                                Settings.System.DISABLE_FC_NOTIFICATIONS, 0) != 1) {
-                            Dialog d = new AppErrorDialog(getUiContext(),
+                        Dialog d = new AppErrorDialog(getUiContext(),
                                 ActivityManagerService.this, res, proc);
-                            d.show();
-                            proc.crashDialog = d;
-                        } else {
-                            Slog.w(TAG, "Skipping crash dialog of " + proc + ": disabled");
-                            res.set(0);
-                        }
+                        d.show();
+                        proc.crashDialog = d;
                     } else {
                         // The device is asleep, so just pretend that the user
                         // saw a crash dialog and hit "force quit".
@@ -1604,14 +1599,11 @@ public final class ActivityManagerService extends ActivityManagerNative
             } break;
             case SHOW_FINGERPRINT_ERROR_MSG: {
                 if (mShowDialogs) {
-                    String buildfingerprint = SystemProperties.get("ro.build.fingerprint");
-                    String[] splitfingerprint = buildfingerprint.split("/");
-                    String vendorid = splitfingerprint[3];
                     AlertDialog d = new BaseErrorDialog(mContext);
                     d.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ERROR);
                     d.setCancelable(false);
                     d.setTitle(mContext.getText(R.string.android_system_label));
-                    d.setMessage(mContext.getString(R.string.system_error_vendorprint, vendorid));
+                    d.setMessage(mContext.getText(R.string.system_error_manufacturer));
                     d.setButton(DialogInterface.BUTTON_POSITIVE, mContext.getText(R.string.ok),
                             obtainMessage(DISMISS_DIALOG_MSG, d));
                     d.show();
@@ -6567,13 +6559,14 @@ public final class ActivityManagerService extends ActivityManagerNative
     }
 
     @Override
-    public void showBootMessage(final ApplicationInfo info, final int current,
-            final int total, final boolean always) {
+    public void updateBootProgress(final int stage, final ApplicationInfo optimizedApp,
+            final int currentAppPos, final int totalAppCount, final boolean always) {
         if (Binder.getCallingUid() != Process.myUid()) {
             // These days only the core system can call this, so apps can't get in
             // the way of what we show about running them.
         }
-        mWindowManager.showBootMessage(info, current, total, always);
+        mWindowManager.updateBootProgress(stage, optimizedApp,
+                currentAppPos, totalAppCount, always);
     }
 
     @Override
@@ -8638,6 +8631,14 @@ public final class ActivityManagerService extends ActivityManagerNative
         return list;
     }
 
+    @Override
+    public boolean isPackageInForeground(String packageName) {
+        synchronized (this) {
+            ActivityRecord activity = mStackSupervisor.topRunningActivityLocked();
+            return activity != null && activity.packageName.equals(packageName);
+        }
+    }
+
     /**
      * Creates a new RecentTaskInfo from a TaskRecord.
      */
@@ -9370,23 +9371,6 @@ public final class ActivityManagerService extends ActivityManagerNative
         }
     }
 
-    public IBinder getActivityForTask(int task, boolean onlyRoot) {
-        final ActivityStack mainStack = mStackSupervisor.getFocusedStack();
-        synchronized(this) {
-            ArrayList<ActivityStack> stacks = mStackSupervisor.getStacks();
-            for (ActivityStack stack : stacks) {
-                TaskRecord r = stack.taskForIdLocked(task);
-
-                if (r != null && r.getTopActivity() != null) {
-                    return r.getTopActivity().appToken;
-                } else {
-                    return null;
-                }
-            }
-        }
-        return null;
-    }
-
     @Override
     public void updateLockTaskPackages(int userId, String[] packages) {
         final int callingUid = Binder.getCallingUid();
@@ -12004,8 +11988,8 @@ public final class ActivityManagerService extends ActivityManagerNative
                 intent.setComponent(comp);
                 doneReceivers.add(comp);
                 lastRi = curRi;
-                showBootMessage(ai.applicationInfo, Integer.MIN_VALUE + 2, Integer.MIN_VALUE + 2,
-                        false);
+                updateBootProgress(IActivityManager.BOOT_STAGE_PREPARING_APPS,
+                        ai.applicationInfo, 0, 0, false);
             }
             Slog.i(TAG, "Pre-boot of " + intent.getComponent().toShortString()
                     + " for user " + users[curUser]);
@@ -12128,7 +12112,8 @@ public final class ActivityManagerService extends ActivityManagerNative
                         synchronized (ActivityManagerService.this) {
                             mDidUpdate = true;
                         }
-                        showBootMessage(null, Integer.MIN_VALUE + 3, Integer.MIN_VALUE + 3, false);
+                        updateBootProgress(IActivityManager.BOOT_STAGE_COMPLETE,
+                                null, 0, 0, false);
                         writeLastDonePreBootReceivers(doneReceivers);
                         systemReady(goingCallback);
                     }
@@ -12618,6 +12603,7 @@ public final class ActivityManagerService extends ActivityManagerNative
         synchronized (sb) {
             bufferWasEmpty = sb.length() == 0;
             appendDropBoxProcessHeaders(process, processName, sb);
+            sb.append("CM Version: ").append(cyanogenmod.os.Build.CYANOGENMOD_VERSION).append("\n");
             sb.append("Build: ").append(Build.FINGERPRINT).append("\n");
             sb.append("System-App: ").append(isSystemApp).append("\n");
             sb.append("Uptime-Millis: ").append(info.violationUptimeMillis).append("\n");
@@ -12887,6 +12873,7 @@ public final class ActivityManagerService extends ActivityManagerNative
         if (subject != null) {
             sb.append("Subject: ").append(subject).append("\n");
         }
+        sb.append("CM Version: ").append(cyanogenmod.os.Build.CYANOGENMOD_VERSION).append("\n");
         sb.append("Build: ").append(Build.FINGERPRINT).append("\n");
         if (Debug.isDebuggerConnected()) {
             sb.append("Debugger: Connected\n");
@@ -17839,6 +17826,11 @@ public final class ActivityManagerService extends ActivityManagerNative
                             !values.themeConfig.equals(mConfiguration.themeConfig));
                 }
 
+                if ((changes & ActivityInfo.CONFIG_THEME_FONT) != 0) {
+                    // Notify zygote that themes need a refresh
+                    SystemProperties.set(PROP_REFRESH_THEME, "1");
+                }
+
                 mConfigurationSeq++;
                 if (mConfigurationSeq <= 0) {
                     mConfigurationSeq = 1;
diff --git a/services/core/java/com/android/server/am/ActivityRecord.java b/services/core/java/com/android/server/am/ActivityRecord.java
index 4cfa6c8..3de2009 100755
--- a/services/core/java/com/android/server/am/ActivityRecord.java
+++ b/services/core/java/com/android/server/am/ActivityRecord.java
@@ -34,9 +34,6 @@ import com.android.server.am.ActivityStackSupervisor.ActivityContainer;
 import android.app.ActivityOptions;
 import android.app.ResultInfo;
 import android.content.ComponentName;
-import android.content.ContentResolver;
-import android.content.Context;
-import android.content.ContextWrapper;
 import android.content.Intent;
 import android.content.pm.ActivityInfo;
 import android.content.pm.ApplicationInfo;
@@ -52,13 +49,11 @@ import android.os.Process;
 import android.os.RemoteException;
 import android.os.SystemClock;
 import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.EventLog;
 import android.util.Log;
 import android.util.Slog;
 import android.util.TimeUtils;
 import android.view.IApplicationToken;
-import android.view.ContextThemeWrapper;
 import android.view.WindowManager;
 
 import org.xmlpull.v1.XmlPullParser;
@@ -178,10 +173,6 @@ final class ActivityRecord {
     long lastLaunchTime;    // time of last lauch of this activity
     ArrayList<ActivityContainer> mChildContainers = new ArrayList<ActivityContainer>();
 
-    boolean topIntent;
-    boolean newAppTask;
-    boolean floatingWindow;
-    
     String stringName;      // for caching of toString().
 
     private boolean inHistory;  // are we in the history stack?
@@ -493,9 +484,7 @@ final class ActivityRecord {
         // is that we have everything, and we shouldn't never consider it
         // lacking in state to be removed if it dies.
         haveState = true;
-        topIntent = false;
-        floatingWindow = false;
-        
+
         if (aInfo != null) {
             if (aInfo.targetActivity == null
                     || aInfo.launchMode == ActivityInfo.LAUNCH_MULTIPLE
@@ -526,70 +515,9 @@ final class ActivityRecord {
                         ? android.R.style.Theme
                         : android.R.style.Theme_Holo;
             }
-			// This is where the package gets its first context from the attribute-cache
-            // In order to hook its attributes we set up our check for floating multi windows here.
-            topIntent = true;
-            ActivityStack stack = supervisor.getFocusedStack();
-            floatingWindow = (intent.getFlags() & Intent.FLAG_FLOATING_WINDOW) == Intent.FLAG_FLOATING_WINDOW;
-            TaskRecord baseRecord = stack != null && stack.mTaskHistory.size() > 0 ? stack.mTaskHistory.get(stack.mTaskHistory.size() -1) : null;
-
-            if (baseRecord != null) {
-                ActivityRecord record = baseRecord.mActivities.size() > 0 ? baseRecord.mActivities.get(baseRecord.mActivities.size() - 1) : null;
-                final boolean floats = (baseRecord.intent.getFlags() & Intent.FLAG_FLOATING_WINDOW) == Intent.FLAG_FLOATING_WINDOW;
-                final boolean taskAppAffinity = record == null ? false : aInfo.applicationInfo.packageName.equals(record.packageName);
-                newAppTask = (intent.getFlags() & Intent.FLAG_ACTIVITY_NEW_TASK) == Intent.FLAG_ACTIVITY_NEW_TASK;
-                // If the current intent is not a new task we will check its top parent.
-                // Perhaps it started out as a multiwindow in which case we pass the flag on
-                if (floats && (!newAppTask || taskAppAffinity)) {
-                    intent.addFlags(Intent.FLAG_FLOATING_WINDOW);
-                    // Flag the activity as sub-task
-                    topIntent = false;
-                    floatingWindow = true;
-                }
-            }
-            // If this is a multiwindow activity we prevent it from messing up the history stack,
-            // like jumping back home, killing the current activity or polluting recents
-            if (floatingWindow) {
-                intent.setFlags(intent.getFlags() & ~Intent.FLAG_ACTIVITY_TASK_ON_HOME);
-                intent.setFlags(intent.getFlags() & ~Intent.FLAG_ACTIVITY_SINGLE_TOP);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NO_USER_ACTION);
-                // If this is the mother-intent we make it volatile
-                if (topIntent) {
-                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
-                }
-                // Change theme
-                realTheme = com.android.internal.R.style.Theme_DeviceDefault_FloatingWindow;
-            } else {
-                intent.setFlags(intent.getFlags() & ~Intent.FLAG_FLOATING_WINDOW);
-            } 
-                       
             if ((aInfo.flags&ActivityInfo.FLAG_HARDWARE_ACCELERATED) != 0) {
                 windowFlags |= WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;
             }
-
-            String pkgName = aInfo.packageName;
-            String hideFromRecentsString = Settings.System.getStringForUser(service.mContext.getContentResolver(),
-                    Settings.System.HIDE_FROM_RECENTS_LIST, UserHandle.USER_CURRENT);
-            ArrayList<String> excludeFromRecentsList = new ArrayList();
-
-            // this converts the String we get from Settings to an actual ArrayList
-            if (hideFromRecentsString!=null && hideFromRecentsString.length()!=0){
-                String[] parts = hideFromRecentsString.split("\\|");
-                for(int i = 0; i < parts.length; i++){
-                    excludeFromRecentsList.add(parts[i]);
-                }
-            }
-
-            if (!excludeFromRecentsList.isEmpty()){
-                if (excludeFromRecentsList.contains(pkgName)) {
-                  // If our app is inside the ArrayList, hide it from the Recents.
-                  // For the case where that flag already was added by some other instance,
-                  // it most likely has a good reason to be, so do not force remove it
-                  intent.addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
-                }
-            }
-
             if ((aInfo.flags&ActivityInfo.FLAG_MULTIPROCESS) != 0
                     && _caller != null
                     && (aInfo.applicationInfo.uid == Process.SYSTEM_UID
@@ -599,8 +527,8 @@ final class ActivityRecord {
                 processName = aInfo.processName;
             }
 
-            if ((intent != null && (aInfo.flags & ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS) != 0)
-                || floatingWindow) {
+            if (intent != null && (aInfo.flags & ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS) != 0) {
+                intent.addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
             }
 
             packageName = aInfo.applicationInfo.packageName;
diff --git a/services/core/java/com/android/server/am/ActivityStack.java b/services/core/java/com/android/server/am/ActivityStack.java
index 9717952..f676db9 100644
--- a/services/core/java/com/android/server/am/ActivityStack.java
+++ b/services/core/java/com/android/server/am/ActivityStack.java
@@ -30,7 +30,6 @@ import android.util.ArraySet;
 import com.android.internal.app.IVoiceInteractor;
 import com.android.internal.content.ReferrerIntent;
 import com.android.internal.os.BatteryStatsImpl;
-import com.android.server.AttributeCache;
 import com.android.server.Watchdog;
 import com.android.server.am.ActivityManagerService.ItemMatcher;
 import com.android.server.am.ActivityStackSupervisor.ActivityContainer;
@@ -68,7 +67,6 @@ import android.os.UserHandle;
 import android.service.voice.IVoiceInteractionSession;
 import android.util.EventLog;
 import android.util.Slog;
-import android.view.ContextThemeWrapper;
 import android.view.Display;
 
 import com.android.server.LocalServices;
@@ -164,7 +162,7 @@ final class ActivityStack {
      * The back history of all previous (and possibly still
      * running) activities.  It contains #TaskRecord objects.
      */
-    ArrayList<TaskRecord> mTaskHistory = new ArrayList<>();
+    private ArrayList<TaskRecord> mTaskHistory = new ArrayList<>();
 
     /**
      * Used for validating app tokens with window manager.
@@ -1398,13 +1396,13 @@ final class ActivityStack {
                     // Aggregate current change flags.
                     configChanges |= r.configChangeFlags;
 
-                    if (r.fullscreen && !r.floatingWindow) {
+                    if (r.fullscreen) {
                         // At this point, nothing else needs to be shown
                         if (DEBUG_VISIBILITY) Slog.v(TAG_VISIBILITY, "Fullscreen: at " + r);
                         behindFullscreen = true;
                     } else if (!isHomeStack() && r.frontOfTask && task.isOverHomeStack()) {
                         if (DEBUG_VISIBILITY) Slog.v(TAG_VISIBILITY, "Showing home: at " + r);
-                        behindFullscreen = !isHomeStack() && r.frontOfTask && task.isOverHomeStack();
+                        behindFullscreen = true;
                     }
                 } else {
                     if (DEBUG_VISIBILITY) Slog.v(TAG_VISIBILITY,
@@ -1645,25 +1643,12 @@ final class ActivityStack {
         }
 
         final TaskRecord nextTask = next.task;
-		boolean isFloatingWindow = prev != null ? prev.floatingWindow : false;        
         if (prevTask != null && prevTask.stack == this &&
                 prevTask.isOverHomeStack() && prev.finishing && prev.frontOfTask) {
             if (DEBUG_STACK)  mStackSupervisor.validateTopActivitiesLocked();
             if (prevTask == nextTask) {
                 prevTask.setFrontOfTask();
-            } else if (prevTask != topTask() && !isFloatingWindow) {
-                ArrayList<ActivityRecord> activities = prevTask.mActivities;
-                final int numActivities = activities.size();
-                for (int activityNdx = 0; activityNdx < numActivities; ++activityNdx) {
-                    final ActivityRecord r = activities.get(activityNdx);
-                    // r is usually the same as next, but what if two activities were launched
-                    // before prev finished?
-                    if (!r.finishing) {
-                        r.frontOfTask = true;
-                        break;
-                    }
-                }
-            } else if (prevTask != topTask() && !prev.floatingWindow) {
+            } else if (prevTask != topTask()) {
                 // This task is going away but it was supposed to return to the home stack.
                 // Now the task above it has to return to the home task instead.
                 final int taskNdx = mTaskHistory.indexOf(prevTask) + 1;
@@ -1764,7 +1749,7 @@ final class ActivityStack {
         // can be resumed...
         boolean dontWaitForPause = (next.info.flags&ActivityInfo.FLAG_RESUME_WHILE_PAUSING) != 0;
         boolean pausing = mStackSupervisor.pauseBackStacks(userLeaving, true, dontWaitForPause);
-        if (mResumedActivity != null && !next.floatingWindow) {
+        if (mResumedActivity != null) {
             if (DEBUG_STATES) Slog.d(TAG_STATES,
                     "resumeTopActivityLocked: Pausing " + mResumedActivity);
             pausing |= startPausingLocked(userLeaving, false, true, dontWaitForPause);
@@ -1845,7 +1830,7 @@ final class ActivityStack {
             if (prev.finishing) {
                 if (DEBUG_TRANSITION) Slog.v(TAG_TRANSITION,
                         "Prepare close transition: prev=" + prev);
-                if (mNoAnimActivities.contains(prev) || next.floatingWindow) {
+                if (mNoAnimActivities.contains(prev)) {
                     anim = false;
                     mWindowManager.prepareAppTransition(AppTransition.TRANSIT_NONE, false);
                 } else {
@@ -1863,7 +1848,7 @@ final class ActivityStack {
             } else {
                 if (DEBUG_TRANSITION) Slog.v(TAG_TRANSITION,
                         "Prepare open transition: prev=" + prev);
-                if (mNoAnimActivities.contains(next) || next.floatingWindow) {
+                if (mNoAnimActivities.contains(next)) {
                     anim = false;
                     mWindowManager.prepareAppTransition(AppTransition.TRANSIT_NONE, false);
                 } else {
@@ -2007,7 +1992,7 @@ final class ActivityStack {
                 if (!next.hasBeenLaunched) {
                     next.hasBeenLaunched = true;
                 } else  if (SHOW_APP_STARTING_PREVIEW && lastStack != null &&
-                        mStackSupervisor.isFrontStack(lastStack) && !next.floatingWindow) {
+                        mStackSupervisor.isFrontStack(lastStack)) {
                     mWindowManager.setAppStartingWindow(
                             next.appToken, next.packageName, next.theme,
                             mService.compatibilityInfoForPackageLocked(next.info.applicationInfo),
@@ -2040,7 +2025,7 @@ final class ActivityStack {
             if (!next.hasBeenLaunched) {
                 next.hasBeenLaunched = true;
             } else {
-                if (SHOW_APP_STARTING_PREVIEW && !next.floatingWindow) {
+                if (SHOW_APP_STARTING_PREVIEW) {
                     mWindowManager.setAppStartingWindow(
                             next.appToken, next.packageName, next.theme,
                             mService.compatibilityInfoForPackageLocked(
@@ -2088,12 +2073,6 @@ final class ActivityStack {
             ActivityStack lastStack = mStackSupervisor.getLastStack();
             final boolean fromHome = lastStack.isHomeStack();
             if (!isHomeStack() && (fromHome || topTask() != task)) {
-                if( !fromHome && task.isOverHomeStack()) {
-                    int taskNdx = mTaskHistory.indexOf(task);
-                    if ((taskNdx + 1) < mTaskHistory.size()) {
-                        mTaskHistory.get(taskNdx +1).setTaskToReturnTo(task.getTaskToReturnTo());
-                    }
-                }
                 task.setTaskToReturnTo(fromHome
                         ? lastStack.topTask() == null
                                 ? HOME_ACTIVITY_TYPE
@@ -2245,11 +2224,11 @@ final class ActivityStack {
             }
             if (DEBUG_TRANSITION) Slog.v(TAG_TRANSITION,
                     "Prepare open transition: starting " + r);
-            if (((r.intent.getFlags() & Intent.FLAG_ACTIVITY_NO_ANIMATION) != 0) || (r.floatingWindow && !r.topIntent)) {
+            if ((r.intent.getFlags() & Intent.FLAG_ACTIVITY_NO_ANIMATION) != 0) {
                 mWindowManager.prepareAppTransition(AppTransition.TRANSIT_NONE, keepCurTransition);
                 mNoAnimActivities.add(r);
             } else {
-                mWindowManager.prepareAppTransition(newTask && !r.floatingWindow
+                mWindowManager.prepareAppTransition(newTask
                         ? r.mLaunchTaskBehind
                                 ? AppTransition.TRANSIT_TASK_OPEN_BEHIND
                                 : AppTransition.TRANSIT_TASK_OPEN
@@ -2280,7 +2259,7 @@ final class ActivityStack {
                 // tell WindowManager that r is visible even though it is at the back of the stack.
                 mWindowManager.setAppVisibility(r.appToken, true);
                 ensureActivitiesVisibleLocked(null, 0);
-            } else if (SHOW_APP_STARTING_PREVIEW && doShow && !r.floatingWindow) {
+            } else if (SHOW_APP_STARTING_PREVIEW && doShow) {
                 // Figure out if we are transitioning from another activity that is
                 // "has the same starting icon" as the next one.  This allows the
                 // window manager to keep the previous window it had previously
@@ -2999,7 +2978,7 @@ final class ActivityStack {
             boolean endTask = index <= 0;
             if (DEBUG_VISIBILITY || DEBUG_TRANSITION) Slog.v(TAG_TRANSITION,
                     "Prepare close transition: finishing " + r);
-            mWindowManager.prepareAppTransition(endTask && !r.floatingWindow
+            mWindowManager.prepareAppTransition(endTask
                     ? AppTransition.TRANSIT_TASK_CLOSE
                     : AppTransition.TRANSIT_ACTIVITY_CLOSE, false);
 
@@ -3360,7 +3339,7 @@ final class ActivityStack {
                 if (r.finishing) {
                     continue;
                 }
-                if (r.fullscreen && !r.floatingWindow) {
+                if (r.fullscreen) {
                     lastIsOpaque = true;
                 }
                 if (owner != null && r.app != owner) {
diff --git a/services/core/java/com/android/server/am/ActivityStackSupervisor.java b/services/core/java/com/android/server/am/ActivityStackSupervisor.java
index 359e3f2..bde32e7 100644
--- a/services/core/java/com/android/server/am/ActivityStackSupervisor.java
+++ b/services/core/java/com/android/server/am/ActivityStackSupervisor.java
@@ -2181,8 +2181,7 @@ public final class ActivityStackSupervisor implements DisplayListener {
                                 intentActivity.task.setTaskToReturnTo(HOME_ACTIVITY_TYPE);
                             }
                             options = null;
-                            movedToFront = true;
-                        }             
+                        }
                     }
                     if (!movedToFront) {
                         if (DEBUG_TASKS) Slog.d(TAG_TASKS, "Bring to front target: " + targetStack
@@ -4192,7 +4191,6 @@ public final class ActivityStackSupervisor implements DisplayListener {
                             }
                             getStatusBarService().disable(flags, mToken,
                                     mService.mContext.getPackageName());
-                            getStatusBarService().screenPinningStateChanged(true);
                         }
                         mWindowManager.disableKeyguard(mToken, LOCK_TASK_TAG);
                         if (getDevicePolicyManager() != null) {
@@ -4209,7 +4207,6 @@ public final class ActivityStackSupervisor implements DisplayListener {
                         if (getStatusBarService() != null) {
                             getStatusBarService().disable(StatusBarManager.DISABLE_NONE, mToken,
                                     mService.mContext.getPackageName());
-                            getStatusBarService().screenPinningStateChanged(false);
                         }
                         mWindowManager.reenableKeyguard(mToken);
                         if (getDevicePolicyManager() != null) {
diff --git a/services/core/java/com/android/server/am/BatteryStatsService.java b/services/core/java/com/android/server/am/BatteryStatsService.java
index e4452f5..5fd3510 100644
--- a/services/core/java/com/android/server/am/BatteryStatsService.java
+++ b/services/core/java/com/android/server/am/BatteryStatsService.java
@@ -347,7 +347,6 @@ public final class BatteryStatsService extends IBatteryStats.Stub
         }
     }
 
-
     /** @hide */
     public byte[] getDockStatistics() {
         mContext.enforceCallingPermission(
diff --git a/services/core/java/com/android/server/am/LockTaskNotify.java b/services/core/java/com/android/server/am/LockTaskNotify.java
index 055e33e..a5d37f0 100644
--- a/services/core/java/com/android/server/am/LockTaskNotify.java
+++ b/services/core/java/com/android/server/am/LockTaskNotify.java
@@ -51,8 +51,8 @@ public class LockTaskNotify {
     private boolean hasNavigationBar() {
         return mContext.getResources().getBoolean(
                 com.android.internal.R.bool.config_showNavigationBar)
-                || CMSettings.Secure.getIntForUser(mContext.getContentResolver(),
-                        CMSettings.Secure.DEV_FORCE_SHOW_NAVBAR, 0, UserHandle.USER_CURRENT) == 1;
+                || CMSettings.Global.getIntForUser(mContext.getContentResolver(),
+                        CMSettings.Global.DEV_FORCE_SHOW_NAVBAR, 0, UserHandle.USER_CURRENT) == 1;
     }
 
     public void showToast(int lockTaskModeState) {
diff --git a/services/core/java/com/android/server/am/ProcessList.java b/services/core/java/com/android/server/am/ProcessList.java
index 4def2fb..9c9a421 100644
--- a/services/core/java/com/android/server/am/ProcessList.java
+++ b/services/core/java/com/android/server/am/ProcessList.java
@@ -260,8 +260,8 @@ final class ProcessList {
         int maxSize = 1280*800; // 1024000  230400 870400  .264
         float scaleDisp = ((float)(displayWidth*displayHeight)-minSize)/(maxSize-minSize);
         if (false) {
-            Slog.i(TAG, "scaleMem=" + scaleMem);
-            Slog.i(TAG, "scaleDisp=" + scaleDisp + " dw=" + displayWidth
+            Slog.i("XXXXXX", "scaleMem=" + scaleMem);
+            Slog.i("XXXXXX", "scaleDisp=" + scaleDisp + " dw=" + displayWidth
                     + " dh=" + displayHeight);
         }
 
@@ -273,7 +273,7 @@ final class ProcessList {
         int minfree_abs = Resources.getSystem().getInteger(
                 com.android.internal.R.integer.config_lowMemoryKillerMinFreeKbytesAbsolute);
         if (false) {
-            Slog.i(TAG, "minfree_adj=" + minfree_adj + " minfree_abs=" + minfree_abs);
+            Slog.i("XXXXXX", "minfree_adj=" + minfree_adj + " minfree_abs=" + minfree_abs);
         }
 
         // We've now baked in the increase to the basic oom values above, since
@@ -286,12 +286,12 @@ final class ProcessList {
             int low = mOomMinFreeLow[i];
             int high = mOomMinFreeHigh[i];
             if (is64bit) {
-                Slog.i(TAG, "choosing minFree values for 64 Bit");
+                Slog.i("XXXXXX", "choosing minFree values for 64 Bit");
                 // Increase the high min-free levels for cached processes for 64-bit
                 if (i == 4) high = (high*3)/2;
                 else if (i == 5) high = (high*7)/4;
             } else {
-                Slog.i(TAG, "choosing minFree values for 32 Bit");
+                Slog.i("XXXXXX", "choosing minFree values for 32 Bit");
                 low = mOomMinFreeLow32Bit[i];
                 high = mOomMinFreeHigh32Bit[i];
             }
diff --git a/services/core/java/com/android/server/audio/AudioService.java b/services/core/java/com/android/server/audio/AudioService.java
index a06d00a..fe3df61 100644
--- a/services/core/java/com/android/server/audio/AudioService.java
+++ b/services/core/java/com/android/server/audio/AudioService.java
@@ -53,7 +53,6 @@ import android.hardware.hdmi.HdmiControlManager;
 import android.hardware.hdmi.HdmiPlaybackClient;
 import android.hardware.hdmi.HdmiTvClient;
 import android.hardware.usb.UsbManager;
-import android.net.Uri;
 import android.media.AudioAttributes;
 import android.media.AudioDevicePort;
 import android.media.AudioSystem;
@@ -610,16 +609,6 @@ public class AudioService extends IAudioService.Stub {
         return "card=" + card + ";device=" + device + ";";
     }
 
-    // only these packages are allowed to override Pulse visualizer lock
-    private static final String[] VISUALIZER_WHITELIST = new String[] {
-            "android",
-            "com.android.systemui",
-            "com.android.keyguard",
-            "com.google.android.googlequicksearchbox"
-    };
-
-    private boolean mVisualizerLocked;
-
     ///////////////////////////////////////////////////////////////////////////
     // Construction
     ///////////////////////////////////////////////////////////////////////////
@@ -700,9 +689,6 @@ public class AudioService extends IAudioService.Stub {
         updateStreamVolumeAlias(false /*updateVolumes*/, TAG);
         readPersistedSettings();
         mSettingsObserver = new SettingsObserver();
-
-        // Update volumes steps before creatingStreamStates!
-        initVolumeSteps();
         createStreamStates();
 
         mMediaFocusControl = new MediaFocusControl(mAudioHandler.getLooper(),
@@ -901,60 +887,6 @@ public class AudioService extends IAudioService.Stub {
         AudioSystem.setParameters("restarting=false");
     }
 
-    private void initVolumeSteps() {
-        // Defaults for reference
-        // 5, // STREAM_VOICE_CALL
-        // 7, // STREAM_SYSTEM
-        // 7, // STREAM_RING
-        // 15, // STREAM_MUSIC
-        // 7, // STREAM_ALARM
-        // 7, // STREAM_NOTIFICATION
-        // 15, // STREAM_BLUETOOTH_SCO
-        // 7, // STREAM_SYSTEM_ENFORCED
-        // 15, // STREAM_DTMF
-        // 15 // STREAM_TTS
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL] =
-                Settings.System.getInt(mContentResolver, "volume_steps_voice_call",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_VOICE_CALL]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_SYSTEM] =
-                Settings.System.getInt(mContentResolver, "volume_steps_system",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_SYSTEM]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_RING] =
-                Settings.System.getInt(mContentResolver, "volume_steps_ring",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_RING]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC] =
-                Settings.System.getInt(mContentResolver, "volume_steps_music",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_MUSIC]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_ALARM] =
-                Settings.System.getInt(mContentResolver, "volume_steps_alarm",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_ALARM]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_NOTIFICATION] =
-                Settings.System.getInt(mContentResolver, "volume_steps_notification",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_NOTIFICATION]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_BLUETOOTH_SCO] =
-                Settings.System.getInt(mContentResolver, "volume_steps_bluetooth_sco",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_BLUETOOTH_SCO]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_SYSTEM_ENFORCED] =
-                Settings.System.getInt(mContentResolver, "volume_steps_system_enforced",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_SYSTEM_ENFORCED]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_DTMF] =
-                Settings.System.getInt(mContentResolver, "volume_steps_dtmf",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_DTMF]);
-
-        MAX_STREAM_VOLUME[AudioSystem.STREAM_TTS] =
-                Settings.System.getInt(mContentResolver, "volume_steps_tts",
-                        MAX_STREAM_VOLUME[AudioSystem.STREAM_TTS]);
-    }
-
     private void createAudioSystemThread() {
         mAudioSystemThread = new AudioSystemThread();
         mAudioSystemThread.start();
@@ -1204,15 +1136,6 @@ public class AudioService extends IAudioService.Stub {
                 0);
     }
 
-    private boolean safeVolumeEnabled(ContentResolver cr) {
-        boolean safeMediaVolumeEnabled = mContext.getResources().getBoolean(
-                com.android.internal.R.bool.config_safe_media_volume_enabled);
-        boolean safeHeadsetVolumeEnabled = Settings.System.getIntForUser(cr,
-                Settings.System.SAFE_HEADSET_VOLUME, safeMediaVolumeEnabled ? 1 : 0,
-                UserHandle.USER_CURRENT_OR_SELF) != 0;
-        return safeHeadsetVolumeEnabled;
-    }
-
     private void readPersistedSettings() {
         final ContentResolver cr = mContentResolver;
 
@@ -1254,7 +1177,6 @@ public class AudioService extends IAudioService.Stub {
 
             updateRingerModeAffectedStreams();
             readDockAudioSettings(cr);
-            mSafeVolumeEnabled = new Boolean(safeVolumeEnabled(cr));
 
             mVolumeKeysControlRingStream = CMSettings.System.getIntForUser(cr,
                     CMSettings.System.VOLUME_KEYS_CONTROL_RING_STREAM, 1,
@@ -2070,10 +1992,6 @@ public class AudioService extends IAudioService.Stub {
                 userId);
     }
 
-    protected static void setMaxStreamVolume(int streamType, int maxVol) {
-        MAX_STREAM_VOLUME[streamType] = maxVol;
-    }
-
     /** @see AudioManager#getStreamVolume(int) */
     public int getStreamVolume(int streamType) {
         ensureValidStreamType(streamType);
@@ -2099,13 +2017,6 @@ public class AudioService extends IAudioService.Stub {
         return (mStreamStates[streamType].getMaxIndex() + 5) / 10;
     }
 
-    /** @see AudioManager#setStreamMaxVolume(int,int) */
-    public void setStreamMaxVolume(int streamType, int maxVol) {
-        ensureValidStreamType(streamType);
-        mStreamStates[streamType].setMaxIndex(maxVol);
-        setMaxStreamVolume(streamType, maxVol);
-    }
-
     /** @see AudioManager#getStreamMinVolume(int) */
     public int getStreamMinVolume(int streamType) {
         ensureValidStreamType(streamType);
@@ -2769,8 +2680,7 @@ public class AudioService extends IAudioService.Stub {
             mMusicActiveMs = MathUtils.constrain(Settings.Secure.getIntForUser(mContentResolver,
                     Settings.Secure.UNSAFE_VOLUME_MUSIC_ACTIVE_MS, 0, UserHandle.USER_CURRENT),
                     0, UNSAFE_VOLUME_MUSIC_ACTIVE_MS_MAX);
-            if (mSafeVolumeEnabled &&
-                    mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_ACTIVE) {
+            if (mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_ACTIVE) {
                 enforceSafeMediaVolume(TAG);
             }
         }
@@ -3412,8 +3322,7 @@ public class AudioService extends IAudioService.Stub {
 
     private void onCheckMusicActive(String caller) {
         synchronized (mSafeMediaVolumeState) {
-            if (mSafeVolumeEnabled &&
-                    mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_INACTIVE) {
+            if (mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_INACTIVE) {
                 int device = getDeviceForStream(AudioSystem.STREAM_MUSIC);
 
                 if ((device & mSafeMediaVolumeDevices) != 0) {
@@ -3647,25 +3556,6 @@ public class AudioService extends IAudioService.Stub {
         return (mMuteAffectedStreams & (1 << streamType)) != 0;
     }
 
-    /** @hide */
-    public boolean isVisualizerLocked(String callingPackage) {
-        boolean isSystem = false;
-        for (int i = 0; i < VISUALIZER_WHITELIST.length; i++) {
-            if (TextUtils.equals(callingPackage, VISUALIZER_WHITELIST[i])) {
-                isSystem = true;
-                break;
-            }
-        }
-        return !isSystem && mVisualizerLocked;
-    }
-
-    /** @hide */
-    public void setVisualizerLocked(boolean doLock) {
-        if (mVisualizerLocked != doLock) {
-            mVisualizerLocked = doLock;
-        }
-    }
-
     private void ensureValidDirection(int direction) {
         switch (direction) {
             case AudioManager.ADJUST_LOWER:
@@ -4010,7 +3900,7 @@ public class AudioService extends IAudioService.Stub {
     public class VolumeStreamState {
         private final int mStreamType;
         private final int mIndexMin;
-        private int mIndexMax;
+        private final int mIndexMax;
 
         private boolean mIsMuted;
         private String mVolumeIndexSettingName;
@@ -4253,16 +4143,6 @@ public class AudioService extends IAudioService.Stub {
             return mIndexMax;
         }
 
-        public void setMaxIndex(int maxVol) {
-            mIndexMax = maxVol;
-            AudioSystem.initStreamVolume(mStreamType, 0, mIndexMax);
-            mIndexMax = maxVol;
-            mIndexMax *= 10;
-            // Volume steps changed, fire the intent.
-            Intent intent = new Intent(AudioManager.VOLUME_STEPS_CHANGED_ACTION);
-            sendBroadcastToAll(intent);
-        }
-
         public int getMinIndex() {
             return mIndexMin;
         }
@@ -4901,35 +4781,24 @@ public class AudioService extends IAudioService.Stub {
                 Settings.Secure.VOLUME_LINK_NOTIFICATION), false, this);
             mContentResolver.registerContentObserver(CMSettings.System.getUriFor(
                 CMSettings.System.VOLUME_KEYS_CONTROL_RING_STREAM), false, this);
-            mContentResolver.registerContentObserver(Settings.System.getUriFor(
-                Settings.System.SAFE_HEADSET_VOLUME), false, this,
-                UserHandle.USER_ALL);
         }
 
         @Override
-        public void onChange(boolean selfChange, Uri uri) {
-            super.onChange(selfChange, uri);
+        public void onChange(boolean selfChange) {
+            super.onChange(selfChange);
             // FIXME This synchronized is not necessary if mSettingsLock only protects mRingerMode.
             //       However there appear to be some missing locks around mRingerModeMutedStreams
             //       and mRingerModeAffectedStreams, so will leave this synchronized for now.
             //       mRingerModeMutedStreams and mMuteAffectedStreams are safe (only accessed once).
             synchronized (mSettingsLock) {
-                if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.SAFE_HEADSET_VOLUME))) {
-                    mSafeVolumeEnabled = safeVolumeEnabled(mContentResolver);
-                } else if (uri.equals(Settings.System.getUriFor(
-                    Settings.System.MODE_RINGER_STREAMS_AFFECTED))) {
                 if (updateRingerModeAffectedStreams()) {
                     /*
                      * Ensure all stream types that should be affected by ringer mode
                      * are in the proper state.
                      */
                     setRingerModeInt(getRingerModeInternal(), false);
-                    }
-                } else if (uri.equals(Settings.Global.getUriFor(
-                    Settings.Global.DOCK_AUDIO_MEDIA_ENABLED))) {
-                    readDockAudioSettings(mContentResolver);
                 }
+                readDockAudioSettings(mContentResolver);
 
                 boolean linkNotificationWithVolume = Settings.Secure.getInt(mContentResolver,
                         Settings.Secure.VOLUME_LINK_NOTIFICATION, 1) == 1;
@@ -5209,7 +5078,7 @@ public class AudioService extends IAudioService.Stub {
                         0,
                         null,
                         0);
-                delay = 700;
+                delay = 1000;
             }
         }
 
@@ -5291,20 +5160,19 @@ public class AudioService extends IAudioService.Stub {
         }
     }
 
-    private void startMusicPlayer()
-    {
-        boolean launchPlayer = Settings.System.getIntForUser(mContext.getContentResolver(),
-                Settings.System.HEADSET_CONNECT_PLAYER, 0, UserHandle.USER_CURRENT) != 0;
-
+    private void startMusicPlayer() {
+        boolean launchPlayer = CMSettings.System.getIntForUser(mContext.getContentResolver(),
+                CMSettings.System.HEADSET_CONNECT_PLAYER, 0, UserHandle.USER_CURRENT) != 0;
         TelecomManager tm = (TelecomManager) mContext.getSystemService(Context.TELECOM_SERVICE);
+
         if (launchPlayer && !tm.isInCall()) {
-            Intent playerIntent = new Intent(Intent.ACTION_MAIN);
-            playerIntent.addCategory(Intent.CATEGORY_APP_MUSIC);
-            playerIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             try {
+                Intent playerIntent = new Intent(Intent.ACTION_MAIN);
+                playerIntent.addCategory(Intent.CATEGORY_APP_MUSIC);
+                playerIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 mContext.startActivity(playerIntent);
-            } catch(ActivityNotFoundException e) {
-                Log.e(TAG, "error launching music player", e);
+            } catch (ActivityNotFoundException | IllegalArgumentException e) {
+                Log.w(TAG, "No music player Activity could be found");
             }
         }
     }
@@ -5886,8 +5754,6 @@ public class AudioService extends IAudioService.Stub {
     private Integer mSafeMediaVolumeState;
 
     private int mMcc = 0;
-    // mSafeVolumeEnabled indicates whether to check the volume of media play via headset
-    private boolean mSafeVolumeEnabled;
     // mSafeMediaVolumeIndex is the cached value of config_safe_media_volume_index property
     private int mSafeMediaVolumeIndex;
     // mSafeMediaVolumeDevices lists the devices for which safe media volume is enforced,
@@ -5903,8 +5769,7 @@ public class AudioService extends IAudioService.Stub {
 
     private void setSafeMediaVolumeEnabled(boolean on, String caller) {
         synchronized (mSafeMediaVolumeState) {
-            if (mSafeVolumeEnabled &&
-                    (mSafeMediaVolumeState != SAFE_MEDIA_VOLUME_NOT_CONFIGURED) &&
+            if ((mSafeMediaVolumeState != SAFE_MEDIA_VOLUME_NOT_CONFIGURED) &&
                     (mSafeMediaVolumeState != SAFE_MEDIA_VOLUME_DISABLED)) {
                 if (on && (mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_INACTIVE)) {
                     mSafeMediaVolumeState = SAFE_MEDIA_VOLUME_ACTIVE;
@@ -5952,8 +5817,7 @@ public class AudioService extends IAudioService.Stub {
 
     private boolean checkSafeMediaVolume(int streamType, int index, int device) {
         synchronized (mSafeMediaVolumeState) {
-            if (mSafeVolumeEnabled &&
-                    (mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_ACTIVE) &&
+            if ((mSafeMediaVolumeState == SAFE_MEDIA_VOLUME_ACTIVE) &&
                     (mStreamVolumeAlias[streamType] == AudioSystem.STREAM_MUSIC) &&
                     ((device & mSafeMediaVolumeDevices) != 0) &&
                     (index > mSafeMediaVolumeIndex)) {
diff --git a/services/core/java/com/android/server/display/DisplayPowerController.java b/services/core/java/com/android/server/display/DisplayPowerController.java
index 0006372..25e59d5 100644
--- a/services/core/java/com/android/server/display/DisplayPowerController.java
+++ b/services/core/java/com/android/server/display/DisplayPowerController.java
@@ -17,24 +17,14 @@
 package com.android.server.display;
 
 import com.android.internal.app.IBatteryStats;
-import com.android.internal.policy.IKeyguardService;
-import com.android.server.policy.keyguard.KeyguardServiceWrapper;
 import com.android.server.LocalServices;
 import com.android.server.am.BatteryStatsService;
 import com.android.server.lights.LightsManager;
 
 import android.animation.Animator;
 import android.animation.ObjectAnimator;
-import android.content.ComponentName;
-import android.content.ContentResolver;
 import android.content.Context;
-import android.content.Intent;
-import android.content.ServiceConnection;
 import android.content.res.Resources;
-import android.graphics.Bitmap;
-import android.graphics.Point;
-import android.graphics.Rect;
-import android.database.ContentObserver;
 import android.hardware.Sensor;
 import android.hardware.SensorEvent;
 import android.hardware.SensorEventListener;
@@ -42,23 +32,17 @@ import android.hardware.SensorManager;
 import android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks;
 import android.hardware.display.DisplayManagerInternal.DisplayPowerRequest;
 import android.os.Handler;
-import android.os.IBinder;
 import android.os.Looper;
 import android.os.Message;
 import android.os.PowerManager;
 import android.os.RemoteException;
 import android.os.SystemClock;
 import android.os.Trace;
-import android.os.UserHandle;
-import android.provider.Settings;
 import android.util.MathUtils;
 import android.util.Slog;
 import android.util.Spline;
 import android.util.TimeUtils;
 import android.view.Display;
-import android.view.Surface;
-import android.view.SurfaceControl;
-import android.view.WindowManager;
 import android.view.WindowManagerPolicy;
 
 import java.io.PrintWriter;
@@ -157,7 +141,7 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
     private Sensor mProximitySensor;
 
     // The doze screen brightness.
-    private int mScreenBrightnessDozeConfig;
+    private final int mScreenBrightnessDozeConfig;
 
     // The dim screen brightness.
     private final int mScreenBrightnessDimConfig;
@@ -272,26 +256,6 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
     private ObjectAnimator mColorFadeOffAnimator;
     private RampAnimator<DisplayPowerState> mScreenBrightnessRampAnimator;
 
-    private float mDozeBrightnessScale = -0.01f;
-    private final int mDozeBrightnessDefault;
-    private final int mMaxBrightness;
-
-    public static final String KEYGUARD_PACKAGE = "com.android.systemui";
-    public static final String KEYGUARD_CLASS = "com.android.systemui.keyguard.KeyguardService";
-    private KeyguardServiceWrapper mKeyguardService;
-    private final ServiceConnection mKeyguardConnection = new ServiceConnection() {
-        @Override
-        public void onServiceConnected(ComponentName name, IBinder service) {
-            mKeyguardService = new KeyguardServiceWrapper(mContext,
-                    IKeyguardService.Stub.asInterface(service));
-        }
-
-        @Override
-        public void onServiceDisconnected(ComponentName name) {
-            mKeyguardService = null;
-        }
-    };
-
     /**
      * Creates the display power controller.
      */
@@ -312,17 +276,8 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
         final int screenBrightnessSettingMinimum = clampAbsoluteBrightness(resources.getInteger(
                 com.android.internal.R.integer.config_screenBrightnessSettingMinimum));
 
-        // Settings observer
-        SettingsObserver observer = new SettingsObserver(mHandler);
-        observer.observe();
-
-        mDozeBrightnessDefault = resources.getInteger(
-                com.android.internal.R.integer.config_screenBrightnessDoze);
-        mMaxBrightness = resources.getInteger(
-                com.android.internal.R.integer.config_screenBrightnessSettingMaximum);
-        mScreenBrightnessDozeConfig = clampAbsoluteBrightness(
-                (mDozeBrightnessScale == -0.01f) ? mDozeBrightnessDefault
-                : (int) (mDozeBrightnessScale * mMaxBrightness));
+        mScreenBrightnessDozeConfig = clampAbsoluteBrightness(resources.getInteger(
+                com.android.internal.R.integer.config_screenBrightnessDoze));
 
         mScreenBrightnessDimConfig = clampAbsoluteBrightness(resources.getInteger(
                 com.android.internal.R.integer.config_screenBrightnessDim));
@@ -419,52 +374,8 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
                         TYPICAL_PROXIMITY_THRESHOLD);
             }
         }
-		
-        Intent intent = new Intent();
-        intent.setClassName(KEYGUARD_PACKAGE,
-                KEYGUARD_CLASS);
-        mContext.bindServiceAsUser(intent, mKeyguardConnection,
-                Context.BIND_AUTO_CREATE, UserHandle.OWNER);
 
     }
-        /**
-         * Settingsobserver to take care of the user settings.
-         */
-        private class SettingsObserver extends ContentObserver {
-            SettingsObserver(Handler handler) {
-                super(handler);
-            }
-
-            void observe() {
-                ContentResolver resolver = mContext.getContentResolver();
-                resolver.registerContentObserver(Settings.System.getUriFor(
-                        Settings.System.DOZE_BRIGHTNESS),
-                        false, this, UserHandle.USER_ALL);
-                update();
-            }
-
-            @Override
-            public void onChange(boolean selfChange) {
-                super.onChange(selfChange);
-                update();
-            }
-
-            public void update() {
-                ContentResolver resolver = mContext.getContentResolver();
-
-                // Get doze brightness
-                mDozeBrightnessScale = Settings.System.getFloatForUser(resolver,
-                        Settings.System.DOZE_BRIGHTNESS,
-                        -0.01f, UserHandle.USER_CURRENT);
-                // do not allow zero brightness
-                if (mDozeBrightnessScale == 0.0f) {
-                    mDozeBrightnessScale = 0.005f;
-                }
-                mScreenBrightnessDozeConfig = clampAbsoluteBrightness(
-                        (mDozeBrightnessScale == -0.01f) ? mDozeBrightnessDefault
-                        : (int) (mDozeBrightnessScale * mMaxBrightness));
-            }
-        }
 
     /**
      * Returns true if the proximity sensor screen-off function is available.
@@ -516,29 +427,6 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
             }
 
             if (changed && !mPendingRequestChangedLocked) {
-                if ((mKeyguardService != null && !mKeyguardService.isShowing())
-                        && request.policy == DisplayPowerRequest.POLICY_OFF) {
-                    boolean seeThrough = Settings.System.getBoolean(mContext.getContentResolver(),
-                            Settings.System.LOCKSCREEN_SEE_THROUGH, false);
-                    Bitmap bmp = null;
-                    if (seeThrough) {
-                        WindowManager wm = (WindowManager)
-                                mContext.getSystemService(Context.WINDOW_SERVICE);
-                        Display display = wm.getDefaultDisplay();
-                        Point point = new Point();
-                        display.getRealSize(point);
-                        int rotation = display.getRotation();
-                        if (rotation == Surface.ROTATION_90 || rotation == Surface.ROTATION_270) {
-                            point.set(point.y, point.x);
-                        }
-
-                        /* Limit max screenshot capture layer to 22000.
-                           Prevents status bar and navigation bar from being captured. */
-                        bmp = SurfaceControl.screenshot(new Rect(),
-                                point.x, point.y, 0, 22000, false, Surface.ROTATION_0);
-                    }
-                    mKeyguardService.setBackgroundBitmap(bmp);
-                }
                 mPendingRequestChangedLocked = true;
                 sendUpdatePowerStateLocked();
             }
diff --git a/services/core/java/com/android/server/fingerprint/FingerprintUtils.java b/services/core/java/com/android/server/fingerprint/FingerprintUtils.java
index 4a6ab1b..49dc8e4 100644
--- a/services/core/java/com/android/server/fingerprint/FingerprintUtils.java
+++ b/services/core/java/com/android/server/fingerprint/FingerprintUtils.java
@@ -18,9 +18,7 @@ package com.android.server.fingerprint;
 
 import android.content.Context;
 import android.hardware.fingerprint.Fingerprint;
-import android.os.UserHandle;
 import android.os.Vibrator;
-import android.provider.Settings;
 import android.text.TextUtils;
 import android.util.SparseArray;
 
@@ -83,9 +81,7 @@ public class FingerprintUtils {
 
     public static void vibrateFingerprintSuccess(Context context) {
         Vibrator vibrator = context.getSystemService(Vibrator.class);
-        boolean FingerprintVib = Settings.System.getIntForUser(context.getContentResolver(),
-            Settings.System.FINGERPRINT_SUCCESS_VIB, 1, UserHandle.USER_CURRENT) == 1;
-        if (vibrator != null && FingerprintVib) {
+        if (vibrator != null) {
             vibrator.vibrate(FP_SUCCESS_VIBRATE_PATTERN, -1);
         }
     }
diff --git a/services/core/java/com/android/server/location/GpsLocationProvider.java b/services/core/java/com/android/server/location/GpsLocationProvider.java
index 833c340..973393d 100644
--- a/services/core/java/com/android/server/location/GpsLocationProvider.java
+++ b/services/core/java/com/android/server/location/GpsLocationProvider.java
@@ -1118,7 +1118,7 @@ public class GpsLocationProvider implements LocationProviderInterface {
         }
 
         if (DEBUG) Log.d(TAG, "setRequest " + mProviderRequest);
-        if (mProviderRequest.reportLocation && !mDisableGps && isEnabled()) {
+        if (mProviderRequest.reportLocation && !mDisableGps) {
             // update client uids
             updateClientUids(mWorkSource);
 
@@ -1524,6 +1524,72 @@ public class GpsLocationProvider implements LocationProviderInterface {
         }
     }
 
+     /**
+     * Count number of GNSS satellites used in fix.
+     *
+     * We could not rely on Integer.bitCount as GNSS used-in-fix info is not
+     * represented as a bit-mask.
+     */
+    private int countGnssSvUsedInFix(final int gnssSvCount) {
+        int result = 0;
+
+        for (int i = 0; i < gnssSvCount; i++) {
+            if (mSvUsedInFix[i]) {
+                result++;
+            }
+        }
+
+        return result;
+    }
+
+    /**
+     * called from native code to update GNSS SV info
+     */
+    private void reportGnssSvStatus() {
+        final int svCount = native_read_gnss_sv_status(
+                mSvs,
+                mSnrs,
+                mSvElevations,
+                mSvAzimuths,
+                mSvEphemerisPresences,
+                mSvAlmanacPresences,
+                mSvUsedInFix);
+        mListenerHelper.onGnssSvStatusChanged(
+                svCount,
+                mSvs,
+                mSnrs,
+                mSvElevations,
+                mSvAzimuths,
+                mSvEphemerisPresences,
+                mSvAlmanacPresences,
+                mSvUsedInFix);
+
+        if (VERBOSE) {
+            Log.v(TAG, "GNSS SV count: " + svCount);
+            for (int i = 0; i < svCount; i++) {
+                Log.v(TAG, "sv: " + mSvs[i] +
+                        " snr: " + mSnrs[i]/10 +
+                        " elev: " + mSvElevations[i] +
+                        " azimuth: " + mSvAzimuths[i] +
+                        (!mSvEphemerisPresences[i] ? "  " : " E") +
+                        (!mSvAlmanacPresences[i] ? "  " : " A") +
+                        (!mSvUsedInFix[i] ? "" : "U"));
+            }
+        }
+
+        // return number of sets used in fix instead of total
+        updateStatus(mStatus, countGnssSvUsedInFix(svCount));
+
+        if (mNavigating && mStatus == LocationProvider.AVAILABLE && mLastFixTime > 0 &&
+            System.currentTimeMillis() - mLastFixTime > RECENT_FIX_TIMEOUT) {
+            // send an intent to notify that the GPS is no longer receiving fixes.
+            Intent intent = new Intent(LocationManager.GPS_FIX_CHANGE_ACTION);
+            intent.putExtra(LocationManager.EXTRA_GPS_ENABLED, false);
+            mContext.sendBroadcastAsUser(intent, UserHandle.ALL);
+            updateStatus(LocationProvider.TEMPORARILY_UNAVAILABLE, mSvCount);
+        }
+    }
+
     /**
      * called from native code to update AGPS status
      */
@@ -2256,13 +2322,19 @@ public class GpsLocationProvider implements LocationProviderInterface {
     private static final int EPHEMERIS_MASK = 0;
     private static final int ALMANAC_MASK = 1;
     private static final int USED_FOR_FIX_MASK = 2;
+  
+    // GNSS extension
+    private static final int MAX_GNSS_SVS = 256;
 
     // preallocated arrays, to avoid memory allocation in reportStatus()
-    private int mSvs[] = new int[MAX_SVS];
-    private float mSnrs[] = new float[MAX_SVS];
-    private float mSvElevations[] = new float[MAX_SVS];
-    private float mSvAzimuths[] = new float[MAX_SVS];
+    private int mSvs[] = new int[MAX_GNSS_SVS];
+    private float mSnrs[] = new float[MAX_GNSS_SVS];
+    private float mSvElevations[] = new float[MAX_GNSS_SVS];
+    private float mSvAzimuths[] = new float[MAX_GNSS_SVS];
     private int mSvMasks[] = new int[3];
+    private boolean mSvEphemerisPresences[] = new boolean[MAX_GNSS_SVS];
+    private boolean mSvAlmanacPresences[] = new boolean[MAX_GNSS_SVS];
+    private boolean mSvUsedInFix[] = new boolean[MAX_GNSS_SVS];
     private int mSvCount;
     // preallocated to avoid memory allocation in reportNmea()
     private byte[] mNmeaBuffer = new byte[120];
@@ -2284,6 +2356,12 @@ public class GpsLocationProvider implements LocationProviderInterface {
     // mask[0] is ephemeris mask and mask[1] is almanac mask
     private native int native_read_sv_status(int[] svs, float[] snrs,
             float[] elevations, float[] azimuths, int[] masks);
+    // returns number of GNSS SVs
+    private native int native_read_gnss_sv_status(int[] svs, float[] snrs,
+            float[] elevations, float[] azimuths,
+            boolean[] ephemerisPresences,
+            boolean[] almanacPresences,
+            boolean[] usedInFix);
     private native int native_read_nmea(byte[] buffer, int bufferSize);
     private native void native_inject_location(double latitude, double longitude, float accuracy);
 
diff --git a/services/core/java/com/android/server/location/GpsStatusListenerHelper.java b/services/core/java/com/android/server/location/GpsStatusListenerHelper.java
index 53ff6c2..3e31fea 100644
--- a/services/core/java/com/android/server/location/GpsStatusListenerHelper.java
+++ b/services/core/java/com/android/server/location/GpsStatusListenerHelper.java
@@ -97,6 +97,32 @@ abstract class GpsStatusListenerHelper extends RemoteListenerHelper<IGpsStatusLi
         };
         foreach(operation);
     }
+  
+    public void onGnssSvStatusChanged(
+            final int svCount,
+            final int[] prns,
+            final float[] snrs,
+            final float[] elevations,
+            final float[] azimuths,
+            final boolean[] ephemerisPresences,
+            final boolean[] almanacPresences,
+            final boolean[] usedInFix) {
+        Operation operation = new Operation() {
+            @Override
+            public void execute(IGpsStatusListener listener) throws RemoteException {
+                listener.onGnssSvStatusChanged(
+                        svCount,
+                        prns,
+                        snrs,
+                        elevations,
+                        azimuths,
+                        ephemerisPresences,
+                        almanacPresences,
+                        usedInFix);
+            }
+        };
+        foreach(operation);
+    }
 
     public void onNmeaReceived(final long timestamp, final String nmea) {
         Operation operation = new Operation() {
diff --git a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
index 5db138b..4c847a2 100644
--- a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
+++ b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
@@ -1082,7 +1082,8 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
         final CharSequence title = res.getText(R.string.data_usage_restricted_title);
         final CharSequence body = res.getString(R.string.data_usage_restricted_body);
 
-        builder.setOngoing(false);
+        builder.setOnlyAlertOnce(true);
+        builder.setOngoing(true);
         builder.setSmallIcon(R.drawable.stat_notify_error);
         builder.setTicker(title);
         builder.setContentTitle(title);
@@ -2230,12 +2231,23 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
         uidRules.clear();
 
         // Fully update the app idle firewall chain.
+        final IPackageManager ipm = AppGlobals.getPackageManager();
         final List<UserInfo> users = mUserManager.getUsers();
         for (int ui = users.size() - 1; ui >= 0; ui--) {
             UserInfo user = users.get(ui);
             int[] idleUids = mUsageStats.getIdleUidsForUser(user.id);
             for (int uid : idleUids) {
                 if (!mPowerSaveTempWhitelistAppIds.get(UserHandle.getAppId(uid), false)) {
+                    // quick check: if this uid doesn't have INTERNET permission, it
+                    // doesn't have network access anyway, so it is a waste to mess
+                    // with it here.
+                    try {
+                        if (ipm.checkUidPermission(Manifest.permission.INTERNET, uid)
+                                != PackageManager.PERMISSION_GRANTED) {
+                            continue;
+                        }
+                    } catch (RemoteException e) {
+                    }
                     uidRules.put(uid, FIREWALL_RULE_DENY);
                 }
             }
diff --git a/services/core/java/com/android/server/notification/NotificationManagerService.java b/services/core/java/com/android/server/notification/NotificationManagerService.java
index e0c9853..76c97cb 100644
--- a/services/core/java/com/android/server/notification/NotificationManagerService.java
+++ b/services/core/java/com/android/server/notification/NotificationManagerService.java
@@ -307,9 +307,6 @@ public class NotificationManagerService extends SystemService {
     // The last key in this list owns the hardware.
     ArrayList<String> mLights = new ArrayList<>();
 
-    private HashMap<String, Long> mAnnoyingNotifications = new HashMap<String, Long>();
-    private long mAnnoyingNotificationThreshold = -1;
-
     private AppOpsManager mAppOps;
     private UsageStatsManagerInternal mAppUsageStats;
 
@@ -978,8 +975,6 @@ public class NotificationManagerService extends SystemService {
                 = Settings.System.getUriFor(Settings.System.NOTIFICATION_LIGHT_PULSE);
         private final Uri ENABLED_NOTIFICATION_LISTENERS_URI
                 = Settings.Secure.getUriFor(Settings.Secure.ENABLED_NOTIFICATION_LISTENERS);
-        private final Uri MUTE_ANNOYING_NOTIFICATIONS_THRESHOLD_URI
-                = Settings.System.getUriFor(Settings.System.MUTE_ANNOYING_NOTIFICATIONS_THRESHOLD);
 
         SettingsObserver(Handler handler) {
             super(handler);
@@ -1025,8 +1020,6 @@ public class NotificationManagerService extends SystemService {
                         CMSettings.System.NOTIFICATION_LIGHT_MULTIPLE_LEDS_ENABLE),
                         false, this, UserHandle.USER_ALL);
             }
-            resolver.registerContentObserver(MUTE_ANNOYING_NOTIFICATIONS_THRESHOLD_URI,
-                    false, this, UserHandle.USER_ALL);
             update(null);
         }
 
@@ -1093,12 +1086,6 @@ public class NotificationManagerService extends SystemService {
                     CMSettings.System.NOTIFICATION_LIGHT_SCREEN_ON,
                     mScreenOnDefault ? 1 : 0, UserHandle.USER_CURRENT) != 0);
 
-            if (uri == null || MUTE_ANNOYING_NOTIFICATIONS_THRESHOLD_URI.equals(uri)) {
-                mAnnoyingNotificationThreshold = Settings.System.getLongForUser(resolver,
-                       Settings.System.MUTE_ANNOYING_NOTIFICATIONS_THRESHOLD, 0,
-                       UserHandle.USER_CURRENT_OR_SELF);
-            }
-
             updateNotificationPulse();
 
             mDisableDuckingWhileMedia = CMSettings.Global.getInt(resolver,
@@ -1581,19 +1568,6 @@ public class NotificationManagerService extends SystemService {
         }
 
         @Override
-        public void setHaloPolicyBlack(String pkg, int uid, boolean allowed) {
-            checkCallerIsSystem();
-            mRankingHelper.setHaloPolicyBlack(pkg, uid, allowed);
-            savePolicyFile();
-        }
-
-        @Override
-        public boolean isPackageAllowedForHalo(String pkg, int uid) {
-            enforceSystemOrSystemUI("INotificationManager.setHaloBlacklistStatus");
-            return mRankingHelper.isPackageAllowedForHalo(pkg, uid);
-        }
-
-        @Override
         public void setPackageVisibilityOverride(String pkg, int uid, int visibility) {
             checkCallerIsSystem();
             mRankingHelper.setPackageVisibilityOverride(pkg, uid, visibility);
@@ -2017,7 +1991,6 @@ public class NotificationManagerService extends SystemService {
         }
 
         private void enforcePolicyAccess(String pkg, String method) {
-            checkCallerIsSameApp(pkg);
             if (!checkPolicyAccess(pkg)) {
                 Slog.w(TAG, "Notification policy access denied calling " + method);
                 throw new SecurityException("Notification policy access denied");
@@ -2694,40 +2667,19 @@ public class NotificationManagerService extends SystemService {
         return false;
     }
 
-    private boolean notificationIsAnnoying(String pkg) {
-        if (pkg == null
-                || mAnnoyingNotificationThreshold <= 0
-                || "android".equals(pkg)) {
-            return false;
-        }
-
-        long currentTime = System.currentTimeMillis();
-        if (mAnnoyingNotifications.containsKey(pkg)
-                && (currentTime - mAnnoyingNotifications.get(pkg)
-                < mAnnoyingNotificationThreshold)) {
-            // less than threshold; it's an annoying notification!!
-            return true;
-        } else {
-            // not in map or time to re-add
-            mAnnoyingNotifications.put(pkg, currentTime);
-            return false;
-        }
-    }
-
     private void buzzBeepBlinkLocked(NotificationRecord record) {
         boolean buzz = false;
         boolean beep = false;
         boolean blink = false;
 
         final Notification notification = record.sbn.getNotification();
-        final String pkg = record.sbn.getPackageName();
 
         // Should this notification make noise, vibe, or use the LED?
         final boolean aboveThreshold = record.score >= SCORE_INTERRUPTION_THRESHOLD;
         final boolean canInterrupt = aboveThreshold && !record.isIntercepted();
         if (DBG || record.isIntercepted())
             Slog.v(TAG,
-                    "pkg=" + pkg + " canInterrupt=" + canInterrupt +
+                    "pkg=" + record.sbn.getPackageName() + " canInterrupt=" + canInterrupt +
                             " intercept=" + record.isIntercepted()
             );
 
@@ -2753,7 +2705,6 @@ public class NotificationManagerService extends SystemService {
                     mUserProfiles.isCurrentProfile(record.getUserId()))
                 && canInterrupt
                 && mSystemReady
-                && !notificationIsAnnoying(pkg)
                 && mAudioManager != null) {
             if (DBG) Slog.v(TAG, "Interrupting!");
 
@@ -3678,10 +3629,6 @@ public class NotificationManagerService extends SystemService {
         if (isCallerSystem()) {
             return;
         }
-        checkCallerIsSameApp(pkg);
-    }
-
-    private static void checkCallerIsSameApp(String pkg) {
         final int uid = Binder.getCallingUid();
         try {
             ApplicationInfo ai = AppGlobals.getPackageManager().getApplicationInfo(
diff --git a/services/core/java/com/android/server/notification/RankingConfig.java b/services/core/java/com/android/server/notification/RankingConfig.java
index 8bac520..320cf75 100644
--- a/services/core/java/com/android/server/notification/RankingConfig.java
+++ b/services/core/java/com/android/server/notification/RankingConfig.java
@@ -32,7 +32,4 @@ public interface RankingConfig {
 
     int getShowNotificationForPackageOnKeyguard(String packageName, int uid);
 
-    boolean isPackageAllowedForHalo(String packageName, int uid);
-
-    void setHaloPolicyBlack(String packagename, int uid, boolean floating);
 }
diff --git a/services/core/java/com/android/server/notification/RankingHelper.java b/services/core/java/com/android/server/notification/RankingHelper.java
index e1d0cc2..5112370 100644
--- a/services/core/java/com/android/server/notification/RankingHelper.java
+++ b/services/core/java/com/android/server/notification/RankingHelper.java
@@ -52,13 +52,11 @@ public class RankingHelper implements RankingConfig {
     private static final String ATT_PEEKABLE = "peekable";
     private static final String ATT_VISIBILITY = "visibility";
     private static final String ATT_KEYGUARD = "keyguard";
-    private static final String ATT_HALO = "halo";
 
     private static final int DEFAULT_PRIORITY = Notification.PRIORITY_DEFAULT;
     private static final boolean DEFAULT_PEEKABLE = true;
     private static final int DEFAULT_VISIBILITY =
             NotificationListenerService.Ranking.VISIBILITY_NO_OVERRIDE;
-    private static final boolean DEFAULT_HALO = true;
 
     private final NotificationSignalExtractor[] mSignalExtractors;
     private final NotificationComparator mPreliminaryComparator = new NotificationComparator();
@@ -148,7 +146,6 @@ public class RankingHelper implements RankingConfig {
                     int vis = safeInt(parser, ATT_VISIBILITY, DEFAULT_VISIBILITY);
                     int keyguard = safeInt(parser, ATT_KEYGUARD,
                             Notification.SHOW_ALL_NOTI_ON_KEYGUARD);
-                    boolean halo = safeBool(parser, ATT_HALO, DEFAULT_HALO);
                     String name = parser.getAttributeValue(null, ATT_NAME);
 
                     if (!TextUtils.isEmpty(name)) {
@@ -181,9 +178,6 @@ public class RankingHelper implements RankingConfig {
                         if (keyguard != Notification.SHOW_ALL_NOTI_ON_KEYGUARD) {
                             r.keyguard = keyguard;
                         }
-                        if (halo != DEFAULT_HALO) {
-                            r.halo = halo;
-                        }
                     }
                 }
             }
@@ -212,9 +206,9 @@ public class RankingHelper implements RankingConfig {
         for (int i = N - 1; i >= 0; i--) {
             final Record r = mRecords.valueAt(i);
             if (r.priority == DEFAULT_PRIORITY && r.peekable == DEFAULT_PEEKABLE
-	      && r.visibility == DEFAULT_VISIBILITY
-              && r.keyguard == Notification.SHOW_ALL_NOTI_ON_KEYGUARD && r.halo == DEFAULT_HALO) {
-            mRecords.removeAt(i);
+                    && r.visibility == DEFAULT_VISIBILITY
+                    && r.keyguard == Notification.SHOW_ALL_NOTI_ON_KEYGUARD) {
+                mRecords.removeAt(i);
             }
         }
     }
@@ -243,9 +237,6 @@ public class RankingHelper implements RankingConfig {
             if (r.keyguard != Notification.SHOW_ALL_NOTI_ON_KEYGUARD) {
                 out.attribute(null, ATT_KEYGUARD, Integer.toBinaryString(r.keyguard));
             }
-            if (r.halo != DEFAULT_HALO) {
-                out.attribute(null, ATT_HALO, Boolean.toString(r.halo));
-            }
             if (!forBackup) {
                 out.attribute(null, ATT_UID, Integer.toString(r.uid));
             }
@@ -413,22 +404,6 @@ public class RankingHelper implements RankingConfig {
         updateConfig();
     }
 
-    @Override
-    public boolean isPackageAllowedForHalo(String packageName, int uid) {
-        final Record r = mRecords.get(recordKey(packageName, uid));
-        return r != null ? r.halo : DEFAULT_HALO;
-    }
-
-    @Override
-    public void setHaloPolicyBlack(String packageName, int uid, boolean halo) {
-        if (halo == isPackageAllowedForHalo(packageName, uid)) {
-            return;
-        }
-        getOrCreateRecord(packageName, uid).halo = halo;
-        removeDefaultRecords();
-        updateConfig();
-    }
-
     public void dump(PrintWriter pw, String prefix, NotificationManagerService.DumpFilter filter) {
         if (filter == null) {
             final int N = mSignalExtractors.length;
@@ -473,10 +448,6 @@ public class RankingHelper implements RankingConfig {
                     pw.print(" visibility=");
                     pw.print(Notification.visibilityToString(r.visibility));
                 }
-                if (r.halo != DEFAULT_HALO) {
-                    pw.print("halo=");
-                    pw.print(r.halo);
-                }
                 pw.println();
             }
         }
@@ -516,7 +487,6 @@ public class RankingHelper implements RankingConfig {
         boolean peekable = DEFAULT_PEEKABLE;
         int visibility = DEFAULT_VISIBILITY;
         int keyguard = Notification.SHOW_ALL_NOTI_ON_KEYGUARD;
-        boolean halo = DEFAULT_HALO;
     }
 
 }
diff --git a/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java b/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java
index 8db2aee..29e9fa6 100644
--- a/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java
+++ b/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java
@@ -572,12 +572,6 @@ final class DefaultPermissionGrantPolicy {
                 grantRuntimePermissionsLPw(musicPackage, STORAGE_PERMISSIONS, userId);
             }
 
-	    // LockClock
-	    PackageParser.Package lockClock = getDefaultProviderAuthorityPackageLPr(
-		    "com.cyanogenmod.lockclock", userId);
-	    if (lockClock != null) {
-		grantRuntimePermissionsLPw(lockClock, LOCATION_PERMISSIONS, true, userId);
-	    }
             // Android Wear Home
             if (mService.hasSystemFeature(PackageManager.FEATURE_WATCH)) {
                 Intent homeIntent = new Intent(Intent.ACTION_MAIN);
diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
index d8aecc9..920a850 100644
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -221,8 +221,6 @@ import android.util.SparseBooleanArray;
 import android.util.SparseIntArray;
 import android.util.Xml;
 import android.view.Display;
-import android.view.WindowManager;
-import android.view.WindowManagerPolicy;
 
 import cyanogenmod.providers.CMSettings;
 import cyanogenmod.themes.IThemeService;
@@ -251,7 +249,6 @@ import com.android.server.EventLogTags;
 import com.android.server.FgThread;
 import com.android.server.IntentResolver;
 import com.android.server.LocalServices;
-import com.android.server.policy.PhoneWindowManager;
 import com.android.server.ServiceThread;
 import com.android.server.SystemConfig;
 import com.android.server.SystemConfig.AppLink;
@@ -995,9 +992,6 @@ public class PackageManagerService extends IPackageManager.Stub {
     // Stores a list of users whose package restrictions file needs to be updated
     private ArraySet<Integer> mDirtyUsers = new ArraySet<Integer>();
 
-    WindowManager mWindowManager;
-    private final WindowManagerPolicy mPolicy; // to set packageName
-
     final private DefaultContainerConnection mDefContainerConn =
             new DefaultContainerConnection();
     class DefaultContainerConnection implements ServiceConnection {
@@ -1967,11 +1961,6 @@ public class PackageManagerService extends IPackageManager.Stub {
             mSeparateProcesses = null;
         }
 
-        mWindowManager = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);
-        Display d = mWindowManager.getDefaultDisplay();
-        mPolicy = new PhoneWindowManager();
-        d.getMetrics(mMetrics);
-
         mInstaller = installer;
         mPackageDexOptimizer = new PackageDexOptimizer(this);
         mMoveCallbacks = new MoveCallbacks(FgThread.get().getLooper());
@@ -6375,8 +6364,8 @@ public class PackageManagerService extends IPackageManager.Stub {
                 if (doTrim) {
                     if (!isFirstBoot()) {
                         try {
-                            ActivityManagerNative.getDefault().showBootMessage(
-                                    null, Integer.MIN_VALUE + 1, Integer.MIN_VALUE + 1, true);
+                            ActivityManagerNative.getDefault().updateBootProgress(
+                                    IActivityManager.BOOT_STAGE_FSTRIM, null, 0, 0, true);
                         } catch (RemoteException e) {
                         }
                     }
@@ -6503,19 +6492,11 @@ public class PackageManagerService extends IPackageManager.Stub {
             Log.i(TAG, "Optimizing app " + curr + " of " + total + ": " + pkg.packageName);
         }
         try {
-            // give the packagename to the PhoneWindowManager
-            ApplicationInfo ai;
-            try {
-                ai = mContext.getPackageManager().getApplicationInfo(pkg.packageName, 0);
-            } catch (Exception e) {
-                ai = null;
-            }
-            mPolicy.setPackageName((String) (ai != null ? mContext.getPackageManager().getApplicationLabel(ai) : pkg.packageName));
-
-            ActivityManagerNative.getDefault().showBootMessage(pkg.applicationInfo, curr, total, true);
+            ActivityManagerNative.getDefault().updateBootProgress(
+                    IActivityManager.BOOT_STAGE_PREPARING_APPS,
+                    pkg.applicationInfo, curr, total, true);
         } catch (RemoteException e) {
         }
-
         PackageParser.Package p = pkg;
         synchronized (mInstallLock) {
             mPackageDexOptimizer.performDexOpt(p, null /* instruction sets */,
@@ -7964,10 +7945,22 @@ public class PackageManagerService extends IPackageManager.Stub {
                     }
 
                     if (failedException != null) {
-                        Slog.w(TAG, "Unable to process theme " + pkgName + " for " + target,
-                                failedException);
-                        // remove target from mOverlayTargets
-                        iterator.remove();
+                        if (failedException instanceof AaptException &&
+                                ((AaptException) failedException).isCommon) {
+                            Slog.e(TAG, "Unable to process common resources for " + pkgName +
+                                    ", uninstalling theme.", failedException);
+                            uninstallThemeForAllApps(pkg);
+                            deletePackageLI(pkg.packageName, null, true, null, null, 0, null,
+                                    false);
+                            throw new PackageManagerException(
+                                    PackageManager.INSTALL_FAILED_THEME_AAPT_ERROR,
+                                    "Unable to process theme " + pkgName, failedException);
+                        } else {
+                            Slog.w(TAG, "Unable to process theme " + pkgName + " for " + target,
+                                    failedException);
+                            // remove target from mOverlayTargets
+                            iterator.remove();
+                        }
                     }
                 }
             }
@@ -8340,8 +8333,15 @@ public class PackageManagerService extends IPackageManager.Stub {
     }
 
     public class AaptException extends Exception {
+        boolean isCommon;
+
         public AaptException(String message) {
+            this(message, false);
+        }
+
+        public AaptException(String message, boolean isCommon) {
             super(message);
+            this.isCommon = isCommon;
         }
     }
 
@@ -8379,7 +8379,7 @@ public class PackageManagerService extends IPackageManager.Stub {
             pkgId = Resources.THEME_APP_PKG_ID;
         }
 
-        boolean hasCommonResources = (hasCommonResources(pkg) && !COMMON_OVERLAY.equals(target));
+        boolean hasCommonResources = (hasCommonResources(pkg) && !isCommonResources);
         PackageParser.Package targetPkg = mPackages.get(target);
         String appPath = targetPkg != null ? targetPkg.baseCodePath :
                 Environment.getRootDirectory() + "/framework/framework-res.apk";
@@ -8389,7 +8389,7 @@ public class PackageManagerService extends IPackageManager.Stub {
                 appPath,
                 hasCommonResources ? ThemeUtils.getTargetCacheDir(COMMON_OVERLAY, pkg)
                         + File.separator + "resources.apk" : "") != 0) {
-            throw new AaptException("Failed to run aapt");
+            throw new AaptException("Failed to run aapt", isCommonResources);
         }
     }
 
@@ -18143,10 +18143,20 @@ public class PackageManagerService extends IPackageManager.Stub {
             }
 
             if (failedException != null) {
-                Slog.w(TAG, "Unable to process theme " + pkg.packageName + " for " + target,
-                        failedException);
-                // remove target from mOverlayTargets
-                iterator.remove();
+                if (failedException instanceof AaptException &&
+                        ((AaptException) failedException).isCommon) {
+                    Slog.e(TAG, "Unable to process common resources for " + pkg.packageName +
+                            ", uninstalling theme.", failedException);
+                    uninstallThemeForAllApps(pkg);
+                    deletePackageX(pkg.packageName, getCallingUid(),
+                            PackageManager.DELETE_ALL_USERS);
+                    return PackageManager.INSTALL_FAILED_THEME_AAPT_ERROR;
+                } else {
+                    Slog.w(TAG, "Unable to process theme " + pkg.packageName + " for " + target,
+                            failedException);
+                    // remove target from mOverlayTargets
+                    iterator.remove();
+                }
             }
         }
 
diff --git a/services/core/java/com/android/server/pm/UserManagerService.java b/services/core/java/com/android/server/pm/UserManagerService.java
index 583d764..96d505b 100644
--- a/services/core/java/com/android/server/pm/UserManagerService.java
+++ b/services/core/java/com/android/server/pm/UserManagerService.java
@@ -301,7 +301,7 @@ public class UserManagerService extends IUserManager.Stub {
     @Override
     public List<UserInfo> getProfiles(int userId, boolean enabledOnly) {
         if (userId != UserHandle.getCallingUserId()) {
-            checkManageOrCreateUsersPermission("getting profiles related to user " + userId);
+            checkManageUsersPermission("getting profiles related to user " + userId);
         }
         final long ident = Binder.clearCallingIdentity();
         try {
diff --git a/services/core/java/com/android/server/policy/GlobalActions.java b/services/core/java/com/android/server/policy/GlobalActions.java
index c5a373f..96e1c70 100644
--- a/services/core/java/com/android/server/policy/GlobalActions.java
+++ b/services/core/java/com/android/server/policy/GlobalActions.java
@@ -49,10 +49,6 @@ import android.graphics.RectF;
 import android.graphics.Shader;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
-import android.hardware.camera2.CameraManager;
-import android.hardware.camera2.CameraCharacteristics;
-import android.hardware.camera2.CameraAccessException;
-import android.Manifest;
 import android.media.AudioManager;
 import android.net.ConnectivityManager;
 import android.os.Build;
@@ -82,7 +78,6 @@ import android.text.TextUtils;
 import android.util.ArraySet;
 import android.util.Log;
 import android.util.TypedValue;
-import android.view.Gravity;
 import android.view.InputDevice;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -111,9 +106,6 @@ import org.cyanogenmod.internal.util.ThemeUtils;
 
 import static com.android.internal.util.cm.PowerMenuConstants.*;
 
-
-import com.android.internal.util.rr.NamelessActions;
-
 /**
  * Helper to show the global actions dialog.  Each item is an {@link Action} that
  * may show depending on whether the keyguard is showing, and whether the device
@@ -146,11 +138,9 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
     private boolean mHasTelephony;
     private boolean mHasVibrator;
     private final boolean mShowSilentToggle;
-    private static boolean mTorchEnabled = false;
 
     // Power menu customizations
     String mActions;
-    private int mScreenshotDelay;
 
     private BitSet mAirplaneModeBits;
     private final List<PhoneStateListener> mPhoneStateListeners = new ArrayList<>();
@@ -282,92 +272,21 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
 
     private void handleShow() {
         awakenIfNecessary();
-        checkSettings();
         mDialog = createDialog();
         prepareDialog();
-        WindowManager.LayoutParams attrs = mDialog.getWindow().getAttributes();
-            attrs.setTitle("GlobalActions");
-
-        boolean isPrimary = UserHandle.getCallingUserId() == UserHandle.USER_OWNER;
-        int powermenuAnimations = isPrimary ? getPowermenuAnimations() : 0;
-
-        if (powermenuAnimations == 0) {
-         // default AOSP action
-        }
-        if (powermenuAnimations == 1) {
-            attrs.windowAnimations = R.style.PowerMenuBottomAnimation;
-            attrs.gravity = Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 2) {
-            attrs.windowAnimations = R.style.PowerMenuTopAnimation;
-            attrs.gravity = Gravity.TOP|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 3) {
-                attrs.windowAnimations = R.style.PowerMenuRotateAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 4) {
-                attrs.windowAnimations = R.style.PowerMenuXylonAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 5) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 6) {
-                attrs.windowAnimations = R.style.PowerMenuTnAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 7) {
-                attrs.windowAnimations = R.style.PowerMenuflyAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 8) {
-                attrs.windowAnimations = R.style.PowerMenuCardAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 9) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.TOP|Gravity.CENTER_HORIZONTAL;
-        }
-        if (powermenuAnimations == 10) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL;
-        } 
-
-        if (Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSPARENT_POWER_MENU, 100) != 100) {
-                attrs.alpha = setPowerMenuAlpha();
-            }
 
+        // If we only have 1 item and it's a simple press action, just do this action.
+        if (mAdapter.getCount() == 1
+                && mAdapter.getItem(0) instanceof SinglePressAction
+                && !(mAdapter.getItem(0) instanceof LongPressAction)) {
+            ((SinglePressAction) mAdapter.getItem(0)).onPress();
+        } else {
+            WindowManager.LayoutParams attrs = mDialog.getWindow().getAttributes();
+            attrs.setTitle("GlobalActions");
             mDialog.getWindow().setAttributes(attrs);
-            if (Settings.System.getInt(mContext.getContentResolver(),
-                    Settings.System.TRANSPARENT_POWER_DIALOG_DIM, 50) != 50) {
-                mDialog.getWindow().setDimAmount(setPowerMenuDialogDim());
-            }
             mDialog.show();
-            mDialog.getWindow().getDecorView().setSystemUiVisibility(View.STATUS_BAR_DISABLE_EXPAND); 
-        }  
-	
-    private int getPowermenuAnimations() {
-        return Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.POWER_MENU_ANIMATIONS, 0);
-    }
-
-    private float setPowerMenuAlpha() {
-        int mPowerMenuAlpha = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.TRANSPARENT_POWER_MENU, 100);
-        double dAlpha = mPowerMenuAlpha / 100.0;
-        float alpha = (float) dAlpha;
-        return alpha;
-    }
-
-    private float setPowerMenuDialogDim() {
-        int mPowerMenuDialogDim = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.TRANSPARENT_POWER_DIALOG_DIM, 50);
-        double dDim = mPowerMenuDialogDim / 100.0;
-        float dim = (float) dDim;
-        return dim;
+            mDialog.getWindow().getDecorView().setSystemUiVisibility(View.STATUS_BAR_DISABLE_EXPAND);
+        }
     }
 
     private Context getUiContext() {
@@ -434,34 +353,6 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
 
         mItems = new ArrayList<Action>();
 
-	// next: On-The-Go, if enabled
-        boolean showOnTheGo = Settings.System.getBoolean(mContext.getContentResolver(),
-                Settings.System.POWER_MENU_ONTHEGO_ENABLED, false);
-        if (showOnTheGo) {
-            mItems.add(
-                new SinglePressAction(com.android.internal.R.drawable.ic_lock_onthego,
-                        R.string.global_action_onthego) {
-
-                        public void onPress() {
-                            NamelessActions.processAction(mContext,
-                                    NamelessActions.ACTION_ONTHEGO_TOGGLE);
-                        }
-
-                        public boolean onLongPress() {
-                            return false;
-                        }
-
-                        public boolean showDuringKeyguard() {
-                            return true;
-                        }
-
-                        public boolean showBeforeProvisioning() {
-                            return true;
-                        }
-                    }
-            );
-        }
-
         String[] actionsArray;
         if (mActions == null) {
             actionsArray = mContext.getResources().getStringArray(
@@ -486,8 +377,6 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
                 mItems.add(new RebootAction());
             } else if (GLOBAL_ACTION_KEY_SCREENSHOT.equals(actionKey)) {
                 mItems.add(getScreenshotAction());
-            } else if (GLOBAL_ACTION_KEY_SCREENRECORD.equals(actionKey)) {
-                mItems.add(getScreenrecordAction());
             } else if (GLOBAL_ACTION_KEY_AIRPLANE.equals(actionKey)) {
                 mItems.add(mAirplaneModeOn);
             } else if (GLOBAL_ACTION_KEY_BUGREPORT.equals(actionKey)) {
@@ -495,8 +384,6 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
                         Settings.Global.BUGREPORT_IN_POWER_MENU, 0) != 0 && isCurrentUserOwner()) {
                     mItems.add(getBugReportAction());
                 }
-            } else if (GLOBAL_ACTION_KEY_TORCH.equals(actionKey)) {
-                mItems.add(getTorchToggleAction());
             } else if (GLOBAL_ACTION_KEY_SILENT.equals(actionKey)) {
                 if (mShowSilentToggle) {
                     mItems.add(mSilentModeAction);
@@ -634,56 +521,6 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
         };
     }
 
-    private Action getScreenrecordAction() {
-        return new SinglePressAction(com.android.internal.R.drawable.ic_lock_screenrecord,
-                R.string.global_action_screenrecord) {
-
-            public void onPress() {
-                takeScreenrecord();
-            }
-
-            public boolean showDuringKeyguard() {
-                return true;
-            }
-
-            public boolean showBeforeProvisioning() {
-                return false;
-            }
-        };
-    }
-
-
-    private Action getTorchToggleAction() {
-        return new SinglePressAction(com.android.internal.R.drawable.ic_lock_torch,
-                R.string.global_action_torch) {
-
-            public void onPress() {
-                try {
-                    CameraManager cameraManager = (CameraManager)
-                            mContext.getSystemService(Context.CAMERA_SERVICE);
-                    for (final String cameraId : cameraManager.getCameraIdList()) {
-                        CameraCharacteristics characteristics =
-                            cameraManager.getCameraCharacteristics(cameraId);
-                        int orient = characteristics.get(CameraCharacteristics.LENS_FACING);
-                        if (orient == CameraCharacteristics.LENS_FACING_BACK) {
-                            cameraManager.setTorchMode(cameraId, !mTorchEnabled);
-                            mTorchEnabled = !mTorchEnabled;
-                        }
-                    }
-                } catch (CameraAccessException e) {
-                }
-            }
-
-            public boolean showDuringKeyguard() {
-                return true;
-            }
-
-            public boolean showBeforeProvisioning() {
-                return false;
-            }
-        };
-    }
-
     private Action getBugReportAction() {
         return new SinglePressAction(com.android.internal.R.drawable.ic_lock_bugreport,
                 R.string.bugreport_title) {
@@ -955,7 +792,7 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
 
                         /* wait for the dialog box to close */
                         try {
-                             Thread.sleep(mScreenshotDelay * 1000);
+                            Thread.sleep(1000);
                         } catch (InterruptedException ie) {
                             // Do nothing
                         }
@@ -979,80 +816,6 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
         }
     }
 
-    /**
-     * functions needed for taking screen record.
-     */
-    final Object mScreenrecordLock = new Object();
-    ServiceConnection mScreenrecordConnection = null;
-
-    final Runnable mScreenrecordTimeout = new Runnable() {
-        @Override public void run() {
-            synchronized (mScreenrecordLock) {
-                if (mScreenrecordConnection != null) {
-                    mContext.unbindService(mScreenrecordConnection);
-                    mScreenrecordConnection = null;
-                }
-            }
-        }
-    };
-
-    private void takeScreenrecord() {
-       synchronized (mScreenrecordLock) {
-            if (mScreenrecordConnection != null) {
-                return;
-            }
-            ComponentName cn = new ComponentName("com.android.systemui",
-                    "com.android.systemui.omni.screenrecord.TakeScreenrecordService");
-            Intent intent = new Intent();
-            intent.setComponent(cn);
-            ServiceConnection conn = new ServiceConnection() {
-                @Override
-                public void onServiceConnected(ComponentName name, IBinder service) {
-                    synchronized (mScreenrecordLock) {
-                        Messenger messenger = new Messenger(service);
-                        Message msg = Message.obtain(null, 1);
-                        final ServiceConnection myConn = this;
-                        Handler h = new Handler(mHandler.getLooper()) {
-                            @Override
-                            public void handleMessage(Message msg) {
-                                synchronized (mScreenrecordLock) {
-                                    if (mScreenrecordConnection == myConn) {
-                                        mContext.unbindService(mScreenrecordConnection);
-                                        mScreenrecordConnection = null;
-                                        mHandler.removeCallbacks(mScreenrecordTimeout);
-                                    }
-                                }
-                            }
-                        };
-                        msg.replyTo = new Messenger(h);
-                        msg.arg1 = msg.arg2 = 0;
-                        try {
-                            messenger.send(msg);
-                        } catch (RemoteException e) {
-                        }
-                    }
-                }
-                @Override
-                public void onServiceDisconnected(ComponentName name) {}
-            };
-            if (mContext.bindServiceAsUser(
-                    intent, conn, Context.BIND_AUTO_CREATE, UserHandle.CURRENT)) {
-                mScreenrecordConnection = conn;
-                mHandler.postDelayed(mScreenrecordTimeout, 31 * 60 * 1000);
-            }
-        }
-    }
-
-	private void startOnTheGo() {
-        final ComponentName cn = new ComponentName("com.android.systemui",
-                "com.android.systemui.nameless.onthego.OnTheGoService");
-        final Intent startIntent = new Intent();
-        startIntent.setComponent(cn);
-        startIntent.setAction("start");
-        mContext.startService(startIntent);
-	}
-    
-
     private void prepareDialog() {
         refreshSilentMode();
         mAirplaneModeOn.updateState(mAirplaneState);
@@ -1063,11 +826,6 @@ class GlobalActions implements DialogInterface.OnDismissListener, DialogInterfac
             mContext.registerReceiver(mRingerModeReceiver, filter);
         }
     }
-   private void checkSettings() {
-        mScreenshotDelay = Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.SCREENSHOT_DELAY, 1);
-    }
-
 
     private void refreshSilentMode() {
         if (!mHasVibrator) {
diff --git a/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java b/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java
index eab9af2..da9312c 100644
--- a/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java
+++ b/services/core/java/com/android/server/policy/ImmersiveModeConfirmation.java
@@ -343,8 +343,6 @@ public class ImmersiveModeConfirmation {
 
         @Override
         public void handleMessage(Message msg) {
-            if (Settings.System.getInt(mContext.getContentResolver(),
-                     Settings.System.DISABLE_IMMERSIVE_MESSAGE, 0) != 1) {
             switch(msg.what) {
                 case SHOW:
                     handleShow();
@@ -352,9 +350,6 @@ public class ImmersiveModeConfirmation {
                 case HIDE:
                     handleHide();
                     break;
-                }
-            } else {
-                handleHide();
             }
         }
     }
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index d428533..f2d44ab 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -22,8 +22,6 @@ import android.app.ActivityManagerInternal.SleepToken;
 import android.app.ActivityManagerNative;
 import android.app.AppOpsManager;
 import android.app.IUiModeManager;
-import android.app.KeyguardManager;
-import android.app.ProgressDialog;
 import android.app.SearchManager;
 import android.app.StatusBarManager;
 import android.app.UiModeManager;
@@ -47,9 +45,6 @@ import android.content.res.TypedArray;
 import android.database.ContentObserver;
 import android.graphics.PixelFormat;
 import android.graphics.Rect;
-import android.hardware.camera2.CameraAccessException;
-import android.hardware.camera2.CameraCharacteristics;
-import android.hardware.camera2.CameraManager;
 import android.hardware.hdmi.HdmiControlManager;
 import android.hardware.hdmi.HdmiPlaybackClient;
 import android.hardware.hdmi.HdmiPlaybackClient.OneTouchPlayCallback;
@@ -88,12 +83,13 @@ import android.service.dreams.DreamService;
 import android.service.dreams.IDreamManager;
 import android.speech.RecognizerIntent;
 import android.telecom.TelecomManager;
-import android.service.gesture.EdgeGestureManager;
 import com.android.internal.os.DeviceKeyHandler;
+
 import com.android.internal.util.cm.ActionUtils;
+
+import cyanogenmod.hardware.CMHardwareManager;
 import cyanogenmod.providers.CMSettings;
 import dalvik.system.DexClassLoader;
-import android.text.Html;
 import android.util.DisplayMetrics;
 import android.util.EventLog;
 import android.util.Log;
@@ -134,19 +130,15 @@ import com.android.internal.R;
 import com.android.internal.policy.IKeyguardService;
 import com.android.internal.statusbar.IStatusBarService;
 import com.android.internal.util.ScreenShapeHelper;
-import com.android.internal.util.gesture.EdgeGesturePosition;
-import com.android.internal.util.gesture.EdgeServiceConstants;
 import com.android.internal.view.RotationPolicy;
-import com.android.internal.utils.du.DUActionUtils;
-import com.android.internal.utils.du.ActionHandler;
-import com.android.internal.utils.du.DUSystemReceiver;
 import com.android.internal.widget.PointerLocationView;
 import com.android.server.GestureLauncherService;
 import com.android.server.LocalServices;
-import org.screwd.internal.BootDexoptDialog;
 import com.android.server.policy.keyguard.KeyguardServiceDelegate;
 import com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener;
 
+import org.cyanogenmod.internal.BootDexoptDialog;
+
 import java.io.File;
 import java.io.FileReader;
 import java.io.IOException;
@@ -330,7 +322,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     private final Object mLock = new Object();
 
     Context mContext;
-    WindowManager mWm;
     IWindowManager mWindowManager;
     WindowManagerFuncs mWindowManagerFuncs;
     WindowManagerInternal mWindowManagerInternal;
@@ -379,16 +370,12 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     int mStatusBarHeight;
     WindowState mNavigationBar = null;
     boolean mHasNavigationBar = false;
-    boolean mHasHwKeysEnabled;
     boolean mCanHideNavigationBar = false;
     boolean mNavigationBarCanMove = false; // can the navigation bar ever move to the side?
     boolean mNavigationBarOnBottom = true; // is the navigation bar on the bottom *right now*?
     boolean mNavigationBarLeftInLandscape = false; // Navigation bar left handed?
     int[] mNavigationBarHeightForRotation = new int[4];
     int[] mNavigationBarWidthForRotation = new int[4];
-    int mNavigationBarHeight;
-    int mNavigationBarHeightLandscape;
-    int mNavigationBarWidth;
 
     WindowState mKeyguardPanel;
 
@@ -609,13 +596,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     boolean mDevForceNavbar = false;
 
-
-    // User defined bar visibility, regardless of factory configuration
-    boolean mNavbarVisible = false;
-
-    // Pie
-    boolean mPieState = false;
-
     // States of keyguard dismiss.
     private static final int DISMISS_KEYGUARD_NONE = 0; // Keyguard not being dismissed.
     private static final int DISMISS_KEYGUARD_START = 1; // Keyguard needs to be dismissed.
@@ -681,11 +661,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     // (See Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR.)
     int mIncallPowerBehavior;
 
-
-
-    // The volume key answer
-    boolean mVolumeAnswer;
-
     // Behavior of HOME button during incomming call ring.
     // (See Settings.Secure.RING_HOME_BUTTON_BEHAVIOR.)
     int mRingHomeBehavior;
@@ -728,19 +703,12 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     // Increase the chord delay when taking a screenshot from the keyguard
     private static final float KEYGUARD_SCREENSHOT_CHORD_DELAY_MULTIPLIER = 2.5f;
     private boolean mScreenshotChordEnabled;
+    private boolean mScreenshotChordVolumeDownKeyTriggered;
+    private long mScreenshotChordVolumeDownKeyTime;
     private boolean mScreenshotChordVolumeDownKeyConsumed;
-
-    // used for both screenshot and screenrecord
-    private long mVolumeDownKeyTime;
-    private boolean mVolumeDownKeyTriggered;
-    private boolean mVolumeUpKeyTriggered;
-    private long mVolumeUpKeyTime;
-    private boolean mPowerKeyTriggered;
-    private long mPowerKeyTime;
-
-    // use the same delay values as for screenshot
-    private boolean mScreenrecordChordEnabled;
-    private boolean mScreenrecordChordVolumeUpKeyConsumed;
+    private boolean mScreenshotChordVolumeUpKeyTriggered;
+    private boolean mScreenshotChordPowerKeyTriggered;
+    private long mScreenshotChordPowerKeyTime;
 
     /* The number of steps between min and max brightness */
     private static final int BRIGHTNESS_STEPS = 10;
@@ -752,7 +720,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     boolean mHavePendingMediaKeyRepeatWithWakeLock;
 
     private int mCurrentUserId;
-    private boolean haveEnableGesture = false;
 
     // Maps global key codes to the components that will handle them.
     private GlobalKeyManager mGlobalKeyManager;
@@ -787,11 +754,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     private boolean mHasPermanentMenuKey;
     private boolean mClearedBecauseOfForceShow;
     private boolean mTopWindowIsKeyguard;
-
-    private CameraManager mCameraManager;
-    private boolean mTorchEnabled;
-    private boolean mIsTorchActive;
-    private boolean mWasTorchActive;
+    private CMHardwareManager mCMHardware;
     private boolean mShowKeyguardOnLeftSwipe;
 
     private class PolicyHandler extends Handler {
@@ -861,25 +824,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    private DUSystemReceiver mDUReceiver = new DUSystemReceiver() {
-        @Override
-        protected void onSecureReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            if (action == null)
-                return;
-            if (ActionHandler.INTENT_SHOW_POWER_MENU.equals(action)) {
-                mHandler.removeMessages(MSG_DISPATCH_SHOW_GLOBAL_ACTIONS);
-                mHandler.sendEmptyMessage(MSG_DISPATCH_SHOW_GLOBAL_ACTIONS);
-            } else if (ActionHandler.INTENT_SCREENSHOT.equals(action)) {
-                mHandler.removeCallbacks(mScreenshotRunnable);
-                mHandler.post(mScreenshotRunnable);
-            } else if (ActionHandler.INTENT_TOGGLE_SCREENRECORD.equals(action)) {
-                mHandler.removeCallbacks(mScreenrecordRunnable);
-                mHandler.post(mScreenrecordRunnable);
-            }
-        }
-    };
-
     private UEventObserver mHDMIObserver = new UEventObserver() {
         @Override
         public void onUEvent(UEventObserver.UEvent event) {
@@ -955,11 +899,11 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             resolver.registerContentObserver(Settings.System.getUriFor(
                     Settings.System.ACCELEROMETER_ROTATION_ANGLES), false, this,
                     UserHandle.USER_ALL);
-            resolver.registerContentObserver(CMSettings.System.getUriFor(
-                    CMSettings.System.VOLBTN_MUSIC_CONTROLS), false, this,
+            resolver.registerContentObserver(CMSettings.Global.getUriFor(
+                    CMSettings.Global.DEV_FORCE_SHOW_NAVBAR), false, this,
                     UserHandle.USER_ALL);
             resolver.registerContentObserver(CMSettings.System.getUriFor(
-                    CMSettings.System.USE_EDGE_SERVICE_FOR_GESTURES), false, this,
+                    CMSettings.System.VOLBTN_MUSIC_CONTROLS), false, this,
                     UserHandle.USER_ALL);
             resolver.registerContentObserver(CMSettings.System.getUriFor(
                     CMSettings.System.BACK_WAKE_SCREEN), false, this,
@@ -994,36 +938,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             resolver.registerContentObserver(CMSettings.System.getUriFor(
                     CMSettings.System.NAVBAR_LEFT_IN_LANDSCAPE), false, this,
                     UserHandle.USER_ALL);
-	    resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.THREE_FINGER_GESTURE), false, this,
-                    UserHandle.USER_ALL);
-	    resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.ANSWER_VOLUME_BUTTON_BEHAVIOR_ANSWER), false, this);
-	    resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.HOLD_BACK_TO_KILL_TIMEOUT), false, this,
-                    UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.KEYGUARD_TOGGLE_TORCH), false, this,
-                    UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.System.ENABLE_HW_KEYS), false, this,
-                     UserHandle.USER_ALL);
-	    resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.NAVIGATION_BAR_VISIBLE), false, this,
-                    UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.NAVIGATION_BAR_HEIGHT), false, this,
-                    UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.NAVIGATION_BAR_HEIGHT_LANDSCAPE), false, this,
-                    UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.Secure.getUriFor(
-                    Settings.Secure.NAVIGATION_BAR_WIDTH), false, this,
-		    UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.PA_PIE_STATE), false, this,
-                    UserHandle.USER_ALL);
-                    
             updateSettings();
         }
 
@@ -1085,69 +999,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     private SystemGesturesPointerEventListener mSystemGestures;
 
-    private OPGesturesListener mOPGestures;
-
-    private EdgeGestureManager.EdgeGestureActivationListener mEdgeGestureActivationListener
-            = new EdgeGestureManager.EdgeGestureActivationListener() {
-
-        @Override
-        public void onEdgeGestureActivation(int touchX, int touchY,
-                EdgeGesturePosition position, int flags) {
-            WindowState target = null;
-
-            if (position == EdgeGesturePosition.TOP) {
-                target = mStatusBar;
-            } else if (position == EdgeGesturePosition.BOTTOM  && mNavigationBarOnBottom) {
-                target = mNavigationBar;
-            } else if (position == EdgeGesturePosition.LEFT
-                    && !mNavigationBarOnBottom && mNavigationBarLeftInLandscape) {
-                target = mNavigationBar;
-            } else if (position == EdgeGesturePosition.RIGHT && !mNavigationBarOnBottom) {
-                target = mNavigationBar;
-            }
-
-            if (target != null) {
-                requestTransientBars(target);
-                dropEventsUntilLift();
-                mEdgeListenerActivated = true;
-            } else {
-                restoreListenerState();
-            }
-        }
-    };
-    private EdgeGestureManager mEdgeGestureManager = null;
-    private int mLastEdgePositions = 0;
-    private boolean mEdgeListenerActivated = false;
-    private boolean mUsingEdgeGestureServiceForGestures = false;
-
-    private void updateEdgeGestureListenerState() {
-        int flags = 0;
-        if (mUsingEdgeGestureServiceForGestures) {
-            flags = EdgeServiceConstants.LONG_LIVING | EdgeServiceConstants.UNRESTRICTED;
-            if (mStatusBar != null && !mStatusBar.isVisibleLw()) {
-                flags |= EdgeGesturePosition.TOP.FLAG;
-            }
-            if (mNavigationBar != null && !mNavigationBar.isVisibleLw() && !isStatusBarKeyguard() && !immersiveModeImplementsPie()) {
-                if (mNavigationBarOnBottom) {
-                    flags |= EdgeGesturePosition.BOTTOM.FLAG;
-                } else if (mNavigationBarLeftInLandscape) {
-                    flags |= EdgeGesturePosition.LEFT.FLAG;
-                } else {
-                    flags |= EdgeGesturePosition.RIGHT.FLAG;
-                }
-            }
-        }
-        if (mEdgeListenerActivated) {
-            mEdgeGestureActivationListener.restoreListenerState();
-            mEdgeListenerActivated = false;
-        }
-        if (flags != mLastEdgePositions) {
-            mEdgeGestureManager.updateEdgeGestureActivationListener(mEdgeGestureActivationListener,
-                    flags);
-            mLastEdgePositions = flags;
-        }
-    }
-
     IStatusBarService getStatusBarService() {
         synchronized (mServiceAquireLock) {
             if (mStatusBarService == null) {
@@ -1261,12 +1112,11 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
 
         // Latch power key state to detect screenshot chord.
-        if (interactive && !mPowerKeyTriggered
+        if (interactive && !mScreenshotChordPowerKeyTriggered
                 && (event.getFlags() & KeyEvent.FLAG_FALLBACK) == 0) {
-            mPowerKeyTriggered = true;
-            mPowerKeyTime = event.getDownTime();
+            mScreenshotChordPowerKeyTriggered = true;
+            mScreenshotChordPowerKeyTime = event.getDownTime();
             interceptScreenshotChord();
-            interceptScreenrecordChord();
         }
 
         // Stop ringing or end call if configured to do so when power is pressed.
@@ -1295,7 +1145,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
         // If the power key has still not yet been handled, then detect short
         // press, long press, or multi press and decide what to do.
-        mPowerKeyHandled = hungUp || mVolumeDownKeyTriggered || gesturedServiceIntercepted || mVolumeUpKeyTriggered;
+        mPowerKeyHandled = hungUp || mScreenshotChordVolumeDownKeyTriggered
+                || mScreenshotChordVolumeUpKeyTriggered || gesturedServiceIntercepted;
         if (!mPowerKeyHandled) {
             if (interactive) {
                 // When interactive, we're already awake.
@@ -1307,18 +1158,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                             ViewConfiguration.get(mContext).getDeviceGlobalActionKeyTimeout());
                 }
             } else {
-                if (!mTorchEnabled) {
-                    wakeUpFromPowerKey(event.getDownTime());
-                }
-                if (mTorchEnabled && mIsTorchActive) {
-                    try {
-                        mCameraManager.setTorchMode(getCameraId(), false);
-                    } catch (Exception e) {
-                        mWasTorchActive = false;
-                    }
-                    mIsTorchActive = false;
-                    mWasTorchActive = true;
-                } else if (mTorchEnabled || (mSupportLongPressPowerWhenNonInteractive && hasLongPressOnPowerBehavior())) {
+                wakeUpFromPowerKey(event.getDownTime());
+
+                if (mSupportLongPressPowerWhenNonInteractive && hasLongPressOnPowerBehavior()) {
                     Message msg = mHandler.obtainMessage(MSG_POWER_LONG_PRESS);
                     msg.setAsynchronous(true);
                     mHandler.sendMessageDelayed(msg,
@@ -1337,25 +1179,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    private String getCameraId() throws CameraAccessException {
-        String[] ids = mCameraManager.getCameraIdList();
-        int length = ids.length;
-        for (int i = 0; i < length; i += 1) {
-            String id = ids[i];
-            CameraCharacteristics c = mCameraManager.getCameraCharacteristics(id);
-            Boolean flashAvailable = c.get(CameraCharacteristics.FLASH_INFO_AVAILABLE);
-            Integer lensFacing = c.get(CameraCharacteristics.LENS_FACING);
-            if (flashAvailable != null && flashAvailable
-                    && lensFacing != null && lensFacing == CameraCharacteristics.LENS_FACING_BACK) {
-                return id;
-            }
-        }
-        return null;
-    }
-
     private void interceptPowerKeyUp(KeyEvent event, boolean interactive, boolean canceled) {
         final boolean handled = canceled || mPowerKeyHandled;
-        mPowerKeyTriggered = false;
+        mScreenshotChordPowerKeyTriggered = false;
         cancelPendingScreenshotChordAction();
         cancelPendingPowerKeyAction();
 
@@ -1395,13 +1221,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         if (!mPowerKeyHandled) {
             mPowerKeyHandled = true;
             mHandler.removeMessages(MSG_POWER_LONG_PRESS);
-            if (mTorchEnabled && !isScreenOn()) {
-                if (mWasTorchActive) {
-                    mWasTorchActive = false;
-                } else {
-                    wakeUpFromPowerKey(SystemClock.uptimeMillis());
-                }
-            }
         }
     }
 
@@ -1491,41 +1310,24 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     }
 
     private void powerLongPress() {
-        if (!mTorchEnabled || isScreenOn()) {
-            int behavior = getResolvedLongPressOnPowerBehavior();
-            switch (behavior) {
-            case LONG_PRESS_POWER_NOTHING:
-                break;
-            case LONG_PRESS_POWER_GLOBAL_ACTIONS:
-                mPowerKeyHandled = true;
-                if (!performHapticFeedbackLw(null, HapticFeedbackConstants.LONG_PRESS, false)) {
-                    performAuditoryFeedbackForAccessibilityIfNeed();
-                }
-                boolean locked = isStatusBarKeyguard() && isKeyguardSecure();
-                boolean globalActionsOnLockScreen = Settings.System.getIntForUser(mContext.getContentResolver(),
-                            Settings.System.POWER_MENU_LOCKSCREEN, 1, UserHandle.USER_CURRENT) == 1;
-                if (locked && !globalActionsOnLockScreen) {
-                    behavior = LONG_PRESS_POWER_NOTHING;
-                } else {
-                    showGlobalActionsInternal();
-                }
-                break;
-            case LONG_PRESS_POWER_SHUT_OFF:
-            case LONG_PRESS_POWER_SHUT_OFF_NO_CONFIRM:
-                mPowerKeyHandled = true;
-                performHapticFeedbackLw(null, HapticFeedbackConstants.LONG_PRESS, false);
-                sendCloseSystemWindows(SYSTEM_DIALOG_REASON_GLOBAL_ACTIONS);
-                mWindowManagerFuncs.shutdown(behavior == LONG_PRESS_POWER_SHUT_OFF);
-                break;
-           }
-        } else if (mTorchEnabled && !isScreenOn()) {
-           try {
-               mCameraManager.setTorchMode(getCameraId(), true);
-           } catch (Exception e) {
-           }
-        mWasTorchActive = false;
-        mIsTorchActive = true;
-        mPowerKeyHandled = true;
+        final int behavior = getResolvedLongPressOnPowerBehavior();
+        switch (behavior) {
+        case LONG_PRESS_POWER_NOTHING:
+            break;
+        case LONG_PRESS_POWER_GLOBAL_ACTIONS:
+            mPowerKeyHandled = true;
+            if (!performHapticFeedbackLw(null, HapticFeedbackConstants.LONG_PRESS, false)) {
+                performAuditoryFeedbackForAccessibilityIfNeed();
+            }
+            showGlobalActionsInternal();
+            break;
+        case LONG_PRESS_POWER_SHUT_OFF:
+        case LONG_PRESS_POWER_SHUT_OFF_NO_CONFIRM:
+            mPowerKeyHandled = true;
+            performHapticFeedbackLw(null, HapticFeedbackConstants.LONG_PRESS, false);
+            sendCloseSystemWindows(SYSTEM_DIALOG_REASON_GLOBAL_ACTIONS);
+            mWindowManagerFuncs.shutdown(behavior == LONG_PRESS_POWER_SHUT_OFF);
+            break;
         }
     }
 
@@ -1559,10 +1361,11 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     private void interceptScreenshotChord() {
         if (mScreenshotChordEnabled
-                && mVolumeDownKeyTriggered && mPowerKeyTriggered && !mVolumeUpKeyTriggered) {
+                && mScreenshotChordVolumeDownKeyTriggered && mScreenshotChordPowerKeyTriggered
+                && !mScreenshotChordVolumeUpKeyTriggered) {
             final long now = SystemClock.uptimeMillis();
-            if (now <= mVolumeDownKeyTime + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS
-                    && now <= mPowerKeyTime
+            if (now <= mScreenshotChordVolumeDownKeyTime + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS
+                    && now <= mScreenshotChordPowerKeyTime
                             + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS) {
                 mScreenshotChordVolumeDownKeyConsumed = true;
                 cancelPendingPowerKeyAction();
@@ -1572,20 +1375,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    private void interceptScreenrecordChord() {
-        if (mScreenrecordChordEnabled
-                && mVolumeUpKeyTriggered && mPowerKeyTriggered && !mVolumeDownKeyTriggered) {
-            final long now = SystemClock.uptimeMillis();
-            if (now <= mVolumeUpKeyTime + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS
-                    && now <= mPowerKeyTime + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS) {
-                mScreenrecordChordVolumeUpKeyConsumed = true;
-                cancelPendingPowerKeyAction();
-
-                mHandler.postDelayed(mScreenrecordRunnable, getScreenshotChordLongPressDelay());
-            }
-        }
-    }
-
     private long getScreenshotChordLongPressDelay() {
         if (mKeyguardDelegate.isShowing()) {
             // Double the time it takes to take a screenshot from the keyguard
@@ -1599,10 +1388,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mHandler.removeCallbacks(mScreenshotRunnable);
     }
 
-    private void cancelPendingScreenrecordChordAction() {
-        mHandler.removeCallbacks(mScreenrecordRunnable);
-    }
-
     private final Runnable mEndCallLongPress = new Runnable() {
         @Override
         public void run() {
@@ -1617,24 +1402,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     private final Runnable mScreenshotRunnable = new Runnable() {
         @Override
         public void run() {
-	    if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.SCREEN_SHOT_SHORTCUT_SWITCH, 1) == 1) {
             takeScreenshot();
-            } else {
-             Slog.d(TAG, "ScreenShot Shortcut Disabled");
-	     }
-          }
-    };
-
-    private final Runnable mScreenrecordRunnable = new Runnable() {
-        @Override
-        public void run() {
-	    if (Settings.System.getInt(mContext.getContentResolver(),
-                Settings.System.SCREEN_RECORD_SHORTCUT_SWITCH, 1) == 1) {
-            takeScreenrecord();
-            } else {
-             Slog.d(TAG, "ScreenRecord Shortcut Disabled");
-            }
         }
     };
 
@@ -1673,8 +1441,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     }
 
     boolean isUserSetupComplete() {
-        return Settings.Secure.getIntForUser(mContext.getContentResolver(),
-                Settings.Secure.USER_SETUP_COMPLETE, 0, UserHandle.USER_CURRENT) != 0;
+        return CMSettings.Secure.getIntForUser(mContext.getContentResolver(),
+                CMSettings.Secure.CM_SETUP_WIZARD_COMPLETED, 0, UserHandle.USER_CURRENT) != 0;
     }
 
     private void handleShortPressOnHome() {
@@ -1802,7 +1570,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     public void init(Context context, IWindowManager windowManager,
             WindowManagerFuncs windowManagerFuncs) {
         mContext = context;
-        mWm = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);
         mWindowManager = windowManager;
         mWindowManagerFuncs = windowManagerFuncs;
         mWindowManagerInternal = LocalServices.getService(WindowManagerInternal.class);
@@ -1810,15 +1577,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mDreamManagerInternal = LocalServices.getService(DreamManagerInternal.class);
         mPowerManagerInternal = LocalServices.getService(PowerManagerInternal.class);
         mAppOpsManager = (AppOpsManager) mContext.getSystemService(Context.APP_OPS_SERVICE);
-        mCameraManager = (CameraManager) mContext.getSystemService(Context.CAMERA_SERVICE);
-
-        mOPGestures = new OPGesturesListener(context, new OPGesturesListener.Callbacks() {
-                   @Override
-                    public void onSwipeThreeFinger() {
-                        mHandler.post(mScreenshotRunnable);
-                    }
-                });
-
         mPowerManagerInternal = LocalServices.getService(PowerManagerInternal.class);
 
         // Init display burn-in protection
@@ -1862,10 +1620,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         try {
             mOrientationListener.setCurrentRotation(windowManager.getRotation());
         } catch (RemoteException ex) { }
-
-
         mSettingsObserver = new SettingsObserver(mHandler);
-        mSettingsObserver.observe();
         mShortcutManager = new ShortcutManager(context);
         mUiMode = context.getResources().getInteger(
                 com.android.internal.R.integer.config_defaultUiModeType);
@@ -1950,6 +1705,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 com.android.internal.R.integer.config_deviceHardwareKeys);
         mHasRemovableLid = mContext.getResources().getBoolean(
                 com.android.internal.R.bool.config_hasRemovableLid);
+        mBackKillTimeout = mContext.getResources().getInteger(
+                com.android.internal.R.integer.config_backKillTimeout);
 
         updateKeyAssignments();
 
@@ -1980,13 +1737,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         filter = new IntentFilter(Intent.ACTION_USER_SWITCHED);
         context.registerReceiver(mMultiuserReceiver, filter);
 
-        // DU action handler
-        filter = new IntentFilter();
-        filter.addAction(ActionHandler.INTENT_SHOW_POWER_MENU);
-        filter.addAction(ActionHandler.INTENT_SCREENSHOT);
-        filter.addAction(ActionHandler.INTENT_TOGGLE_SCREENRECORD);
-        context.registerReceiver(mDUReceiver, filter);
-
         // monitor for system gestures
         mSystemGestures = new SystemGesturesPointerEventListener(context,
                 new SystemGesturesPointerEventListener.Callbacks() {
@@ -2074,8 +1824,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
         mScreenshotChordEnabled = mContext.getResources().getBoolean(
                 com.android.internal.R.bool.config_enableScreenshotChord);
-        mScreenrecordChordEnabled = mContext.getResources().getBoolean(
-                com.android.internal.R.bool.config_enableScreenrecordChord);
 
         mGlobalKeyManager = new GlobalKeyManager(mContext);
 
@@ -2117,23 +1865,11 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     }
 
-    private void enableSwipeThreeFingerGesture(boolean enable){
-        if (enable) {
-            if (haveEnableGesture) return;
-            haveEnableGesture = true;
-            mWindowManagerFuncs.registerPointerEventListener(mOPGestures);
-        } else {
-	    if (!haveEnableGesture) return;
-            haveEnableGesture = false;
-            mWindowManagerFuncs.unregisterPointerEventListener(mOPGestures);
-        }
-    }
-
     private void updateKeyAssignments() {
         int activeHardwareKeys = mDeviceHardwareKeys;
 
-        if (!hasHwKeysEnabled()) {
-             activeHardwareKeys = 0;
+        if (mDevForceNavbar) {
+            activeHardwareKeys = 0;
         }
         final boolean hasMenu = (activeHardwareKeys & KEY_MASK_MENU) != 0;
         final boolean hasHome = (activeHardwareKeys & KEY_MASK_HOME) != 0;
@@ -2263,7 +1999,20 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mStatusBarHeight =
                 res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_height);
 
-        updateNavigationBarSize();
+        // Height of the navigation bar when presented horizontally at bottom
+        mNavigationBarHeightForRotation[mPortraitRotation] =
+        mNavigationBarHeightForRotation[mUpsideDownRotation] =
+                res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_height);
+        mNavigationBarHeightForRotation[mLandscapeRotation] =
+        mNavigationBarHeightForRotation[mSeascapeRotation] = res.getDimensionPixelSize(
+                com.android.internal.R.dimen.navigation_bar_height_landscape);
+
+        // Width of the navigation bar when presented vertically along one side
+        mNavigationBarWidthForRotation[mPortraitRotation] =
+        mNavigationBarWidthForRotation[mUpsideDownRotation] =
+        mNavigationBarWidthForRotation[mLandscapeRotation] =
+        mNavigationBarWidthForRotation[mSeascapeRotation] =
+                res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_width);
 
         // SystemUI (status bar) layout policy
         int shortSizeDp = shortSize * DisplayMetrics.DENSITY_DEFAULT / density;
@@ -2272,8 +2021,15 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         // Allow the navigation bar to move on non-square small devices (phones).
         mNavigationBarCanMove = width != height && shortSizeDp < 600;
 
-        // reflects original device state from config or build prop, regardless of user settings
-        mHasNavigationBar = DUActionUtils.hasNavbarByDefault(mContext);
+        mHasNavigationBar = res.getBoolean(com.android.internal.R.bool.config_showNavigationBar);
+        // Allow a system property to override this. Used by the emulator.
+        // See also hasNavigationBar().
+        String navBarOverride = SystemProperties.get("qemu.hw.mainkeys");
+        if ("1".equals(navBarOverride)) {
+            mHasNavigationBar = false;
+        } else if ("0".equals(navBarOverride)) {
+            mHasNavigationBar = true;
+        }
 
         // For demo purposes, allow the rotation of the HDMI display to be controlled.
         // By default, HDMI locks rotation to landscape.
@@ -2373,12 +2129,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     ((mDeviceHardwareWakeKeys & KEY_MASK_VOLUME) != 0);
             mVolBtnMusicControls = (CMSettings.System.getIntForUser(resolver,
                     CMSettings.System.VOLBTN_MUSIC_CONTROLS, 1, UserHandle.USER_CURRENT) == 1);
-	     mVolumeAnswer = (Settings.System.getIntForUser(resolver,
-                    Settings.System.ANSWER_VOLUME_BUTTON_BEHAVIOR_ANSWER, 0, UserHandle.USER_CURRENT) == 1);
-
-            // pa pie
-            mPieState = (Settings.System.getIntForUser(resolver,
-                    Settings.System.PA_PIE_STATE, 0, UserHandle.USER_CURRENT) == 1);
 
             // Configure wake gesture.
             boolean wakeGestureEnabledSetting = Settings.Secure.getIntForUser(resolver,
@@ -2389,35 +2139,20 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 updateWakeGestureListenerLp();
             }
 
-            final boolean useEdgeService = CMSettings.System.getIntForUser(resolver,
-                    CMSettings.System.USE_EDGE_SERVICE_FOR_GESTURES, 0, UserHandle.USER_CURRENT) == 1;
-            if (useEdgeService ^ mUsingEdgeGestureServiceForGestures && mSystemReady) {
-                if (!mUsingEdgeGestureServiceForGestures && useEdgeService) {
-                    mUsingEdgeGestureServiceForGestures = true;
-                    mWindowManagerFuncs.unregisterPointerEventListener(mSystemGestures);
-                } else if (mUsingEdgeGestureServiceForGestures && !useEdgeService) {
-                    mUsingEdgeGestureServiceForGestures = false;
-                    mWindowManagerFuncs.registerPointerEventListener(mSystemGestures);
+            boolean devForceNavbar = CMSettings.Global.getIntForUser(resolver,
+                    CMSettings.Global.DEV_FORCE_SHOW_NAVBAR, 0, UserHandle.USER_CURRENT) == 1;
+            if (devForceNavbar != mDevForceNavbar) {
+                mDevForceNavbar = devForceNavbar;
+                if (mCMHardware.isSupported(CMHardwareManager.FEATURE_KEY_DISABLE)) {
+                    mCMHardware.set(CMHardwareManager.FEATURE_KEY_DISABLE, mDevForceNavbar);
                 }
-                updateEdgeGestureListenerState();
             }
 
             mNavigationBarLeftInLandscape = CMSettings.System.getIntForUser(resolver,
                     CMSettings.System.NAVBAR_LEFT_IN_LANDSCAPE, 0, UserHandle.USER_CURRENT) == 1;
 
-            hasHwKeysEnabled();
             updateKeyAssignments();
 
-            boolean doShowNavbar = Settings.Secure.getIntForUser(resolver,
-                    Settings.Secure.NAVIGATION_BAR_VISIBLE,
-                    DUActionUtils.hasNavbarByDefault(mContext) ? 1 : 0,
-                    UserHandle.USER_CURRENT) == 1;
-            if (doShowNavbar != mNavbarVisible) {
-                mNavbarVisible = doShowNavbar;
-            }
-
-            updateNavigationBarSize();
-
             // Configure rotation lock.
             int userRotation = Settings.System.getIntForUser(resolver,
                     Settings.System.USER_ROTATION, Surface.ROTATION_0,
@@ -2439,11 +2174,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             mUserRotationAngles = Settings.System.getInt(resolver,
                     Settings.System.ACCELEROMETER_ROTATION_ANGLES, -1);
 
-	     //Three Finger Gesture
-            boolean threeFingerGesture = Settings.System.getIntForUser(resolver,
-                    Settings.System.THREE_FINGER_GESTURE, 0, UserHandle.USER_CURRENT) == 1;
-            enableSwipeThreeFingerGesture(threeFingerGesture);
-
             if (mSystemReady) {
                 int pointerLocation = Settings.System.getIntForUser(resolver,
                         Settings.System.POINTER_LOCATION, 0, UserHandle.USER_CURRENT);
@@ -2466,13 +2196,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             if (mImmersiveModeConfirmation != null) {
                 mImmersiveModeConfirmation.loadSetting(mCurrentUserId);
             }
-
-            mBackKillTimeout = Settings.System.getInt(resolver,
-                    Settings.System.HOLD_BACK_TO_KILL_TIMEOUT, 750);
-
-            mTorchEnabled = (Settings.System.getIntForUser(resolver,
-                    Settings.System.KEYGUARD_TOGGLE_TORCH, 0, UserHandle.USER_CURRENT) == 1);
-
         }
         synchronized (mWindowManagerFuncs.getWindowManagerLock()) {
             WindowManagerPolicyControl.reloadFromSetting(mContext);
@@ -2482,44 +2205,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    private void updateNavigationBarSize() {
-        mNavigationBarHeightForRotation[mPortraitRotation] =
-                mNavigationBarHeightForRotation[mUpsideDownRotation] =
-                        Settings.Secure
-                                .getIntForUser(
-                                        mContext.getContentResolver(),
-                                        Settings.Secure.NAVIGATION_BAR_HEIGHT,
-                                        mContext.getResources()
-                                                .getDimensionPixelSize(
-                                                        com.android.internal.R.dimen.navigation_bar_height),
-                                        UserHandle.USER_CURRENT);
-        mNavigationBarHeightForRotation[mLandscapeRotation] =
-                mNavigationBarHeightForRotation[mSeascapeRotation] =
-                        Settings.Secure
-                                .getIntForUser(
-                                        mContext.getContentResolver(),
-                                        Settings.Secure.NAVIGATION_BAR_HEIGHT_LANDSCAPE,
-                                        mContext.getResources()
-                                                .getDimensionPixelSize(
-                                                        com.android.internal.R.dimen.navigation_bar_height_landscape),
-                                        UserHandle.USER_CURRENT);
-
-        // Width of the navigation bar when presented vertically along one
-        // side
-        mNavigationBarWidthForRotation[mPortraitRotation] =
-                mNavigationBarWidthForRotation[mUpsideDownRotation] =
-                        mNavigationBarWidthForRotation[mLandscapeRotation] =
-                                mNavigationBarWidthForRotation[mSeascapeRotation] =
-                                        Settings.Secure
-                                                .getIntForUser(
-                                                        mContext.getContentResolver(),
-                                                        Settings.Secure.NAVIGATION_BAR_WIDTH,
-                                                        mContext.getResources()
-                                                                .getDimensionPixelSize(
-                                                                        com.android.internal.R.dimen.navigation_bar_width),
-                                                        UserHandle.USER_CURRENT);
-    }
-
     private void updateWakeGestureListenerLp() {
         if (shouldEnableWakeGestureLp()) {
             mWakeGestureListener.requestWakeUpTrigger();
@@ -2553,8 +2238,10 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             lp.format = PixelFormat.TRANSLUCENT;
             lp.setTitle("PointerLocation");
+            WindowManager wm = (WindowManager)
+                    mContext.getSystemService(Context.WINDOW_SERVICE);
             lp.inputFeatures |= WindowManager.LayoutParams.INPUT_FEATURE_NO_INPUT_CHANNEL;
-            mWm.addView(mPointerLocationView, lp);
+            wm.addView(mPointerLocationView, lp);
             mWindowManagerFuncs.registerPointerEventListener(mPointerLocationView);
         }
     }
@@ -2562,7 +2249,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     private void disablePointerLocation() {
         if (mPointerLocationView != null) {
             mWindowManagerFuncs.unregisterPointerEventListener(mPointerLocationView);
-            mWm.removeView(mPointerLocationView);
+            WindowManager wm = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);
+            wm.removeView(mPointerLocationView);
             mPointerLocationView = null;
         }
     }
@@ -2841,7 +2529,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         case TYPE_INPUT_CONSUMER:
             return 6;
         case TYPE_SYSTEM_DIALOG:
-        case TYPE_RECENTS_OVERLAY:
             return 7;
         case TYPE_TOAST:
             // toasts and the plugged-in battery thing
@@ -3012,6 +2699,11 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         return mWinShowWhenLocked;
     }
 
+    @Override
+    public WindowState getWinKeyguardPanelLw() {
+        return mKeyguardPanel;
+    }
+
     /** {@inheritDoc} */
     @Override
     public View addStartingWindow(IBinder appToken, String packageName, int theme,
@@ -3042,6 +2734,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
 
             PhoneWindow win = new PhoneWindow(context);
+            win.setIsStartingWindow(true);
             final TypedArray ta = win.getWindowStyle();
             if (ta.getBoolean(
                         com.android.internal.R.styleable.Window_windowDisablePreview, false)
@@ -3070,14 +2763,14 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             // flag because we do know that the next window will take input
             // focus, so we want to get the IME window up on top of us right away.
             win.setFlags(
-                    windowFlags |
-                    WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE |
-                    WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE |
-                    WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
-                    windowFlags |
-                    WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE |
-                    WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE |
-                    WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
+                windowFlags|
+                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE|
+                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE|
+                WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
+                windowFlags|
+                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE|
+                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE|
+                WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
 
             win.setDefaultIcon(icon);
             win.setDefaultLogo(logo);
@@ -3100,6 +2793,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
             params.setTitle("Starting " + packageName);
 
+            wm = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);
             view = win.getDecorView();
 
             if (win.isFloating()) {
@@ -3117,7 +2811,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 + " / " + appToken + ": "
                 + (view.getParent() != null ? view : null));
 
-            mWm.addView(view, params);
+            wm.addView(view, params);
 
             // Only return the view if it was successfully added to the
             // window manager... which we can tell by it having a parent.
@@ -3134,7 +2828,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         } finally {
             if (view != null && view.getParent() == null) {
                 Log.w(TAG, "view not successfully added to wm, removing view");
-                mWm.removeViewImmediate(view);
+                wm.removeViewImmediate(view);
             }
         }
 
@@ -3148,7 +2842,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 + window + " Callers=" + Debug.getCallers(4));
 
         if (window != null) {
-            mWm.removeView(window);
+            WindowManager wm = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);
+            wm.removeView(window);
         }
     }
 
@@ -3422,7 +3117,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     @Override
     public long interceptKeyBeforeDispatching(WindowState win, KeyEvent event, int policyFlags) {
         final boolean keyguardOn = keyguardOn();
-        final int scanCode = event.getScanCode();
         final int repeatCount = event.getRepeatCount();
         final int metaState = event.getMetaState();
         final int flags = event.getFlags();
@@ -3442,9 +3136,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         // but we're not sure, then tell the dispatcher to wait a little while and
         // try again later before dispatching.
         if (mScreenshotChordEnabled && (flags & KeyEvent.FLAG_FALLBACK) == 0) {
-            if (mVolumeDownKeyTriggered && !mPowerKeyTriggered) {
+            if (mScreenshotChordVolumeDownKeyTriggered && !mScreenshotChordPowerKeyTriggered) {
                 final long now = SystemClock.uptimeMillis();
-                final long timeoutTime = mVolumeDownKeyTime
+                final long timeoutTime = mScreenshotChordVolumeDownKeyTime
                         + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS;
                 if (now < timeoutTime) {
                     return timeoutTime - now;
@@ -3459,26 +3153,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
         }
 
-        // If we think we might have a volume up & power key chord on the way
-        // but we're not sure, then tell the dispatcher to wait a little while and
-        // try again later before dispatching.
-        if (mScreenrecordChordEnabled && (flags & KeyEvent.FLAG_FALLBACK) == 0) {
-            if (mVolumeUpKeyTriggered && !mPowerKeyTriggered) {
-                final long now = SystemClock.uptimeMillis();
-                final long timeoutTime = mVolumeUpKeyTime + SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS;
-                if (now < timeoutTime) {
-                    return timeoutTime - now;
-                }
-            }
-            if (keyCode == KeyEvent.KEYCODE_VOLUME_UP
-                    && mScreenrecordChordVolumeUpKeyConsumed) {
-                if (!down) {
-                    mScreenrecordChordVolumeUpKeyConsumed = false;
-                }
-                return -1;
-            }
-        }
-
         // Cancel any pending meta actions if we see any other keys being pressed between the down
         // of the meta key and its corresponding up.
         if (mPendingMetaAction && !KeyEvent.isMetaKey(keyCode)) {
@@ -3495,11 +3169,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         // timeout.
         if (keyCode == KeyEvent.KEYCODE_HOME) {
 
-            // Disable home key if hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled()) {
-                Log.i(TAG, "Ignoring Home Key: we have hw keys disabled");
-                return 0;
-            }
             if (mTopFullscreenOpaqueWindowState != null &&
                     (mTopFullscreenOpaqueWindowState.getAttrs().privateFlags
                             & WindowManager.LayoutParams.PRIVATE_FLAG_PREVENT_SYSTEM_KEYS) != 0
@@ -3599,13 +3268,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return -1;
         } else if (keyCode == KeyEvent.KEYCODE_MENU) {
-
-            // Disable menu key if hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled()) {
-                Log.i(TAG, "Ignoring Menu Key: we have hw keys disabled");
-                return 0;
-            }
-
             // Hijack modified menu keys for debugging features
             final int chordBug = KeyEvent.META_SHIFT_ON;
             if (virtualKey || keyguardOn) {
@@ -3671,13 +3333,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return -1;
         } else if (keyCode == KeyEvent.KEYCODE_SEARCH) {
-
-            // Disable search key if hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled()) {
-                Log.i(TAG, "Ignoring Search Key: we have hw keys disabled");
-                return 0;
-            }
-
             if (down) {
                 if (repeatCount == 0) {
                     mSearchKeyShortcutPending = true;
@@ -3692,9 +3347,10 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return 0;
         } else if (keyCode == KeyEvent.KEYCODE_APP_SWITCH) {
-            // Disable app switch key if hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled()) {
-                Log.i(TAG, "Ignoring App Switch Key: we have hw keys disabled");
+            if (mTopFullscreenOpaqueWindowState != null &&
+                    (mTopFullscreenOpaqueWindowState.getAttrs().privateFlags
+                            & WindowManager.LayoutParams.PRIVATE_FLAG_PREVENT_SYSTEM_KEYS) != 0
+                    && mScreenOnFully) {
                 return 0;
             }
 
@@ -3742,13 +3398,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 }
             }
         } else if (keyCode == KeyEvent.KEYCODE_ASSIST) {
-
-            // Disable assist key if hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled()) {
-                Log.i(TAG, "Ignoring Assist Key: we have hw keys disabled");
-                return 0;
-            }
-
             if (down) {
                 if (mPressOnAssistBehavior == KEY_ACTION_APP_SWITCH
                         || mLongPressOnAssistBehavior == KEY_ACTION_APP_SWITCH) {
@@ -3848,13 +3497,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return -1;
         } else if (keyCode == KeyEvent.KEYCODE_BACK) {
-
-            // Disable back key if navbar hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled()) {
-                Log.i(TAG, "Ignoring Back Key: we have hw keys disabled");
-                return 0;
-            }
-
             if (unpinActivity(true) || CMSettings.Secure.getInt(mContext.getContentResolver(),
                     CMSettings.Secure.KILL_APP_LONGPRESS_BACK, 0) == 1) {
                 if (down && repeatCount == 0) {
@@ -4024,7 +3666,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         if ((event.getFlags() & KeyEvent.FLAG_FALLBACK) == 0) {
             final KeyCharacterMap kcm = event.getKeyCharacterMap();
             final int keyCode = event.getKeyCode();
-            int scanCode = event.getScanCode();
             final int metaState = event.getMetaState();
             final boolean initialDown = event.getAction() == KeyEvent.ACTION_DOWN
                     && event.getRepeatCount() == 0;
@@ -4373,8 +4014,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mNavigationBarController.adjustSystemUiVisibilityLw(mLastSystemUiFlags, visibility);
         mRecentsVisible = (visibility & View.RECENT_APPS_VISIBLE) > 0;
 
-        updateEdgeGestureListenerState();
-
         // Reset any bits in mForceClearingStatusBarVisibility that
         // are now clear.
         mResettingSystemUiFlags &= visibility;
@@ -4862,10 +4501,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         return !notFocusableForIm;
     }
 
-    public Rect getContentRect() {
-        return new Rect(mContentLeft, mContentTop, mContentRight, mContentBottom);
-    }
-
     /** {@inheritDoc} */
     @Override
     public void layoutWindowLw(WindowState win, WindowState attached) {
@@ -4898,7 +4533,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         Rect osf = null;
         dcf.setEmpty();
 
-        final boolean hasNavBar = (isDefaultDisplay && hasNavigationBar()
+        final boolean hasNavBar = (isDefaultDisplay && mHasNavigationBar
                 && mNavigationBar != null && mNavigationBar.isVisibleLw());
 
         final int adjust = sim & SOFT_INPUT_MASK_ADJUST;
@@ -5351,10 +4986,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    private boolean immersiveModeImplementsPie() {
-        return mPieState;
-    }
-
     private void offsetInputMethodWindowLw(WindowState win) {
         int top = Math.max(win.getDisplayFrameLw().top, win.getContentFrameLw().top);
         top += win.getGivenContentInsetsLw().top;
@@ -5711,7 +5342,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
         // update since mAllowLockscreenWhenOn might have changed
         updateLockScreenTimeout();
-        updateEdgeGestureListenerState();
         return changes;
     }
 
@@ -5871,9 +5501,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     }
 
     final Object mScreenshotLock = new Object();
-    final Object mScreenrecordLock = new Object();
     ServiceConnection mScreenshotConnection = null;
-    ServiceConnection mScreenrecordConnection = null;
 
     final Runnable mScreenshotTimeout = new Runnable() {
         @Override public void run() {
@@ -5886,17 +5514,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     };
 
-    final Runnable mScreenrecordTimeout = new Runnable() {
-        @Override public void run() {
-            synchronized (mScreenrecordLock) {
-                if (mScreenrecordConnection != null) {
-                    mContext.unbindService(mScreenrecordConnection);
-                    mScreenrecordConnection = null;
-                }
-            }
-        }
-    };
-
     // Assume this is called from the Handler thread.
     private void takeScreenshot() {
         synchronized (mScreenshotLock) {
@@ -5952,56 +5569,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
-    // Assume this is called from the Handler thread.
-    private void takeScreenrecord() {
-        synchronized (mScreenrecordLock) {
-            if (mScreenrecordConnection != null) {
-                return;
-            }
-            ComponentName cn = new ComponentName("com.android.systemui",
-                    "com.android.systemui.omni.screenrecord.TakeScreenrecordService");
-            Intent intent = new Intent();
-            intent.setComponent(cn);
-            ServiceConnection conn = new ServiceConnection() {
-                @Override
-                public void onServiceConnected(ComponentName name, IBinder service) {
-                    synchronized (mScreenrecordLock) {
-                        Messenger messenger = new Messenger(service);
-                        Message msg = Message.obtain(null, 1);
-                        final ServiceConnection myConn = this;
-                        Handler h = new Handler(mHandler.getLooper()) {
-                            @Override
-                            public void handleMessage(Message msg) {
-                                synchronized (mScreenrecordLock) {
-                                    if (mScreenrecordConnection == myConn) {
-                                        mContext.unbindService(mScreenrecordConnection);
-                                        mScreenrecordConnection = null;
-                                        mHandler.removeCallbacks(mScreenrecordTimeout);
-                                    }
-                                }
-                            }
-                        };
-                        msg.replyTo = new Messenger(h);
-                        msg.arg1 = msg.arg2 = 0;
-                        try {
-                            messenger.send(msg);
-                        } catch (RemoteException e) {
-                        }
-                    }
-                }
-                @Override
-                public void onServiceDisconnected(ComponentName name) {}
-            };
-            if (mContext.bindServiceAsUser(
-                    intent, conn, Context.BIND_AUTO_CREATE, UserHandle.CURRENT)) {
-                mScreenrecordConnection = conn;
-                // Screenrecord max duration is 30 minutes. Allow 31 minutes before killing
-                // the service.
-                mHandler.postDelayed(mScreenrecordTimeout, 31 * 60 * 1000);
-            }
-        }
-    }
-
     /** {@inheritDoc} */
     @Override
     public int interceptKeyBeforeQueueing(KeyEvent event, int policyFlags) {
@@ -6014,7 +5581,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         final boolean down = event.getAction() == KeyEvent.ACTION_DOWN;
         final boolean canceled = event.isCanceled();
         final int keyCode = event.getKeyCode();
-        int scanCode = event.getScanCode();
+        final int scanCode = event.getScanCode();
 
         final boolean isInjected = (policyFlags & WindowManagerPolicy.FLAG_INJECTED) != 0;
 
@@ -6027,34 +5594,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                                                 isKeyguardShowingAndNotOccluded() :
                                                 mKeyguardDelegate.isShowing()));
 
-        // Disable all hw keys actions but let home key wake on if it's enabled
-        if (!hasHwKeysEnabled()) {
-            if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_HOME && !mHomeWakeScreen) {
-                Log.i(TAG, "Ignoring Home Key: we have hw keys and also home key wake disabled");
-                return 0;
-            }
-            if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_MENU) {
-                Log.i(TAG, "Ignoring Menu Key: we have hw keys disabled");
-                return 0;
-            }
-            if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_BACK) {
-                Log.i(TAG, "Ignoring Back Key: we have hw keys disabled");
-                return 0;
-            }
-            if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_SEARCH) {
-                Log.i(TAG, "Ignoring Search Key: we have hw keys disabled");
-                return 0;
-            }
-            if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_APP_SWITCH) {
-                Log.i(TAG, "Ignoring App Switch Key: we have hw keys disabled");
-                return 0;
-            }
-            if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_ASSIST) {
-                Log.i(TAG, "Ignoring Assist Key: we have hw keys disabled");
-                return 0;
-            }
-        }
-
         if (DEBUG_INPUT) {
             Log.d(TAG, "interceptKeyTq keycode=" + keyCode
                     + " interactive=" + interactive + " keyguardActive=" + keyguardActive
@@ -6135,45 +5674,35 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
                 if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
                     if (down) {
-                        if (interactive && !mVolumeDownKeyTriggered
+                        if (interactive && !mScreenshotChordVolumeDownKeyTriggered
                                 && (event.getFlags() & KeyEvent.FLAG_FALLBACK) == 0) {
-                            mVolumeDownKeyTriggered = true;
-                            mVolumeDownKeyTime = event.getDownTime();
+                            mScreenshotChordVolumeDownKeyTriggered = true;
+                            mScreenshotChordVolumeDownKeyTime = event.getDownTime();
                             mScreenshotChordVolumeDownKeyConsumed = false;
                             cancelPendingPowerKeyAction();
-                            cancelPendingScreenrecordChordAction();
                             interceptScreenshotChord();
                         }
                     } else {
-                        mVolumeDownKeyTriggered = false;
+                        mScreenshotChordVolumeDownKeyTriggered = false;
                         cancelPendingScreenshotChordAction();
-                        cancelPendingScreenrecordChordAction();
                     }
                 } else if (keyCode == KeyEvent.KEYCODE_VOLUME_UP) {
                     if (down) {
-                        if (interactive && !mVolumeUpKeyTriggered
+                        if (interactive && !mScreenshotChordVolumeUpKeyTriggered
                                 && (event.getFlags() & KeyEvent.FLAG_FALLBACK) == 0) {
-                            mVolumeUpKeyTriggered = true;
-                            mVolumeUpKeyTime = event.getDownTime();
-                            mScreenrecordChordVolumeUpKeyConsumed = false;
+                            mScreenshotChordVolumeUpKeyTriggered = true;
                             cancelPendingPowerKeyAction();
                             cancelPendingScreenshotChordAction();
-                            interceptScreenrecordChord();
                         }
                     } else {
-                        mVolumeUpKeyTriggered = false;
+                        mScreenshotChordVolumeUpKeyTriggered = false;
                         cancelPendingScreenshotChordAction();
-                        cancelPendingScreenrecordChordAction();
                     }
                 }
                 if (down) {
                     TelecomManager telecomManager = getTelecommService();
                     if (telecomManager != null) {
                         if (telecomManager.isRinging()) {
-				 // The volume key answer
-                           if (mVolumeAnswer) {
-                                 telecomManager.acceptRingingCall();
-                            }
                             // If an incoming call is ringing, either VOLUME key means
                             // "silence ringer".  We handle these keys here, rather than
                             // in the InCallScreen, to make sure we'll respond to them
@@ -6805,8 +6334,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     return;
                 }
                 if (sb) mStatusBarController.showTransient();
-                if (nb && !immersiveModeImplementsPie())
-                    mNavigationBarController.showTransient();
+                if (nb) mNavigationBarController.showTransient();
                 mImmersiveModeConfirmation.confirmCurrentPrompt();
                 updateSystemUiVisibilityLw();
             }
@@ -6814,7 +6342,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     }
 
 
-
     BroadcastReceiver mWifiDisplayReceiver = new BroadcastReceiver() {
         public void onReceive(Context context, Intent intent) {
         String action = intent.getAction();
@@ -6832,19 +6359,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     };
 
-    private void toggleOrientationListener(boolean enable) {
-        IStatusBarService statusbar = getStatusBarService();
-        if (statusbar != null) {
-           try {
-               statusbar.toggleOrientationListener(enable);
-           } catch (RemoteException e) {
-               Slog.e(TAG, "RemoteException when controlling orientation sensor", e);
-               // re-acquire status bar service next time it is needed.
-               mStatusBarService = null;
-           }
-        }
-    }
-
     // Called on the PowerManager's Notifier thread.
     @Override
     public void startedGoingToSleep(int why) {
@@ -7063,8 +6577,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             } catch (RemoteException unhandled) {
             }
         }
-
-        toggleOrientationListener(true);
     }
 
     private void handleHideBootMessage() {
@@ -7444,8 +6956,10 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mKeyguardDelegate = new KeyguardServiceDelegate(mContext);
         mKeyguardDelegate.onSystemReady();
 
-        mEdgeGestureManager = EdgeGestureManager.getInstance();
-        mEdgeGestureManager.setEdgeGestureActivationListener(mEdgeGestureActivationListener);
+        mCMHardware = CMHardwareManager.getInstance(mContext);
+        // Ensure observe happens in systemReady() since we need
+        // CMHardwareService to be up and running
+        mSettingsObserver.observe();
 
         readCameraLensCoverState();
         updateUiMode();
@@ -7502,28 +7016,17 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     }
 
     BootDexoptDialog mBootMsgDialog = null;
-    /**
-     * name of package currently being dex optimized
-     * as shown through this.showBootMessage(msg, always);
-     */
-    static String currentPackageName;
-    public void setPackageName(String pkgName) {
-        if (pkgName == null) {
-            pkgName = "stop.looking.at.me.swan";
-        }
-        this.currentPackageName = pkgName;
-    }
 
     /** {@inheritDoc} */
     @Override
-    public void showBootMessage(final ApplicationInfo info, final int current, final int total,
-            final boolean always) {
+    public void updateBootProgress(final int stage, final ApplicationInfo optimizedApp,
+            final int currentAppPos, final int totalAppCount) {
         mHandler.post(new Runnable() {
             @Override public void run() {
                 if (mBootMsgDialog == null) {
-                   mBootMsgDialog = BootDexoptDialog.create(mContext);
+                    mBootMsgDialog = BootDexoptDialog.create(mContext);
                 }
-                mBootMsgDialog.setProgress(info, current, total);
+                mBootMsgDialog.setProgress(stage, optimizedApp, currentAppPos, totalAppCount);
             }
         });
     }
@@ -8178,34 +7681,23 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 && !mAccessibilityManager.isTouchExplorationEnabled();
     }
 
-    public boolean hasHwKeysEnabled() {
-        return mHasHwKeysEnabled = Settings.System.getIntForUser(
-                mContext.getContentResolver(),
-                    Settings.System.ENABLE_HW_KEYS, 1, UserHandle.USER_CURRENT) == 1;
-    }
-
     // Use this instead of checking config_showNavigationBar so that it can be consistently
     // overridden by qemu.hw.mainkeys in the emulator.
     @Override
     public boolean hasNavigationBar() {
-          return mNavbarVisible;
+        return mHasNavigationBar || mDevForceNavbar;
     }
 
     @Override
     public boolean hasPermanentMenuKey() {
         return !hasNavigationBar() && mHasPermanentMenuKey;
     }
-    
+
     public boolean needsNavigationBar() {
-       return mHasNavigationBar;
+        return mHasNavigationBar;
     }
 
     @Override
-    public boolean navigationBarCanMove() {
-        return mNavigationBarCanMove;
-    }
-    
-    @Override
     public void setLastInputMethodWindowLw(WindowState ime, WindowState target) {
         mLastInputMethodWindow = ime;
         mLastInputMethodTargetWindow = target;
diff --git a/services/core/java/com/android/server/policy/keyguard/KeyguardServiceDelegate.java b/services/core/java/com/android/server/policy/keyguard/KeyguardServiceDelegate.java
index f11244b..c881984 100644
--- a/services/core/java/com/android/server/policy/keyguard/KeyguardServiceDelegate.java
+++ b/services/core/java/com/android/server/policy/keyguard/KeyguardServiceDelegate.java
@@ -398,7 +398,7 @@ public class KeyguardServiceDelegate {
 
     public void onBootCompleted() {
         if (mKeyguardService != null) {
-            mKeyguardService.onBootCompleted();	
+            mKeyguardService.onBootCompleted();
         }
         mKeyguardState.bootCompleted = true;
         sendStateChangeBroadcast(true);
diff --git a/services/core/java/com/android/server/policy/keyguard/KeyguardServiceWrapper.java b/services/core/java/com/android/server/policy/keyguard/KeyguardServiceWrapper.java
index 32d116a..ed909f8 100644
--- a/services/core/java/com/android/server/policy/keyguard/KeyguardServiceWrapper.java
+++ b/services/core/java/com/android/server/policy/keyguard/KeyguardServiceWrapper.java
@@ -17,7 +17,6 @@
 package com.android.server.policy.keyguard;
 
 import android.content.Context;
-import android.graphics.Bitmap;
 import android.os.Bundle;
 import android.os.IBinder;
 import android.os.RemoteException;
@@ -226,14 +225,6 @@ public class KeyguardServiceWrapper implements IKeyguardService {
         }
     }
 
-    public void setBackgroundBitmap(Bitmap bmp) {
-        try {
-            mService.setBackgroundBitmap(bmp);
-        } catch (RemoteException e) {
-            Slog.w(TAG, "Remote Exception", e);
-        }
-    }
-
     @Override // Binder interface
     public IBinder asBinder() {
         return mService.asBinder();
@@ -262,4 +253,4 @@ public class KeyguardServiceWrapper implements IKeyguardService {
             Slog.w(TAG, "Remote Exception", e);
         }
     }
-}
+}
\ No newline at end of file
diff --git a/services/core/java/com/android/server/power/PowerManagerService.java b/services/core/java/com/android/server/power/PowerManagerService.java
index db426b6..a197c6e 100644
--- a/services/core/java/com/android/server/power/PowerManagerService.java
+++ b/services/core/java/com/android/server/power/PowerManagerService.java
@@ -76,7 +76,6 @@ import android.provider.Settings;
 import android.service.dreams.DreamManagerInternal;
 import android.telephony.TelephonyManager;
 import android.util.EventLog;
-import android.util.Log;
 import android.util.Slog;
 import android.util.TimeUtils;
 import android.view.Display;
@@ -86,10 +85,6 @@ import java.io.FileDescriptor;
 import java.io.PrintWriter;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.io.IOException;
-import java.util.Set;
-import java.util.HashSet;
-import java.util.Iterator;
 
 import cyanogenmod.providers.CMSettings;
 import libcore.util.Objects;
@@ -221,8 +216,6 @@ public final class PowerManagerService extends SystemService
     private int mKeyboardBrightness;
     private int mKeyboardBrightnessSettingDefault;
 
-    private TelephonyManager mTelephonyManager;
-
     private final Object mLock = new Object();
 
     // A bitfield that indicates what parts of the power state have
@@ -247,9 +240,6 @@ public final class PowerManagerService extends SystemService
 
     // Table of all wake locks acquired by applications.
     private final ArrayList<WakeLock> mWakeLocks = new ArrayList<WakeLock>();
-    private Set<String> mSeenWakeLocks = new HashSet<String>();
-    private Set<String> mBlockedWakeLocks = new HashSet<String>();
-    private int mWakeLockBlockingEnabled;
 
     // A bitfield that summarizes the state of all active wakelocks.
     private int mWakeLockSummary;
@@ -542,7 +532,6 @@ public final class PowerManagerService extends SystemService
     private static native void nativeSendPowerHint(int hintId, int data);
     private static native void nativeSetFeature(int featureId, int data);
     private static native int nativeGetFeature(int featureId);
-    private static native void nativeCpuBoost(int duration);
 
     private boolean mKeyboardVisible = false;
 
@@ -553,6 +542,7 @@ public final class PowerManagerService extends SystemService
     private boolean mProximityWakeSupported;
     android.os.PowerManager.WakeLock mProximityWakeLock;
     SensorEventListener mProximityListener;
+    private boolean mForceNavbar;
 
     private PerformanceManagerInternal mPerf;
 
@@ -728,11 +718,8 @@ public final class PowerManagerService extends SystemService
             resolver.registerContentObserver(CMSettings.Global.getUriFor(
                     CMSettings.Global.WAKE_WHEN_PLUGGED_OR_UNPLUGGED),
                     false, mSettingsObserver, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-		    Settings.System.WAKELOCK_BLOCKING_ENABLED),
-		    false, mSettingsObserver, UserHandle.USER_ALL);
-            resolver.registerContentObserver(Settings.System.getUriFor(
-                    Settings.System.WAKELOCK_BLOCKING_LIST),
+            resolver.registerContentObserver(CMSettings.Global.getUriFor(
+                    CMSettings.Global.DEV_FORCE_SHOW_NAVBAR),
                     false, mSettingsObserver, UserHandle.USER_ALL);
 
             // Go.
@@ -826,14 +813,6 @@ public final class PowerManagerService extends SystemService
         mProximityWakeEnabled = CMSettings.System.getInt(resolver,
                 CMSettings.System.PROXIMITY_ON_WAKE, mProximityWakeEnabledByDefaultConfig ? 1 : 0) == 1;
 
-        mWakeLockBlockingEnabled = Settings.System.getIntForUser(resolver,
-                Settings.System.WAKELOCK_BLOCKING_ENABLED, 0, UserHandle.USER_CURRENT);
-        String blockedWakelockList = Settings.System.getStringForUser(resolver,
-                Settings.System.WAKELOCK_BLOCKING_LIST, UserHandle.USER_CURRENT);
-        setBlockedWakeLocks(blockedWakelockList);
-        Slog.d(TAG, "mWakeLockBlockingEnabled=" + mWakeLockBlockingEnabled + " blockedWakelockList=" + blockedWakelockList);
-
-
         if (mSupportsDoubleTapWakeConfig) {
             boolean doubleTapWakeEnabled = Settings.Secure.getIntForUser(resolver,
                     Settings.Secure.DOUBLE_TAP_TO_WAKE, DEFAULT_DOUBLE_TAP_TO_WAKE,
@@ -886,7 +865,8 @@ public final class PowerManagerService extends SystemService
         mKeyboardBrightness = CMSettings.Secure.getIntForUser(resolver,
                 CMSettings.Secure.KEYBOARD_BRIGHTNESS, mKeyboardBrightnessSettingDefault,
                 UserHandle.USER_CURRENT);
-
+        mForceNavbar = CMSettings.Global.getIntForUser(resolver,
+                CMSettings.Global.DEV_FORCE_SHOW_NAVBAR, 0, UserHandle.USER_CURRENT) == 1;
         mDirty |= DIRTY_SETTINGS;
     }
 
@@ -945,26 +925,11 @@ public final class PowerManagerService extends SystemService
                         + ", tag=\"" + tag + "\", ws=" + ws + ", uid=" + uid + ", pid=" + pid);
             }
 
-  boolean blockWakelock = false;
-	    if (!mSeenWakeLocks.contains(tag)){
-                if ((flags & PowerManager.WAKE_LOCK_LEVEL_MASK) == PowerManager.PARTIAL_WAKE_LOCK){
-                    mSeenWakeLocks.add(tag);
-                }
-	    }
-
-	    if (mWakeLockBlockingEnabled == 1){
-		if (mBlockedWakeLocks.contains(tag)){
-		    blockWakelock = true;
-		}
-	    }
-
-
             WakeLock wakeLock;
             int index = findWakeLockIndexLocked(lock);
             boolean notifyAcquire;
             if (index >= 0) {
                 wakeLock = mWakeLocks.get(index);
-		wakeLock.setIsBlocked(blockWakelock);
                 if (!wakeLock.hasSameProperties(flags, tag, ws, uid, pid)) {
                     // Update existing wake lock.  This shouldn't happen but is harmless.
                     notifyWakeLockChangingLocked(wakeLock, flags, tag, packageName,
@@ -979,7 +944,6 @@ public final class PowerManagerService extends SystemService
                 } catch (RemoteException ex) {
                     throw new IllegalArgumentException("Wake lock is already dead.");
                 }
-		wakeLock.setIsBlocked(blockWakelock);
                 mWakeLocks.add(wakeLock);
                 setWakeLockDisabledStateLocked(wakeLock);
                 if(mBlockedUids.contains(new Integer(uid)) && uid != Process.myUid()) {
@@ -1138,12 +1102,11 @@ public final class PowerManagerService extends SystemService
     }
 
     private void notifyWakeLockAcquiredLocked(WakeLock wakeLock) {
-        if (mSystemReady) {
-            if (!wakeLock.isBlocked()){
-                mNotifier.onWakeLockAcquired(wakeLock.mFlags, wakeLock.mTag, wakeLock.mPackageName,
+        if (mSystemReady && !wakeLock.mDisabled) {
+            wakeLock.mNotifiedAcquired = true;
+            mNotifier.onWakeLockAcquired(wakeLock.mFlags, wakeLock.mTag, wakeLock.mPackageName,
                     wakeLock.mOwnerUid, wakeLock.mOwnerPid, wakeLock.mWorkSource,
                     wakeLock.mHistoryTag);
-	   }
         }
     }
 
@@ -1157,12 +1120,11 @@ public final class PowerManagerService extends SystemService
     }
 
     private void notifyWakeLockReleasedLocked(WakeLock wakeLock) {
-        if (mSystemReady) {
-            if (!wakeLock.isBlocked()){
-                mNotifier.onWakeLockReleased(wakeLock.mFlags, wakeLock.mTag,
+        if (mSystemReady && wakeLock.mNotifiedAcquired) {
+            wakeLock.mNotifiedAcquired = false;
+            mNotifier.onWakeLockReleased(wakeLock.mFlags, wakeLock.mTag,
                     wakeLock.mPackageName, wakeLock.mOwnerUid, wakeLock.mOwnerPid,
                     wakeLock.mWorkSource, wakeLock.mHistoryTag);
-	    }
         }
     }
 
@@ -1669,9 +1631,6 @@ public final class PowerManagerService extends SystemService
                 final WakeLock wakeLock = mWakeLocks.get(i);
                 switch (wakeLock.mFlags & PowerManager.WAKE_LOCK_LEVEL_MASK) {
                     case PowerManager.PARTIAL_WAKE_LOCK:
-			if (wakeLock.isBlocked()){
-                            continue;
-                        }
                         if (!wakeLock.mDisabled) {
                             // We only respect this if the wake lock is not disabled.
                             mWakeLockSummary |= WAKE_LOCK_CPU;
@@ -1765,7 +1724,11 @@ public final class PowerManagerService extends SystemService
                                 buttonBrightness = mButtonBrightnessOverrideFromWindowManager;
                                 keyboardBrightness = mButtonBrightnessOverrideFromWindowManager;
                             } else {
-                                buttonBrightness = mButtonBrightness;
+                                if (!mForceNavbar) {
+                                    buttonBrightness = mButtonBrightness;
+                                } else {
+                                    buttonBrightness = 0;
+                                }
                                 keyboardBrightness = mKeyboardBrightness;
                             }
 
@@ -1882,14 +1845,12 @@ public final class PowerManagerService extends SystemService
 
     private int getScreenOffTimeoutLocked(int sleepTimeout) {
         int timeout = mScreenOffTimeoutSetting;
-        if (timeout != mMaximumScreenOffTimeoutFromDeviceAdmin) {
-            if (isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()) {
-                timeout = Math.min(timeout, mMaximumScreenOffTimeoutFromDeviceAdmin);
-            }
-            if (mUserActivityTimeoutOverrideFromWindowManager >= 0) {
-                timeout = (int)Math.min(timeout, mUserActivityTimeoutOverrideFromWindowManager);
-            }
-	}
+        if (isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()) {
+            timeout = Math.min(timeout, mMaximumScreenOffTimeoutFromDeviceAdmin);
+        }
+        if (mUserActivityTimeoutOverrideFromWindowManager >= 0) {
+            timeout = (int)Math.min(timeout, mUserActivityTimeoutOverrideFromWindowManager);
+        }
         if (sleepTimeout >= 0) {
             timeout = Math.min(timeout, sleepTimeout);
         }
@@ -2560,19 +2521,6 @@ public final class PowerManagerService extends SystemService
         updatePowerStateLocked();
     }
 
-    /**
-     * Boost the CPU
-     * @param duration Duration to boost the CPU for, in milliseconds.
-     * @hide
-     */
-    public void cpuBoost(int duration) {
-        if (duration > 0 && duration <= MAX_CPU_BOOST_TIME) {
-            nativeCpuBoost(duration);
-        } else {
-            Log.e(TAG, "Invalid boost duration: " + duration);
-        }
-    }
- 
     private void shutdownOrRebootInternal(final boolean shutdown, final boolean confirm,
             final String reason, boolean wait) {
         if (mHandler == null || !mSystemReady) {
@@ -3171,7 +3119,6 @@ public final class PowerManagerService extends SystemService
         public final int mOwnerPid;
         public boolean mNotifiedAcquired;
         public boolean mDisabled;
-	private boolean mIsBlocked;
 
         public WakeLock(IBinder lock, int flags, String tag, String packageName,
                 WorkSource workSource, String historyTag, int ownerUid, int ownerPid) {
@@ -3266,14 +3213,6 @@ public final class PowerManagerService extends SystemService
             }
             return result;
         }
-
-        public void setIsBlocked(boolean value){
-            mIsBlocked = value;
-        }
-
-        public boolean isBlocked(){
-            return mIsBlocked;
-        }
     }
 
     private final class SuspendBlockerImpl implements SuspendBlocker {
@@ -3622,14 +3561,6 @@ public final class PowerManagerService extends SystemService
             }
         }
 
-        TelephonyManager getTelephonyManager() {
-            if (mTelephonyManager == null) {
-                mTelephonyManager = (TelephonyManager)mContext.getSystemService(
-                        Context.TELEPHONY_SERVICE);
-            }
-            return mTelephonyManager;
-        }
-
         private void runPostProximityCheck(final Runnable r) {
             if (mSensorManager == null) {
                 r.run();
@@ -3956,38 +3887,11 @@ public final class PowerManagerService extends SystemService
                 Binder.restoreCallingIdentity(ident);
             }
         }
-	
-
-      @Override
-        public String getSeenWakeLocks(){
-            StringBuffer buffer = new StringBuffer();
-            Iterator<String> nextWakeLock = mSeenWakeLocks.iterator();
-            while (nextWakeLock.hasNext()){
-                String wakeLockTag = nextWakeLock.next();
-                buffer.append(wakeLockTag + "|");
-            }
-            if(buffer.length()>0){
-                buffer.deleteCharAt(buffer.length() - 1);
-            }
-            return buffer.toString();
-        }
-    }
-
-    private void setBlockedWakeLocks(String wakeLockTagsString) {
-        mBlockedWakeLocks = new HashSet<String>();
-
-        if (wakeLockTagsString!=null && wakeLockTagsString.length()!=0){
-            String[] parts = wakeLockTagsString.split("\\|");
-            for(int i = 0; i < parts.length; i++){
-                mBlockedWakeLocks.add(parts[i]);
-            }
-        }
-   }
 
         /* updates the blocked uids, so if a wake lock is acquired for it
          * can be released.
          */
-        /*public void updateBlockedUids(int uid, boolean isBlocked) {
+        public void updateBlockedUids(int uid, boolean isBlocked) {
             boolean changed = false;
             if (DEBUG_SPEW) Slog.v(TAG, "updateBlockedUids: uid = " + uid +
                                    "isBlocked = " + isBlocked);
@@ -4019,7 +3923,8 @@ public final class PowerManagerService extends SystemService
                     updatePowerStateLocked();
                 }
             }
-        }*/
+        }
+    }
 
     private void setButtonBrightnessOverrideFromWindowManagerInternal(int brightness) {
         synchronized (mLock) {
@@ -4028,7 +3933,7 @@ public final class PowerManagerService extends SystemService
                 mDirty |= DIRTY_SETTINGS;
                 updatePowerStateLocked();
             }
-        	}
+        }
     }
 
     private final class LocalService extends PowerManagerInternal {
@@ -4054,9 +3959,6 @@ public final class PowerManagerService extends SystemService
 
         }
 
-
-       
-
         @Override
         public void setDozeOverrideFromDreamManager(int screenState, int screenBrightness) {
             switch (screenState) {
@@ -4184,4 +4086,3 @@ public final class PowerManagerService extends SystemService
         return false;
     }
 }
-
diff --git a/services/core/java/com/android/server/power/ShutdownThread.java b/services/core/java/com/android/server/power/ShutdownThread.java
index ca2d488..36a9ca2 100644
--- a/services/core/java/com/android/server/power/ShutdownThread.java
+++ b/services/core/java/com/android/server/power/ShutdownThread.java
@@ -61,7 +61,6 @@ import com.android.internal.telephony.ITelephony;
 import com.android.server.pm.PackageManagerService;
 import com.android.server.power.PowerManagerService;
 import android.util.Log;
-import android.view.Gravity;
 import android.view.IWindowManager;
 import android.view.WindowManager;
 import java.lang.reflect.Method;
@@ -78,9 +77,6 @@ import java.io.IOException;
 import java.io.PrintWriter;
 import java.io.OutputStreamWriter;
 
-import com.android.internal.R;
-
-import com.android.internal.util.rr.Helpers;
 import org.cyanogenmod.internal.util.ThemeUtils;
 
 public final class ShutdownThread extends Thread {
@@ -100,7 +96,6 @@ public final class ShutdownThread extends Thread {
     private static final int MOUNT_SERVICE_STOP_PERCENT = 20;
 
     private static final String SOFT_REBOOT = "soft_reboot";
-    private static final String SYSTEMUI_REBOOT = "systemui_reboot";
 
     // length of vibration before shutting down
     private static final int SHUTDOWN_VIBRATE_MS = 500;
@@ -179,7 +174,7 @@ public final class ShutdownThread extends Thread {
         KeyguardManager km = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);
         boolean keyguardLocked = km.inKeyguardRestrictedInputMode() && km.isKeyguardSecure();
         boolean advancedRebootEnabled = CMSettings.Secure.getInt(context.getContentResolver(),
-                CMSettings.Secure.ADVANCED_REBOOT, 1) == 1;
+                CMSettings.Secure.ADVANCED_REBOOT, 0) == 1;
         boolean isPrimaryUser = UserHandle.getCallingUserId() == UserHandle.USER_OWNER;
 
         return advancedRebootEnabled && !keyguardLocked && isPrimaryUser;
@@ -229,8 +224,6 @@ public final class ShutdownThread extends Thread {
         if (confirm) {
             final CloseDialogReceiver closer = new CloseDialogReceiver(context);
             final boolean advancedReboot = isAdvancedRebootPossible(context);
-            final boolean instant = Settings.Secure.getInt(context.getContentResolver(),
-                    Settings.Secure.ADVANCED_REBOOT_ONECLICK, 0) == 1;
             final Context uiContext = getUiContext(context);
 
             if (sConfirmDialog != null) {
@@ -247,150 +240,49 @@ public final class ShutdownThread extends Thread {
             if (!advancedReboot || mRebootSafeMode) {
                 confirmDialogBuilder.setMessage(resourceId);
             } else {
-                if (instant) {
-                    confirmDialogBuilder.setItems(
-                            com.android.internal.R.array.shutdown_reboot_options,
-                            new DialogInterface.OnClickListener() {
-                                @Override public void onClick(DialogInterface dialog, int which) {
-                                    handleDialog(context, which, advancedReboot);
+                confirmDialogBuilder
+                      .setSingleChoiceItems(com.android.internal.R.array.shutdown_reboot_options,
+                              0, null);
+            }
+
+            confirmDialogBuilder.setPositiveButton(com.android.internal.R.string.yes,
+                    new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            if (!mRebootSafeMode && advancedReboot) {
+                                boolean softReboot = false;
+                                ListView reasonsList = ((AlertDialog)dialog).getListView();
+                                int selected = reasonsList.getCheckedItemPosition();
+                                if (selected != ListView.INVALID_POSITION) {
+                                    String actions[] = context.getResources().getStringArray(
+                                            com.android.internal.R.array.shutdown_reboot_actions);
+                                    if (selected >= 0 && selected < actions.length) {
+                                        mRebootReason = actions[selected];
+                                        if (actions[selected].equals(SOFT_REBOOT)) {
+                                            doSoftReboot();
+                                            return;
+                                        }
+                                    }
                                 }
-                            });
-                } else {
-                    confirmDialogBuilder.setSingleChoiceItems(
-                            com.android.internal.R.array.shutdown_reboot_options, 0, null);
-                }
-            }
 
-            if (!instant) {
-                confirmDialogBuilder.setPositiveButton(com.android.internal.R.string.yes,
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                ListView reasonsList = ((AlertDialog) dialog).getListView();
-                                final int selected = reasonsList.getCheckedItemPosition();
-                                handleDialog(context, selected, advancedReboot);
+                                mReboot = true;
                             }
-                        });
-
-                confirmDialogBuilder.setNegativeButton(com.android.internal.R.string.no, null);
-            }
+                            beginShutdownSequence(context);
+                      }
+                  });
 
+            confirmDialogBuilder.setNegativeButton(com.android.internal.R.string.no, null);
             sConfirmDialog = confirmDialogBuilder.create();
 
             closer.dialog = sConfirmDialog;
-            sConfirmDialog.setOnDismissListener(closer);                                                                                  
-            WindowManager.LayoutParams attrs = sConfirmDialog.getWindow().getAttributes();
-         
-            boolean isPrimary = UserHandle.getCallingUserId() == UserHandle.USER_OWNER;
-            int powermenuAnimations = isPrimary ? getPowermenuAnimations(context) : 0;
-
-            if (powermenuAnimations == 0) {
-            // default AOSP action
-            }
-            if (powermenuAnimations == 1) {
-                attrs.windowAnimations = R.style.PowerMenuBottomAnimation;
-                attrs.gravity = Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 2) {
-                attrs.windowAnimations = R.style.PowerMenuTopAnimation;
-                attrs.gravity = Gravity.TOP|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 3) {
-                attrs.windowAnimations = R.style.PowerMenuRotateAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 4) {
-                attrs.windowAnimations = R.style.PowerMenuXylonAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 5) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 6) {
-                attrs.windowAnimations = R.style.PowerMenuTnAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 7) {
-                attrs.windowAnimations = R.style.PowerMenuflyAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 8) {
-                attrs.windowAnimations = R.style.PowerMenuCardAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 9) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.TOP|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 10) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL;
-            }
-
-            if (Settings.System.getInt(context.getContentResolver(),
-                    Settings.System.TRANSPARENT_POWER_MENU, 100) != 100) {
-                attrs.alpha = setRebootDialogAlpha(context);
-            }
-
+            sConfirmDialog.setOnDismissListener(closer);
             sConfirmDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
-            if (Settings.System.getInt(context.getContentResolver(),
-                    Settings.System.TRANSPARENT_POWER_DIALOG_DIM, 50) != 50) {
-                sConfirmDialog.getWindow().setDimAmount(setRebootDialogDim(context));
-            }
             sConfirmDialog.show();
         } else {
             beginShutdownSequence(context);
         }
     }
 
-    private static int getPowermenuAnimations(Context context) {
-        return Settings.System.getInt(context.getContentResolver(),
-                Settings.System.POWER_MENU_ANIMATIONS, 0);
-    }
-
-    private static float setRebootDialogAlpha(Context context) {
-        int mRebootDialogAlpha = Settings.System.getInt(
-                context.getContentResolver(),
-                Settings.System.TRANSPARENT_POWER_MENU, 100);
-        double dAlpha = mRebootDialogAlpha / 100.0;
-        float alpha = (float) dAlpha;
-        return alpha;
-    }
-
-    private static float setRebootDialogDim(Context context) {
-        int mRebootDialogDim = Settings.System.getInt(context.getContentResolver(),
-                Settings.System.TRANSPARENT_POWER_DIALOG_DIM, 50);
-        double dDim = mRebootDialogDim / 100.0;
-        float dim = (float) dDim;
-        return dim;
-    }
-
-    private static void handleDialog(Context context, int selected, boolean advancedReboot) {
-        if (advancedReboot) {
-
-            if (selected != ListView.INVALID_POSITION) {
-                String actions[] = context.getResources().getStringArray(
-                        com.android.internal.R.array.shutdown_reboot_actions);
-		if (actions[selected].equals(SYSTEMUI_REBOOT)) {
-                                        mRebootReason = actions[selected];
-                                        doSystemUIReboot();
-                                        return;
-                                    }
-               else if (selected >= 0 && selected < actions.length) {
-                    mRebootReason = actions[selected];
-                    if (actions[selected].equals(SOFT_REBOOT)) {
-                        doSoftReboot();
-                        return;
-                    }
-                }
-            }
-
-            mReboot = true;
-        }
-        beginShutdownSequence(context);
-    }
-
     private static void doSoftReboot() {
         try {
             final IActivityManager am =
@@ -403,10 +295,6 @@ public final class ShutdownThread extends Thread {
         }
     }
 
-    private static void doSystemUIReboot() {
-        Helpers.restartSystemUI();
-    }
-
     private static class CloseDialogReceiver extends BroadcastReceiver
             implements DialogInterface.OnDismissListener {
         private Context mContext;
@@ -562,58 +450,6 @@ public final class ShutdownThread extends Thread {
             pd.setCancelable(false);
             pd.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
 
-            WindowManager.LayoutParams attrs = pd.getWindow().getAttributes();
-
-            boolean isPrimary = UserHandle.getCallingUserId() == UserHandle.USER_OWNER;
-            int powermenuAnimations = isPrimary ? getPowermenuAnimations(context) : 0;
-
-           if (powermenuAnimations == 0) {
-           // default AOSP action
-           }
-           if (powermenuAnimations == 1) {
-                attrs.windowAnimations = R.style.PowerMenuBottomAnimation;
-                attrs.gravity = Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL;
-           }
-           if (powermenuAnimations == 2) {
-               attrs.windowAnimations = R.style.PowerMenuTopAnimation;
-               attrs.gravity = Gravity.TOP|Gravity.CENTER_HORIZONTAL;
-           }
-           if (powermenuAnimations == 3) {
-                attrs.windowAnimations = R.style.PowerMenuRotateAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 4) {
-                attrs.windowAnimations = R.style.PowerMenuXylonAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 5) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 6) {
-                attrs.windowAnimations = R.style.PowerMenuTnAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 7) {
-                attrs.windowAnimations = R.style.PowerMenuflyAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 8) {
-                attrs.windowAnimations = R.style.PowerMenuCardAnimation;
-                attrs.gravity = Gravity.CENTER_VERTICAL|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 9) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.TOP|Gravity.CENTER_HORIZONTAL;
-            }
-            if (powermenuAnimations == 10) {
-                attrs.windowAnimations = R.style.PowerMenuTranslucentAnimation;
-                attrs.gravity = Gravity.BOTTOM|Gravity.CENTER_HORIZONTAL;
-            }
-
-            attrs.alpha = setRebootDialogAlpha(context);
-
-            pd.getWindow().setDimAmount(setRebootDialogDim(context));
             pd.show();
         }
 
diff --git a/services/core/java/com/android/server/statusbar/StatusBarManagerService.java b/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
index 02637f9..0e51953 100644
--- a/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
+++ b/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
@@ -17,7 +17,6 @@
 package com.android.server.statusbar;
 
 import android.app.StatusBarManager;
-import android.content.Intent;
 import android.os.Binder;
 import android.os.Bundle;
 import android.os.Handler;
@@ -505,15 +504,6 @@ public class StatusBarManagerService extends IStatusBarService.Stub {
     }
 
     @Override
-    public void toggleOrientationListener(boolean enable) {
-        if (mBar != null) {
-            try {
-                mBar.toggleOrientationListener(enable);
-            } catch (RemoteException ex) {}
-        }
-    }
-
-    @Override
     public void setCurrentUser(int newUserId) {
         if (SPEW) Slog.d(TAG, "Setting current user to user " + newUserId);
         mCurrentUserId = newUserId;
@@ -566,71 +556,6 @@ public class StatusBarManagerService extends IStatusBarService.Stub {
         }
     }
 
-
-    @Override
-    public void setAutoRotate(boolean enabled) {
-        if (mBar != null) {
-            try {
-                mBar.setAutoRotate(enabled);
-            } catch (RemoteException ex) {}
-        }
-    }
-	
-	/**
-     * Ask keyguard to invoke a custom intent after dismissing keyguard
-     * @hide
-     */
-    @Override
-    public void showCustomIntentAfterKeyguard(Intent intent) {
-        enforceStatusBarService();
-        if (mBar != null) {
-            try {
-                mBar.showCustomIntentAfterKeyguard(intent);
-                     } catch (RemoteException ex) {}
-        }
-    }
-
-    public void toggleLastApp() {
-        if (mBar != null) {
-            try {
-                mBar.toggleLastApp();
-            } catch (RemoteException ex) {}
-        }
-    }
-
-    @Override
-    public void toggleKillApp() {
-        if (mBar != null) {
-            try {
-                mBar.toggleKillApp();
-            } catch (RemoteException ex) {}
-        }
-    }
-    
-    @Override
-    public void toggleScreenshot() {
-        if (mBar != null) {
-            try {
-                mBar.toggleScreenshot();
-            } catch (RemoteException ex) {}
-        }
-    }
-    /**
-     * Let systemui know screen pinning state change. This is independent of the
-     * showScreenPinningRequest() call as it does not reflect state
-     *
-     * @hide
-     */
-    @Override
-    public void screenPinningStateChanged(boolean enabled) {
-        if (mBar != null) {
-            try {
-                mBar.screenPinningStateChanged(enabled);
-            } catch (RemoteException ex) {
-            }
-        }
-    }
-
     private void enforceStatusBar() {
         mContext.enforceCallingOrSelfPermission(android.Manifest.permission.STATUS_BAR,
                 "StatusBarManagerService");
diff --git a/services/core/java/com/android/server/wm/AppTransition.java b/services/core/java/com/android/server/wm/AppTransition.java
index 820f13d..7bd0635 100644
--- a/services/core/java/com/android/server/wm/AppTransition.java
+++ b/services/core/java/com/android/server/wm/AppTransition.java
@@ -17,16 +17,13 @@
 package com.android.server.wm;
 
 import android.content.Context;
-import android.content.ContentResolver;
 import android.content.res.Configuration;
-import android.database.ContentObserver;
 import android.graphics.Bitmap;
 import android.graphics.Rect;
 import android.os.Debug;
 import android.os.Handler;
 import android.os.IBinder;
 import android.os.IRemoteCallback;
-import android.provider.Settings;
 import android.util.Slog;
 import android.view.WindowManager;
 import android.view.animation.AlphaAnimation;
@@ -73,9 +70,6 @@ import static com.android.internal.R.styleable.WindowAnimation_wallpaperIntraOpe
 import static com.android.internal.R.styleable.WindowAnimation_wallpaperOpenEnterAnimation;
 import static com.android.internal.R.styleable.WindowAnimation_wallpaperOpenExitAnimation;
 
-import com.android.internal.util.rr.AwesomeAnimationHelper;
-import android.widget.Toast;
-
 // State management of app transitions.  When we are preparing for a
 // transition, mNextAppTransition will be the kind of transition to
 // perform or TRANSIT_NONE if we are not waiting.  If we are waiting,
@@ -194,23 +188,12 @@ public class AppTransition implements Dump {
 
     private final int mClipRevealTranslationY;
 
-    private SettingsObserver mSettingsObserver;
-    private int[] mActivityAnimations = new int[11];
-    private int mAnimationDuration;
-    private boolean mIsResId = false;
-    private boolean mNoOverrides;
-    private boolean mExitOnly;
-    private boolean mReverseExit;
-
     private int mCurrentUserId = 0;
 
     private final ArrayList<AppTransitionListener> mListeners = new ArrayList<>();
 
     AppTransition(Context context, Handler h) {
         mContext = context;
-        mSettingsObserver = new SettingsObserver(h);
-        mSettingsObserver.observe();
-        updateSettings();
         mH = h;
         mLinearOutSlowInInterpolator = AnimationUtils.loadInterpolator(context,
                 com.android.internal.R.interpolator.linear_out_slow_in);
@@ -417,14 +400,10 @@ public class AppTransition implements Dump {
         int anim = 0;
         Context context = mContext;
         if (animAttr >= 0) {
-            if (mIsResId) {
-                anim = animAttr;
-            } else {
-                AttributeCache.Entry ent = getCachedAnimations(lp);
-                if (ent != null) {
-                    context = ent.context;
-                    anim = ent.array.getResourceId(animAttr, 0);
-                }
+            AttributeCache.Entry ent = getCachedAnimations(lp);
+            if (ent != null) {
+                context = ent.context;
+                anim = ent.array.getResourceId(animAttr, 0);
             }
         }
         if (anim != 0) {
@@ -976,7 +955,6 @@ public class AppTransition implements Dump {
     Animation loadAnimation(WindowManager.LayoutParams lp, int transit, boolean enter,
             int appWidth, int appHeight, int orientation, Rect containingFrame, Rect contentInsets,
             Rect appFrame, boolean isVoiceInteraction) {
-        mIsResId = false;
         Animation a;
         if (isVoiceInteraction && (transit == TRANSIT_ACTIVITY_OPEN
                 || transit == TRANSIT_TASK_OPEN
@@ -1059,155 +1037,61 @@ public class AppTransition implements Dump {
             int animAttr = 0;
             switch (transit) {
                 case TRANSIT_ACTIVITY_OPEN:
-                    if (mActivityAnimations[0] != 0) {
-                        mIsResId = true;
-                      int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[0], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_activityOpenEnterAnimation
-                                : WindowAnimation_activityOpenExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_activityOpenEnterAnimation
+                            : WindowAnimation_activityOpenExitAnimation;
                     break;
                 case TRANSIT_ACTIVITY_CLOSE:
-                    if (mActivityAnimations[1] != 0) {
-                        mIsResId = true;
-                        int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[1], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_activityCloseEnterAnimation
-                                : WindowAnimation_activityCloseExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_activityCloseEnterAnimation
+                            : WindowAnimation_activityCloseExitAnimation;
                     break;
                 case TRANSIT_TASK_OPEN:
-                    if (mActivityAnimations[2] != 0) {
-                        mIsResId = true;
-                     int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[2], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_taskOpenEnterAnimation
-                                : WindowAnimation_taskOpenExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_taskOpenEnterAnimation
+                            : WindowAnimation_taskOpenExitAnimation;
                     break;
                 case TRANSIT_TASK_CLOSE:
-                    if (mActivityAnimations[3] != 0) {
-                        mIsResId = true;
-                         int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[3], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_taskCloseEnterAnimation
-                                : WindowAnimation_taskCloseExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_taskCloseEnterAnimation
+                            : WindowAnimation_taskCloseExitAnimation;
                     break;
                 case TRANSIT_TASK_TO_FRONT:
-                    if (mActivityAnimations[4] != 0) {
-                        mIsResId = true;
-                    int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[4], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_taskToFrontEnterAnimation
-                                : WindowAnimation_taskToFrontExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_taskToFrontEnterAnimation
+                            : WindowAnimation_taskToFrontExitAnimation;
                     break;
                 case TRANSIT_TASK_TO_BACK:
-                    if (mActivityAnimations[5] != 0) {
-                        mIsResId = true;
-                         int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[5], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_taskToBackEnterAnimation
-                                : WindowAnimation_taskToBackExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_taskToBackEnterAnimation
+                            : WindowAnimation_taskToBackExitAnimation;
                     break;
                 case TRANSIT_WALLPAPER_OPEN:
-                    if (mActivityAnimations[6] != 0) {
-                        mIsResId = true;
-                          int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[6], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_wallpaperOpenEnterAnimation
-                                : WindowAnimation_wallpaperOpenExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_wallpaperOpenEnterAnimation
+                            : WindowAnimation_wallpaperOpenExitAnimation;
                     break;
                 case TRANSIT_WALLPAPER_CLOSE:
-                    if (mActivityAnimations[7] != 0) {
-                        mIsResId = true;
-                         int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[7], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_wallpaperCloseEnterAnimation
-                                : WindowAnimation_wallpaperCloseExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_wallpaperCloseEnterAnimation
+                            : WindowAnimation_wallpaperCloseExitAnimation;
                     break;
                 case TRANSIT_WALLPAPER_INTRA_OPEN:
-                    if (mActivityAnimations[8] != 0) {
-                        mIsResId = true;
-                       int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[8], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_wallpaperIntraOpenEnterAnimation
-                                : WindowAnimation_wallpaperIntraOpenExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_wallpaperIntraOpenEnterAnimation
+                            : WindowAnimation_wallpaperIntraOpenExitAnimation;
                     break;
                 case TRANSIT_WALLPAPER_INTRA_CLOSE:
-                    if (mActivityAnimations[9] != 0) {
-                        mIsResId = true;
-                          int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[9], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_wallpaperIntraCloseEnterAnimation
-                                : WindowAnimation_wallpaperIntraCloseExitAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_wallpaperIntraCloseEnterAnimation
+                            : WindowAnimation_wallpaperIntraCloseExitAnimation;
                     break;
                 case TRANSIT_TASK_OPEN_BEHIND:
-                    if (mActivityAnimations[10] != 0) {
-                        mIsResId = true;
-                            int[] animArray = AwesomeAnimationHelper.getAnimations(mActivityAnimations[10], mExitOnly, mReverseExit);
-                        animAttr = enter
-                                ? animArray[1]
-                                : animArray[0];
-                    } else {
-                        animAttr = enter
-                                ? WindowAnimation_launchTaskBehindSourceAnimation
-                                : WindowAnimation_launchTaskBehindTargetAnimation;
-                    }
+                    animAttr = enter
+                            ? WindowAnimation_launchTaskBehindSourceAnimation
+                            : WindowAnimation_launchTaskBehindTargetAnimation;
             }
             a = animAttr != 0 ? loadAnimationAttr(lp, animAttr) : null;
-            if (a != null) {
-                if (mAnimationDuration > 0) {
-                    a.setDuration(mAnimationDuration);
-                }
-            }
-            mIsResId = false;
             if (DEBUG_APP_TRANSITIONS || DEBUG_ANIM) Slog.v(TAG,
                     "applyAnimation:"
                     + " anim=" + a
@@ -1227,7 +1111,6 @@ public class AppTransition implements Dump {
 
     void overridePendingAppTransition(String packageName, int enterAnim, int exitAnim,
                                              IRemoteCallback startedCallback) {
-	if (mNoOverrides) return;
         if (isTransitionSet()) {
             mNextAppTransitionType = NEXT_TRANSIT_TYPE_CUSTOM;
             mNextAppTransitionPackage = packageName;
@@ -1471,33 +1354,4 @@ public class AppTransition implements Dump {
     public void setCurrentUser(int newUserId) {
         mCurrentUserId = newUserId;
     }
-
-    private class SettingsObserver extends ContentObserver {
-        SettingsObserver(Handler handler) {
-            super(handler);
-        }
-        void observe() {
-            ContentResolver resolver = mContext.getContentResolver();
-            resolver.registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.ANIMATION_CONTROLS_DURATION), false, this);
-            for (int i = 0; i < 11; i++) {
-	            resolver.registerContentObserver(
-                    Settings.System.getUriFor(Settings.System.ACTIVITY_ANIMATION_CONTROLS[i]), false, this);
-            }
-        }
-         @Override
-        public void onChange(boolean selfChange) {
-            updateSettings();
-        }
-    }
-
-    private void updateSettings() {
-        ContentResolver resolver = mContext.getContentResolver();
-        for (int i = 0; i < 11; i++) {  
-            mActivityAnimations[i] = Settings.System.getInt(resolver, Settings.System.ACTIVITY_ANIMATION_CONTROLS[i], 0);
-        }
-
-        int temp = Settings.System.getInt(resolver, Settings.System.ANIMATION_CONTROLS_DURATION, 0);
-        mAnimationDuration = temp * 15;
-    }
 }
diff --git a/services/core/java/com/android/server/wm/WindowAnimator.java b/services/core/java/com/android/server/wm/WindowAnimator.java
index 498ada1..362e959 100644
--- a/services/core/java/com/android/server/wm/WindowAnimator.java
+++ b/services/core/java/com/android/server/wm/WindowAnimator.java
@@ -30,8 +30,9 @@ import static com.android.server.wm.WindowManagerService.LayoutFields.SET_ORIENT
 import static com.android.server.wm.WindowManagerService.LayoutFields.SET_WALLPAPER_ACTION_PENDING;
 
 import android.content.Context;
+import android.database.ContentObserver;
+import android.os.Handler;
 import android.os.RemoteException;
-import android.provider.Settings;
 import android.util.Slog;
 import android.util.SparseArray;
 import android.util.TimeUtils;
@@ -45,6 +46,8 @@ import android.view.Choreographer;
 
 import com.android.server.wm.WindowManagerService.LayoutFields;
 
+import cyanogenmod.providers.CMSettings;
+
 import java.io.PrintWriter;
 import java.util.ArrayList;
 
@@ -99,7 +102,7 @@ public class WindowAnimator {
     /** Use one animation for all entering activities after keyguard is dismissed. */
     Animation mPostKeyguardExitAnimation;
 
-    private final boolean mBlurUiEnabled;
+    private boolean mKeyguardBlurEnabled;
 
     // forceHiding states.
     static final int KEYGUARD_NOT_SHOWN     = 0;
@@ -121,9 +124,14 @@ public class WindowAnimator {
         mContext = service.mContext;
         mPolicy = service.mPolicy;
 
-        mBlurUiEnabled = mContext.getResources().getBoolean(
+        boolean blurUiEnabled = mContext.getResources().getBoolean(
                 com.android.internal.R.bool.config_ui_blur_enabled);
 
+        if (blurUiEnabled) {
+            SettingsObserver observer = new SettingsObserver(new Handler());
+            observer.observe(mContext);
+        }
+
         mAnimationFrameCallback = new Choreographer.FrameCallback() {
             public void doFrame(long frameTimeNs) {
                 synchronized (mService.mWindowMap) {
@@ -226,7 +234,14 @@ public class WindowAnimator {
 
         // Only hide windows if the keyguard is active and not animating away.
         boolean keyguardOn = mPolicy.isKeyguardShowingOrOccluded()
-                && (mForceHiding != KEYGUARD_ANIMATING_OUT && !mBlurUiEnabled);
+                && mForceHiding != KEYGUARD_ANIMATING_OUT;
+
+        final WindowState winKeyguardPanel = (WindowState) mPolicy.getWinKeyguardPanelLw();
+        // If a keyguard panel is currently being shown, we should
+        // continue to hide the windows as if blur is disabled.
+        if (winKeyguardPanel == null) {
+            keyguardOn &= !mKeyguardBlurEnabled;
+        }
         return keyguardOn && !allowWhenLocked && (win.getDisplayId() == Display.DEFAULT_DISPLAY);
     }
 
@@ -235,10 +250,7 @@ public class WindowAnimator {
 
         final WindowList windows = mService.getWindowListLocked(displayId);
 
-        final boolean seeThrough = Settings.System.getBoolean(mContext.getContentResolver(),
-                Settings.System.LOCKSCREEN_SEE_THROUGH, false);
-
-        if (mKeyguardGoingAway && !mBlurUiEnabled) {
+        if (mKeyguardGoingAway && !mKeyguardBlurEnabled) {
             for (int i = windows.size() - 1; i >= 0; i--) {
                 WindowState win = windows.get(i);
                 if (!mPolicy.isKeyguardHostWindow(win.mAttrs)) {
@@ -253,7 +265,7 @@ public class WindowAnimator {
                         // Create a new animation to delay until keyguard is gone on its own.
                         winAnimator.mAnimation = new AlphaAnimation(1.0f, 1.0f);
                         winAnimator.mAnimation.setDuration(
-                                (mBlurUiEnabled || seeThrough) ? 0 : KEYGUARD_ANIM_TIMEOUT_MS);
+                                mKeyguardBlurEnabled ? 0 : KEYGUARD_ANIM_TIMEOUT_MS);
                         winAnimator.mAnimationIsEntrance = false;
                         winAnimator.mAnimationStartTime = -1;
                         winAnimator.mKeyguardGoingAwayAnimation = true;
@@ -343,7 +355,7 @@ public class WindowAnimator {
                         if (nowAnimating && win.mWinAnimator.mKeyguardGoingAwayAnimation) {
                             mForceHiding = KEYGUARD_ANIMATING_OUT;
                         } else {
-                            mForceHiding = win.isDrawnLw()  && (!mBlurUiEnabled || !seeThrough) ?
+                            mForceHiding = win.isDrawnLw()  && !mKeyguardBlurEnabled ?
                                 KEYGUARD_SHOWN : KEYGUARD_NOT_SHOWN;
                         }
                     }
@@ -896,4 +908,30 @@ public class WindowAnimator {
     private class DisplayContentsAnimator {
         ScreenRotationAnimation mScreenRotationAnimation = null;
     }
+
+    private class SettingsObserver extends ContentObserver {
+        public SettingsObserver(Handler handler) {
+            super(handler);
+        }
+
+        public void observe(Context context) {
+            context.getContentResolver().registerContentObserver(
+                    CMSettings.Secure.getUriFor(CMSettings.Secure.LOCK_SCREEN_BLUR_ENABLED),
+                    false,
+                    this);
+
+            onChange(true);
+        }
+
+        public void unobserve(Context context) {
+            context.getContentResolver().unregisterContentObserver(this);
+        }
+
+        @Override
+        public void onChange(boolean selfChange) {
+            // default to being enabled since we are here because the blur config was set to true
+            mKeyguardBlurEnabled = CMSettings.Secure.getInt(mContext.getContentResolver(),
+                    CMSettings.Secure.LOCK_SCREEN_BLUR_ENABLED, 1) == 1;
+        }
+    }
 }
diff --git a/services/core/java/com/android/server/wm/WindowManagerService.java b/services/core/java/com/android/server/wm/WindowManagerService.java
index 45a52b9..b1337e5 100644
--- a/services/core/java/com/android/server/wm/WindowManagerService.java
+++ b/services/core/java/com/android/server/wm/WindowManagerService.java
@@ -66,7 +66,6 @@ import android.os.SystemProperties;
 import android.os.SystemService;
 import android.os.Trace;
 import android.os.UserHandle;
-import android.os.UserManager;
 import android.os.WorkSource;
 import android.provider.Settings;
 import android.util.ArraySet;
@@ -153,7 +152,6 @@ import java.util.Arrays;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Iterator;
-import java.util.Map;
 import java.util.List;
 
 import static android.view.WindowManager.LayoutParams.FIRST_APPLICATION_WINDOW;
@@ -5676,120 +5674,6 @@ public class WindowManagerService extends IWindowManager.Stub
         mLastStatusBarVisibility |= flags;
     }
 
-    private void moveTaskAndActivityToFront(int taskId) {
-        try {
-            moveTaskToTop(taskId);
-            mActivityManager.moveTaskToFront(taskId, 0, null);
-        } catch (RemoteException e) {
-            Log.e(TAG, "Cannot move the activity to front", e);
-        }
-    }
-
-    @Override
-    public void notifyFloatActivityTouched(IBinder token, boolean force) {
-        synchronized(mWindowMap) {
-              boolean changed = false;
-              if (token != null) {
-                  AppWindowToken newFocus = findAppWindowToken(token);
-                  if (newFocus == null) {
-                      Slog.w(TAG, "Attempted to set focus to non-existing app token: " + token);
-                      return;
-                  }
-                  changed = mFocusedApp != newFocus;
-                  mFocusedApp = newFocus;
-                  if (changed || force) {
-                      if (DEBUG_FOCUS) Slog.v(TAG, "Changed app focus to " + token);
-                      mInputMonitor.setFocusedAppLw(newFocus);
-                  }
-              }
-
-              if (changed || force) {
-                  final long origId = Binder.clearCallingIdentity();
-                  updateFocusedWindowLocked(UPDATE_FOCUS_NORMAL, true);
-                  mH.removeMessages(H.REPORT_FOCUS_CHANGE);
-                  mH.sendEmptyMessage(H.REPORT_FOCUS_CHANGE);
-                  Binder.restoreCallingIdentity(origId);
-              }
-       }
-
-       if (!force) {
-           final long origId = Binder.clearCallingIdentity();
-           try {
-                int taskId = mActivityManager.getTaskForActivity(token, false);
-                moveTaskAndActivityToFront(taskId);
-           } catch (RemoteException e) {
-                Log.e(TAG, "Cannot move the activity to front", e);
-           }
-           Binder.restoreCallingIdentity(origId);
-       }
-    }
-
-    @Override
-    public Rect getAppFullscreenViewRect() {
-        final DisplayContent displayContent = getDefaultDisplayContentLocked();
-        final boolean rotated = (mRotation == Surface.ROTATION_90
-                || mRotation == Surface.ROTATION_270);
-        final int realdw = rotated ?
-                displayContent.mBaseDisplayHeight : displayContent.mBaseDisplayWidth;
-        final int realdh = rotated ?
-                displayContent.mBaseDisplayWidth : displayContent.mBaseDisplayHeight;
-
-        int dw = realdw;
-        int dh = realdh;
-
-        // Get application display metrics.
-        int appWidth = mPolicy.getNonDecorDisplayWidth(dw, dh, mRotation);
-        int appHeight = mPolicy.getNonDecorDisplayHeight(dw, dh, mRotation);
-
-        return new Rect(0, 0, appWidth, appHeight);
-    }
-
-    @Override
-    public Rect getAppMinimumViewRect() {
-        final DisplayContent displayContent = getDefaultDisplayContentLocked();
-        final boolean rotated = (mRotation == Surface.ROTATION_90
-                || mRotation == Surface.ROTATION_270);
-        final int realdw = rotated ?
-                displayContent.mBaseDisplayHeight : displayContent.mBaseDisplayWidth;
-        final int realdh = rotated ?
-                displayContent.mBaseDisplayWidth : displayContent.mBaseDisplayHeight;
-
-        int dw = realdw;
-        int dh = realdh;
-
-        // Get application display metrics.
-        int appWidth = mPolicy.getNonDecorDisplayWidth(dw, dh, mRotation);
-        int appHeight = mPolicy.getNonDecorDisplayHeight(dw, dh, mRotation);
-
-        return new Rect(0, 0, (int)(appWidth * 0.5f) , (int)(appHeight * 0.5f));
-    }
-
-    @Override
-    public Rect getFloatViewRect() {
-        final DisplayContent displayContent = getDefaultDisplayContentLocked();
-        final boolean rotated = (mRotation == Surface.ROTATION_90
-                || mRotation == Surface.ROTATION_270);
-        final int realdw = rotated ?
-                displayContent.mBaseDisplayHeight : displayContent.mBaseDisplayWidth;
-        final int realdh = rotated ?
-                displayContent.mBaseDisplayWidth : displayContent.mBaseDisplayHeight;
-        final boolean nativeLandscape =
-                (displayContent.mBaseDisplayHeight < displayContent.mBaseDisplayWidth);
-
-        int dw = realdw;
-        int dh = realdh;
-
-        // Get application display metrics.
-        int appWidth = mPolicy.getNonDecorDisplayWidth(dw, dh, mRotation);
-        int appHeight = mPolicy.getNonDecorDisplayHeight(dw, dh, mRotation);
-
-        if (nativeLandscape ^ rotated) {
-            return new Rect(0, 0, (int)(appWidth * 0.7f), (int)(appHeight * 0.9f));
-        } else {
-            return new Rect(0, 0, (int)(appWidth * 0.9f) , (int)(appHeight * 0.7f));
-        }
-    }
-
     // Called by window manager policy. Not exposed externally.
     @Override
     public int getLidState() {
@@ -6076,15 +5960,18 @@ public class WindowManagerService extends IWindowManager.Stub
         return true;
     }
 
-    public void showBootMessage(final ApplicationInfo info, final int current, final int total,
-            final boolean always) {
+    public void updateBootProgress(final int stage, final ApplicationInfo optimizedApp,
+            final int currentAppPos, final int totalAppCount, final boolean always) {
         boolean first = false;
         synchronized(mWindowMap) {
             if (DEBUG_BOOT) {
                 RuntimeException here = new RuntimeException("here");
                 here.fillInStackTrace();
-                Slog.i(TAG, "showBootMessage: info=" + (info != null ? info.toString() : null)
-                        + " current=" + current + " total=" + total + " always=" + always
+                Slog.i(TAG, "updateBootProgress: stage=" + stage
+                        + " optimizedApp=" + optimizedApp
+                        + " currentAppPos=" + currentAppPos
+                        + " totalAppCount=" + totalAppCount
+                        + " always=" + always
                         + " mAllowBootMessages=" + mAllowBootMessages
                         + " mShowingBootMessages=" + mShowingBootMessages
                         + " mSystemBooted=" + mSystemBooted, here);
@@ -6102,7 +5989,7 @@ public class WindowManagerService extends IWindowManager.Stub
                 return;
             }
             mShowingBootMessages = true;
-            mPolicy.showBootMessage(info, current, total, always);
+            mPolicy.updateBootProgress(stage, optimizedApp, currentAppPos, totalAppCount);
         }
         if (first) {
             performEnableScreen();
@@ -7800,12 +7687,6 @@ public class WindowManagerService extends IWindowManager.Stub
                    + " milliseconds before attempting to detect safe mode.");
         }
 
-        UserManager um = (UserManager) mContext.getSystemService(Context.USER_SERVICE);
-        if (um != null && um.hasUserRestriction(UserManager.DISALLOW_SAFE_BOOT)) {
-            mSafeMode = false;
-            return false;
-        }
-
         int menuState = mInputManager.getKeyCodeState(-1, InputDevice.SOURCE_ANY,
                 KeyEvent.KEYCODE_MENU);
         int sState = mInputManager.getKeyCodeState(-1, InputDevice.SOURCE_ANY, KeyEvent.KEYCODE_S);
@@ -11001,16 +10882,8 @@ public class WindowManagerService extends IWindowManager.Stub
 
             if (DEBUG_FOCUS_LIGHT) Slog.v(TAG, "findFocusedWindow: Found new focus @ " + i +
                         " = " + win);
-
-            // Dispatch to this window if it is wants key events.
-            if (win.canReceiveKeys()) {
-                if (mFocusedApp != null) {
-                    return win;
-                } else {
-                    return win;
-                }
-            }
-		}
+            return win;
+        }
 
         if (DEBUG_FOCUS_LIGHT) Slog.v(TAG, "findFocusedWindow: No focusable windows.");
         return null;
@@ -11345,11 +11218,6 @@ public class WindowManagerService extends IWindowManager.Stub
     }
 
     @Override
-    public boolean navigationBarCanMove() {
-        return mPolicy.navigationBarCanMove();
-    }
-
-    @Override
     public void lockNow(Bundle options) {
         mPolicy.lockNow(options);
     }
@@ -12276,10 +12144,4 @@ public class WindowManagerService extends IWindowManager.Stub
             }
         }
     }
-
-    /* @hide */
-    @Override
-    public int getSystemUIVisibility() {
-        return mLastStatusBarVisibility;
-    }
 }
diff --git a/services/core/jni/com_android_server_location_GpsLocationProvider.cpp b/services/core/jni/com_android_server_location_GpsLocationProvider.cpp
index 91eeb8b..3a2851a 100644
--- a/services/core/jni/com_android_server_location_GpsLocationProvider.cpp
+++ b/services/core/jni/com_android_server_location_GpsLocationProvider.cpp
@@ -39,6 +39,7 @@ static jobject mCallbacksObj = NULL;
 static jmethodID method_reportLocation;
 static jmethodID method_reportStatus;
 static jmethodID method_reportSvStatus;
+static jmethodID method_reportGnssSvStatus;
 static jmethodID method_reportAGpsStatus;
 static jmethodID method_reportNmea;
 static jmethodID method_setEngineCapabilities;
@@ -69,6 +70,7 @@ static const GnssConfigurationInterface* sGnssConfigurationInterface = NULL;
 
 // temporary storage for GPS callbacks
 static GpsSvStatus  sGpsSvStatus;
+static GnssSvStatus  sGnssSvStatus;
 static const char* sNmeaString;
 static int sNmeaStringLength;
 
@@ -105,10 +107,20 @@ static void status_callback(GpsStatus* status)
 static void sv_status_callback(GpsSvStatus* sv_status)
 {
     JNIEnv* env = AndroidRuntime::getJNIEnv();
+    ALOGD("sv_status_callback(%p)", sv_status);
     memcpy(&sGpsSvStatus, sv_status, sizeof(sGpsSvStatus));
     env->CallVoidMethod(mCallbacksObj, method_reportSvStatus);
     checkAndClearExceptionFromCallback(env, __FUNCTION__);
 }
+  
+static void gnss_sv_status_callback(GnssSvStatus* sv_status)
+{
+    JNIEnv* env = AndroidRuntime::getJNIEnv();
+    ALOGD("gnss_sv_status_callback(%p)", sv_status);
+    memcpy(&sGnssSvStatus, sv_status, sizeof(sGnssSvStatus));
+    env->CallVoidMethod(mCallbacksObj, method_reportGnssSvStatus);
+    checkAndClearExceptionFromCallback(env, __FUNCTION__);
+}
 
 static void nmea_callback(GpsUtcTime timestamp, const char* nmea, int length)
 {
@@ -156,6 +168,7 @@ GpsCallbacks sGpsCallbacks = {
     location_callback,
     status_callback,
     sv_status_callback,
+    gnss_sv_status_callback,
     nmea_callback,
     set_capabilities_callback,
     acquire_wakelock_callback,
@@ -446,6 +459,7 @@ static void android_location_GpsLocationProvider_class_init_native(JNIEnv* env,
     method_reportLocation = env->GetMethodID(clazz, "reportLocation", "(IDDDFFFJ)V");
     method_reportStatus = env->GetMethodID(clazz, "reportStatus", "(I)V");
     method_reportSvStatus = env->GetMethodID(clazz, "reportSvStatus", "()V");
+    method_reportGnssSvStatus = env->GetMethodID(clazz, "reportGnssSvStatus", "()V");
     method_reportAGpsStatus = env->GetMethodID(clazz, "reportAGpsStatus", "(II[B)V");
     method_reportNmea = env->GetMethodID(clazz, "reportNmea", "(J)V");
     method_setEngineCapabilities = env->GetMethodID(clazz, "setEngineCapabilities", "(I)V");
@@ -639,6 +653,44 @@ static jint android_location_GpsLocationProvider_read_sv_status(JNIEnv* env, job
     env->ReleaseIntArrayElements(maskArray, mask, 0);
     return (jint) num_svs;
 }
+  
+static jint android_location_GpsLocationProvider_read_gnss_sv_status(JNIEnv* env, jobject obj,
+        jintArray prnArray, jfloatArray snrArray, jfloatArray elevArray, jfloatArray azumArray,
+        jbooleanArray ephemerisPresencesArray,
+        jbooleanArray almanacPresencesArray,
+        jbooleanArray usedInFixArray)
+{
+    // this should only be called from within a call to reportGnssSvStatus
+
+    jint* prns = env->GetIntArrayElements(prnArray, 0);
+    jfloat* snrs = env->GetFloatArrayElements(snrArray, 0);
+    jfloat* elev = env->GetFloatArrayElements(elevArray, 0);
+    jfloat* azim = env->GetFloatArrayElements(azumArray, 0);
+    jboolean* ephemeris_presences = env->GetBooleanArrayElements(ephemerisPresencesArray, 0);
+    jboolean* almanac_presences = env->GetBooleanArrayElements(almanacPresencesArray, 0);
+    jboolean* used_in_fix = env->GetBooleanArrayElements(usedInFixArray, 0);
+
+    int num_svs = sGnssSvStatus.num_svs;
+    for (int i = 0; i < num_svs; i++) {
+        prns[i] = sGnssSvStatus.sv_list[i].prn;
+        snrs[i] = sGnssSvStatus.sv_list[i].snr;
+        elev[i] = sGnssSvStatus.sv_list[i].elevation;
+        azim[i] = sGnssSvStatus.sv_list[i].azimuth;
+
+        ephemeris_presences[i] = sGnssSvStatus.sv_list[i].has_ephemeris ? 1 : 0;
+        almanac_presences[i] = sGnssSvStatus.sv_list[i].has_almanac ? 1 : 0;
+        used_in_fix[i] = sGnssSvStatus.sv_list[i].used_in_fix ? 1 : 0;
+    }
+
+    env->ReleaseIntArrayElements(prnArray, prns, 0);
+    env->ReleaseFloatArrayElements(snrArray, snrs, 0);
+    env->ReleaseFloatArrayElements(elevArray, elev, 0);
+    env->ReleaseFloatArrayElements(azumArray, azim, 0);
+    env->ReleaseBooleanArrayElements(ephemerisPresencesArray, ephemeris_presences, 0);
+    env->ReleaseBooleanArrayElements(almanacPresencesArray, almanac_presences, 0);
+    env->ReleaseBooleanArrayElements(usedInFixArray, used_in_fix, 0);
+    return (jint) num_svs;
+}
 
 static void android_location_GpsLocationProvider_agps_set_reference_location_cellid(
         JNIEnv* /* env */, jobject /* obj */, jint type, jint mcc, jint mnc, jint lac, jint cid, jint psc)
@@ -1460,6 +1512,9 @@ static JNINativeMethod sMethods[] = {
     {"native_read_sv_status",
             "([I[F[F[F[I)I",
             (void*)android_location_GpsLocationProvider_read_sv_status},
+    {"native_read_gnss_sv_status",
+            "([I[F[F[F[Z[Z[Z)I",
+            (void*)android_location_GpsLocationProvider_read_gnss_sv_status},
     {"native_read_nmea", "([BI)I", (void*)android_location_GpsLocationProvider_read_nmea},
     {"native_inject_time", "(JJI)V", (void*)android_location_GpsLocationProvider_inject_time},
     {"native_inject_location",
diff --git a/services/core/jni/com_android_server_power_PowerManagerService.cpp b/services/core/jni/com_android_server_power_PowerManagerService.cpp
index cfa572c..509a6ca 100644
--- a/services/core/jni/com_android_server_power_PowerManagerService.cpp
+++ b/services/core/jni/com_android_server_power_PowerManagerService.cpp
@@ -117,13 +117,6 @@ static void nativeAcquireSuspendBlocker(JNIEnv *env, jclass /* clazz */, jstring
     acquire_wake_lock(PARTIAL_WAKE_LOCK, name.c_str());
 }
 
-static void nativeCpuBoost(JNIEnv *env, jobject clazz, jint duration) {
-    // Tell the Power HAL to boost the CPU
-    if (gPowerModule && gPowerModule->powerHint) {
-        gPowerModule->powerHint(gPowerModule, POWER_HINT_CPU_BOOST, (void *)(intptr_t) duration);
-    }
-}
-
 static void nativeReleaseSuspendBlocker(JNIEnv *env, jclass /* clazz */, jstring nameStr) {
     ScopedUtfChars name(env, nameStr);
     release_wake_lock(name.c_str());
@@ -197,8 +190,6 @@ static JNINativeMethod gPowerManagerServiceMethods[] = {
             (void*) nativeSetFeature },
     { "nativeGetFeature", "(I)I",
             (void*) nativeGetFeature },
-    { "nativeCpuBoost", "(I)V",
-            (void*) nativeCpuBoost },
 };
 
 #define FIND_CLASS(var, className) \
diff --git a/services/java/com/android/server/SystemServer.java b/services/java/com/android/server/SystemServer.java
index 1892d41..d19f8ac 100644
--- a/services/java/com/android/server/SystemServer.java
+++ b/services/java/com/android/server/SystemServer.java
@@ -18,6 +18,7 @@ package com.android.server;
 
 import android.app.ActivityManagerNative;
 import android.app.ActivityThread;
+import android.app.IActivityManager;
 import android.app.IAlarmManager;
 import android.app.INotificationManager;
 import android.app.usage.UsageStatsManagerInternal;
@@ -75,7 +76,6 @@ import com.android.server.net.NetworkStatsService;
 import com.android.server.notification.NotificationManagerService;
 import com.android.server.os.SchedulingPolicyService;
 import com.android.server.pm.BackgroundDexOptService;
-import com.android.server.gesture.EdgeGestureService;
 import com.android.server.pm.Installer;
 import com.android.server.pm.LauncherAppsService;
 import com.android.server.pm.PackageManagerService;
@@ -567,7 +567,6 @@ public final class SystemServer {
         AssetAtlasService atlas = null;
         MediaRouterService mediaRouter = null;
         GestureService gestureService = null;
-        EdgeGestureService edgeGestureService = null;
 
         // Bring up services needed for UI.
         if (mFactoryTestMode != FactoryTest.FACTORY_TEST_LOW_LEVEL) {
@@ -622,8 +621,8 @@ public final class SystemServer {
         }
 
         try {
-            ActivityManagerNative.getDefault().showBootMessage(null, Integer.MIN_VALUE,
-                    Integer.MIN_VALUE, false);
+            ActivityManagerNative.getDefault().updateBootProgress(
+                    IActivityManager.BOOT_STAGE_STARTING_APPS, null, 0, 0, false);
         } catch (RemoteException e) {
         }
 
@@ -1026,14 +1025,6 @@ public final class SystemServer {
             }
 
             mSystemServiceManager.startService(LauncherAppsService.class);
-
-            try {
-                Slog.i(TAG, "EdgeGesture service");
-                edgeGestureService = new EdgeGestureService(context, inputManager);
-                ServiceManager.addService("edgegestureservice", edgeGestureService);
-            } catch (Throwable e) {
-                Slog.e(TAG, "Failure starting EdgeGesture service", e);
-            }
         }
 
         if (!disableNonCoreServices) {
@@ -1148,14 +1139,6 @@ public final class SystemServer {
             reportWtf("making Display Manager Service ready", e);
         }
 
-        if (edgeGestureService != null) {
-            try {
-                edgeGestureService.systemReady();
-            } catch (Throwable e) {
-                reportWtf("making EdgeGesture service ready", e);
-            }
-        }
-
         if (gestureService != null) {
             try {
                 gestureService.systemReady();
diff --git a/services/net/java/android/net/dhcp/DhcpPacket.java b/services/net/java/android/net/dhcp/DhcpPacket.java
index f97df83..8927bfa 100644
--- a/services/net/java/android/net/dhcp/DhcpPacket.java
+++ b/services/net/java/android/net/dhcp/DhcpPacket.java
@@ -602,12 +602,7 @@ abstract class DhcpPacket {
     protected void addCommonClientTlvs(ByteBuffer buf) {
         addTlv(buf, DHCP_MAX_MESSAGE_SIZE, (short) MAX_LENGTH);
         addTlv(buf, DHCP_VENDOR_CLASS_ID, "android-dhcp-" + Build.VERSION.RELEASE);
-
-        /* the default 'android-dhcp' is there to make sure the hostname is
-         * never empty, because the DHCP standard forbids it (RFC2132, section
-         * 3.14) and certain DHCP forwarders and servers ignore such malformed
-         * requests */
-        addTlv(buf, DHCP_HOST_NAME, SystemProperties.get("net.hostname", "android-dhcp"));
+        addTlv(buf, DHCP_HOST_NAME, SystemProperties.get("net.hostname"));
     }
 
     /**
diff --git a/services/usage/java/com/android/server/usage/UsageStatsService.java b/services/usage/java/com/android/server/usage/UsageStatsService.java
index beffff7..583bac2 100644
--- a/services/usage/java/com/android/server/usage/UsageStatsService.java
+++ b/services/usage/java/com/android/server/usage/UsageStatsService.java
@@ -57,7 +57,6 @@ import android.os.Process;
 import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.SystemClock;
-import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.os.UserManager;
 import android.provider.Settings;
@@ -182,8 +181,7 @@ public class UsageStatsService extends SystemService implements
                 null, null);
 
         mAppIdleEnabled = getContext().getResources().getBoolean(
-                com.android.internal.R.bool.config_enableAutoPowerModes) ||
-                SystemProperties.getBoolean("persist.sys.doze_powersave", false);
+                com.android.internal.R.bool.config_enableAutoPowerModes);
         if (mAppIdleEnabled) {
             IntentFilter deviceStates = new IntentFilter(BatteryManager.ACTION_CHARGING);
             deviceStates.addAction(BatteryManager.ACTION_DISCHARGING);
diff --git a/services/usb/java/com/android/server/usb/UsbDeviceManager.java b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
index 0cd4730..2886ce6 100644
--- a/services/usb/java/com/android/server/usb/UsbDeviceManager.java
+++ b/services/usb/java/com/android/server/usb/UsbDeviceManager.java
@@ -379,9 +379,6 @@ public class UsbDeviceManager {
                 mContentResolver.registerContentObserver(
                         CMSettings.Secure.getUriFor(CMSettings.Secure.ADB_NOTIFY),
                         false, adbNotificationObserver);
-                mContentResolver.registerContentObserver(
-                        Settings.Global.getUriFor(Settings.Global.ADB_ALWAYS_NOTIFY),
-                        false, adbNotificationObserver);
 
                 // Watch for USB configuration changes
                 mUEventObserver.startObserving(USB_STATE_MATCH);
@@ -844,8 +841,6 @@ public class UsbDeviceManager {
             boolean hideNotification = "0".equals(SystemProperties.get("persist.adb.notify"))
                     || CMSettings.Secure.getInt(mContext.getContentResolver(),
                             CMSettings.Secure.ADB_NOTIFY, 1) == 0;
-            boolean alwaysNotify = Settings.Global.getInt(mContext.getContentResolver(),
-                    Settings.Global.ADB_ALWAYS_NOTIFY, 0) != 0;
 
             if (hideNotification) {
                 id = 0;
@@ -855,8 +850,6 @@ public class UsbDeviceManager {
                 id = com.android.internal.R.string.adb_active_notification_title;
             } else if (netAdbActive) {
                 id = com.android.internal.R.string.adb_net_active_notification_title;
-            } else if (mAdbEnabled && alwaysNotify) {
-                id = com.android.internal.R.string.adb_not_connected_notification_title;
             } else {
                 id = 0;
             }
@@ -990,8 +983,6 @@ public class UsbDeviceManager {
                 id = com.android.internal.R.string.adb_active_custom_tile_usb;
             } else if (netAdbActive) {
                 id = com.android.internal.R.string.adb_active_custom_tile_net;
-            } else {
-                id = com.android.internal.R.string.adb_active_custom_tile_not_connected;
             }
 
             Resources res = mContext.getResources();
diff --git a/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java b/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java
index e2fc20f..30296e1 100644
--- a/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java
+++ b/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java
@@ -73,7 +73,7 @@ class VoiceInteractionManagerServiceImpl implements VoiceInteractionSessionConne
         public void onReceive(Context context, Intent intent) {
             if (Intent.ACTION_CLOSE_SYSTEM_DIALOGS.equals(intent.getAction())) {
                 String reason = intent.getStringExtra("reason");
-                if (!CLOSE_REASON_VOICE_INTERACTION.equals(reason) && !"dream".equals(reason) && !"assist".equals(reason)) {
+                if (!CLOSE_REASON_VOICE_INTERACTION.equals(reason) && !"dream".equals(reason)) {
                     synchronized (mLock) {
                         if (mActiveSession != null && mActiveSession.mSession != null) {
                             try {
diff --git a/telephony/java/android/telephony/TelephonyManager.java b/telephony/java/android/telephony/TelephonyManager.java
index 1f9ee26..5ec6950 100644
--- a/telephony/java/android/telephony/TelephonyManager.java
+++ b/telephony/java/android/telephony/TelephonyManager.java
@@ -1594,18 +1594,6 @@ public class TelephonyManager {
        }
     }
 
-
-    /**
-     * {@hide}
-     */
-    public void toggleLTE(boolean on) {
-        try {
-            getITelephony().toggleLTE(on);
-        } catch (RemoteException e) {
-            //Silently fail
-        }
-    }
-
     /** Unknown network class. {@hide} */
     public static final int NETWORK_CLASS_UNKNOWN = 0;
     /** Class of broadly defined "2G" networks. {@hide} */
diff --git a/telephony/java/com/android/internal/telephony/ITelephony.aidl b/telephony/java/com/android/internal/telephony/ITelephony.aidl
index b6c57bc..291ce27 100644
--- a/telephony/java/com/android/internal/telephony/ITelephony.aidl
+++ b/telephony/java/com/android/internal/telephony/ITelephony.aidl
@@ -53,12 +53,6 @@ interface ITelephony {
      */
     void call(String callingPackage, String number);
 
-     /**
-     * Toggle between 3G and LTE (NT_MODE_CDMA, NT_MODE_GLOBAL)
-     * @param boolean to turn on and off LTE
-     */
-    void toggleLTE(boolean on);
-
     /**
      * End call if there is a call in progress, otherwise does nothing.
      *
diff --git a/test-runner/src/android/test/mock/MockPackageManager.java b/test-runner/src/android/test/mock/MockPackageManager.java
index 89443aa..bd0a89a 100644
--- a/test-runner/src/android/test/mock/MockPackageManager.java
+++ b/test-runner/src/android/test/mock/MockPackageManager.java
@@ -590,12 +590,6 @@ public class MockPackageManager extends PackageManager {
     @Override
     public List<VolumeInfo> getPackageCandidateVolumes(ApplicationInfo app) {
         throw new UnsupportedOperationException();
-    }    
-    
-    /** {@hide} */
-     @Override
-    public List<VolumeInfo> getPackageCandidateVolumesForceable(ApplicationInfo app) {
-        throw new UnsupportedOperationException();
     }
 
     /** {@hide} */
diff --git a/tools/aapt/Android.mk b/tools/aapt/Android.mk
index ee26729..68c2fe8 100644
--- a/tools/aapt/Android.mk
+++ b/tools/aapt/Android.mk
@@ -63,8 +63,8 @@ aaptHostLdLibs :=
 aaptHostStaticLibs := \
     libandroidfw \
     libpng \
-    libutils \
     liblog \
+    libutils \
     libcutils \
     libexpat \
     libziparchive-host \
diff --git a/tools/aapt2/Util.cpp b/tools/aapt2/Util.cpp
index 5b064e3..03ecd1a 100644
--- a/tools/aapt2/Util.cpp
+++ b/tools/aapt2/Util.cpp
@@ -303,10 +303,8 @@ std::string utf16ToUtf8(const StringPiece16& utf16) {
     }
 
     std::string utf8;
-    // Make room for '\0' explicitly.
-    utf8.resize(utf8Length + 1);
-    utf16_to_utf8(utf16.data(), utf16.length(), &*utf8.begin(), utf8Length + 1);
     utf8.resize(utf8Length);
+    utf16_to_utf8(utf16.data(), utf16.length(), &*utf8.begin());
     return utf8;
 }
 
diff --git a/tools/layoutlib/bridge/src/android/view/IWindowManagerImpl.java b/tools/layoutlib/bridge/src/android/view/IWindowManagerImpl.java
index bfb5be3..82012c1 100644
--- a/tools/layoutlib/bridge/src/android/view/IWindowManagerImpl.java
+++ b/tools/layoutlib/bridge/src/android/view/IWindowManagerImpl.java
@@ -511,16 +511,4 @@ public class IWindowManagerImpl implements IWindowManager {
         // TODO Auto-generated method stub
         return null;
     }
-
-
-    /* @hide */
-    @Override
-    public int getSystemUIVisibility() {
-        return 0;
-	}
-
-    @Override
-    public boolean hasPermanentMenuKey() {
-        return true;
-    }
 }
diff --git a/tools/split-select/Android.mk b/tools/split-select/Android.mk
index 54f0a1f..d9ddf08 100644
--- a/tools/split-select/Android.mk
+++ b/tools/split-select/Android.mk
@@ -48,8 +48,8 @@ hostStaticLibs := \
     libaapt \
     libandroidfw \
     libpng \
-    libutils \
     liblog \
+    libutils \
     libcutils \
     libexpat \
     libziparchive-host \
diff --git a/wifi/java/android/net/wifi/WifiEnterpriseConfig.java b/wifi/java/android/net/wifi/WifiEnterpriseConfig.java
index a337755..59b22bd 100644
--- a/wifi/java/android/net/wifi/WifiEnterpriseConfig.java
+++ b/wifi/java/android/net/wifi/WifiEnterpriseConfig.java
@@ -768,9 +768,7 @@ public class WifiEnterpriseConfig implements Parcelable {
     public String toString() {
         StringBuffer sb = new StringBuffer();
         for (String key : mFields.keySet()) {
-            // Don't display password in toString().
-            String value = PASSWORD_KEY.equals(key) ? "<removed>" : mFields.get(key);
-            sb.append(key).append(" ").append(value).append("\n");
+            sb.append(key).append(" ").append(mFields.get(key)).append("\n");
         }
         return sb.toString();
     }
-- 
2.7.4

